-- liquibase formatted sql

-- changeset root:1751557724186-1
CREATE SEQUENCE SPIG_ATTRIB_DATI_SPEC START WITH 1073 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-2
CREATE SEQUENCE SPIG_LOG_JOB START WITH 7969349 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-3
CREATE SEQUENCE SPIG_TIPO_FILE_OBJECT START WITH 2881 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-4
CREATE SEQUENCE SPIG_TIPO_OBJECT START WITH 3064 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-5
CREATE SEQUENCE SPIG_VERS START WITH 2006 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-6
CREATE SEQUENCE SPIG_XSD_DATI_SPEC START WITH 923 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-7
CREATE SEQUENCE SPIG_STATO_SESSIONE_INGEST START WITH 1604609 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-8
CREATE SEQUENCE SPIG_VALORE_PARAM_APPLIC START WITH 1481 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-9
CREATE TABLE PIG_TIPO_FILE_OBJECT (ID_TIPO_FILE_OBJECT NUMBER NOT NULL, ID_TIPO_OBJECT NUMBER, NM_TIPO_FILE_OBJECT VARCHAR2(100 BYTE), DS_TIPO_FILE_OBJECT VARCHAR2(254 BYTE), FL_VERS_SACER_ASINC CHAR(1 BYTE), NM_TIPO_DOC_SACER VARCHAR2(100 BYTE), TI_DOC_SACER VARCHAR2(20 BYTE), NM_TIPO_STRUT_DOC_SACER VARCHAR2(100 BYTE), NM_TIPO_COMP_DOC_SACER VARCHAR2(100 BYTE), NM_FMT_FILE_VERS_SACER VARCHAR2(100 BYTE), FL_VER_FIRMA_FMT_SACER CHAR(1 BYTE), NM_FMT_FILE_CALC_SACER VARCHAR2(100 BYTE), DS_FMT_RAPPR_ESTESO_CALC_SACER VARCHAR2(254 BYTE), DS_FMT_RAPPR_CALC_SACER VARCHAR2(254 BYTE), FL_CALC_HASH_SACER CHAR(1 BYTE), TI_CALC_HASH_SACER VARCHAR2(20 BYTE), CONSTRAINT PK_TI_FILE_OBJ PRIMARY KEY (ID_TIPO_FILE_OBJECT));

-- changeset root:1751557724186-10
CREATE TABLE PIG_TIPO_OBJECT (ID_TIPO_OBJECT NUMBER NOT NULL, ID_VERS NUMBER, NM_TIPO_OBJECT VARCHAR2(100 BYTE), DS_TIPO_OBJECT VARCHAR2(254 BYTE), TI_VERS_FILE VARCHAR2(20 BYTE), TI_CALC_KEY_UNITA_DOC VARCHAR2(20 BYTE), FL_CONTR_HASH CHAR(1 BYTE), CD_REGISTRO_UNITA_DOC_SACER VARCHAR2(100 BYTE), NM_TIPO_UNITA_DOC_SACER VARCHAR2(100 BYTE), FL_FORZA_ACCETTAZIONE_SACER CHAR(1 BYTE), FL_FORZA_CONSERVAZIONE CHAR(1 BYTE), FL_FORZA_COLLEGAMENTO CHAR(1 BYTE), TI_CONSERVAZIONE VARCHAR2(30 BYTE) DEFAULT 'VERSAMENTO_ANTICIPATO', ID_TRASF NUMBER, DS_REG_EXP_CD_VERS VARCHAR2(254 BYTE), TI_PRIORITA VARCHAR2(20 CHAR), FL_NO_VISIB_VERS_OGG CHAR(1 BYTE), TI_PRIORITA_VERSAMENTO VARCHAR2(20 CHAR), TI_CONTENUTO VARCHAR2(20 BYTE), CONSTRAINT PK_TI_OBJ PRIMARY KEY (ID_TIPO_OBJECT));

-- changeset root:1751557724186-11
CREATE TABLE PIG_STRUM_URB_DOCUMENTI (ID_STRUM_URB_DOCUMENTI NUMBER NOT NULL, FL_ESITO_VERIFICA CHAR(1 CHAR) DEFAULT '0' NOT NULL, FL_DELETED CHAR(1 CHAR) DEFAULT '0' NOT NULL, DS_ERR VARCHAR2(200 CHAR), ID_STRUMENTI_URBANISTICI NUMBER NOT NULL, ID_STRUM_URB_VAL_DOC NUMBER NOT NULL, NM_FILE_ORIG VARCHAR2(84 BYTE), NM_FILE_OS VARCHAR2(150 BYTE), CD_ERR VARCHAR2(20 BYTE), NUM_FILES NUMBER, DT_CARICAMENTO date, DIMENSIONE NUMBER(12, 0), BL_REPORT CLOB, CONSTRAINT PK_PIG_STRUM_URB_DOCUMENTI PRIMARY KEY (ID_STRUM_URB_DOCUMENTI));

-- changeset root:1751557724186-12
CREATE TABLE IAM_ABIL_ORGANIZ (ID_ABIL_ORGANIZ NUMBER NOT NULL, ID_USER_IAM NUMBER NOT NULL, ID_ORGANIZ_APPLIC NUMBER NOT NULL, FL_ORGANIZ_DEFAULT CHAR(1 BYTE) DEFAULT '0' NOT NULL, CONSTRAINT PK_ABIL_ORG PRIMARY KEY (ID_ABIL_ORGANIZ));

-- changeset root:1751557724186-13
CREATE TABLE IAM_ABIL_TIPO_DATO (ID_ABIL_TIPO_DATO NUMBER NOT NULL, ID_ABIL_ORGANIZ NUMBER NOT NULL, NM_CLASSE_TIPO_DATO VARCHAR2(100 BYTE) NOT NULL, ID_TIPO_DATO_APPLIC NUMBER NOT NULL, CONSTRAINT PK_ABIL_TI_DATO PRIMARY KEY (ID_ABIL_TIPO_DATO));

-- changeset root:1751557724186-14
CREATE TABLE IAM_ORGANIZ_DA_REPLIC (ID_ORGANIZ_DA_REPLIC NUMBER NOT NULL, ID_ORGANIZ_APPLIC NUMBER NOT NULL, NM_TIPO_ORGANIZ VARCHAR2(100 BYTE) NOT NULL, NM_ORGANIZ VARCHAR2(100 BYTE) NOT NULL, TI_OPER_REPLIC VARCHAR2(20 BYTE) NOT NULL, TI_STATO_REPLIC VARCHAR2(30 BYTE) NOT NULL, DT_LOG_ORGANIZ_DA_REPLIC date NOT NULL, CD_ERR VARCHAR2(100 BYTE), DS_MSG_ERR VARCHAR2(254 BYTE), DT_ERR date, CONSTRAINT PK_ORG_DA_REPLIC PRIMARY KEY (ID_ORGANIZ_DA_REPLIC));

-- changeset root:1751557724186-15 splitStatements:true
CREATE TABLE IAM_USER (ID_USER_IAM NUMBER NOT NULL, NM_USERID VARCHAR2(100 BYTE) NOT NULL, CD_PSW VARCHAR2(100 BYTE) NOT NULL, FL_USER_ADMIN CHAR(1 BYTE) DEFAULT '0' NOT NULL, NM_COGNOME_USER VARCHAR2(100 BYTE) NOT NULL, NM_NOME_USER VARCHAR2(100 BYTE) NOT NULL, FL_ATTIVO CHAR(1 BYTE) NOT NULL, DT_REG_PSW date NOT NULL, DT_SCAD_PSW date NOT NULL, CD_SALT VARCHAR2(100 BYTE), CD_FISC VARCHAR2(16 BYTE), DS_EMAIL VARCHAR2(254 BYTE), FL_CONTR_IP CHAR(1 BYTE) DEFAULT '0' NOT NULL, TIPO_USER VARCHAR2(20 BYTE) DEFAULT 'PERSONA_FISICA' NOT NULL, TIPO_AUTH VARCHAR2(20 BYTE), CONSTRAINT PK_USR_IAM PRIMARY KEY (ID_USER_IAM));
COMMENT ON COLUMN IAM_USER.CD_PSW IS 'Passowrd criptata dell''utente';
COMMENT ON COLUMN IAM_USER.FL_ATTIVO IS 'Indica se l''utente e'' attivo (cio√® puo'' fare login al sistema)';
COMMENT ON COLUMN IAM_USER.DT_SCAD_PSW IS 'Data scadenza password; calcolata come data registrazione + 3 mesi se la password e'' definita dall''utente; altrimenti calcolata come data corrente - 1 giorno (se la password e'' definita dall''amministratore quando registra un nuovo utente)';

-- changeset root:1751557724186-16
CREATE TABLE PIG_STRUM_URB_VAL_DOC (ID_STRUM_URB_VAL_DOC NUMBER NOT NULL, NM_TIPO_DOCUMENTO VARCHAR2(60 CHAR), FL_DOC_PRINCIPALE CHAR(1 BYTE), CONSTRAINT PK_PIG_STRUM_URB_VAL_DOC PRIMARY KEY (ID_STRUM_URB_VAL_DOC));

-- changeset root:1751557724186-17
CREATE TABLE PIG_STRUM_URB_PIANO_STATO (ID_STRUM_URB_PIANO_STATO NUMBER NOT NULL, NM_TIPO_STRUMENTO_URBANISTICO VARCHAR2(60 CHAR), TI_FASE_STRUMENTO VARCHAR2(30 CHAR), TI_TIPO_ATTO_COMUNE VARCHAR2(10 BYTE), TI_TIPO_ATTO_UNIONE VARCHAR2(4 BYTE), CONSTRAINT PK_STRUM_URB_PIANO_STATO PRIMARY KEY (ID_STRUM_URB_PIANO_STATO));

-- changeset root:1751557724186-18
CREATE TABLE PIG_STRUM_URB_PIANO_DOC_REQ (ID_STRUM_URB_PIANO_DOC_REQ NUMBER NOT NULL, ID_STRUM_URB_PIANO_STATO NUMBER NOT NULL, ID_PIG_STRUM_URB_VAL_DOC NUMBER NOT NULL, FL_DOC_OBBLIGATORIO CHAR(1 BYTE), CONSTRAINT PK_PIG_SU_PIANO_DOC_REQUIRED PRIMARY KEY (ID_STRUM_URB_PIANO_DOC_REQ));

-- changeset root:1751557724186-19
CREATE TABLE PIG_STRUMENTI_URBANISTICI (ID_STRUMENTI_URBANISTICI NUMBER NOT NULL, TI_STATO VARCHAR2(40 CHAR) NOT NULL, OGGETTO VARCHAR2(150 CHAR) NOT NULL, ANNO NUMBER(4, 0) NOT NULL, NUMERO VARCHAR2(30 CHAR) NOT NULL, DT_CREAZIONE date, ID_VERS NUMBER NOT NULL, ID_STRUM_URB_PIANO_STATO NUMBER NOT NULL, DS_ERR VARCHAR2(500 BYTE), ID_USER_IAM NUMBER NOT NULL, CD_ERR VARCHAR2(20 BYTE), CD_KEY VARCHAR2(80 BYTE), CD_KEY_OS VARCHAR2(80 BYTE), DATA date, DT_STATO date, DS_DESCRIZIONE VARCHAR2(1024 BYTE), CONSTRAINT PK_PIG_STRUMENTI_URBANISTICI PRIMARY KEY (ID_STRUMENTI_URBANISTICI));

-- changeset root:1751557724186-20
CREATE TABLE XFO_PARAM_TRASF (ID_PARAM_TRASF NUMBER NOT NULL, NM_PARAM_TRASF VARCHAR2(100 BYTE) NOT NULL, DS_PARAM_TRASF VARCHAR2(254 BYTE) NOT NULL, TI_PARAM_TRASF VARCHAR2(20 BYTE) NOT NULL, ID_SET_PARAM_TRASF NUMBER NOT NULL, DS_VALORE_PARAM VARCHAR2(1024 BYTE), CONSTRAINT PK_PAR_TRASF PRIMARY KEY (ID_PARAM_TRASF));

-- changeset root:1751557724186-21
CREATE TABLE PIG_LOG_JOB (ID_LOG_JOB NUMBER NOT NULL, NM_JOB VARCHAR2(100 BYTE) NOT NULL, TI_REG_LOG_JOB VARCHAR2(20 BYTE) NOT NULL, DT_REG_LOG_JOB date NOT NULL, DL_MSG_ERR VARCHAR2(1024 BYTE), CD_IND_SERVER VARCHAR2(100 BYTE), DT_VIRTUAL_REG VARCHAR2(10 BYTE) GENERATED ALWAYS AS (TO_CHAR(DT_REG_LOG_JOB,'yyyymmddhh24')), ID_RECORD NUMBER, CONSTRAINT PK_LOG_JOB PRIMARY KEY (ID_LOG_JOB));

-- changeset root:1751557724186-22
CREATE TABLE PIG_SESSIONE_RECUP (ID_SESSIONE_RECUP NUMBER NOT NULL, NM_AMBIENTE_VERS VARCHAR2(100 BYTE) NOT NULL, NM_VERS VARCHAR2(100 BYTE) NOT NULL, CD_KEY_OBJECT VARCHAR2(100 BYTE) NOT NULL, ID_VERS NUMBER, ID_OBJECT NUMBER, DT_APERTURA date NOT NULL, DT_CHIUSURA date, TI_STATO VARCHAR2(30 BYTE) NOT NULL, CD_ERR VARCHAR2(100 BYTE), DL_ERR VARCHAR2(1024 BYTE), CONSTRAINT PK_SES_RECUP PRIMARY KEY (ID_SESSIONE_RECUP));

-- changeset root:1751557724186-23
CREATE TABLE PIG_VERS (ID_VERS NUMBER NOT NULL, ID_AMBIENTE_VERS NUMBER NOT NULL, NM_VERS VARCHAR2(100 BYTE) NOT NULL, DS_VERS VARCHAR2(254 BYTE) NOT NULL, DT_INI_VAL_APPART_AMBIENTE date DEFAULT TRUNC(sysdate) NOT NULL, DT_FIN_VAL_APPART_AMBIENTE date DEFAULT to_date('31/12/2444', 'dd/mm/yyyy') NOT NULL, ID_ENTE_CONVENZ NUMBER, ID_ENTE_FORNIT_ESTERN NUMBER, DT_INI_VAL_APPART_ENTE_SIAM date DEFAULT to_date('01/01/2000', 'dd/mm/yyyy') NOT NULL, DT_FINE_VAL_APPART_ENTE_SIAM date DEFAULT to_date('31/12/2444', 'dd/mm/yyyy') NOT NULL, DT_INI_VAL_VERS date DEFAULT to_date('01/01/2000', 'dd/mm/yyyy') NOT NULL, DT_FINE_VAL_VERS date DEFAULT to_date('31/12/2444', 'dd/mm/yyyy') NOT NULL, DS_PATH_INPUT_FTP VARCHAR2(254 BYTE) NOT NULL, DS_PATH_OUTPUT_FTP VARCHAR2(254 BYTE) NOT NULL, DS_PATH_TRASF VARCHAR2(254 BYTE), FL_CESSATO CHAR(1 BYTE) DEFAULT '0' NOT NULL, FL_ARCHIVIO_RESTITUITO CHAR(1 BYTE) DEFAULT '0' NOT NULL, CONSTRAINT PK_VERS PRIMARY KEY (ID_VERS));

-- changeset root:1751557724186-24
CREATE TABLE PIG_AMBIENTE_VERS (ID_AMBIENTE_VERS NUMBER NOT NULL, NM_AMBIENTE_VERS VARCHAR2(100 BYTE) NOT NULL, DS_AMBIENTE_VERS VARCHAR2(254 BYTE) NOT NULL, DT_INI_VAL date DEFAULT TRUNC(sysdate) NOT NULL, DT_FINE_VAL date DEFAULT to_date('31/12/2444', 'dd/mm/yyyy') NOT NULL, ID_ENTE_CONSERV NUMBER, ID_ENTE_GESTORE NUMBER, DS_NOTE VARCHAR2(254 CHAR), CONSTRAINT PK_AMB_VERS PRIMARY KEY (ID_AMBIENTE_VERS));

-- changeset root:1751557724186-25
CREATE TABLE PIG_ATTRIB_DATI_SPEC (ID_ATTRIB_DATI_SPEC NUMBER NOT NULL, ID_XSD_SPEC NUMBER NOT NULL, NM_ATTRIB_DATI_SPEC VARCHAR2(100 BYTE) NOT NULL, NI_ORD NUMBER NOT NULL, FL_FILTRO_DIARIO CHAR(1 BYTE) NOT NULL, FL_VERS_SACER CHAR(1 BYTE) NOT NULL, NM_COL_DATI_SPEC VARCHAR2(100 BYTE), CD_DATATYPE_XSD VARCHAR2(100 BYTE) NOT NULL, TI_DATATYPE_COL VARCHAR2(20 BYTE), CONSTRAINT PK_ATT_SPEC PRIMARY KEY (ID_ATTRIB_DATI_SPEC));

-- changeset root:1751557724186-26
CREATE TABLE PIG_PARAM_APPLIC (ID_PARAM_APPLIC NUMBER NOT NULL, NM_PARAM_APPLIC VARCHAR2(100 BYTE) NOT NULL, DS_PARAM_APPLIC VARCHAR2(254 BYTE) NOT NULL, TI_PARAM_APPLIC VARCHAR2(40 BYTE) NOT NULL, TI_GESTIONE_PARAM VARCHAR2(30 BYTE) DEFAULT 'amministrazione' NOT NULL, FL_APPART_APPLIC CHAR(1 BYTE) DEFAULT '0' NOT NULL, FL_APPART_AMBIENTE CHAR(1 BYTE) DEFAULT '0' NOT NULL, FL_APPART_VERS CHAR(1 BYTE) DEFAULT '0' NOT NULL, FL_APPART_TIPO_OGGETTO CHAR(1 BYTE) DEFAULT '0' NOT NULL, DS_LISTA_VALORI_AMMESSI VARCHAR2(4000 BYTE), DM_PARAM_APPLIC VARCHAR2(100 BYTE), TI_VALORE_PARAM_APPLIC VARCHAR2(100 BYTE) DEFAULT ('STRINGA') NOT NULL, CD_VERSIONE_APP_INI VARCHAR2(11 BYTE) DEFAULT '1.0.0' NOT NULL, CD_VERSIONE_APP_FINE VARCHAR2(11 BYTE), CONSTRAINT PK_PAR_APL PRIMARY KEY (ID_PARAM_APPLIC));

-- changeset root:1751557724186-27
CREATE TABLE PIG_VALORE_PARAM_APPLIC (ID_VALORE_PARAM_APPLIC NUMBER NOT NULL, ID_PARAM_APPLIC NUMBER NOT NULL, TI_APPART VARCHAR2(30 BYTE) NOT NULL, DS_VALORE_PARAM_APPLIC VARCHAR2(254 BYTE) NOT NULL, ID_AMBIENTE_VERS NUMBER, ID_VERS NUMBER, ID_TIPO_OBJECT NUMBER, CONSTRAINT PK_VAL_PAR_APL PRIMARY KEY (ID_VALORE_PARAM_APPLIC));

-- changeset root:1751557724186-28
CREATE TABLE PIG_XSD_DATI_SPEC (ID_XSD_SPEC NUMBER NOT NULL, ID_VERS NUMBER NOT NULL, TI_ENTITA VARCHAR2(20 BYTE) NOT NULL, ID_TIPO_OBJECT NUMBER, ID_TIPO_FILE_OBJECT NUMBER, CD_VERSIONE_XSD VARCHAR2(100 BYTE) NOT NULL, DT_VERSIONE_XSD date NOT NULL, BL_XSD CLOB, CONSTRAINT PK_XSD_SPEC PRIMARY KEY (ID_XSD_SPEC));

-- changeset root:1751557724186-29
CREATE TABLE XFO_SET_PARAM_TRASF (ID_SET_PARAM_TRASF NUMBER NOT NULL, ID_TRASF NUMBER NOT NULL, NM_SET_PARAM_TRASF VARCHAR2(100 BYTE) NOT NULL, DS_SET_PARAM_TRASF VARCHAR2(254 BYTE) NOT NULL, FL_SET_PARAM_ARK CHAR(1 BYTE) DEFAULT '1' NOT NULL, CONSTRAINT PK_SET_PAR_TRASF PRIMARY KEY (ID_SET_PARAM_TRASF));

-- changeset root:1751557724186-30
CREATE TABLE PIG_VALORE_PARAM_TRASF (ID_VALORE_PARAM_TRASF NUMBER NOT NULL, ID_VALORE_SET_PARAM_TRASF NUMBER NOT NULL, ID_PARAM_TRASF NUMBER NOT NULL, DS_VALORE_PARAM VARCHAR2(1024 BYTE), CONSTRAINT PK_VAL_PAR_TRASF PRIMARY KEY (ID_VALORE_PARAM_TRASF));

-- changeset root:1751557724186-31
CREATE TABLE PIG_VALORE_SET_PARAM_TRASF (ID_VALORE_SET_PARAM_TRASF NUMBER NOT NULL, ID_VERS_TIPO_OBJECT_DA_TRASF NUMBER NOT NULL, ID_SET_PARAM_TRASF NUMBER NOT NULL, CONSTRAINT PK_VAL_SET_PAR_TRASF PRIMARY KEY (ID_VALORE_SET_PARAM_TRASF));

-- changeset root:1751557724186-32
CREATE TABLE PIG_VERS_TIPO_OBJECT_DA_TRASF (ID_VERS_TIPO_OBJECT_DA_TRASF NUMBER NOT NULL, ID_TIPO_OBJECT_DA_TRASF NUMBER NOT NULL, ID_VERS_GEN NUMBER NOT NULL, ID_TIPO_OBJECT_GEN NUMBER NOT NULL, CD_VERS_GEN VARCHAR2(100 BYTE) NOT NULL, CONSTRAINT PK_VERS_TIOBJ_DATRASF PRIMARY KEY (ID_VERS_TIPO_OBJECT_DA_TRASF));

-- changeset root:1751557724186-33
CREATE TABLE PIG_DICH_VERS_SACER (ID_DICH_VERS_SACER NUMBER NOT NULL, ID_VERS NUMBER NOT NULL, ID_ORGANIZ_IAM NUMBER NOT NULL, TI_DICH_VERS VARCHAR2(20 BYTE) NOT NULL, CONSTRAINT PK_DICH_VERS_SACER PRIMARY KEY (ID_DICH_VERS_SACER));

-- changeset root:1751557724186-34
CREATE TABLE PIG_DICH_VERS_SACER_TIPO_OBJ (ID_DICH_VERS_SACER_TIPO_OBJ NUMBER NOT NULL, ID_TIPO_OBJECT NUMBER NOT NULL, ID_ORGANIZ_IAM NUMBER NOT NULL, TI_DICH_VERS VARCHAR2(20 BYTE) NOT NULL, CONSTRAINT PK_DCH_VERS_SACER_TI_OBJ PRIMARY KEY (ID_DICH_VERS_SACER_TIPO_OBJ));

-- changeset root:1751557724186-35
CREATE TABLE XFO_TRASF (ID_TRASF NUMBER NOT NULL, CD_TRASF VARCHAR2(100 BYTE) NOT NULL, DS_TRASF VARCHAR2(4000 BYTE) NOT NULL, FL_ATTIVA CHAR(1 BYTE) NOT NULL, CD_VERSIONE_COR VARCHAR2(100 BYTE) DEFAULT '1.0' NOT NULL, DS_VERSIONE_COR VARCHAR2(4000 BYTE) DEFAULT '--' NOT NULL, DT_ISTITUZ date DEFAULT TRUNC(sysdate) NOT NULL, DT_SOPPRES date DEFAULT to_date('31/12/2444', 'dd/mm/yyyy') NOT NULL, BL_TRASF BLOB, CD_KETTLE_ID VARCHAR2(100 BYTE), CONSTRAINT PK_TRASF PRIMARY KEY (ID_TRASF));

-- changeset root:1751557724186-36
CREATE TABLE PIG_OBJECT (ID_OBJECT NUMBER NOT NULL, ID_VERS NUMBER NOT NULL, CD_KEY_OBJECT VARCHAR2(150 CHAR) NOT NULL, ID_TIPO_OBJECT NUMBER NOT NULL, ID_LAST_SESSIONE_INGEST NUMBER NOT NULL, TI_STATO_OBJECT VARCHAR2(30 BYTE) NOT NULL, FL_VERS_SACER_DA_RECUP CHAR(1 BYTE), MM_FIRST_SES NUMBER(6, 0) NOT NULL, ID_USER_IAM NUMBER, DS_OBJECT VARCHAR2(1024 BYTE), NI_UNITA_DOC_ATTESE NUMBER(5, 0), NI_TOT_OBJECT_TRASF NUMBER(3, 0), ID_OBJECT_PADRE NUMBER, PG_OGGETTO_TRASF NUMBER(3, 0), CD_TRASF VARCHAR2(100 BYTE), CD_VERSIONE_TRASF VARCHAR2(100 BYTE), CD_VERS_GEN VARCHAR2(100 BYTE), FL_RICH_ANNUL_TIMEOUT CHAR(1 BYTE), TI_GEST_OGGETTI_FIGLI VARCHAR2(20 BYTE), NOTE VARCHAR2(1024 BYTE), TI_PRIORITA VARCHAR2(20 CHAR), TI_PRIORITA_VERSAMENTO VARCHAR2(20 CHAR), CONSTRAINT PK_OBJ_NEW PRIMARY KEY (ID_OBJECT));

-- changeset root:1751557724186-37
CREATE TABLE PIG_FILE_OBJECT (ID_FILE_OBJECT NUMBER NOT NULL, ID_OBJECT NUMBER NOT NULL, NM_FILE_OBJECT VARCHAR2(150 CHAR) NOT NULL, ID_TIPO_FILE_OBJECT NUMBER NOT NULL, DS_HASH_FILE_VERS VARCHAR2(254 BYTE), TI_ALGO_HASH_FILE_VERS VARCHAR2(20 BYTE), CD_ENCODING_HASH_FILE_VERS VARCHAR2(100 BYTE), NI_SIZE_FILE_VERS NUMBER, NM_BUCKET VARCHAR2(100 BYTE), CD_KEY_FILE VARCHAR2(254 BYTE), ID_VERS NUMBER NOT NULL, CONSTRAINT PK_FILE_OBJ_NEW PRIMARY KEY (ID_FILE_OBJECT));

-- changeset root:1751557724186-38
CREATE TABLE PIG_INFO_DICOM (ID_INFO_DICOM NUMBER NOT NULL, ID_OBJECT NUMBER NOT NULL, ID_VERS NUMBER NOT NULL, CD_VERSIONE_DATI_SPEC_DICOM VARCHAR2(100 BYTE) NOT NULL, CD_AET_NODO_DICOM VARCHAR2(100 BYTE) NOT NULL, DL_LISTA_SOP_CLASS VARCHAR2(2048 BYTE), DT_STUDY_DATE date NOT NULL, DS_ACCESSION_NUMBER VARCHAR2(254 BYTE), DL_LISTA_MODALITY_IN_STUDY VARCHAR2(2048 BYTE), DS_INSTITUTION_NAME VARCHAR2(254 BYTE), DS_REF_PHYSICIAN_NAME VARCHAR2(254 BYTE), DL_STUDY_DESCRIPTION VARCHAR2(1024 BYTE), DS_PATIENT_NAME VARCHAR2(100 BYTE) NOT NULL, CD_PATIENT_ID VARCHAR2(100 BYTE) NOT NULL, CD_PATIENT_ID_ISSUER VARCHAR2(100 BYTE), DT_PATIENT_BIRTH_DATE date, TI_PATIENT_SEX CHAR(1 BYTE), DS_STUDY_INSTANCE_UID VARCHAR2(254 BYTE) NOT NULL, NI_STUDY_RELATED_SERIES NUMBER(5, 0) NOT NULL, NI_STUDY_RELATED_IMAGES NUMBER(5, 0) NOT NULL, DS_STUDY_ID VARCHAR2(254 BYTE), DT_PRESA_IN_CARICO date NOT NULL, BL_DCM_HASH_TXT CLOB NOT NULL, DS_DCM_HASH VARCHAR2(254 BYTE) NOT NULL, TI_ALGO_DCM_HASH VARCHAR2(20 BYTE) NOT NULL, CD_ENCODING_DCM_HASH VARCHAR2(100 BYTE) NOT NULL, BL_GLOBAL_HASH_TXT CLOB NOT NULL, DS_GLOBAL_HASH VARCHAR2(254 BYTE) NOT NULL, TI_ALGO_GLOBAL_HASH VARCHAR2(20 BYTE) NOT NULL, CD_ENCODING_GLOBAL_HASH VARCHAR2(100 BYTE) NOT NULL, DS_FILE_HASH VARCHAR2(254 BYTE) NOT NULL, TI_ALGO_FILE_HASH VARCHAR2(20 BYTE) NOT NULL, CD_ENCODING_FILE_HASH VARCHAR2(100 BYTE) NOT NULL, ID_XSD_SPEC NUMBER NOT NULL, CONSTRAINT PK_INFO_DICOM_NEW PRIMARY KEY (ID_INFO_DICOM));

-- changeset root:1751557724186-39
CREATE TABLE PIG_OBJECT_TRASF (ID_OBJECT_TRASF NUMBER NOT NULL, ID_OBJECT NUMBER NOT NULL, CD_KEY_OBJECT_TRASF VARCHAR2(150 CHAR) NOT NULL, DS_OBJECT_TRASF VARCHAR2(1024 BYTE), ID_VERS NUMBER NOT NULL, ID_TIPO_OBJECT NUMBER NOT NULL, DS_PATH VARCHAR2(254 BYTE) NOT NULL, DS_HASH_FILE_VERS VARCHAR2(254 BYTE), TI_ALGO_HASH_FILE_VERS VARCHAR2(20 BYTE), CD_ENCODING_HASH_FILE_VERS VARCHAR2(100 BYTE), PG_OGGETTO_TRASF NUMBER(3, 0) NOT NULL, CD_ERR VARCHAR2(100 BYTE), DL_ERR VARCHAR2(1024 BYTE), CONSTRAINT PK_PIG_OBJECT_TRASF_NEW PRIMARY KEY (ID_OBJECT_TRASF));

-- changeset root:1751557724186-40
CREATE TABLE PIG_SESSIONE_INGEST (ID_SESSIONE_INGEST NUMBER NOT NULL, NM_AMBIENTE_VERS VARCHAR2(100 BYTE) NOT NULL, NM_VERS VARCHAR2(100 BYTE) NOT NULL, CD_KEY_OBJECT VARCHAR2(150 CHAR) NOT NULL, ID_VERS NUMBER, DT_APERTURA date NOT NULL, DT_CHIUSURA date, NM_TIPO_OBJECT VARCHAR2(100 BYTE), FL_FILE_CIFRATO CHAR(1 BYTE), FL_FORZA_ACCETTAZIONE CHAR(1 BYTE) DEFAULT '0', DL_MOTIVO_FORZA_ACCETTAZIONE VARCHAR2(1024 BYTE), CD_VERSIONE_XML_VERS VARCHAR2(100 BYTE), TI_STATO VARCHAR2(30 BYTE) NOT NULL, ID_OBJECT NUMBER, NI_UNITA_DOC_DA_VERS NUMBER, NI_UNITA_DOC_VERS NUMBER, CD_ERR VARCHAR2(100 BYTE), DL_ERR VARCHAR2(1024 BYTE), DL_MOTIVO_CHIUSO_WARNING VARCHAR2(1024 BYTE), NI_UNITA_DOC_VERS_OK NUMBER, NI_UNITA_DOC_VERS_ERR NUMBER, FL_FORZA_WARNING CHAR(1 BYTE), FL_SES_ERR_VERIF CHAR(1 BYTE), FL_SES_ERR_NON_RISOLUB CHAR(1 BYTE), NI_UNITA_DOC_VERS_TIMEOUT NUMBER, TI_STATO_VERIFICA_HASH VARCHAR2(20 BYTE), NM_AMBIENTE_VERS_PADRE VARCHAR2(100 BYTE), NM_VERS_PADRE VARCHAR2(100 BYTE), CD_KEY_OBJECT_PADRE VARCHAR2(100 BYTE), NI_UNITA_DOC_ATTESE NUMBER(5, 0), NI_TOT_OBJECT_TRASF NUMBER(3, 0), PG_OGGETTO_TRASF NUMBER(3, 0), DS_OBJECT VARCHAR2(1024 BYTE), ID_STATO_SESSIONE_INGEST_COR NUMBER, CD_TRASF VARCHAR2(100 BYTE), CD_VERSIONE_TRASF VARCHAR2(100 BYTE), CD_VERS_GEN VARCHAR2(100 BYTE), TI_GEST_OGGETTI_FIGLI VARCHAR2(20 BYTE), NOTE VARCHAR2(1024 BYTE), NM_REPORT_TRASF_OS VARCHAR2(200 BYTE), CONSTRAINT PK_SES_INGEST_NEW PRIMARY KEY (ID_SESSIONE_INGEST));

-- changeset root:1751557724186-41
CREATE TABLE PIG_STATO_SESSIONE_INGEST (ID_STATO_SESSIONE_INGEST NUMBER NOT NULL, ID_SESSIONE_INGEST NUMBER NOT NULL, TI_STATO VARCHAR2(30 BYTE) NOT NULL, TS_REG_STATO TIMESTAMP(3) NOT NULL, ID_VERS NUMBER, CONSTRAINT PK_STATO_SES_INGEST_NEW PRIMARY KEY (ID_STATO_SESSIONE_INGEST));

-- changeset root:1751557724186-42
CREATE TABLE PIG_UNITA_DOC_OBJECT (ID_UNITA_DOC_OBJECT NUMBER NOT NULL, ID_OBJECT NUMBER NOT NULL, CD_REGISTRO_UNITA_DOC_SACER VARCHAR2(100 BYTE) NOT NULL, AA_UNITA_DOC_SACER NUMBER(4, 0) NOT NULL, CD_KEY_UNITA_DOC_SACER VARCHAR2(100 BYTE) NOT NULL, NI_SIZE_FILE_BYTE NUMBER NOT NULL, TI_STATO_UNITA_DOC_OBJECT VARCHAR2(25 BYTE) NOT NULL, CD_ERR_SACER VARCHAR2(100 BYTE), DL_ERR_SACER VARCHAR2(1024 BYTE), ID_ORGANIZ_IAM NUMBER, FL_VERS_SIMULATO CHAR(1 BYTE), CD_VER_WS_SACER VARCHAR2(100 BYTE), ID_VERS NUMBER, DT_STATO date, CONSTRAINT PK_UNI_DOC_OBJ_NEW PRIMARY KEY (ID_UNITA_DOC_OBJECT));

-- changeset root:1751557724186-43
CREATE TABLE PIG_UNITA_DOC_SESSIONE (ID_UNITA_DOC_SESSIONE NUMBER NOT NULL, ID_SESSIONE_INGEST NUMBER NOT NULL, CD_REGISTRO_UNITA_DOC_SACER VARCHAR2(100 BYTE) NOT NULL, AA_UNITA_DOC_SACER NUMBER(4, 0) NOT NULL, CD_KEY_UNITA_DOC_SACER VARCHAR2(100 BYTE) NOT NULL, TI_STATO_UNITA_DOC_SESSIONE VARCHAR2(25 BYTE) NOT NULL, NI_SIZE_FILE_BYTE NUMBER NOT NULL, CD_ERR_SACER VARCHAR2(100 BYTE), DL_ERR_SACER VARCHAR2(1024 BYTE), ID_ORGANIZ_IAM NUMBER, FL_VERS_SIMULATO CHAR(1 BYTE), CD_VER_WS_SACER VARCHAR2(100 BYTE), ID_VERS NUMBER, DT_STATO date, CONSTRAINT PK_UNI_DOC_SES_NEW PRIMARY KEY (ID_UNITA_DOC_SESSIONE));

-- changeset root:1751557724186-44
CREATE TABLE PIG_XML_OBJECT (ID_XML_OBJECT NUMBER NOT NULL, ID_OBJECT NUMBER NOT NULL, CD_VERSIONE_XML_VERS VARCHAR2(100 BYTE) NOT NULL, BL_XML CLOB NOT NULL, ID_VERS NUMBER NOT NULL, CONSTRAINT PK_XML_OBJ_NEW PRIMARY KEY (ID_XML_OBJECT));

-- changeset root:1751557724186-45
CREATE TABLE PIG_XML_SACER_UNITA_DOC (ID_XML_SACER_UNITA_DOC NUMBER NOT NULL, ID_UNITA_DOC_OBJECT NUMBER NOT NULL, TI_XML_SACER VARCHAR2(20 BYTE) NOT NULL, BL_XML_SACER CLOB NOT NULL, ID_VERS NUMBER NOT NULL, FL_XML_MOD CHAR(1 BYTE) DEFAULT '0', CONSTRAINT PK_XML_UNI_DOC_NEW PRIMARY KEY (ID_XML_SACER_UNITA_DOC));

-- changeset root:1751557724186-46
CREATE TABLE PIG_XML_SACER_UNITA_DOC_SES (ID_XML_SACER_UNITA_DOC_SES NUMBER NOT NULL, ID_UNITA_DOC_SESSIONE NUMBER NOT NULL, TI_XML_SACER VARCHAR2(20 BYTE) NOT NULL, BL_XML_SACER CLOB NOT NULL, ID_VERS NUMBER, CONSTRAINT PK_XML_UNI_DOC_SES_NEW PRIMARY KEY (ID_XML_SACER_UNITA_DOC_SES));

-- changeset root:1751557724186-47
CREATE TABLE PIG_XML_SESSIONE_INGEST (ID_XML_SESSIONE_INGEST NUMBER NOT NULL, ID_SESSIONE_INGEST NUMBER NOT NULL, BL_XML CLOB NOT NULL, ID_VERS NUMBER, CONSTRAINT PK_XML_SES_INGEST_NEW PRIMARY KEY (ID_XML_SESSIONE_INGEST));

-- changeset root:1751557724186-48
CREATE TABLE PIG_SISMA_VAL_DOC (ID_SISMA_VAL_DOC NUMBER NOT NULL, NM_TIPO_DOCUMENTO VARCHAR2(60 CHAR) NOT NULL, FL_DOC_PRINCIPALE CHAR(1 BYTE) DEFAULT '0' NOT NULL, CONSTRAINT PK_PIG_SISMA_VAL_DOC PRIMARY KEY (ID_SISMA_VAL_DOC));

-- changeset root:1751557724186-49 splitStatements:true
CREATE TABLE PIG_SISMA (ID_SISMA NUMBER CONSTRAINT PIG_SISMA_C01 NOT NULL, TI_STATO VARCHAR2(40 CHAR) CONSTRAINT PIG_SISMA_C02 NOT NULL, OGGETTO VARCHAR2(300 BYTE), ANNO NUMBER(4, 0) NOT NULL, NUMERO VARCHAR2(20 CHAR) NOT NULL, DT_CREAZIONE date NOT NULL, ID_VERS NUMBER CONSTRAINT PIG_SISMA_C03 NOT NULL, DS_ERR VARCHAR2(500 BYTE), ID_USER_IAM NUMBER CONSTRAINT PIG_SISMA_C05 NOT NULL, CD_KEY VARCHAR2(50 CHAR) NOT NULL, CD_KEY_OS VARCHAR2(160 CHAR) NOT NULL, CD_ERR VARCHAR2(20 CHAR), DATA date NOT NULL, DT_STATO date, DS_DESCRIZIONE VARCHAR2(1024 BYTE), ID_SISMA_VAL_ATTO NUMBER NOT NULL, ANNO_AG NUMBER(4, 0), REGISTRO_AG VARCHAR2(60 CHAR), NUMERO_AG VARCHAR2(20 CHAR), DATA_AG date, ID_VERS_AG NUMBER, ID_SISMA_PROGETTI_AG NUMBER NOT NULL, ID_SISMA_FASE_PROGETTO NUMBER NOT NULL, ID_SISMA_STATO_PROGETTO NUMBER NOT NULL, CLASSIFICA VARCHAR2(100 BYTE), ID_FASCICOLO VARCHAR2(100 BYTE), OGGETTO_FASCICOLO VARCHAR2(100 BYTE), ID_SOTTOFASCICOLO VARCHAR2(100 BYTE), OGGETTO_SOTTOFASCICOLO VARCHAR2(100 BYTE), FL_INVIATO_A_ENTE VARCHAR2(1 BYTE) DEFAULT '0' NOT NULL, FL_INTERVENTO_SOGGETTO_A_TUTELA VARCHAR2(1 BYTE) DEFAULT '0', CLASSIFICA_AG VARCHAR2(100 BYTE), ID_FASCICOLO_AG VARCHAR2(100 BYTE), OGGETTO_FASCICOLO_AG VARCHAR2(100 BYTE), ID_SOTTOFASCICOLO_AG VARCHAR2(100 BYTE), OGGETTO_SOTTOFASCICOLO_AG VARCHAR2(100 BYTE), CONSTRAINT PK_PIG_SISMA PRIMARY KEY (ID_SISMA));
COMMENT ON COLUMN PIG_SISMA.FL_INVIATO_A_ENTE IS 'Indica se il progetto √® stato inviato all''ente';

-- changeset root:1751557724186-50 splitStatements:true
CREATE TABLE PIG_SISMA_DOCUMENTI (ID_SISMA_DOCUMENTI NUMBER NOT NULL, NM_FILE_ORIG VARCHAR2(84 BYTE), FL_ESITO_VERIFICA CHAR(1 CHAR) DEFAULT '0' NOT NULL, FL_DELETED CHAR(1 CHAR) DEFAULT '0' NOT NULL, DS_ERR VARCHAR2(200 CHAR), ID_SISMA NUMBER NOT NULL, ID_SISMA_VAL_DOC NUMBER NOT NULL, NM_FILE_OS VARCHAR2(150 CHAR) NOT NULL, CD_ERR VARCHAR2(20 CHAR), NUM_FILES NUMBER(8, 0), DT_CARICAMENTO date NOT NULL, DIMENSIONE NUMBER(12, 0), TI_VERIFICA_AGENZIA VARCHAR2(1 BYTE), FL_DOC_RICARICATO CHAR(1 CHAR) DEFAULT '0' NOT NULL, BL_REPORT CLOB, CONSTRAINT PK_PIG_SISMA_DOCUMENTI PRIMARY KEY (ID_SISMA_DOCUMENTI));
COMMENT ON COLUMN PIG_SISMA_DOCUMENTI.NM_FILE_ORIG IS 'limite di 84 char in quanto √® stato decretato un limite di 80 caratteri nella lunghezza del nome del file';
COMMENT ON COLUMN PIG_SISMA_DOCUMENTI.NM_FILE_OS IS 'lunghezza massima consentita da sistema operativo';

-- changeset root:1751557724186-51
CREATE TABLE PIG_SISMA_FASE_PROGETTO (ID_SISMA_FASE_PROGETTO NUMBER NOT NULL, TI_FASE_SISMA VARCHAR2(30 CHAR) NOT NULL, DS_FASE_SISMA VARCHAR2(200 CHAR) NOT NULL, ID_SISMA_FINANZIAMENTO NUMBER NOT NULL, NI_ORD NUMBER DEFAULT 0 NOT NULL, CONSTRAINT PK_PIG_SISMA_FASE_PROGETTO PRIMARY KEY (ID_SISMA_FASE_PROGETTO));

-- changeset root:1751557724186-52
CREATE TABLE PIG_SISMA_PIANO_DOC_REQ (ID_SISMA_PIANO_DOC_REQ NUMBER NOT NULL, ID_PIG_SISMA_VAL_DOC NUMBER NOT NULL, FL_DOC_OBBLIGATORIO CHAR(1 CHAR), ID_SISMA_FASE_PROGETTO NUMBER DEFAULT 1 NOT NULL, ID_SISMA_FINANZIAMENTO NUMBER DEFAULT 1 NOT NULL, CONSTRAINT PK_PIG_SISMA_PIANO_DOC_REQUIRED PRIMARY KEY (ID_SISMA_PIANO_DOC_REQ));

-- changeset root:1751557724186-53
CREATE TABLE PIG_LOG_JOB_HISTORY (ID_LOG_JOB_HIST NUMBER NOT NULL, NM_JOB VARCHAR2(100 BYTE) NOT NULL, TI_REG_LOG_JOB VARCHAR2(20 BYTE) NOT NULL, DT_REG_LOG_JOB date NOT NULL, DL_MSG_ERR VARCHAR2(1024 BYTE), CD_IND_SERVER VARCHAR2(100 BYTE), DT_VIRTUAL_REG VARCHAR2(10 BYTE) GENERATED ALWAYS AS (TO_CHAR(DT_REG_LOG_JOB,'yyyymmddhh24')), ID_RECORD NUMBER, CONSTRAINT PK_LOG_JOB_HIST PRIMARY KEY (ID_LOG_JOB_HIST));

-- changeset root:1751557724186-54
CREATE OR REPLACE FORCE VIEW "PIG_V_SU_CALCOLA_AMBITO_TERR" ("ID_VERS", "DENOMINAZIONE", "TIPOLOGIA", "UNIONE", "PROVINCIA") AS select V.id_VERS,
en.nm_ente_siam "DENOMINAZIONE",
    case cat.cd_categ_ente
        WHEN 'comuni' then 'COMUNE'
        when 'unioni_comuni' then 'UNIONE'
        else null
        end AS "TIPOLOGIA",
    case amb.TI_AMBITO_TERRIT
        WHEN 'FORMA_ASSOCIATA'
            THEN amb.cd_ambito_territ
        else null
    end as "UNIONE",
    case amb.TI_AMBITO_TERRIT
        WHEN 'FORMA_ASSOCIATA'
            then (select t.cd_ambito_territ from SACER_IAM.org_ambito_territ  t where t.id_ambito_territ = amb.id_ambito_territ_padre)
        else 
    (select ter.cd_ambito_territ from SACER_IAM.org_ambito_territ ter    
        where ter.id_ambito_territ = en.id_prov_sede_legale)
        END as "PROVINCIA"
from SACER_IAM.org_ente_siam en             
join pig_vers v on v.id_ente_convenz = en.id_ente_siam
join SACER.org_categ_ente cat               on cat.id_categ_ente = en.id_categ_ente
join SACER_IAM.org_ambito_territ amb     on en.id_ambito_territ = amb.id_ambito_territ;

-- changeset root:1751557724186-55
CREATE OR REPLACE FORCE VIEW "MON_V_LIS_FILE_OBJECT" ("ID_OBJECT", "ID_FILE_OBJECT", "NM_FILE_OBJECT", "ID_TIPO_FILE_OBJECT", "NM_TIPO_FILE_OBJECT", "DS_HASH_FILE_VERS", "TI_ALGO_HASH_FILE_VERS", "CD_ENCODING_HASH_FILE_VERS", "NI_SIZE_FILE_VERS", "NM_BUCKET", "CD_KEY_FILE") AS select
file_obj.id_object,
file_obj.id_file_object,
file_obj.nm_file_object,
file_obj.id_tipo_file_object,
tipo_file.nm_tipo_file_object,
file_obj.ds_hash_file_vers,
file_obj.ti_algo_hash_file_vers,
file_obj.cd_encoding_hash_file_vers,
file_obj.ni_size_file_vers,
file_obj.nm_bucket,
file_obj.cd_key_file

from PIG_FILE_OBJECT file_obj
join PIG_TIPO_FILE_OBJECT tipo_file
on (tipo_file.id_tipo_file_object = file_obj.id_tipo_file_object);

-- changeset root:1751557724186-56
COMMENT ON COLUMN MON_V_LIS_FILE_OBJECT.ID_FILE_OBJECT IS 'PK.1 relativa a tabella PIG_FILE_OBJECT';

-- changeset root:1751557724186-57
CREATE OR REPLACE FORCE VIEW "MON_V_LIS_OBJ_TRASF" ("ID_OBJECT_TRASF", "ID_OBJECT_DA_TRASF_PING", "ID_VERS_TRASF", "NM_AMBIENTE_VERS_TRASF", "NM_VERS_TRASF", "CD_KEY_OBJECT_TRASF", "PG_OGGETTO_TRASF", "NM_TIPO_OBJECT_TRASF", "DS_OBJECT_TRASF", "DS_PATH", "DS_PATH_TRASF", "TI_STATO_TRASF", "CD_ERR", "DL_ERR", "NI_UD_PRODOTTE") AS SELECT
    obj_trasf.id_object_trasf                        ,
    obj_trasf.id_object id_object_da_trasf_ping      ,
    obj_trasf.id_vers id_vers_trasf                  ,
    amb_trasf.nm_ambiente_vers nm_ambiente_vers_trasf,
    vers_trasf.nm_vers nm_vers_trasf                 ,
    obj_trasf.cd_key_object_trasf                    ,
    obj_trasf.pg_oggetto_trasf                       ,
    ti_obj_trasf.nm_tipo_object nm_tipo_object_trasf ,
    obj_trasf.ds_object_trasf                        ,
    obj_trasf.ds_path                                ,
    --vers_trasf.ds_path_trasf,
    (
        SELECT
            val.ds_valore_param_applic
        FROM
            PIG_PARAM_APPLIC par
        JOIN
            PIG_VALORE_PARAM_APPLIC val
        ON
            (
                val.id_param_applic = par.id_param_applic)
        WHERE
            par.nm_param_applic   = 'DS_PATH_OUTPUT_FTP'
        AND val.id_vers           = vers_trasf.id_vers),
    CASE WHEN obj.ti_stato_object = 'CHIUSO_OK' THEN CASE WHEN EXISTS
            (
                SELECT
                    1
                FROM
                    PIG_UNITA_DOC_OBJECT ud
                WHERE
                    ud.id_object                = obj.id_object
                AND ( ti_stato_unita_doc_object = 'VERSATA_ERR'
                    AND cd_err_sacer IN ('UD-002'                                                                                                                            ,
                                        'UD-002-001')) ) THEN 'CHIUSO_OK (WARNING_CHIAVE_DUPLICATA)' ELSE obj.ti_stato_object END ELSE obj.ti_stato_object END ti_stato_trasf,
    obj_trasf.cd_err                                                                                                                                                         ,
    obj_trasf.dl_err                                                                                                                                                         ,
    (
        select
            count(*)
        from
            "SACER_PING".PIG_OBJECT po
        join
            "SACER_PING".PIG_UNITA_DOC_OBJECT uds
        on
            uds.id_object = po.id_object
        where
            po.cd_key_object = obj_trasf.cd_key_object_trasf
        and po.id_vers       = obj_trasf.id_vers) ni_ud_prodotte
FROM
    PIG_OBJECT_TRASF obj_trasf
JOIN
    PIG_VERS vers_trasf
ON
    (
        vers_trasf.id_vers = obj_trasf.id_vers)
JOIN
    PIG_AMBIENTE_VERS amb_trasf
ON
    (
        amb_trasf.id_ambiente_vers = vers_trasf.id_ambiente_vers)
JOIN
    PIG_TIPO_OBJECT ti_obj_trasf
ON
    (
        ti_obj_trasf.id_tipo_object = obj_trasf.id_tipo_object)
LEFT JOIN
    PIG_OBJECT obj
ON
    (
        obj.id_vers          = obj_trasf.id_vers
    AND obj.cd_key_object    = obj_trasf.cd_key_object_trasf
    AND obj.pg_oggetto_trasf = obj_trasf.pg_oggetto_trasf);

-- changeset root:1751557724186-58
CREATE OR REPLACE FORCE VIEW "MON_V_VIS_OBJ_TRASF" ("ID_OBJECT_TRASF", "ID_VERS_TRASF", "NM_AMBIENTE_VERS_TRASF", "NM_VERS_TRASF", "CD_KEY_OBJECT_TRASF", "PG_OGGETTO_TRASF", "NM_TIPO_OBJECT_TRASF", "DS_OBJECT_TRASF", "DS_PATH", "DS_PATH_TRASF", "DS_HASH_FILE_VERS", "TI_ALGO_HASH_FILE_VERS", "CD_ENCODING_HASH_FILE_VERS", "TI_STATO_TRASF", "CD_ERR", "DL_ERR", "NM_AMBIENTE_VERS_DA_TRASF", "NM_VERS_DA_TRASF", "ID_VERS_DA_TRASF", "CD_KEY_OBJECT_DA_TRASF", "ID_OBJECT_DA_TRASF", "NM_TIPO_OBJECT_DA_TRASF", "DS_OBJECT_DA_TRASF", "NI_TOT_OBJECT_TRASF", "TI_STATO_OBJECT_DA_TRASF", "DT_STATO_COR_DA_TRASF") AS SELECT obj_trasf.id_object_trasf,
           obj_trasf.id_vers
               id_vers_trasf,
           amb_trasf.nm_ambiente_vers
               nm_ambiente_vers_trasf,
           vers_trasf.nm_vers
               nm_vers_trasf,
           obj_trasf.cd_key_object_trasf,
           obj_trasf.pg_oggetto_trasf,
           ti_obj_trasf.nm_tipo_object
               nm_tipo_object_trasf,
           obj_trasf.ds_object_trasf,
           obj_trasf.ds_path,
           --vers_trasf.ds_path_trasf,
            (SELECT val.ds_valore_param_applic
             FROM PIG_PARAM_APPLIC  par
                  JOIN PIG_VALORE_PARAM_APPLIC val
                      ON (val.id_param_applic = par.id_param_applic)
            WHERE par.nm_param_applic = 'DS_PATH_OUTPUT_FTP'
              AND val.id_vers = vers_trasf.id_vers),
           obj_trasf.ds_hash_file_vers,
           obj_trasf.ti_algo_hash_file_vers,
           obj_trasf.cd_encoding_hash_file_vers,
           CASE
               WHEN obj.ti_stato_object = 'CHIUSO_OK' THEN
                   CASE
                       WHEN EXISTS
                                (SELECT *
                                   FROM PIG_UNITA_DOC_OBJECT ud
                                  WHERE ud.id_object = obj.id_object
                                    AND (ti_stato_unita_doc_object =
                                         'VERSATA_ERR'
                                     AND cd_err_sacer IN
                                             ('UD-002', 'UD-002-001'))) THEN
                           'CHIUSO_OK (WARNING_CHIAVE_DUPLICATA)'
                       ELSE
                           obj.ti_stato_object
                   END
               ELSE
                   obj.ti_stato_object
           END
               ti_stato_trasf,
           obj_trasf.cd_err,
           obj_trasf.dl_err,
           amb_da_trasf.nm_ambiente_vers
               nm_ambiente_vers_da_trasf,
           vers_da_trasf.nm_vers
               nm_vers_da_trasf,
           vers_da_trasf.id_vers
               id_vers_da_trasf,
           obj_da_trasf.cd_key_object
               cd_key_object_da_trasf,
           obj_da_trasf.id_object
               id_object_da_trasf,
           ti_obj_da_trasf.nm_tipo_object
               nm_tipo_object_da_trasf,
           obj_da_trasf.ds_object
               ds_object_da_trasf,
           obj_da_trasf.ni_tot_object_trasf,
           CASE
               WHEN obj_da_trasf.ti_stato_object = 'CHIUSO_OK' THEN
                   CASE
                       WHEN EXISTS
                                (SELECT *
                                   FROM PIG_UNITA_DOC_OBJECT ud
                                  WHERE ud.id_object = obj.id_object
                                    AND (ti_stato_unita_doc_object =
                                         'VERSATA_ERR'
                                     AND cd_err_sacer IN
                                             ('UD-002', 'UD-002-001'))) THEN
                           'CHIUSO_OK (WARNING_CHIAVE_DUPLICATA)'
                       ELSE
                           obj_da_trasf.ti_stato_object
                   END
               ELSE
                   obj_da_trasf.ti_stato_object
           END
               ti_stato_object_da_trasf,
           stato_da_trasf.ts_reg_stato
               dt_stato_cor_da_trasf
      FROM PIG_OBJECT_TRASF  obj_trasf
           JOIN PIG_TIPO_OBJECT ti_obj_trasf
               ON (ti_obj_trasf.id_tipo_object = obj_trasf.id_tipo_object)
           JOIN PIG_VERS vers_trasf
               ON (vers_trasf.id_vers = obj_trasf.id_vers)
           JOIN PIG_AMBIENTE_VERS amb_trasf
               ON (amb_trasf.id_ambiente_vers = vers_trasf.id_ambiente_vers)
           LEFT JOIN PIG_OBJECT obj
               ON (obj.id_vers = obj_trasf.id_vers
               AND obj.cd_key_object = obj_trasf.cd_key_object_trasf
               AND obj.pg_oggetto_trasf = obj_trasf.pg_oggetto_trasf)
           JOIN PIG_OBJECT obj_da_trasf
               ON (obj_da_trasf.id_object = obj_trasf.id_object)
           JOIN PIG_TIPO_OBJECT ti_obj_da_trasf
               ON (ti_obj_da_trasf.id_tipo_object =
                   obj_da_trasf.id_tipo_object)
           JOIN PIG_VERS vers_da_trasf
               ON (vers_da_trasf.id_vers = obj_da_trasf.id_vers)
           JOIN PIG_AMBIENTE_VERS amb_da_trasf
               ON (amb_da_trasf.id_ambiente_vers =
                   vers_da_trasf.id_ambiente_vers)
           JOIN PIG_SESSIONE_INGEST ses_da_trasf
               ON (ses_da_trasf.id_sessione_ingest =
                   obj_da_trasf.id_last_sessione_ingest)
           JOIN PIG_STATO_SESSIONE_INGEST stato_da_trasf
               ON (stato_da_trasf.id_stato_sessione_ingest =
                   ses_da_trasf.id_stato_sessione_ingest_cor);

-- changeset root:1751557724186-59
COMMENT ON COLUMN MON_V_VIS_OBJ_TRASF.ID_OBJECT_TRASF IS 'PK.1';

-- changeset root:1751557724186-60
CREATE OR REPLACE FORCE VIEW "PIG_V_VAL_PARAM_TRASF_DEF_SPEC" ("ID_VERS_TIPO_OBJECT_DA_TRASF", "ID_SET_PARAM_TRASF", "NM_SET_PARAM_TRASF", "NM_PARAM_TRASF", "ID_PARAM_TRASF", "DS_PARAM_TRASF", "TI_PARAM_TRASF", "ID_VALORE_SET_PARAM_TRASF", "ID_VALORE_PARAM_TRASF", "VAL_PARAM", "TI_VAL_PARAM") AS select
vers_tiobj_da_trasf.id_vers_tipo_object_da_trasf,
set_param.id_set_param_trasf,
set_param.nm_set_param_trasf,

param.nm_param_trasf,
param.id_param_trasf,
param.ds_param_trasf,
param.ti_param_trasf,

case
	when exists (select *
				 from PIG_VALORE_SET_PARAM_TRASF val_set_param
				 join PIG_VALORE_PARAM_TRASF val_param
				  on (val_param.id_valore_set_param_trasf = val_set_param.id_valore_set_param_trasf
				  and val_param.id_param_trasf = param.id_param_trasf)
				 where val_set_param.id_vers_tipo_object_da_trasf = vers_tiobj_da_trasf.id_vers_tipo_object_da_trasf
				 and val_set_param.id_set_param_trasf = set_param.id_set_param_trasf
				)
			then (select val_set_param.id_valore_set_param_trasf
						  from PIG_VALORE_SET_PARAM_TRASF val_set_param
						  where val_set_param.id_vers_tipo_object_da_trasf = vers_tiobj_da_trasf.id_vers_tipo_object_da_trasf
						  and val_set_param.id_set_param_trasf = set_param.id_set_param_trasf
						 )
			else null
end id_valore_set_param_trasf,

case
	when exists (select *
				 from PIG_VALORE_SET_PARAM_TRASF val_set_param
				 join PIG_VALORE_PARAM_TRASF val_param
				  on (val_param.id_valore_set_param_trasf = val_set_param.id_valore_set_param_trasf
				  and val_param.id_param_trasf = param.id_param_trasf)
				 where val_set_param.id_vers_tipo_object_da_trasf = vers_tiobj_da_trasf.id_vers_tipo_object_da_trasf
				 and val_set_param.id_set_param_trasf = set_param.id_set_param_trasf
				)
			then (select val_param.id_valore_param_trasf
						  from PIG_VALORE_SET_PARAM_TRASF val_set_param
						  join PIG_VALORE_PARAM_TRASF val_param
						   on (val_param.id_valore_set_param_trasf = val_set_param.id_valore_set_param_trasf
						   and val_param.id_param_trasf = param.id_param_trasf)
						  where val_set_param.id_vers_tipo_object_da_trasf = vers_tiobj_da_trasf.id_vers_tipo_object_da_trasf
						  and val_set_param.id_set_param_trasf = set_param.id_set_param_trasf
						 )
			else null
end id_valore_param_trasf,

case
	when exists (select *
				 from PIG_VALORE_SET_PARAM_TRASF val_set_param
				 join PIG_VALORE_PARAM_TRASF val_param
				  on (val_param.id_valore_set_param_trasf = val_set_param.id_valore_set_param_trasf
				  and val_param.id_param_trasf = param.id_param_trasf)
				 where val_set_param.id_vers_tipo_object_da_trasf = vers_tiobj_da_trasf.id_vers_tipo_object_da_trasf
				 and val_set_param.id_set_param_trasf = set_param.id_set_param_trasf
				)
			then (select val_param.ds_valore_param
						  from PIG_VALORE_SET_PARAM_TRASF val_set_param
						  join PIG_VALORE_PARAM_TRASF val_param
						   on (val_param.id_valore_set_param_trasf = val_set_param.id_valore_set_param_trasf
						   and val_param.id_param_trasf = param.id_param_trasf)
						  where val_set_param.id_vers_tipo_object_da_trasf = vers_tiobj_da_trasf.id_vers_tipo_object_da_trasf
						  and val_set_param.id_set_param_trasf = set_param.id_set_param_trasf
						 )
			else param.ds_valore_param
end val_param,

case
	when exists (select *
				 from PIG_VALORE_SET_PARAM_TRASF val_set_param
				 join PIG_VALORE_PARAM_TRASF val_param
				  on (val_param.id_valore_set_param_trasf = val_set_param.id_valore_set_param_trasf
				  and val_param.id_param_trasf = param.id_param_trasf)
				 where val_set_param.id_vers_tipo_object_da_trasf = vers_tiobj_da_trasf.id_vers_tipo_object_da_trasf
				 and val_set_param.id_set_param_trasf = set_param.id_set_param_trasf
				)
			then 'SPECIFICO'
			else 'DEFAULT'
end ti_val_param

from PIG_VERS_TIPO_OBJECT_DA_TRASF vers_tiobj_da_trasf
join PIG_TIPO_OBJECT tiobj_da_trasf
 on (tiobj_da_trasf.id_tipo_object = vers_tiobj_da_trasf.id_tipo_object_da_trasf)

join XFO_TRASF trasf
 on (trasf.id_trasf = tiobj_da_trasf.id_trasf) 
 
join XFO_SET_PARAM_TRASF set_param					--	set di param con valori default
 on (set_param.id_trasf = trasf.id_trasf)
join XFO_PARAM_TRASF param
 on (param.id_set_param_trasf = set_param.id_set_param_trasf);

-- changeset root:1751557724186-61
COMMENT ON COLUMN PIG_V_VAL_PARAM_TRASF_DEF_SPEC.ID_VERS_TIPO_OBJECT_DA_TRASF IS 'PK.1';

-- changeset root:1751557724186-62
COMMENT ON COLUMN PIG_V_VAL_PARAM_TRASF_DEF_SPEC.ID_PARAM_TRASF IS 'PK.2';

-- changeset root:1751557724186-63
CREATE OR REPLACE FORCE VIEW "MON_V_OBJ_ANNUL_RANGE_DT" ("ID_VERS", "ID_OBJECT", "ID_TIPO_OBJECT", "TI_STATO_OBJECT", "TI_DT_CREAZIONE") AS select
 obj.id_vers, obj.id_object, obj.id_tipo_object, 
 obj.ti_stato_object,
 
 case
	when stato_cor.ts_reg_stato between trunc(sysdate) and sysdate + 1/24 then 'CORR'
	when stato_cor.ts_reg_stato between trunc(sysdate - 6) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss') then '6_GG_PREC_CORR'
	else 'PREC_6_GG_PREC_CORR'
 end ti_dt_creazione 

from PIG_OBJECT obj
join PIG_TIPO_OBJECT ti_obj
 on (ti_obj.id_tipo_object = obj.id_tipo_object)

join PIG_SESSIONE_INGEST ses
 on (ses.id_sessione_ingest = obj.id_last_sessione_ingest)
join  PIG_STATO_SESSIONE_INGEST stato_cor
 on (stato_cor.id_stato_sessione_ingest = ses.id_stato_sessione_ingest_cor)
 join PIG_VERS vers
on (vers.id_vers = ses.id_vers)

where obj.ti_stato_object in ('ANNULLATO', 'IN_CORSO_ANNULLAMENTO')
and vers.fl_cessato = 0;

-- changeset root:1751557724186-64
COMMENT ON COLUMN MON_V_OBJ_ANNUL_RANGE_DT.ID_OBJECT IS 'PK.1 relativa a tabella PIG_OBJECT';

-- changeset root:1751557724186-65
CREATE OR REPLACE FORCE VIEW "PIG_V_GETVAL_PARAM_BY_TIOGG" ("TI_APPART", "ID_PARAM_APPLIC", "NM_PARAM_APPLIC", "ID_VALORE_PARAM_APPLIC", "DS_VALORE_PARAM_APPLIC", "ID_VERS", "NM_VERS", "ID_TIPO_OBJECT", "NM_TIPO_OBJECT") AS select
 'TIPO_OGGETTO' ti_appart,
 par.id_param_applic, par.nm_param_applic,
 val.id_valore_param_applic, val.ds_valore_param_applic,
 vers.id_vers, vers.nm_vers,
 tipo_obj.id_tipo_object, tipo_obj.nm_tipo_object
 
from PIG_PARAM_APPLIC par
join PIG_VALORE_PARAM_APPLIC val
	on (val.id_param_applic = par.id_param_applic)
join PIG_TIPO_OBJECT tipo_obj
	on (tipo_obj.id_tipo_object = val.id_tipo_object)
join PIG_VERS vers
	on (vers.id_vers = tipo_obj.id_vers)
where par.fl_appart_applic in ('1', '0')
and par.fl_appart_ambiente in ('1', '0')
and par.fl_appart_vers in ('1', '0')
and fl_appart_tipo_oggetto = '1'

and val.ti_appart = 'TIPO_OGGETTO'

UNION

select
 'VERS' ti_appart,
 par.id_param_applic, par.nm_param_applic,
 val.id_valore_param_applic, val.ds_valore_param_applic,
 vers.id_vers, vers.nm_vers,
 tipo_obj.id_tipo_object, tipo_obj.nm_tipo_object
 
from PIG_PARAM_APPLIC par
join PIG_VALORE_PARAM_APPLIC val
	on (val.id_param_applic = par.id_param_applic)
join PIG_VERS vers
	on (vers.id_vers = val.id_vers)
join PIG_TIPO_OBJECT tipo_obj
	on (tipo_obj.id_vers = vers.id_vers)
where par.fl_appart_applic in ('1', '0')
and par.fl_appart_ambiente in ('1', '0')
and par.fl_appart_vers = '1'
and fl_appart_tipo_oggetto = '1'

and val.ti_appart = 'VERS'

and not exists (select *
				from PIG_VALORE_PARAM_APPLIC val_tipo_obj
				where val_tipo_obj.id_param_applic = par.id_param_applic
				and val_tipo_obj.id_tipo_object = tipo_obj.id_tipo_object
				and val_tipo_obj.ti_appart = 'TIPO_OGGETTO')


UNION

select
 'AMBIENTE' ti_appart,
 par.id_param_applic, par.nm_param_applic,
 val.id_valore_param_applic, val.ds_valore_param_applic,
 vers.id_vers, vers.nm_vers,
 tipo_obj.id_tipo_object, tipo_obj.nm_tipo_object
 
from PIG_PARAM_APPLIC par
join PIG_VALORE_PARAM_APPLIC val
	on (val.id_param_applic = par.id_param_applic)
join PIG_VERS vers
	on (vers.id_ambiente_vers = val.id_ambiente_vers)
join PIG_TIPO_OBJECT tipo_obj
	on (tipo_obj.id_vers = vers.id_vers)
	
where par.fl_appart_applic in ('1', '0')
and par.fl_appart_ambiente = '1'
and par.fl_appart_vers in ('1', '0')
and fl_appart_tipo_oggetto = '1'

and val.ti_appart = 'AMBIENTE'

and not exists (select *
				from PIG_VALORE_PARAM_APPLIC val_tipo_obj
				where val_tipo_obj.id_param_applic = par.id_param_applic
				and val_tipo_obj.id_tipo_object = tipo_obj.id_tipo_object
				and val_tipo_obj.ti_appart = 'TIPO_OGGETTO')

and not exists (select *
				from PIG_VALORE_PARAM_APPLIC val_vers
				where val_vers.id_param_applic = par.id_param_applic
				and val_vers.id_vers = vers.id_vers
				and val_vers.ti_appart = 'VERS')

UNION

select
 'APPLIC' ti_appart,
 par.id_param_applic, par.nm_param_applic,
 val.id_valore_param_applic, val.ds_valore_param_applic,
 vers.id_vers, vers.nm_vers,
 tipo_obj.id_tipo_object, tipo_obj.nm_tipo_object
 
from PIG_PARAM_APPLIC par
join PIG_VALORE_PARAM_APPLIC val
	on (val.id_param_applic = par.id_param_applic)
join PIG_VERS vers
	on (vers.id_vers like '%')
join PIG_TIPO_OBJECT tipo_obj
	on (tipo_obj.id_vers = vers.id_vers)
	
where par.fl_appart_applic = '1'
and par.fl_appart_ambiente in ('1', '0')
and par.fl_appart_vers in ('1', '0')
and fl_appart_tipo_oggetto = '1'

and val.ti_appart = 'APPLIC'

and not exists (select *
				from PIG_VALORE_PARAM_APPLIC val_tipo_obj
				where val_tipo_obj.id_param_applic = par.id_param_applic
				and val_tipo_obj.id_tipo_object = tipo_obj.id_tipo_object
				and val_tipo_obj.ti_appart = 'TIPO_OGGETTO')

and not exists (select *
				from PIG_VALORE_PARAM_APPLIC val_vers
				where val_vers.id_param_applic = par.id_param_applic
				and val_vers.id_vers = vers.id_vers
				and val_vers.ti_appart = 'VERS')

and not exists (select *
				from PIG_VALORE_PARAM_APPLIC val_amb
				where val_amb.id_param_applic = par.id_param_applic
				and val_amb.id_ambiente_vers = vers.id_ambiente_vers
				and val_amb.ti_appart = 'AMBIENTE');

-- changeset root:1751557724186-66
COMMENT ON COLUMN PIG_V_GETVAL_PARAM_BY_TIOGG.ID_VALORE_PARAM_APPLIC IS 'PK.1';

-- changeset root:1751557724186-67
CREATE OR REPLACE FORCE VIEW "PIG_V_LIS_STRUT_VERS_SACER" ("ID_VERS", "ID_TIPO_OBJECT", "TI_DICH_VERS_TI_OBJ", "ID_DICH_VERS_SACER", "ID_ORGANIZ_IAM_DICH", "TI_DICH_VERS", "NM_USERID_SACER", "CD_PASSWORD_SACER", "ID_ORGANIZ_IAM_STRUT", "NM_ORGANIZ_IAM_STRUT", "DL_COMPOSITO_ORGANIZ_STRUT", "ID_ORGANIZ_APPLIC") AS select
vers.id_vers,
ti_obj.id_tipo_object,

'VERS' ti_dich_vers_ti_obj,

dich_vers.id_dich_vers_sacer id_dich_vers_sacer,
dich_vers.id_organiz_iam id_organiz_iam_dich,
dich_vers.ti_dich_vers,
paramobjuser.ds_valore_param_applic ,
paramobjpsw.ds_valore_param_applic ,
strut_sacer.id_organiz_iam id_organiz_iam_strut,
strut_sacer.nm_organiz nm_organiz_iam_strut,
strut_sacer.dl_composito_organiz dl_composito_organiz_strut,
strut_sacer.id_organiz_applic

from PIG_VERS vers
join PIG_DICH_VERS_SACER dich_vers 
 on (dich_vers.id_vers = vers.id_vers)

left join PIG_TIPO_OBJECT ti_obj			-- i tipi oggetto potrebbero essere definiti successivamente alle dichiarazioni per versatore Ping
 on (ti_obj.id_vers = vers.id_vers)

join sacer_iam.USR_V_TREE_ORGANIZ_IAM strut_sacer
 on (strut_sacer.id_organiz_iam = dich_vers.id_organiz_iam)
 
left join pig_v_getval_param_by_tiogg paramobjuser
on (paramobjuser.id_tipo_object = ti_obj.id_tipo_object and paramobjuser.nm_param_applic = 'USERID_USER_VERS')

left join pig_v_getval_param_by_tiogg paramobjpsw
on (paramobjpsw.id_tipo_object = ti_obj.id_tipo_object and paramobjpsw.nm_param_applic = 'PSW_USER_VERS')
 
where not exists (select *
				  from PIG_DICH_VERS_SACER_TIPO_OBJ dich_ti_obj
				  where dich_ti_obj.id_tipo_object = ti_obj.id_tipo_object
				  )
and dich_vers.ti_dich_vers = 'STRUTTURA'

UNION

select
vers.id_vers,
ti_obj.id_tipo_object,

'VERS' ti_dich_vers_ti_obj,

dich_vers.id_dich_vers_sacer id_dich_vers_sacer,
dich_vers.id_organiz_iam id_organiz_iam_dich,
dich_vers.ti_dich_vers,
paramobjuser.ds_valore_param_applic ,
paramobjpsw.ds_valore_param_applic ,

strut_sacer.id_organiz_iam id_organiz_iam_strut,
strut_sacer.nm_organiz nm_organiz_iam_strut,
strut_sacer.dl_composito_organiz dl_composito_organiz_strut,
strut_sacer.id_organiz_applic

from PIG_VERS vers
join PIG_DICH_VERS_SACER dich_vers 
 on (dich_vers.id_vers = vers.id_vers)

left join PIG_TIPO_OBJECT ti_obj			-- i tipi oggetto potrebbero essere definiti successivamente alle dichiarazioni per versatore Ping
 on (ti_obj.id_vers = vers.id_vers)

join sacer_iam.USR_V_TREE_ORGANIZ_IAM ente_sacer
 on (ente_sacer.id_organiz_iam = dich_vers.id_organiz_iam)

join sacer_iam.USR_V_TREE_ORGANIZ_IAM strut_sacer
 on (strut_sacer.id_applic = ente_sacer.id_applic
 and strut_sacer.nm_tipo_organiz = 'STRUTTURA'
 and strut_sacer.dl_path_id_organiz_iam like ente_sacer.dl_path_id_organiz_iam || '%')
 
left join pig_v_getval_param_by_tiogg paramobjuser
on (paramobjuser.id_tipo_object = ti_obj.id_tipo_object and paramobjuser.nm_param_applic = 'USERID_USER_VERS')

left join pig_v_getval_param_by_tiogg paramobjpsw
on (paramobjpsw.id_tipo_object = ti_obj.id_tipo_object and paramobjpsw.nm_param_applic = 'PSW_USER_VERS')
 
where not exists (select *
				  from PIG_DICH_VERS_SACER_TIPO_OBJ dich_ti_obj
				  where dich_ti_obj.id_tipo_object = ti_obj.id_tipo_object
				  )
and dich_vers.ti_dich_vers = 'ENTE'

UNION

select
vers.id_vers,
ti_obj.id_tipo_object,

'VERS' ti_dich_vers_ti_obj,

dich_vers.id_dich_vers_sacer id_dich_vers_sacer,
dich_vers.id_organiz_iam id_organiz_iam_dich,
dich_vers.ti_dich_vers,
paramobjuser.ds_valore_param_applic ,
paramobjpsw.ds_valore_param_applic ,

strut_sacer.id_organiz_iam id_organiz_iam_strut,
strut_sacer.nm_organiz nm_organiz_iam_strut,
strut_sacer.dl_composito_organiz dl_composito_organiz_strut,
strut_sacer.id_organiz_applic

from PIG_VERS vers
join PIG_DICH_VERS_SACER dich_vers 
 on (dich_vers.id_vers = vers.id_vers)

left join PIG_TIPO_OBJECT ti_obj			-- i tipi oggetto potrebbero essere definiti successivamente alle dichiarazioni per versatore Ping
 on (ti_obj.id_vers = vers.id_vers)

join sacer_iam.USR_V_TREE_ORGANIZ_IAM amb_sacer
 on (amb_sacer.id_organiz_iam = dich_vers.id_organiz_iam)

join sacer_iam.USR_V_TREE_ORGANIZ_IAM strut_sacer
 on (strut_sacer.id_applic = amb_sacer.id_applic
 and strut_sacer.nm_tipo_organiz = 'STRUTTURA'
 and strut_sacer.dl_path_id_organiz_iam like amb_sacer.dl_path_id_organiz_iam || '%')
 
left join pig_v_getval_param_by_tiogg paramobjuser
on (paramobjuser.id_tipo_object = ti_obj.id_tipo_object and paramobjuser.nm_param_applic = 'USERID_USER_VERS')

left join pig_v_getval_param_by_tiogg paramobjpsw
on (paramobjpsw.id_tipo_object = ti_obj.id_tipo_object and paramobjpsw.nm_param_applic = 'PSW_USER_VERS')
 
where not exists (select *
				  from PIG_DICH_VERS_SACER_TIPO_OBJ dich_ti_obj
				  where dich_ti_obj.id_tipo_object = ti_obj.id_tipo_object
				  )
and dich_vers.ti_dich_vers = 'AMBIENTE'

UNION

select
vers.id_vers,
ti_obj.id_tipo_object,

'TI_OBJ' ti_dich_vers_ti_obj,

dich_ti_obj.id_dich_vers_sacer_tipo_obj id_dich_vers_sacer,
dich_ti_obj.id_organiz_iam id_organiz_iam_dich,
dich_ti_obj.ti_dich_vers,
paramobjuser.ds_valore_param_applic ,
paramobjpsw.ds_valore_param_applic ,

strut_sacer.id_organiz_iam id_organiz_iam_strut,
strut_sacer.nm_organiz nm_organiz_iam_strut,
strut_sacer.dl_composito_organiz dl_composito_organiz_strut,
strut_sacer.id_organiz_applic

from PIG_VERS vers
join PIG_TIPO_OBJECT ti_obj			
 on (ti_obj.id_vers = vers.id_vers)
join PIG_DICH_VERS_SACER_TIPO_OBJ dich_ti_obj
 on (dich_ti_obj.id_tipo_object = ti_obj.id_tipo_object)
 
join sacer_iam.USR_V_TREE_ORGANIZ_IAM strut_sacer
 on (strut_sacer.id_organiz_iam = dich_ti_obj.id_organiz_iam)
 
left join pig_v_getval_param_by_tiogg paramobjuser
on (paramobjuser.id_tipo_object = ti_obj.id_tipo_object and paramobjuser.nm_param_applic = 'USERID_USER_VERS')

left join pig_v_getval_param_by_tiogg paramobjpsw
on (paramobjpsw.id_tipo_object = ti_obj.id_tipo_object and paramobjpsw.nm_param_applic = 'PSW_USER_VERS')
 
where dich_ti_obj.ti_dich_vers = 'STRUTTURA'

UNION

select
vers.id_vers,
ti_obj.id_tipo_object,

'TI_OBJ' ti_dich_vers_ti_obj,

dich_ti_obj.id_dich_vers_sacer_tipo_obj id_dich_vers_sacer,
dich_ti_obj.id_organiz_iam id_organiz_iam_dich,
dich_ti_obj.ti_dich_vers,
paramobjuser.ds_valore_param_applic ,
paramobjpsw.ds_valore_param_applic ,

strut_sacer.id_organiz_iam id_organiz_iam_strut,
strut_sacer.nm_organiz nm_organiz_iam_strut,
strut_sacer.dl_composito_organiz dl_composito_organiz_strut,
strut_sacer.id_organiz_applic

from PIG_VERS vers
join PIG_TIPO_OBJECT ti_obj			
 on (ti_obj.id_vers = vers.id_vers)
join PIG_DICH_VERS_SACER_TIPO_OBJ dich_ti_obj
 on (dich_ti_obj.id_tipo_object = ti_obj.id_tipo_object)

join sacer_iam.USR_V_TREE_ORGANIZ_IAM ente_sacer
 on (ente_sacer.id_organiz_iam = dich_ti_obj.id_organiz_iam)

join sacer_iam.USR_V_TREE_ORGANIZ_IAM strut_sacer
 on (strut_sacer.id_applic = ente_sacer.id_applic
 and strut_sacer.nm_tipo_organiz = 'STRUTTURA'
 and strut_sacer.dl_path_id_organiz_iam like ente_sacer.dl_path_id_organiz_iam || '%')
 
left join pig_v_getval_param_by_tiogg paramobjuser
on (paramobjuser.id_tipo_object = ti_obj.id_tipo_object and paramobjuser.nm_param_applic = 'USERID_USER_VERS')

left join pig_v_getval_param_by_tiogg paramobjpsw
on (paramobjpsw.id_tipo_object = ti_obj.id_tipo_object and paramobjpsw.nm_param_applic = 'PSW_USER_VERS')
 
where dich_ti_obj.ti_dich_vers = 'ENTE'

UNION

select
vers.id_vers,
ti_obj.id_tipo_object,

'TI_OBJ' ti_dich_vers_ti_obj,

dich_ti_obj.id_dich_vers_sacer_tipo_obj id_dich_vers_sacer,
dich_ti_obj.id_organiz_iam id_organiz_iam_dich,
dich_ti_obj.ti_dich_vers,
paramobjuser.ds_valore_param_applic ,
paramobjpsw.ds_valore_param_applic ,

strut_sacer.id_organiz_iam id_organiz_iam_strut,
strut_sacer.nm_organiz nm_organiz_iam_strut,
strut_sacer.dl_composito_organiz dl_composito_organiz_strut,
strut_sacer.id_organiz_applic

from PIG_VERS vers
join PIG_TIPO_OBJECT ti_obj			
 on (ti_obj.id_vers = vers.id_vers)
join PIG_DICH_VERS_SACER_TIPO_OBJ dich_ti_obj
 on (dich_ti_obj.id_tipo_object = ti_obj.id_tipo_object)

join sacer_iam.USR_V_TREE_ORGANIZ_IAM amb_sacer
 on (amb_sacer.id_organiz_iam = dich_ti_obj.id_organiz_iam)

join sacer_iam.USR_V_TREE_ORGANIZ_IAM strut_sacer
 on (strut_sacer.id_applic = amb_sacer.id_applic
 and strut_sacer.nm_tipo_organiz = 'STRUTTURA'
 and strut_sacer.dl_path_id_organiz_iam like amb_sacer.dl_path_id_organiz_iam || '%')
 
left join pig_v_getval_param_by_tiogg paramobjuser
on (paramobjuser.id_tipo_object = ti_obj.id_tipo_object and paramobjuser.nm_param_applic = 'USERID_USER_VERS')

left join pig_v_getval_param_by_tiogg paramobjpsw
on (paramobjpsw.id_tipo_object = ti_obj.id_tipo_object and paramobjpsw.nm_param_applic = 'PSW_USER_VERS')
 
where dich_ti_obj.ti_dich_vers = 'AMBIENTE';

-- changeset root:1751557724186-68
COMMENT ON COLUMN PIG_V_LIS_STRUT_VERS_SACER.TI_DICH_VERS_TI_OBJ IS 'PK.1';

-- changeset root:1751557724186-69
COMMENT ON COLUMN PIG_V_LIS_STRUT_VERS_SACER.ID_DICH_VERS_SACER IS 'PK.2';

-- changeset root:1751557724186-70
COMMENT ON COLUMN PIG_V_LIS_STRUT_VERS_SACER.ID_ORGANIZ_IAM_STRUT IS 'PK.3';

-- changeset root:1751557724186-71
CREATE OR REPLACE FORCE VIEW "MON_V_VIS_UNITA_DOC_OBJECT" ("NM_AMBIENTE_VERS", "NM_VERS", "CD_KEY_OBJECT", "NM_TIPO_OBJECT", "DS_INFO_OBJECT", "TI_STATO_OBJECT", "ID_UNITA_DOC_OBJECT", "CD_REGISTRO_UNITA_DOC_SACER", "AA_UNITA_DOC_SACER", "CD_KEY_UNITA_DOC_SACER", "NI_SIZE_FILE_BYTE", "TI_STATO_UNITA_DOC_OBJECT", "CD_ERR_SACER", "DL_ERR_SACER", "BL_XML_VERS_SACER", "BL_XML_INDICE_SACER", "ID_ORGANIZ_IAM", "DL_COMPOSITO_ORGANIZ", "FL_VERS_SIMULATO", "FL_XML_MOD", "DT_STATO") AS SELECT amb.nm_ambiente_vers
	,vers.nm_vers
	,obj.cd_key_object
	,tipo_obj.nm_tipo_object
	,CASE 
		WHEN tipo_obj.nm_tipo_object = 'StudioDicom'
			THEN 'Paziente: ' || CASE 
					WHEN dicom.ds_patient_name IS NOT NULL
						THEN dicom.ds_patient_name
					ELSE 'NON DEFINITO'
					END || ', nato il ' || CASE 
					WHEN dicom.dt_patient_birth_date IS NOT NULL
						THEN to_char(dicom.dt_patient_birth_date, 'dd/mm/yyyy')
					ELSE 'NON DEFINITO'
					END || ' Studio del ' || to_char(dicom.dt_study_date, 'yyyy-mm-dd hh24:mi:ss')
		ELSE 'Tipo oggetto ' || tipo_obj.nm_tipo_object
		END ds_info_object
	,obj.ti_stato_object
	,--
	ud_obj.id_unita_doc_object
	,ud_obj.cd_registro_unita_doc_sacer
	,ud_obj.aa_unita_doc_sacer
	,ud_obj.cd_key_unita_doc_sacer
	,ud_obj.ni_size_file_byte
	,ud_obj.ti_stato_unita_doc_object
	,ud_obj.cd_err_sacer
	,ud_obj.dl_err_sacer
	,--
	xml_vers.bl_xml_sacer bl_xml_vers_sacer
	,xml_indice.bl_xml_sacer bl_xml_indice_sacer
	,ud_obj.id_organiz_iam
	,org.dl_composito_organiz
	,ud_obj.fl_vers_simulato
	,xml_vers.fl_xml_mod
	,ud_obj.dt_stato
FROM PIG_UNITA_DOC_OBJECT ud_obj
JOIN PIG_OBJECT obj ON (obj.id_object = ud_obj.id_object)
JOIN PIG_VERS vers ON (vers.id_vers = obj.id_vers)
JOIN PIG_AMBIENTE_VERS amb ON (amb.id_ambiente_vers = vers.id_ambiente_vers)
JOIN PIG_TIPO_OBJECT tipo_obj ON (tipo_obj.id_tipo_object = obj.id_tipo_object)
LEFT JOIN PIG_INFO_DICOM dicom ON (dicom.id_object = obj.id_object)
LEFT JOIN PIG_XML_SACER_UNITA_DOC xml_vers ON (
		xml_vers.id_unita_doc_object = ud_obj.id_unita_doc_object
		AND xml_vers.ti_xml_sacer = 'XML_VERS'
		)
LEFT JOIN PIG_XML_SACER_UNITA_DOC xml_indice ON (
		xml_indice.id_unita_doc_object = ud_obj.id_unita_doc_object
		AND xml_indice.ti_xml_sacer = 'XML_INDICE'
		)
LEFT JOIN sacer_iam.USR_V_TREE_ORGANIZ_IAM org ON (org.id_organiz_iam = ud_obj.id_organiz_iam);

-- changeset root:1751557724186-72
COMMENT ON COLUMN MON_V_VIS_UNITA_DOC_OBJECT.ID_UNITA_DOC_OBJECT IS 'PK.1 relativa a tabella PIG_UNITA_DOC_OBJECT';

-- changeset root:1751557724186-73
CREATE OR REPLACE FORCE VIEW "MON_V_LIS_STATO_VERS" ("ID_USER_IAM", "ID_AMBIENTE_VERS", "NM_AMBIENTE_VERS", "ID_TIPO_OBJECT", "NM_TIPO_OBJECT", "TI_VERS_FILE", "ID_VERS", "NM_VERS", "ID_OBJECT", "CD_KEY_OBJECT", "DS_OBJECT", "TI_STATO_ESTERNO", "TI_STATO_CALCOLATO", "TI_STATO_VISUALIZZATO", "ID_FILE_OBJECT", "NI_BYTE_FILE_VERS", "DS_HASH_FILE_VERS", "ID_SESSIONE_INGEST", "DT_VERS", "ID_USER_IAM_VERS", "NM_USERID_VERS", "TI_STATO_OBJECT", "NI_UD_PRODOTTE", "TI_GEST_OGGETTI_FIGLI", "NOTE") AS SELECT abil_organiz.id_user_iam
	,amb.id_ambiente_vers
	,amb.nm_ambiente_vers
	,ti_obj.id_tipo_object
	,ti_obj.nm_tipo_object
	,ti_obj.ti_vers_file
	,obj.id_vers
	,vers.nm_vers
	,obj.id_object
	,obj.cd_key_object
	,obj.ds_object
	,CASE 
		WHEN ti_obj.ti_vers_file = 'ZIP_CON_XML_SACER'
			THEN CASE 
					WHEN ti_stato_object IN ('CHIUSO_ERR_SCHED')
						AND ses_cor.ti_stato_verifica_hash = 'KO'
						THEN 'Errore impronta'
					WHEN ti_stato_object IN ('CHIUSO_ERR_SCHED')
						AND ses_cor.ti_stato_verifica_hash = 'OK'
						THEN 'Errore preparazione versamento'
					WHEN ti_stato_object IN (
							'CHIUSO_ERR'
							,'CHIUSO_ERR_NOTIF'
							)
						THEN 'Errore trasmissione'
					WHEN ti_stato_object IN ('CHIUSO_ERR_VERS')
						THEN 'Errore versamento'
					WHEN ti_stato_object IN ('IN_ATTESA_FILE')
						THEN 'In attesa file'
					WHEN ti_stato_object IN (
							'IN_ATTESA_VERS'
							,'IN_CODA_VERS'
							,'CHIUSO_ERR_CODA'
							,'CHIUSO_ERR_RECUPERABILE'
							)
						THEN 'In corso di elaborazione'
					WHEN ti_stato_object IN ('IN_ATTESA_SCHED')
						THEN 'Trasmesso'
					WHEN ti_stato_object IN ('CHIUSO_OK')
						THEN 'Versato'
					WHEN ti_stato_object IN (
							'CHIUSO_ERR_CRASH_FTP'
							,'CHIUSO_ERR_CRASH_FS_PRIM'
							,'CHIUSO_ERR_CRASH_FS_SECOND'
							)
						THEN 'Crash area FTP o file system'
					WHEN ti_stato_object IN ('ANNULLATO')
						THEN 'Annullato'
					WHEN ti_stato_object IN ('IN_CORSO_ANNULLAMENTO')
						THEN 'In corso di annullamento'
					END
		ELSE CASE 
				WHEN ti_stato_object IN ('TRASFORMAZIONE_NON_ATTIVA')
					THEN 'Da elaborare'
				WHEN ti_stato_object IN (
						'CHIUSO_ERR_TRASFORMAZIONE'
						,'CHIUSO_ERR_VERSAMENTO_A_PING'
						)
					THEN 'Errore elaborazione'
				WHEN ti_stato_object IN ('CHIUSO_ERR_SCHED')
					THEN 'Errore impronta'
				WHEN ti_stato_object IN (
						'CHIUSO_ERR'
						,'CHIUSO_ERR_NOTIF'
						)
					THEN 'Errore trasmissione'
				WHEN ti_stato_object IN ('CHIUSO_ERR_VERS')
					THEN 'Errore versamento'
				WHEN ti_stato_object IN ('IN_ATTESA_FILE')
					THEN 'In attesa file'
				WHEN ti_stato_object IN (
						'TRASFORMAZIONE_IN_CORSO'
						,'PREPARAZIONE_OGG_IN_CORSO'
						,'TRASFORMATO'
						,'VERSATO_A_PING'
						,'ERRORE_TRASFORMAZIONE'
						,'WARNING_TRASFORMAZIONE'
						,'ERRORE_VERSAMENTO_A_PING'
						)
					THEN 'In corso di elaborazione'
				WHEN ti_stato_object IN (
						'IN_ATTESA_SCHED'
						,'DA_TRASFORMARE'
						)
					THEN 'Trasmesso'
				WHEN ti_stato_object IN ('CHIUSO_OK')
					THEN 'Versato'
				WHEN ti_stato_object IN (
						'CHIUSO_ERR_CRASH_FTP'
						,'CHIUSO_ERR_CRASH_FS_PRIM'
						,'CHIUSO_ERR_CRASH_FS_SECOND'
						)
					THEN 'Crash area FTP o file system'
				WHEN ti_stato_object IN ('ANNULLATO')
					THEN 'Annullato'
				WHEN ti_stato_object IN ('IN_CORSO_ANNULLAMENTO')
					THEN 'In corso di annullamento'
				END
		END ti_stato_esterno
	,CASE 
		WHEN ti_obj.ti_vers_file = 'DA_TRASFORMARE'
			THEN CASE 
					WHEN obj.ti_stato_object != 'VERSATO_A_PING'
						THEN CASE 
								WHEN obj.ti_stato_object != 'CHIUSO_OK'
									THEN obj.ti_stato_object
								ELSE CASE 
										WHEN EXISTS (
												SELECT *
												FROM PIG_OBJECT obj_figlio
												WHERE obj_figlio.id_object_padre = obj.id_object
													AND obj_figlio.ti_stato_object IN (
														'CHIUSO_ERR_SCHED'
														,'CHIUSO_ERR_CODA'
														,'CHIUSO_ERR_VERS'
														)
												)
											THEN 'PROBLEMA_VERS_SACER'
										ELSE CASE 
												WHEN EXISTS (
														SELECT *
														FROM PIG_UNITA_DOC_OBJECT ud
														JOIN PIG_OBJECT figlio ON figlio.id_object_padre = obj.id_object
															AND ud.id_object = figlio.id_object
														WHERE ud.id_object = figlio.id_object
															AND (
																ti_stato_unita_doc_object = 'VERSATA_ERR'
																AND cd_err_sacer IN (
																	'UD-002'
																	,'UD-002-001'
																	)
																)
														)
													THEN 'WARNING_CHIAVE_DUPLICATA'
												ELSE 'CHIUSO_OK'
												END
										END
								END
					ELSE CASE 
							WHEN EXISTS (
									SELECT *
									FROM PIG_OBJECT figlio
									WHERE figlio.id_object_padre = obj.id_object
										AND figlio.ti_stato_object IN (
											'IN_ATTESA_SCHED'
											,'IN_CODA_HASH'
											)
									)
								THEN 'VERSATO_A_PING'
							ELSE CASE 
									WHEN EXISTS (
											SELECT *
											FROM PIG_OBJECT figlio
											WHERE figlio.id_object_padre = obj.id_object
												AND figlio.ti_stato_object IN ('CHIUSO_ERR_SCHED')
											)
										THEN 'PROBLEMA_PREPARAZIONE_SIP'
									ELSE CASE 
											WHEN EXISTS (
													SELECT *
													FROM PIG_OBJECT figlio
													WHERE figlio.id_object_padre = obj.id_object
														AND figlio.ti_stato_object IN (
															'CHIUSO_ERR_CODA'
															,'CHIUSO_ERR_VERS'
															)
													)
												THEN 'PROBLEMA_VERS_SACER'
											ELSE 'IN_CORSO_VERS_SACER'
											END
									END
							END
					END
		ELSE CASE 
				WHEN obj.ti_stato_object = 'CHIUSO_OK'
					THEN CASE 
							WHEN EXISTS (
									SELECT *
									FROM PIG_UNITA_DOC_OBJECT ud
									WHERE ud.id_object = obj.id_object
										AND (
											ti_stato_unita_doc_object = 'VERSATA_ERR'
											AND cd_err_sacer IN (
												'UD-002'
												,'UD-002-001'
												)
											)
									)
								THEN 'WARNING_CHIAVE_DUPLICATA'
							ELSE obj.ti_stato_object
							END
				ELSE obj.ti_stato_object
				END
		END ti_stato_calcolato
	,CASE 
		WHEN ti_obj.ti_vers_file = 'DA_TRASFORMARE'
			THEN CASE 
					WHEN obj.ti_stato_object != 'VERSATO_A_PING'
						THEN CASE 
								WHEN obj.ti_stato_object != 'CHIUSO_OK'
									THEN obj.ti_stato_object
								ELSE CASE 
										WHEN EXISTS (
												SELECT *
												FROM PIG_OBJECT obj_figlio
												WHERE obj_figlio.id_object_padre = obj.id_object
													AND obj_figlio.ti_stato_object IN (
														'CHIUSO_ERR_SCHED'
														,'CHIUSO_ERR_CODA'
														,'CHIUSO_ERR_VERS'
														)
												)
											THEN 'CHIUSO_OK (PROBLEMA_VERS_SACER)'
										ELSE CASE 
												WHEN EXISTS (
														SELECT *
														FROM PIG_UNITA_DOC_OBJECT ud
														JOIN PIG_OBJECT figlio ON figlio.id_object_padre = obj.id_object
															AND ud.id_object = figlio.id_object
														WHERE ud.id_object = figlio.id_object
															AND (
																ti_stato_unita_doc_object = 'VERSATA_ERR'
																AND cd_err_sacer IN (
																	'UD-002'
																	,'UD-002-001'
																	)
																)
														)
													THEN 'CHIUSO_OK (WARNING_CHIAVE_DUPLICATA)'
												ELSE 'CHIUSO_OK'
												END
										END
								END
					ELSE CASE 
							WHEN EXISTS (
									SELECT *
									FROM PIG_OBJECT figlio
									WHERE figlio.id_object_padre = obj.id_object
										AND figlio.ti_stato_object IN (
											'IN_ATTESA_SCHED'
											,'IN_CODA_HASH'
											)
									)
								THEN 'VERSATO_A_PING'
							ELSE CASE 
									WHEN EXISTS (
											SELECT *
											FROM PIG_OBJECT figlio
											WHERE figlio.id_object_padre = obj.id_object
												AND figlio.ti_stato_object IN ('CHIUSO_ERR_SCHED')
											)
										THEN 'VERSATO_A_PING (PROBLEMA_PREPARAZIONE_SIP)'
									ELSE CASE 
											WHEN EXISTS (
													SELECT *
													FROM PIG_OBJECT figlio
													WHERE figlio.id_object_padre = obj.id_object
														AND figlio.ti_stato_object IN (
															'CHIUSO_ERR_CODA'
															,'CHIUSO_ERR_VERS'
															)
													)
												THEN 'VERSATO_A_PING (PROBLEMA_VERS_SACER)'
											ELSE 'VERSATO_A_PING (IN_CORSO_VERS_SACER)'
											END
									END
							END
					END
		ELSE CASE 
				WHEN obj.ti_stato_object = 'CHIUSO_OK'
					THEN CASE 
							WHEN EXISTS (
									SELECT *
									FROM PIG_UNITA_DOC_OBJECT ud
									WHERE ud.id_object = obj.id_object
										AND (
											ti_stato_unita_doc_object = 'VERSATA_ERR'
											AND cd_err_sacer IN (
												'UD-002'
												,'UD-002-001'
												)
											)
									)
								THEN 'CHIUSO_OK (WARNING_CHIAVE_DUPLICATA)'
							ELSE obj.ti_stato_object
							END
				ELSE obj.ti_stato_object
				END
		END ti_stato_visualizzato
	,file_obj.id_file_object
	,file_obj.ni_size_file_vers
	,file_obj.ds_hash_file_vers
	,ses_cor.id_sessione_ingest
	,ses_cor.dt_apertura dt_vers
	,usr.id_user_iam id_user_iam_vers
	,usr.nm_userid nm_userid_vers
	,obj.ti_stato_object
	,(
		SELECT count(*)
		FROM PIG_UNITA_DOC_OBJECT uds
		WHERE uds.id_object = obj.id_object
		) ni_ud_prodotte
	,obj.ti_gest_oggetti_figli
	,obj.note
FROM PIG_OBJECT obj
JOIN PIG_TIPO_OBJECT ti_obj ON (ti_obj.id_tipo_object = obj.id_tipo_object)
JOIN PIG_VERS vers ON (vers.id_vers = obj.id_vers)
JOIN PIG_AMBIENTE_VERS amb ON (amb.id_ambiente_vers = vers.id_ambiente_vers)
LEFT JOIN PIG_FILE_OBJECT file_obj ON (file_obj.id_object = obj.id_object) -- si ipotizza un solo file per oggetto
LEFT JOIN IAM_USER usr ON (usr.id_user_iam = obj.id_user_iam)
JOIN IAM_ABIL_ORGANIZ abil_organiz ON (abil_organiz.id_organiz_applic = vers.id_vers)
JOIN IAM_ABIL_TIPO_DATO abil_dato ON (
		abil_dato.id_abil_organiz = abil_organiz.id_abil_organiz
		AND abil_dato.nm_classe_tipo_dato = 'TIPO_OBJECT'
		AND abil_dato.id_tipo_dato_applic = ti_obj.id_tipo_object
		)
JOIN PIG_SESSIONE_INGEST ses_cor ON (ses_cor.id_sessione_ingest = obj.id_last_sessione_ingest)
WHERE ti_obj.ti_vers_file IN (
		'DA_TRASFORMARE'
		,'ZIP_CON_XML_SACER'
		)
	AND vers.fl_cessato = 0;

-- changeset root:1751557724186-74
CREATE OR REPLACE FORCE VIEW "MON_V_LIS_VERS_OBJ" ("ID_OBJECT", "ID_SESSIONE_INGEST", "DT_APERTURA", "TI_STATO", "CD_ERR", "DL_ERR", "FL_VERIF", "FL_NON_RISOLUB", "TS_REG_STATO", "NOTE", "NM_REPORT_TRASF_OS", "TI_STATO_CALCOLATO") AS SELECT ses.id_object
	,ses.id_sessione_ingest
	,ses.dt_apertura
	,ses.ti_stato
	,cd_err
	,dl_err
	,ses.fl_ses_err_verif fl_verif
	,ses.fl_ses_err_non_risolub fl_non_risolub
	,stato.ts_reg_stato
	,ses.note
	,ses.nm_report_trasf_os
	,CASE 
		WHEN ti_obj.ti_vers_file = 'DA_TRASFORMARE'
			THEN CASE 
					WHEN obj.ti_stato_object != 'VERSATO_A_PING'
						THEN CASE 
								WHEN obj.ti_stato_object != 'CHIUSO_OK'
									THEN obj.ti_stato_object
								ELSE CASE 
										WHEN EXISTS (
												SELECT *
												FROM PIG_OBJECT obj_figlio
												WHERE obj_figlio.id_object_padre = obj.id_object
													AND obj_figlio.ti_stato_object IN (
														'CHIUSO_ERR_SCHED'
														,'CHIUSO_ERR_CODA'
														,'CHIUSO_ERR_VERS'
														)
												)
											THEN 'PROBLEMA_VERS_SACER'
										ELSE CASE 
												WHEN EXISTS (
														SELECT *
														FROM PIG_UNITA_DOC_OBJECT ud
														JOIN PIG_OBJECT figlio ON figlio.id_object_padre = obj.id_object
															AND ud.id_object = figlio.id_object
														WHERE ud.id_object = figlio.id_object
															AND (
																ti_stato_unita_doc_object = 'VERSATA_ERR'
																AND cd_err_sacer IN (
																	'UD-002'
																	,'UD-002-001'
																	)
																)
														)
													THEN 'WARNING_CHIAVE_DUPLICATA'
												ELSE 'CHIUSO_OK'
												END
										END
								END
					ELSE CASE 
							WHEN EXISTS (
									SELECT *
									FROM PIG_OBJECT figlio
									WHERE figlio.id_object_padre = obj.id_object
										AND figlio.ti_stato_object IN (
											'IN_ATTESA_SCHED'
											,'IN_CODA_HASH'
											)
									)
								THEN 'VERSATO_A_PING'
							ELSE CASE 
									WHEN EXISTS (
											SELECT *
											FROM PIG_OBJECT figlio
											WHERE figlio.id_object_padre = obj.id_object
												AND figlio.ti_stato_object IN ('CHIUSO_ERR_SCHED')
											)
										THEN 'PROBLEMA_PREPARAZIONE_SIP'
									ELSE CASE 
											WHEN EXISTS (
													SELECT *
													FROM PIG_OBJECT figlio
													WHERE figlio.id_object_padre = obj.id_object
														AND figlio.ti_stato_object IN (
															'CHIUSO_ERR_CODA'
															,'CHIUSO_ERR_VERS'
															)
													)
												THEN 'PROBLEMA_VERS_SACER'
											ELSE 'IN_CORSO_VERS_SACER'
											END
									END
							END
					END
		ELSE CASE 
				WHEN obj.ti_stato_object = 'CHIUSO_OK'
					THEN CASE 
							WHEN EXISTS (
									SELECT *
									FROM PIG_UNITA_DOC_OBJECT ud
									WHERE ud.id_object = obj.id_object
										AND (
											ti_stato_unita_doc_object = 'VERSATA_ERR'
											AND cd_err_sacer IN (
												'UD-002'
												,'UD-002-001'
												)
											)
									)
								THEN 'WARNING_CHIAVE_DUPLICATA'
							ELSE obj.ti_stato_object
							END
				ELSE obj.ti_stato_object
				END
		END ti_stato_calcolato
FROM PIG_SESSIONE_INGEST ses
JOIN PIG_STATO_SESSIONE_INGEST stato ON (stato.id_stato_sessione_ingest = ses.id_stato_sessione_ingest_cor)
JOIN PIG_OBJECT obj ON (obj.id_object = ses.id_object)
JOIN PIG_TIPO_OBJECT ti_obj ON (ti_obj.id_tipo_object = obj.id_tipo_object);

-- changeset root:1751557724186-75
COMMENT ON COLUMN MON_V_LIS_VERS_OBJ.ID_SESSIONE_INGEST IS 'PK.1 relativa a tabella PIG_SESSIONE_INGEST';

-- changeset root:1751557724186-76
CREATE OR REPLACE FORCE VIEW "MON_V_VIS_OBJ" ("ID_AMBIENTE_VERS", "NM_AMBIENTE_VERS", "ID_VERS", "NM_VERS", "ID_OBJECT", "CD_KEY_OBJECT", "ID_TIPO_OBJECT", "NM_TIPO_OBJECT", "NOTE", "DS_INFO_OBJECT", "TI_STATO_OBJECT", "FL_RICH_ANNUL_TIMEOUT", "ID_LAST_SESSIONE_INGEST", "NI_UNITA_DOC_DA_VERS", "NI_UNITA_DOC_VERS", "NI_UNITA_DOC_VERS_OK", "NI_UNITA_DOC_VERS_ERR", "NI_UNITA_DOC_VERS_TIMEOUT", "DT_APERTURA", "DT_CHIUSURA", "FL_FORZA_WARNING", "FL_FORZA_ACCETTAZIONE", "DL_MOTIVO_FORZA_ACCETTAZIONE", "DL_MOTIVO_CHIUSO_WARNING", "CD_VERSIONE_XML_VERS", "BL_XML", "TI_STATO_VERIFICA_HASH", "CD_VERS_GEN", "CD_TRASF", "CD_VERSIONE_TRASF", "TI_GEST_OGGETTI_FIGLI", "NI_UNITA_DOC_ATTESE", "PG_OGGETTO_TRASF", "TI_VERS_FILE", "ID_AMBIENTE_VERS_PADRE", "NM_AMBIENTE_VERS_PADRE", "ID_VERS_PADRE", "NM_VERS_PADRE", "ID_OBJECT_PADRE", "CD_KEY_OBJECT_PADRE", "DS_OBJECT_PADRE", "ID_TIPO_OBJECT_PADRE", "NM_TIPO_OBJECT_PADRE", "TI_STATO_OBJECT_PADRE", "DT_STATO_COR_PADRE", "NI_TOT_OBJECT_TRASF", "ID_OBJECT_TRASF", "TI_PRIORITA", "TI_PRIORITA_VERSAMENTO", "TI_CONTENUTO_TIPO_OGGETTO", "NM_USERID_VERS") AS SELECT vers.id_ambiente_vers
	,amb.nm_ambiente_vers
	,vers.id_vers
	,vers.nm_vers
	,obj.id_object
	,obj.cd_key_object
	,obj.id_tipo_object
	,ti_obj.nm_tipo_object
	,obj.note
	,CASE 
		WHEN ti_obj.nm_tipo_object = 'StudioDicom'
			THEN 'Paziente: ' || (
					SELECT nvl(dicom.ds_patient_name, 'NON DEFINITO')
					FROM PIG_INFO_DICOM dicom
					WHERE dicom.id_object = obj.id_object
					) || ', nato il ' || (
					SELECT nvl(to_char(dicom.dt_patient_birth_date, 'dd/mm/yyyy'), 'NON DEFINITO')
					FROM PIG_INFO_DICOM dicom
					WHERE dicom.id_object = obj.id_object
					) || ' Studio del ' || (
					SELECT to_char(dicom.dt_study_date, 'yyyy-mm-dd hh24:mi:ss')
					FROM PIG_INFO_DICOM dicom
					WHERE dicom.id_object = obj.id_object
					)
		ELSE obj.ds_object
		END ds_info_object
	,CASE 
		WHEN ti_obj.ti_vers_file = 'DA_TRASFORMARE'
			THEN CASE 
					WHEN obj.ti_stato_object != 'VERSATO_A_PING'
						THEN CASE 
								WHEN obj.ti_stato_object != 'CHIUSO_OK'
									THEN obj.ti_stato_object
								ELSE CASE 
										WHEN EXISTS (
												SELECT *
												FROM PIG_OBJECT obj_figlio
												WHERE obj_figlio.id_object_padre = obj.id_object
													AND obj_figlio.ti_stato_object IN (
														'CHIUSO_ERR_SCHED'
														,'CHIUSO_ERR_CODA'
														,'CHIUSO_ERR_VERS'
														)
												)
											THEN 'CHIUSO_OK (PROBLEMA_VERS_SACER)'
										ELSE CASE 
												WHEN EXISTS (
														SELECT *
														FROM PIG_UNITA_DOC_OBJECT ud
														JOIN PIG_OBJECT figlio ON figlio.id_object_padre = obj.id_object
															AND ud.id_object = figlio.id_object
														WHERE ud.id_object = figlio.id_object
															AND (
																ti_stato_unita_doc_object = 'VERSATA_ERR'
																AND cd_err_sacer IN (
																	'UD-002'
																	,'UD-002-001'
																	)
																)
														)
													THEN 'CHIUSO_OK (WARNING_CHIAVE_DUPLICATA)'
												ELSE 'CHIUSO_OK'
												END
										END
								END
					ELSE CASE 
							WHEN EXISTS (
									SELECT *
									FROM PIG_OBJECT figlio
									WHERE figlio.id_object_padre = obj.id_object
										AND figlio.ti_stato_object = 'IN_ATTESA_SCHED'
									)
								THEN 'VERSATO_A_PING'
							ELSE CASE 
									WHEN EXISTS (
											SELECT *
											FROM PIG_OBJECT figlio
											WHERE figlio.id_object_padre = obj.id_object
												AND figlio.ti_stato_object IN ('CHIUSO_ERR_SCHED')
											)
										THEN 'VERSATO_A_PING (PROBLEMA_PREPARAZIONE_SIP)'
									ELSE CASE 
											WHEN EXISTS (
													SELECT *
													FROM PIG_OBJECT figlio
													WHERE figlio.id_object_padre = obj.id_object
														AND figlio.ti_stato_object IN (
															'CHIUSO_ERR_CODA'
															,'CHIUSO_ERR_VERS'
															)
													)
												THEN 'VERSATO_A_PING (PROBLEMA_VERS_SACER)'
											ELSE 'VERSATO_A_PING (IN_CORSO_VERS_SACER)'
											END
									END
							END
					END
		ELSE CASE 
				WHEN obj.ti_stato_object = 'CHIUSO_OK'
					THEN CASE 
							WHEN EXISTS (
									SELECT *
									FROM PIG_UNITA_DOC_OBJECT ud
									WHERE ud.id_object = obj.id_object
										AND (
											ti_stato_unita_doc_object = 'VERSATA_ERR'
											AND cd_err_sacer IN (
												'UD-002'
												,'UD-002-001'
												)
											)
									)
								THEN 'CHIUSO_OK (WARNING_CHIAVE_DUPLICATA)'
							ELSE obj.ti_stato_object
							END
				ELSE obj.ti_stato_object
				END
		END ti_stato_object
	,obj.fl_rich_annul_timeout
	,obj.id_last_sessione_ingest
	,-- ses.ni_unita_doc_da_vers, ses.ni_unita_doc_vers, ses.ni_unita_doc_vers_ok, ses.ni_unita_doc_vers_err, ses.ni_unita_doc_vers_timeout,
	(
		SELECT count(*)
		FROM PIG_UNITA_DOC_OBJECT ud
		WHERE ud.id_object = obj.id_object --and ti_stato_unita_doc_object in ('DA_VERSARE', 'IN_CODA_VERS', 'VERSATA_OK', 'VERSATA_ERR', 'VERSATA_TIMEOUT')
		) ni_unita_doc_da_vers
	,(
		SELECT count(*)
		FROM PIG_UNITA_DOC_OBJECT ud
		WHERE ud.id_object = obj.id_object
			AND ti_stato_unita_doc_object IN (
				'VERSATA_OK'
				,'VERSATA_ERR'
				,'VERSATA_TIMEOUT'
				)
		) ni_unita_doc_vers
	,(
		SELECT count(*)
		FROM PIG_UNITA_DOC_OBJECT ud
		WHERE ud.id_object = obj.id_object
			AND (
				ti_stato_unita_doc_object = 'VERSATA_OK'
				OR (
					ti_stato_unita_doc_object = 'VERSATA_ERR'
					AND cd_err_sacer IN (
						'UD-002'
						,'UD-002-001'
						)
					)
				)
		) ni_unita_doc_vers_ok
	,(
		SELECT count(*)
		FROM PIG_UNITA_DOC_OBJECT ud
		WHERE ud.id_object = obj.id_object
			AND ti_stato_unita_doc_object = 'VERSATA_ERR'
			AND cd_err_sacer NOT IN (
				'UD-002'
				,'UD-002-001'
				)
		) ni_unita_doc_vers_err
	,(
		SELECT count(*)
		FROM PIG_UNITA_DOC_OBJECT ud
		WHERE ud.id_object = obj.id_object
			AND ti_stato_unita_doc_object = 'VERSATA_TIMEOUT'
		) ni_unita_doc_vers_timeout
	,ses.dt_apertura
	,ses.dt_chiusura
	,ses.fl_forza_warning
	,ses.fl_forza_accettazione
	,ses.dl_motivo_forza_accettazione
	,ses.dl_motivo_chiuso_warning
	,xml_obj.cd_versione_xml_vers
	,xml_obj.bl_xml
	,ses.ti_stato_verifica_hash
	,obj.cd_vers_gen
	,obj.cd_trasf
	,obj.cd_versione_trasf
	,obj.ti_gest_oggetti_figli
	,obj.ni_unita_doc_attese
	,obj.pg_oggetto_trasf
	,ti_obj.ti_vers_file
	,-- 		info su oggetto padre
	vers_padre.id_ambiente_vers id_ambiente_vers_padre
	,amb_padre.nm_ambiente_vers nm_ambiente_vers_padre
	,vers_padre.id_vers id_vers_padre
	,vers_padre.nm_vers nm_vers_padre
	,obj_padre.id_object id_object_padre
	,obj_padre.cd_key_object cd_key_object_padre
	,obj_padre.ds_object ds_object_padre
	,obj_padre.id_tipo_object id_tipo_object_padre
	,ti_obj_padre.nm_tipo_object nm_tipo_object_padre
	,CASE 
		WHEN obj_padre.ti_stato_object IS NOT NULL
			THEN CASE 
					WHEN obj_padre.ti_stato_object != 'VERSATO_A_PING'
						THEN CASE 
								WHEN obj_padre.ti_stato_object != 'CHIUSO_OK'
									THEN obj_padre.ti_stato_object
								ELSE CASE 
										WHEN EXISTS (
												SELECT *
												FROM PIG_OBJECT obj_figlio
												WHERE obj_figlio.id_object_padre = obj_padre.id_object
													AND obj_figlio.ti_stato_object IN (
														'CHIUSO_ERR_SCHED'
														,'CHIUSO_ERR_CODA'
														,'CHIUSO_ERR_VERS'
														)
												)
											THEN 'CHIUSO_OK (PROBLEMA_VERS_SACER)'
										ELSE CASE 
												WHEN EXISTS (
														SELECT *
														FROM PIG_UNITA_DOC_OBJECT ud
														JOIN PIG_OBJECT figlio ON figlio.id_object_padre = obj_padre.id_object
															AND ud.id_object = figlio.id_object
														WHERE ud.id_object = figlio.id_object
															AND (
																ti_stato_unita_doc_object = 'VERSATA_ERR'
																AND cd_err_sacer IN (
																	'UD-002'
																	,'UD-002-001'
																	)
																)
														)
													THEN 'CHIUSO_OK (WARNING_CHIAVE_DUPLICATA)'
												ELSE 'CHIUSO_OK'
												END
										END
								END
					ELSE CASE 
							WHEN EXISTS (
									SELECT *
									FROM PIG_OBJECT figlio
									WHERE figlio.id_object_padre = obj_padre.id_object
										AND figlio.ti_stato_object = 'IN_ATTESA_SCHED'
									)
								THEN 'VERSATO_A_PING'
							ELSE CASE 
									WHEN EXISTS (
											SELECT *
											FROM PIG_OBJECT figlio
											WHERE figlio.id_object_padre = obj_padre.id_object
												AND figlio.ti_stato_object IN (
													'CHIUSO_ERR_SCHED'
													,'CHIUSO_ERR_CODA'
													,'CHIUSO_ERR_VERS'
													)
											)
										THEN 'VERSATO_A_PING (PROBLEMA_VERS_SACER)'
									ELSE 'VERSATO_A_PING (IN_CORSO_VERS_SACER)'
									END
							END
					END
		ELSE NULL
		END ti_stato_object_padre
	,stato_cor_padre.ts_reg_stato dt_stato_cor_padre
	,obj_padre.ni_tot_object_trasf
	,--		info oggetto generato da trasformazione
	obj_trasf.id_object_trasf
	,obj.ti_priorita
	,obj.ti_priorita_versamento
	,ti_obj.ti_contenuto	
	/*Codice da inserire quando verr√† implementata la gestione dei fascicoli
	,(
		SELECT count(*)
		FROM PIG_FASCICOLO_OBJECT ud
		WHERE ud.id_object = obj.id_object --and ti_stato_unita_doc_object in ('DA_VERSARE', 'IN_CODA_VERS', 'VERSATA_OK', 'VERSATA_ERR', 'VERSATA_TIMEOUT')
		) ni_fascicoli_da_vers
	,(
		SELECT count(*)
		FROM PIG_FASCICOLO_OBJECT fascicolo
		WHERE fascicolo.id_object = obj.id_object
			AND ti_stato_fascicolo_object IN (
				'VERSATA_OK'
				,'VERSATA_ERR'
				,'VERSATA_TIMEOUT'
				)
		) ni_fascicoli_vers
	,(
		SELECT count(*)
		FROM PIG_FASCICOLO_OBJECT fascicolo
		WHERE fascicolo.id_object = obj.id_object
			AND (
				ti_stato_fascicolo_object = 'VERSATA_OK'
				OR (
					ti_stato_fascicolo_object = 'VERSATA_ERR'
					AND cd_err_sacer IN (
						'UD-002'
						,'UD-002-001'
						)
					)
				)
		) ni_fascicoli_vers_ok
	,(
		SELECT count(*)
		FROM PIG_FASCICOLO_OBJECT fascicolo
		WHERE fascicolo.id_object = obj.id_object
			AND ti_stato_fascicolo_object = 'VERSATA_ERR'
			AND cd_err_sacer NOT IN (
				'UD-002'
				,'UD-002-001'
				)
		) ni_fascicoli_vers_err
	,(
		SELECT count(*)
		FROM PIG_FASCICOLO_OBJECT fascicolo
		WHERE fascicolo.id_object = obj.id_object
			AND ti_stato_fascicolo_object = 'VERSATA_TIMEOUT'
		) ni_fascicoli_vers_timeout
	*/
	,usr.nm_userid nm_userid_vers
FROM PIG_OBJECT obj
JOIN PIG_VERS vers ON (vers.id_vers = obj.id_vers)
JOIN PIG_AMBIENTE_VERS amb ON (amb.id_ambiente_vers = vers.id_ambiente_vers)
JOIN PIG_TIPO_OBJECT ti_obj ON (ti_obj.id_tipo_object = obj.id_tipo_object)
LEFT JOIN PIG_XML_OBJECT xml_obj ON (xml_obj.id_object = obj.id_object)
JOIN PIG_SESSIONE_INGEST ses ON (ses.id_sessione_ingest = obj.id_last_sessione_ingest)
JOIN PIG_STATO_SESSIONE_INGEST stato_cor ON (stato_cor.id_stato_sessione_ingest = ses.id_stato_sessione_ingest_cor)
LEFT JOIN PIG_OBJECT obj_padre ON (obj_padre.id_object = obj.id_object_padre)
LEFT JOIN PIG_VERS vers_padre ON (vers_padre.id_vers = obj_padre.id_vers)
LEFT JOIN PIG_AMBIENTE_VERS amb_padre ON (amb_padre.id_ambiente_vers = vers_padre.id_ambiente_vers)
LEFT JOIN PIG_TIPO_OBJECT ti_obj_padre ON (ti_obj_padre.id_tipo_object = obj_padre.id_tipo_object)
LEFT JOIN PIG_SESSIONE_INGEST ses_padre ON (ses_padre.id_sessione_ingest = obj_padre.id_last_sessione_ingest)
LEFT JOIN PIG_STATO_SESSIONE_INGEST stato_cor_padre ON (stato_cor_padre.id_stato_sessione_ingest = ses_padre.id_stato_sessione_ingest_cor)
LEFT JOIN IAM_USER usr ON (usr.id_user_iam = obj.id_user_iam)
LEFT JOIN PIG_OBJECT_TRASF obj_trasf ON (
		obj_trasf.cd_key_object_trasf = obj.cd_key_object
		AND obj_trasf.id_vers = obj.id_vers
		);

-- changeset root:1751557724186-77
CREATE OR REPLACE FORCE VIEW "MON_V_LIS_OBJ" ("ID_AMBIENTE_VERS", "NM_AMBIENTE_VERS", "ID_VERS", "NM_VERS", "ID_OBJECT", "NM_TIPO_OBJECT", "ID_TIPO_OBJECT", "TI_STATO_OBJECT", "TI_STATO_OBJECT_VIS", "CD_KEY_OBJECT", "DT_STATO_COR", "DT_VERS", "TI_DT_CREAZIONE", "CD_REGISTRO_UNITA_DOC_SACER", "AA_UNITA_DOC_SACER", "CD_KEY_UNITA_DOC_SACER", "DS_KEY_ORD", "DS_INFO_OBJECT", "TI_STATO_VERIFICA_HASH", "NI_SIZE_FILE_VERS", "TI_VERS_FILE", "NOTE", "TRASFORMAZIONE_UTILIZZATA", "NI_UD_PRODOTTE", "TI_GEST_OGGETTI_FIGLI") AS select /*+ parallel(12) */
   vers.id_ambiente_vers, amb.nm_ambiente_vers,
   vers.id_vers, vers.nm_vers,
   obj.id_object, ti_obj.nm_tipo_object,
   obj.id_tipo_object,

  case
	 when ti_obj.ti_vers_file = 'DA_TRASFORMARE'
		 then
		   case
				when obj.ti_stato_object != 'VERSATO_A_PING'
          then
            case
              when obj.ti_stato_object = 'CHIUSO_OK'
                then
                  case
                    when exists (
                      select 1 from PIG_UNITA_DOC_OBJECT ud
                      join PIG_OBJECT figlio on figlio.id_object_padre = obj.id_object and ud.id_object = figlio.id_object
                      where 
                        (ti_stato_unita_doc_object = 'VERSATA_ERR' and cd_err_sacer IN ('UD-002', 'UD-002-001'))
                      ) then 'WARNING_CHIAVE_DUPLICATA'
                    else obj.ti_stato_object
                  end
              else obj.ti_stato_object
            end
				else
					case
					  when exists (select 1
										 from PIG_OBJECT figlio
										 where figlio.id_object_padre = obj.id_object
										 and figlio.ti_stato_object in ('IN_ATTESA_SCHED', 'IN_CODA_HASH')
										 )
						         then 'VERSATO_A_PING'
            else
              case
                when exists (select 1
                       from PIG_OBJECT figlio
                       where figlio.id_object_padre = obj.id_object
                       and figlio.ti_stato_object in ('CHIUSO_ERR_SCHED')
                       )
                       then 'PROBLEMA_PREPARAZIONE_SIP'
  							else
  								case
  									when exists (select 1
  													 from PIG_OBJECT figlio
  													 where figlio.id_object_padre = obj.id_object
  													 and figlio.ti_stato_object in ('CHIUSO_ERR_CODA', 'CHIUSO_ERR_VERS')
  													 )
  											     then 'PROBLEMA_VERS_SACER'
  									else 'IN_CORSO_VERS_SACER'
  								end
              end
					end
			end
		else case
       when obj.ti_stato_object = 'CHIUSO_OK' then case
         when exists (SELECT 1
          FROM PIG_UNITA_DOC_OBJECT ud
          WHERE ud.id_object = obj.id_object
            AND (ti_stato_unita_doc_object = 'VERSATA_ERR'
                     AND cd_err_sacer IN ('UD-002',
                                          'UD-002-001')) ) then 'WARNING_CHIAVE_DUPLICATA'
         else obj.ti_stato_object
       end
       else obj.ti_stato_object
    end
 end ti_stato_object,

  case
	when ti_obj.ti_vers_file = 'DA_TRASFORMARE'
		then
			case
				when obj.ti_stato_object != 'VERSATO_A_PING'
					then
						case
							when obj.ti_stato_object != 'CHIUSO_OK'
								then obj.ti_stato_object
								else
									case
										when exists (select 1
													 from PIG_OBJECT obj_figlio
													 where obj_figlio.id_object_padre = obj.id_object
													 and obj_figlio.ti_stato_object in ('CHIUSO_ERR_SCHED', 'CHIUSO_ERR_CODA', 'CHIUSO_ERR_VERS')
													)
											then 'CHIUSO_OK (PROBLEMA_VERS_SACER)'
											else CASE
                               WHEN EXISTS
                                      (SELECT 1
                                       FROM PIG_UNITA_DOC_OBJECT ud
                                       JOIN PIG_OBJECT figlio ON figlio.id_object_padre = obj.id_object
                                       AND ud.id_object = figlio.id_object
                                       WHERE 
											ti_stato_unita_doc_object = 'VERSATA_ERR'
                                              AND cd_err_sacer IN ('UD-002',
                                                                   'UD-002-001')) THEN 'CHIUSO_OK (WARNING_CHIAVE_DUPLICATA)'
                               ELSE 'CHIUSO_OK'
                           END
									end
						end
					else
						case
							when exists (select 1
										 from PIG_OBJECT figlio
										 where figlio.id_object_padre = obj.id_object
										 and figlio.ti_stato_object IN ('IN_ATTESA_SCHED', 'IN_CODA_HASH')
										 )
								then 'VERSATO_A_PING'
								else
                case
                when exists (select 1
                       from PIG_OBJECT figlio
                       where figlio.id_object_padre = obj.id_object
                       and figlio.ti_stato_object in ('CHIUSO_ERR_SCHED')
                       )
                  then 'VERSATO_A_PING (PROBLEMA_PREPARAZIONE_SIP)'
                  else
  									case
  										when exists (select 1
  													 from PIG_OBJECT figlio
  													 where figlio.id_object_padre = obj.id_object
  													 and figlio.ti_stato_object in ('CHIUSO_ERR_CODA', 'CHIUSO_ERR_VERS')
  													 )
  											then 'VERSATO_A_PING (PROBLEMA_VERS_SACER)'
  											else 'VERSATO_A_PING (IN_CORSO_VERS_SACER)'
  									end
                end
						end
			end
		else case
       when obj.ti_stato_object = 'CHIUSO_OK' then case
         when exists (SELECT *
          FROM PIG_UNITA_DOC_OBJECT ud
          WHERE ud.id_object = obj.id_object
            AND (ti_stato_unita_doc_object = 'VERSATA_ERR'
                     AND cd_err_sacer IN ('UD-002',
                                          'UD-002-001')) ) then 'CHIUSO_OK (WARNING_CHIAVE_DUPLICATA)'
         else obj.ti_stato_object
       end
       else obj.ti_stato_object
    end
 end ti_stato_object_vis,

 obj.cd_key_object,

 stato_cor.ts_reg_stato dt_stato_cor, stato_cor.ts_reg_stato dt_vers,
 case
	when stato_cor.ts_reg_stato between trunc(sysdate) and sysdate then 'CORR'
	when stato_cor.ts_reg_stato between trunc(sysdate - 6) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss') then '6_GG_PREC_CORR'
	else 'PREC_6_GG_PREC_CORR'
 end ti_dt_creazione,

 ud.cd_registro_unita_doc_sacer, ud.aa_unita_doc_sacer, ud.cd_key_unita_doc_sacer,

 case
	when ti_obj.nm_tipo_object = 'StudioDicom'
		then (select rpad(dicom.ds_patient_name, 100, ' ') || to_char(dicom.dt_study_date, 'yyyy-mm-dd hh24:mi:ss')
			  from PIG_INFO_DICOM dicom
			  where dicom.id_object = obj.id_object
			  )
		else ti_obj.nm_tipo_object || obj.cd_key_object
 end ds_key_ord,

 case
	when ti_obj.nm_tipo_object = 'StudioDicom'
		then 'Paziente: ' ||
			 (select nvl (dicom.ds_patient_name, 'NON DEFINITO')
			  from PIG_INFO_DICOM dicom
			  where dicom.id_object = obj.id_object
			  ) ||
			 ', nato il ' ||
			 (select nvl (to_char(dicom.dt_patient_birth_date, 'dd/mm/yyyy'), 'NON DEFINITO')
			  from PIG_INFO_DICOM dicom
			  where dicom.id_object = obj.id_object
			  ) ||

			 ' Studio del ' ||
			 (select to_char(dicom.dt_study_date, 'yyyy-mm-dd hh24:mi:ss')
			  from PIG_INFO_DICOM dicom
			  where dicom.id_object = obj.id_object
			 )

		else
			case
				when obj.ds_object is not null
					then obj.ds_object
					--else 'Tipo oggetto ' ||	ti_obj.nm_tipo_object
			end
 end ds_info_object,

 ses.ti_stato_verifica_hash,
 (select COALESCE (sum(pfj.NI_SIZE_FILE_VERS),0) from PIG_FILE_OBJECT pfj
    where obj.id_object = pfj.id_object
    group by pfj.id_object) filesize,
 ti_obj.ti_vers_file,
 obj.note,
 case
    when obj.cd_trasf is not null
        then obj.cd_trasf||'('||obj.cd_versione_trasf||')'
    else null
 end obj_cd_trasf,
(select count(*) from PIG_UNITA_DOC_OBJECT uds where uds.id_object = obj.id_object) ni_ud_prodotte,
obj.ti_gest_oggetti_figli

from PIG_OBJECT obj
join PIG_VERS vers
 on (vers.id_vers = obj.id_vers)
join PIG_AMBIENTE_VERS amb
 on (amb.id_ambiente_vers = vers.id_ambiente_vers)
join PIG_TIPO_OBJECT ti_obj
 on (ti_obj.id_tipo_object = obj.id_tipo_object)

join PIG_SESSIONE_INGEST ses
 on (ses.id_sessione_ingest = obj.id_last_sessione_ingest)
join  PIG_STATO_SESSIONE_INGEST stato_cor
 on (stato_cor.id_stato_sessione_ingest = ses.id_stato_sessione_ingest_cor)

left join PIG_UNITA_DOC_OBJECT ud
 on (ud.id_object = obj.id_object)
 where vers.fl_cessato = 0;

-- changeset root:1751557724186-78
CREATE OR REPLACE FORCE VIEW "MON_V_OBJ_RANGE_DT" ("ID_VERS", "ID_OBJECT", "CD_KEY_OBJECT", "ID_TIPO_OBJECT", "TI_STATO_OBJECT", "TI_DT_CREAZIONE", "TI_CLASSE_VERS_FILE") AS WITH MultiVersatore
AS
(
    SELECT DISTINCT
        pv.id_vers id_vers_padre,
        pvt.id_vers_gen id_vers
    FROM pig_vers pv
        LEFT JOIN pig_tipo_object pto ON pto.id_vers = pv.id_vers
        LEFT JOIN pig_vers_tipo_object_da_trasf pvt ON pvt.id_tipo_object_da_trasf = pto.id_tipo_object
    WHERE
    pv.fl_cessato = 0
    AND pv.id_vers <> pvt.id_vers_gen
)
SELECT
		   obj.id_vers,
           obj.id_object,
		   obj.cd_key_object,
           obj.id_tipo_object,
           CASE
               WHEN ti_obj.ti_vers_file = 'DA_TRASFORMARE' THEN
                   CASE
                       WHEN obj.ti_stato_object != 'VERSATO_A_PING' THEN
                           CASE
                               WHEN obj.ti_stato_object = 'CHIUSO_OK' THEN
                                   CASE
                                       WHEN EXISTS
                                                (SELECT 1 FROM PIG_UNITA_DOC_OBJECT ud
                                                    INNER JOIN PIG_OBJECT figlio ON figlio.id_object_padre = obj.id_object AND figlio.id_object = ud.id_object
                                                    WHERE
                                                    figlio.id_object = ud.id_object
                                                    AND (ud.id_vers = vers.id_vers OR ud.id_vers IN (SELECT v.id_vers FROM MultiVersatore v WHERE v.id_vers_padre = vers.id_vers))
                                                    AND (ud.ti_stato_unita_doc_object = 'VERSATA_ERR' AND ud.cd_err_sacer IN ('UD-002','UD-002-001'))) THEN 'WARNING_CHIAVE_DUPLICATA'
                                       ELSE
                                           obj.ti_stato_object
                                   END
                               ELSE
                                   obj.ti_stato_object
                           END
                       ELSE
                           CASE
                               WHEN EXISTS
                                        (SELECT 1 FROM PIG_OBJECT figlio
                                            WHERE
                                                figlio.id_object_padre = obj.id_object
                                                AND figlio.ti_stato_object IN ('IN_ATTESA_SCHED', 'IN_CODA_HASH')
                                                AND (figlio.id_vers = vers.id_vers OR figlio.id_vers IN (SELECT v.id_vers FROM MultiVersatore v WHERE v.id_vers_padre = vers.id_vers))
                                                ) THEN
											'VERSATO_A_PING'
                               ELSE
                                   CASE
                                       WHEN EXISTS
                                                (SELECT 1 FROM PIG_OBJECT figlio
                                                    WHERE
                                                        figlio.id_object_padre = obj.id_object
                                                        AND figlio.ti_stato_object IN ('CHIUSO_ERR_SCHED', 'CHIUSO_ERR_VERIFICA_HASH')
                                                        AND (figlio.id_vers = vers.id_vers OR figlio.id_vers IN (SELECT v.id_vers FROM MultiVersatore v WHERE v.id_vers_padre = vers.id_vers))
                                                        ) THEN
                                            'PROBLEMA_PREPARAZIONE_SIP'
                                       ELSE
                                           CASE
                                               WHEN EXISTS
                                                        (SELECT 1 FROM PIG_OBJECT figlio
                                                            WHERE
                                                                figlio.id_object_padre = obj.id_object
                                                                AND figlio.ti_stato_object IN ('CHIUSO_ERR_CODA','CHIUSO_ERR_VERS')) THEN
                                                   'PROBLEMA_VERS_SACER'
                                               ELSE
                                                   'IN_CORSO_VERS_SACER'
                                           END
                                   END
                           END
                   END
               ELSE
                   CASE
                       WHEN obj.ti_stato_object = 'CHIUSO_OK' THEN
                           CASE
                               WHEN EXISTS
                                        (SELECT 1 FROM PIG_UNITA_DOC_OBJECT ud
                                            WHERE
                                                ud.id_object = obj.id_object
                                                AND (ud.id_vers = vers.id_vers OR ud.id_vers IN (SELECT v.id_vers FROM MultiVersatore v WHERE v.id_vers_padre = vers.id_vers))
                                                AND (ti_stato_unita_doc_object = 'VERSATA_ERR' AND cd_err_sacer IN ('UD-002', 'UD-002-001'))) THEN
                                    'WARNING_CHIAVE_DUPLICATA'
                               ELSE
                                   obj.ti_stato_object
                           END
                       ELSE
                           obj.ti_stato_object
                   END
           END    ti_stato_object,
           CASE
               WHEN stato_cor.ts_reg_stato BETWEEN TRUNC (SYSDATE) AND SYSDATE + 1 / 24 THEN 'CORR'
               WHEN stato_cor.ts_reg_stato BETWEEN TRUNC (SYSDATE - 6) AND TO_DATE (TO_CHAR (TRUNC (SYSDATE - 1),'dd-mm-yyyy') || ' 23:59:59','dd-mm-yyyy HH24:mi:ss') THEN '6_GG_PREC_CORR'
               ELSE
                   'PREC_6_GG_PREC_CORR'
           END ti_dt_creazione,
           CASE
               WHEN ti_obj.ti_vers_file IN ('NO_ZIP', 'ZIP_CON_XML_SACER', 'ZIP_NO_XML_SACER') THEN 'NON_DA_TRASFORMARE'
               ELSE
                   'DA_TRASFORMARE'
           END ti_classe_vers_file
      FROM PIG_OBJECT obj
      INNER JOIN PIG_TIPO_OBJECT ti_obj ON (ti_obj.id_tipo_object = obj.id_tipo_object)
      INNER JOIN PIG_VERS vers ON (ti_obj.id_vers = vers.id_vers AND vers.id_vers = obj.id_vers)
      INNER JOIN PIG_SESSIONE_INGEST ses ON (ses.id_sessione_ingest = obj.id_last_sessione_ingest)
      INNER JOIN PIG_STATO_SESSIONE_INGEST stato_cor ON (stato_cor.id_stato_sessione_ingest = ses.id_stato_sessione_ingest_cor)
      WHERE obj.ti_stato_object IN ('CHIUSO_OK',
                                   'IN_CODA_HASH',
                                   'IN_ATTESA_FILE',
                                   'IN_ATTESA_SCHED',
                                   'IN_ATTESA_VERS',
                                   'IN_CODA_VERS',
                                   'WARNING',
                                   'CHIUSO_WARNING',
                                   'DA_TRASFORMARE',
                                   'TRASFORMAZIONE_NON_ATTIVA',
                                   'TRASFORMAZIONE_IN_CORSO',
                                   'PREPARAZIONE_OGG_IN_CORSO',
                                   'TRASFORMATO',
                                   'VERSATO_A_PING',
                                   'ERRORE_TRASFORMAZIONE',
                                   'WARNING_TRASFORMAZIONE',
                                   'ERRORE_VERSAMENTO_A_PING')
       AND vers.fl_cessato = 0
       AND obj.id_vers = vers.id_vers;

-- changeset root:1751557724186-79
CREATE OR REPLACE FORCE VIEW "PIG_V_SU_RAPP_VERS" ("ID_STRUMENTI_URBANISTICI", "BL_XML", "DS_URN_XML_VERS") AS select su.id_strumenti_urbanistici,vxmlses.bl_xml,vxmlses.ds_urn_xml_vers
--select su.id_strumenti_urbanistici,null,null
from pig_strumenti_urbanistici su
join pig_object po on po.cd_key_object = su.cd_key
join pig_unita_doc_object udo on udo.id_object = po.id_object
join SACER_IAM.USR_ORGANIZ_IAM org on org.id_organiz_iam = udo.id_organiz_iam
join sacer_iam.APL_TIPO_ORGANIZ torg  on torg.id_applic = org.id_applic and torg.nm_tipo_organiz = 'STRUTTURA'
join sacer.org_strut str on str.id_strut = org.id_organiz_applic
join SACER.aro_unita_doc aro on str.id_strut = aro.id_strut
join SACER.vrs_sessione_vers vses on vses.id_unita_doc = aro.id_unita_doc
join SACER.vrs_dati_sessione_vers vdatises  on vdatises.id_sessione_vers = vses.id_sessione_vers
join SACER.vrs_xml_dati_sessione_vers vxmlses on vxmlses.id_dati_sessione_vers = vdatises.id_dati_sessione_vers
where
udo.ti_stato_unita_doc_object = 'VERSATA_OK'
and udo.id_organiz_iam is not null
and vxmlses.ti_xml_dati = 'RAPP_VERS';

-- changeset root:1751557724186-80
COMMENT ON COLUMN PIG_V_SU_RAPP_VERS.ID_STRUMENTI_URBANISTICI IS 'PK.1';

-- changeset root:1751557724186-81
CREATE OR REPLACE FORCE VIEW "PIG_V_SU_LIS_DOC_DA_VERIF" ("ID_STRUMENTI_URBANISTICI", "ID_STRUM_URB_DOCUMENTI") AS select su.id_strumenti_urbanistici,sdoc.id_strum_urb_documenti 
from pig_strumenti_urbanistici su
join pig_strum_urb_documenti sDOC       on su.id_strumenti_urbanistici = sdoc.id_strumenti_urbanistici
where
    sdoc.fl_deleted = '0'
    and sdoc.fl_esito_verifica = '0'
    and sdoc.cd_err is null
order by su.data;

-- changeset root:1751557724186-82
COMMENT ON COLUMN PIG_V_SU_LIS_DOC_DA_VERIF.ID_STRUMENTI_URBANISTICI IS 'PK.1';

-- changeset root:1751557724186-83
COMMENT ON COLUMN PIG_V_SU_LIS_DOC_DA_VERIF.ID_STRUM_URB_DOCUMENTI IS 'PK.2';

-- changeset root:1751557724186-84
CREATE OR REPLACE FORCE VIEW "PIG_V_SU_CHECKS" ("ID_STRUMENTI_URBANISTICI", "FL_VERIFICA_IN_CORSO", "FL_VERIFICA_ERRATA", "FL_FILE_MANCANTE") AS select su.id_strumenti_urbanistici,
    CASE
        WHEN EXISTS (
            SELECT
                1
            FROM
                pig_strum_urb_documenti docs
            WHERE
                docs.id_strumenti_urbanistici = su.id_strumenti_urbanistici
                and 
                    (docs.FL_ESITO_VERIFICA = '0' AND docs.fl_deleted = '0') 
 --                   (docs.FL_ESITO_VERIFICA = 1 AND docs.err_desc is not null AND docs.fl_deleted = 0) or
                    
        ) THEN
            '1'
        ELSE
            '0'
    END as "FL_VERIFICA_IN_CORSO",
        CASE
        WHEN EXISTS (
            SELECT
                1
            FROM
                pig_strum_urb_documenti docs
            WHERE
                docs.id_strumenti_urbanistici = su.id_strumenti_urbanistici
                and 
                  docs.FL_ESITO_VERIFICA = '1' 
                  AND (docs.cd_err is not null or docs.ds_err is not null)  
                  AND docs.fl_deleted = '0'
                    
        ) THEN
            '1'
        ELSE
            '0'
    END as "FL_VERIFICA_ERRATA",
    CASE
        WHEN EXISTS (
            SELECT
                1
            FROM
                pig_strum_urb_piano_stato ps
            JOIN
                pig_strum_urb_piano_doc_req req on req.id_strum_urb_piano_stato = ps.id_strum_urb_piano_stato
            WHERE
                ps.id_strum_urb_piano_stato = su.id_strum_urb_piano_stato
                and req.fl_doc_obbligatorio = '1' 
                and not exists 
                    (select 1 from pig_strum_urb_documenti docs
                    where docs.id_strumenti_urbanistici = su.id_strumenti_urbanistici
                     and docs.fl_deleted = '0' 
                     and req.id_pig_strum_urb_val_doc = docs.id_strum_urb_val_doc)
        ) THEN
            '1'
        ELSE
            '0'
    END as "FL_FILE_MANCANTE"
    from pig_strumenti_urbanistici SU;

-- changeset root:1751557724186-85
COMMENT ON COLUMN PIG_V_SU_CHECKS.ID_STRUMENTI_URBANISTICI IS 'PK.1';

-- changeset root:1751557724186-86
CREATE OR REPLACE FORCE VIEW "PIG_V_DETT_STRUM_URB" ("ID_STRUMENTI_URBANISTICI", "NM_TIPO_DOCUMENTO", "ID_DOCUMENTO", "CD_ERR", "FL_ESITO_VERIFICA", "FL_DELETED") AS select su.id_strumenti_urbanistici,val.nm_tipo_documento,sdoc.id_strum_urb_documenti "ID_DOCUMENTO",sdoc.cd_err,sdoc.fl_esito_verifica,sdoc.fl_deleted
from pig_strumenti_urbanistici su
join pig_strum_urb_documenti sDOC       on su.id_strumenti_urbanistici = sdoc.id_strumenti_urbanistici
join pig_strum_urb_val_doc val on   sdoc.id_strum_urb_val_doc = val.id_strum_urb_val_doc;

-- changeset root:1751557724186-87
CREATE OR REPLACE FORCE VIEW "IAM_V_LIS_ORGANIZ_DA_REPLIC" ("ID_ORGANIZ_DA_REPLIC", "ID_ORGANIZ_APPLIC", "NM_ORGANIZ", "TI_OPER_REPLIC", "TI_STATO_REPLIC", "DT_LOG_ORGANIZ_DA_REPLIC", "CD_ERR", "DS_MSG_ERR", "DT_ERR", "DS_ORD_ORGANIZ", "ID_AMBIENTE", "NM_AMBIENTE", "ID_VERS", "NM_VERS") AS select
-- info su replica
 da_replic.id_organiz_da_replic,
 da_replic.id_organiz_applic,
 da_replic.nm_organiz,
 da_replic.ti_oper_replic, 
 da_replic.ti_stato_replic,
 da_replic.dt_log_organiz_da_replic,
 da_replic.cd_err,
 da_replic.ds_msg_err,
 da_replic.dt_err,
 
-- info di organizzazione
 case
	when da_replic.nm_tipo_organiz = 'VERSATORE'
		then
			case
				when exists (select * from PIG_VERS vers where vers.id_vers = da_replic.id_organiz_applic)
					then (select amb.nm_ambiente_vers from PIG_VERS vers, PIG_AMBIENTE_VERS amb where vers.id_vers = da_replic.id_organiz_applic and amb.id_ambiente_vers = vers.id_ambiente_vers) || ' / ' 
						|| da_replic.nm_organiz
					else '--' || ' / ' || da_replic.nm_organiz
			end
		else da_replic.nm_organiz
 end ds_ord_organiz,
 case
	when da_replic.nm_tipo_organiz = 'VERSATORE'
		then
			case
				when exists (select * from PIG_VERS vers where vers.id_vers = da_replic.id_organiz_applic)
					then (select vers.id_ambiente_vers from PIG_VERS vers where vers.id_vers = da_replic.id_organiz_applic)
					else null
			end
		else da_replic.id_organiz_applic
 end id_ambiente_vers,
 case
	when da_replic.nm_tipo_organiz = 'VERSATORE'
		then
			case
				when exists (select * from PIG_VERS vers where vers.id_vers = da_replic.id_organiz_applic)
					then (select amb.nm_ambiente_vers from PIG_VERS vers, PIG_AMBIENTE_VERS amb where vers.id_vers = da_replic.id_organiz_applic and amb.id_ambiente_vers = vers.id_ambiente_vers)
					else null
			end
		else da_replic.nm_organiz
 end nm_ambiente_vers,
 case
	when da_replic.nm_tipo_organiz = 'VERSATORE'
		then  da_replic.id_organiz_applic
		else null
 end id_vers,
 case
	when da_replic.nm_tipo_organiz = 'VERSATORE'
		then  da_replic.nm_organiz
		else null
 end nm_vers 
from IAM_ORGANIZ_DA_REPLIC da_replic;

-- changeset root:1751557724186-88
COMMENT ON COLUMN IAM_V_LIS_ORGANIZ_DA_REPLIC.ID_ORGANIZ_DA_REPLIC IS 'PK.1 relativa a tabella IAM_ORGANIZ_DA_REPLIC';

-- changeset root:1751557724186-89
CREATE OR REPLACE FORCE VIEW "USR_V_CHK_USER_CANC_PING" ("ID_USER_IAM", "FL_CANC_OK") AS select 
id_user_iam,
case
	when not exists (select *
					 from PIG_OBJECT obj
					 where obj.id_user_iam = usr.id_user_iam
					)
		then '1'
		else '0'

end fl_canc_ok
from IAM_USER usr;

-- changeset root:1751557724186-90
COMMENT ON COLUMN USR_V_CHK_USER_CANC_PING.ID_USER_IAM IS 'PK.1';

-- changeset root:1751557724186-91
CREATE OR REPLACE FORCE VIEW "PIG_V_SU_LIS_DOCS_PIANO" ("NM_TIPO_STRUMENTO", "TI_FASE_STRUMENTO", "NM_TIPO_DOCUMENTO", "FL_DOC_OBBLIGATORIO", "FL_DOC_PRINCIPALE", "TI_TIPO_ATTO_COMUNE", "TI_TIPO_ATTO_UNIONE") AS SELECT ps.nm_tipo_strumento_urbanistico,ps.ti_fase_strumento,val.nm_tipo_documento,req.fl_doc_obbligatorio,val.fl_doc_principale,ps.ti_tipo_atto_comune,ps.ti_tipo_atto_unione
FROM pig_strum_urb_piano_doc_req req
join pig_strum_urb_val_doc val 		on req.id_pig_strum_urb_val_doc = val.id_strum_urb_val_doc
join pig_strum_urb_piano_stato ps 	on ps.id_strum_urb_piano_stato = req.id_strum_urb_piano_stato;

-- changeset root:1751557724186-92
COMMENT ON COLUMN PIG_V_SU_LIS_DOCS_PIANO.NM_TIPO_STRUMENTO IS 'PK.1';

-- changeset root:1751557724186-93
COMMENT ON COLUMN PIG_V_SU_LIS_DOCS_PIANO.TI_FASE_STRUMENTO IS 'PK.2';

-- changeset root:1751557724186-94
COMMENT ON COLUMN PIG_V_SU_LIS_DOCS_PIANO.NM_TIPO_DOCUMENTO IS 'PK.3';

-- changeset root:1751557724186-95
CREATE OR REPLACE FORCE VIEW "PIG_V_SU_LIST" ("NM_TIPO_STRUMENTO_URBANISTICO") AS SELECT distinct p.NM_TIPO_STRUMENTO_URBANISTICO FROM pig_Strum_urb_piano_stato p where p.nm_tipo_strumento_urbanistico

<> 'VARIANTE DI PIANO';

-- changeset root:1751557724186-96
COMMENT ON COLUMN PIG_V_SU_LIST.NM_TIPO_STRUMENTO_URBANISTICO IS 'PK.1';

-- changeset root:1751557724186-97
CREATE OR REPLACE FORCE VIEW "MON_V_LIS_INI_SCHED_JOB" ("ID_LOG_JOB", "NM_JOB", "DT_REG_LOG_JOB_INI", "DT_REG_LOG_JOB_FINE_SUC", "DT_REG_LOG_JOB_INI_SUC") AS select 
 inizio_job.id_log_job,
 inizio_job.nm_job,
 inizio_job.dt_reg_log_job dt_reg_log_job_ini,
 
 (select min(fine_job_min.dt_reg_log_job)
	from PIG_LOG_JOB fine_job_min
	where fine_job_min.nm_job = inizio_job.nm_job
	and fine_job_min.ti_reg_log_job in ('FINE_SCHEDULAZIONE', 'ERRORE')
  and fine_job_min.dt_reg_log_job >= inizio_job.dt_reg_log_job) dt_reg_log_job_fine_suc,
  
 (select min(inizio_suc.dt_reg_log_job) 
  from PIG_LOG_JOB inizio_suc
	where inizio_suc.nm_job = inizio_job.nm_job
  and inizio_suc.ti_reg_log_job = 'INIZIO_SCHEDULAZIONE'
	and inizio_suc.dt_reg_log_job > inizio_job.dt_reg_log_job) dt_reg_log_job_ini_suc
  
from PIG_LOG_JOB inizio_job
where inizio_job.ti_reg_log_job = 'INIZIO_SCHEDULAZIONE';

-- changeset root:1751557724186-98
CREATE OR REPLACE FORCE VIEW "MON_V_LIS_SCHED_JOB" ("ID_LOG_JOB", "NM_JOB", "DT_REG_LOG_JOB_INI", "DT_REG_LOG_JOB_FINE", "DURATA_GG", "DURATA_ORE", "DURATA_MIN", "DURATA_SEC", "DL_MSG_ERR") AS select
 tmp.id_log_job,
 tmp.nm_job,
 tmp.dt_reg_log_job_ini,
 
 case
	when (tmp.dt_reg_log_job_ini_suc is not null and tmp.dt_reg_log_job_fine_suc is not null and tmp.dt_reg_log_job_ini_suc > tmp.dt_reg_log_job_fine_suc) 
	or (tmp.dt_reg_log_job_ini_suc is null)
		then tmp.dt_reg_log_job_fine_suc
		else null
 end dt_reg_log_job_fine,

 case
	when (tmp.dt_reg_log_job_ini_suc is not null and tmp.dt_reg_log_job_fine_suc is not null and tmp.dt_reg_log_job_ini_suc > tmp.dt_reg_log_job_fine_suc) 
	or (tmp.dt_reg_log_job_ini_suc is null and tmp.dt_reg_log_job_fine_suc is not null)
		then trunc((((86400*(tmp.dt_reg_log_job_fine_suc - tmp.dt_reg_log_job_ini))/60)/60)/24)
		else null
 end durata_gg,

 case
	when (tmp.dt_reg_log_job_ini_suc is not null and tmp.dt_reg_log_job_fine_suc is not null and tmp.dt_reg_log_job_ini_suc > tmp.dt_reg_log_job_fine_suc) 
	or (tmp.dt_reg_log_job_ini_suc is null and tmp.dt_reg_log_job_fine_suc is not null)
		then trunc(((86400*(tmp.dt_reg_log_job_fine_suc - tmp.dt_reg_log_job_ini))/60)/60)-24*(trunc((((86400*(tmp.dt_reg_log_job_fine_suc - tmp.dt_reg_log_job_ini))/60)/60)/24))
		else null
 end durata_ore,

 case
	when (tmp.dt_reg_log_job_ini_suc is not null and tmp.dt_reg_log_job_fine_suc is not null and tmp.dt_reg_log_job_ini_suc > tmp.dt_reg_log_job_fine_suc) 
	or (tmp.dt_reg_log_job_ini_suc is null and tmp.dt_reg_log_job_fine_suc is not null)
		then trunc((86400*(tmp.dt_reg_log_job_fine_suc - tmp.dt_reg_log_job_ini))/60)-60*(trunc(((86400*(tmp.dt_reg_log_job_fine_suc - tmp.dt_reg_log_job_ini))/60)/60))
		else null
 end durata_min,

 case
	when (tmp.dt_reg_log_job_ini_suc is not null and tmp.dt_reg_log_job_fine_suc is not null and tmp.dt_reg_log_job_ini_suc > tmp.dt_reg_log_job_fine_suc) 
	or (tmp.dt_reg_log_job_ini_suc is null and tmp.dt_reg_log_job_fine_suc is not null)
		then trunc(86400*(tmp.dt_reg_log_job_fine_suc - tmp.dt_reg_log_job_ini))-60*(trunc((86400*(tmp.dt_reg_log_job_fine_suc - tmp.dt_reg_log_job_ini))/60))
		else null
 end durata_sec,

 case
	when (tmp.dt_reg_log_job_ini_suc is not null and tmp.dt_reg_log_job_fine_suc is not null and tmp.dt_reg_log_job_ini_suc > tmp.dt_reg_log_job_fine_suc) 
	or (tmp.dt_reg_log_job_ini_suc is null and tmp.dt_reg_log_job_fine_suc is not null)
		then (select min(fine_job.dl_msg_err)
			from PIG_LOG_JOB fine_job 
			where fine_job.nm_job = tmp.nm_job
			and fine_job.ti_reg_log_job in ('FINE_SCHEDULAZIONE', 'ERRORE')
			and fine_job.dt_reg_log_job = tmp.dt_reg_log_job_fine_suc)
	when (tmp.dt_reg_log_job_ini_suc is not null and tmp.dt_reg_log_job_fine_suc is not null and tmp.dt_reg_log_job_ini_suc < tmp.dt_reg_log_job_fine_suc)
		then 'Job terminato per caduta dell''application server'
		else null
 end dl_msg_err
 
from MON_V_LIS_INI_SCHED_JOB tmp;

-- changeset root:1751557724186-99
COMMENT ON COLUMN MON_V_LIS_SCHED_JOB.ID_LOG_JOB IS 'PK.1 relativa a tabella LOG_JOB';

-- changeset root:1751557724186-100
CREATE OR REPLACE FORCE VIEW "APL_V_LOG_JOB" ("ID_LOG_JOB", "NM_JOB", "TI_REG_LOG_JOB", "DT_REG_LOG_JOB", "DL_MSG_ERR", "CD_IND_SERVER") AS SELECT ID_LOG_JOB, NM_JOB, TI_REG_LOG_JOB,DT_REG_LOG_JOB, DL_MSG_ERR, cd_ind_server
  FROM PIG_LOG_JOB;

-- changeset root:1751557724186-101
CREATE OR REPLACE FORCE VIEW "MON_V_VIS_LAST_SCHED_JOB" ("ID_LOG_JOB", "NM_JOB", "DT_REG_LOG_JOB_INI", "FL_JOB_ATTIVO", "LAST_EXEC_OK") AS SELECT MAX (tab1.id_log_job),
             tab1.nm_job,
             tab1.dt_reg_log_job_ini,
             tab1.fl_job_attivo,
             tab1.LAST_EXEC_OK
        FROM (SELECT inizio_job.id_log_job,
                     inizio_job.nm_job,
                     inizio_job.dt_reg_log_job    dt_reg_log_job_ini,
                     CASE
                         WHEN EXISTS
                                  (SELECT *
                                     FROM PIG_LOG_JOB fine_job
                                    WHERE fine_job.nm_job = inizio_job.nm_job
                                      AND fine_job.ti_reg_log_job IN
                                              ('FINE_SCHEDULAZIONE', 'ERRORE')
                                      AND fine_job.dt_reg_log_job >=
                                          inizio_job.dt_reg_log_job) THEN
                             '0'
                         ELSE
                             '1'
                     END                          fl_job_attivo,
                     CASE
                         WHEN EXISTS
                                  (SELECT *
                                     FROM PIG_LOG_JOB fine_job
                                    WHERE fine_job.nm_job = inizio_job.nm_job
                                      AND fine_job.ti_reg_log_job IN
                                              ('FINE_SCHEDULAZIONE')
                                      AND fine_job.dt_reg_log_job >=
                                          inizio_job.dt_reg_log_job) THEN
                             '1'
                         ELSE
                             '0'
                     END                          last_exec_ok
                FROM PIG_LOG_JOB inizio_job
               WHERE inizio_job.ti_reg_log_job = 'INIZIO_SCHEDULAZIONE'
                 AND inizio_job.dt_reg_log_job =
                     (SELECT MAX (inizio_job_max.dt_reg_log_job)
                       FROM PIG_LOG_JOB inizio_job_max
                      WHERE inizio_job_max.nm_job = inizio_job.nm_job
                        AND inizio_job_max.ti_reg_log_job =
                            'INIZIO_SCHEDULAZIONE')) tab1
    GROUP BY tab1.nm_job,
             tab1.dt_reg_log_job_ini,
             tab1.fl_job_attivo,
             tab1.LAST_EXEC_OK;

-- changeset root:1751557724186-102
COMMENT ON COLUMN MON_V_VIS_LAST_SCHED_JOB.ID_LOG_JOB IS 'PK.1 relativa a tabella PIG_LOG_JOB';

-- changeset root:1751557724186-103
CREATE OR REPLACE FORCE VIEW "PIG_V_RIC_DIARIO" ("ID_OBJECT", "CD_KEY_OBJECT", "TI_STATO_OBJECT", "TI_STATO_SESSIONE", "DT_APERTURA_SESSIONE", "DT_CHIUSURA_SESSIONE", "ID_SESSIONE", "FL_FORZA_ACCETTAZIONE", "DL_MOTIVO_FORZA_ACCETTAZIONE", "FL_FORZA_WARNING", "DL_MOTIVO_CHIUSO_WARNING", "CD_ERR", "DL_ERR", "TI_STATO_SESSIONE_RECUP", "DT_APERTURA_SESSIONE_RECUP", "CHIAVE_UNITA_DOC", "CD_AET_NODO_DICOM", "DT_STUDY_DATE", "DS_ACCESSION_NUMBER", "DS_PATIENT_NAME", "TI_PATIENT_SEX", "DT_PATIENT_BIRTH_DATE", "CD_PATIENT_ID", "CD_PATIENT_ID_ISSUER", "DS_REF_PHYSICIAN_NAME", "DL_LISTA_MODALITY_IN_STUDY", "DL_LISTA_SOP_CLASS", "DS_INSTITUTION_NAME", "DL_STUDY_DESCRIPTION", "DS_STUDY_INSTANCE_UID", "NI_STUDY_RELATED_SERIES", "NI_STUDY_RELATED_IMAGES", "DS_STUDY_ID", "DT_PRESA_IN_CARICO", "BL_DCM_HASH_TXT", "DS_DCM_HASH", "TI_ALGO_DCM_HASH", "CD_ENCODING_DCM_HASH", "BL_GLOBAL_HASH_TXT", "DS_GLOBAL_HASH", "TI_ALGO_GLOBAL_HASH", "CD_ENCODING_GLOBAL_HASH", "DS_FILE_HASH", "TI_ALGO_FILE_HASH", "CD_ENCODING_FILE_HASH") AS select
 obj.id_object, 
 obj.cd_key_object,
 obj.ti_stato_object, 
 ses.ti_stato ti_stato_sessione,
 ses.dt_apertura dt_apertura_sessione,
 ses.dt_chiusura dt_chiusura_sessione,
 ses.id_sessione_ingest id_sessione,
 ses.fl_forza_accettazione,
 ses.dl_motivo_forza_accettazione,
 ses.fl_forza_warning,
 ses.dl_motivo_chiuso_warning,
 ses.cd_err, 
 ses.dl_err,
 recup.ti_stato ti_stato_sessione_recup, recup.dt_apertura dt_apertura_sessione_recup,
 case
	when nvl((select count(*) from PIG_UNITA_DOC_OBJECT ud where ud.id_object = obj.id_object), 0) = 1
		then (select ud.cd_registro_unita_doc_sacer from PIG_UNITA_DOC_OBJECT ud where ud.id_object = obj.id_object) || '-' ||
			(select to_char(ud.aa_unita_doc_sacer) from PIG_UNITA_DOC_OBJECT ud where ud.id_object = obj.id_object) || '-' ||
			(select ud.cd_key_unita_doc_sacer chiave_unita_doc from PIG_UNITA_DOC_OBJECT ud where ud.id_object = obj.id_object)
	when nvl((select count(*) from PIG_UNITA_DOC_OBJECT ud where ud.id_object = obj.id_object), 0) = 0
		then null
		else 'Il numero di unit√† documentarie generate dall‚Äôoggetto e‚Äô > 1'
 end chiave_unita_doc,
 
--				info DICOM
 dicom.cd_AET_nodo_dicom, 
 dicom.dt_study_date, 
 dicom.ds_accession_number, 
 dicom.ds_patient_name,
 dicom.ti_patient_sex, 
 dicom.dt_patient_birth_date, 
 dicom.cd_patient_id, 
 dicom.cd_patient_id_issuer, 
 dicom.ds_ref_physician_name,
 dicom.dl_lista_modality_in_study,
 dicom.dl_lista_sop_class, 
 dicom.ds_institution_name, 
 dicom.dl_study_description, 
 dicom.ds_study_instance_UID,
 dicom.ni_study_related_series, 
 dicom.ni_study_related_images, 
 dicom.ds_study_id, 
 dicom.dt_presa_in_carico, 
 dicom.bl_dcm_hash_txt, dicom.ds_dcm_hash, dicom.ti_algo_dcm_hash, dicom.cd_encoding_dcm_hash,  
 dicom.bl_global_hash_txt, dicom.ds_global_hash, dicom.ti_algo_global_hash, dicom.cd_encoding_global_hash, 
 dicom.ds_file_hash, dicom.ti_algo_file_hash, dicom.cd_encoding_file_hash
  
from PIG_OBJECT obj
join PIG_SESSIONE_INGEST ses
 on (ses.id_sessione_ingest = obj.id_last_sessione_ingest)
left join PIG_SESSIONE_RECUP recup
 on (recup.id_object = obj.id_object)
left join PIG_INFO_DICOM dicom
 on (dicom.id_object = obj.id_object);

-- changeset root:1751557724186-104
COMMENT ON COLUMN PIG_V_RIC_DIARIO.ID_OBJECT IS 'PK.1 relativa a tabella PIG_OBJ';

-- changeset root:1751557724186-105
CREATE OR REPLACE FORCE VIEW "PIG_V_RIC_RECUP" ("ID_OBJECT", "CD_KEY_OBJECT", "TI_STATO_SESSIONE", "DT_APERTURA_SESSIONE", "DT_CHIUSURA_SESSIONE", "ID_SESSIONE", "CD_ERR", "DL_ERR", "CHIAVE_UNITA_DOC", "CD_AET_NODO_DICOM", "DT_STUDY_DATE", "DS_ACCESSION_NUMBER", "DS_PATIENT_NAME", "TI_PATIENT_SEX", "DT_PATIENT_BIRTH_DATE", "CD_PATIENT_ID", "CD_PATIENT_ID_ISSUER", "DS_REF_PHYSICIAN_NAME", "DL_LISTA_MODALITY_IN_STUDY") AS select
 obj.id_object, 
 obj.cd_key_object,
 ses.ti_stato ti_stato_sessione, 
 ses.dt_apertura dt_apertura_sessione,
 ses.dt_chiusura dt_chiusura_sessione,
 ses.id_sessione_recup id_sessione,
 ses.cd_err, 
 ses.dl_err,
 case
	when nvl((select count(*) from PIG_UNITA_DOC_OBJECT ud where ud.id_object = obj.id_object), 0) = 1
		then (select ud.cd_registro_unita_doc_sacer from PIG_UNITA_DOC_OBJECT ud where ud.id_object = obj.id_object) || '-' ||
			(select to_char(ud.aa_unita_doc_sacer) from PIG_UNITA_DOC_OBJECT ud where ud.id_object = obj.id_object) || '-' ||
			(select ud.cd_key_unita_doc_sacer chiave_unita_doc from PIG_UNITA_DOC_OBJECT ud where ud.id_object = obj.id_object)
	when nvl((select count(*) from PIG_UNITA_DOC_OBJECT ud where ud.id_object = obj.id_object), 0) = 0
		then null
		else 'Il numero di unit√† documentarie generate dall‚Äôoggetto e‚Äô > 1'
 end chiave_unita_doc,
  
--				info DICOM
 dicom.cd_AET_nodo_dicom, 
 dicom.dt_study_date, 
 dicom.ds_accession_number, 
 dicom.ds_patient_name,
 dicom.ti_patient_sex, 
 dicom.dt_patient_birth_date, 
 dicom.cd_patient_id, 
 dicom.cd_patient_id_issuer, 
 dicom.ds_ref_physician_name,
 dicom.dl_lista_modality_in_study
 
from PIG_SESSIONE_RECUP ses
join PIG_OBJECT obj
 on (obj.id_object = ses.id_object)
left join PIG_INFO_DICOM dicom
 on (dicom.id_object = obj.id_object);

-- changeset root:1751557724186-106
COMMENT ON COLUMN PIG_V_RIC_RECUP.ID_OBJECT IS 'PK.1 relativa a tabella PIG_OBJ';

-- changeset root:1751557724186-107
CREATE OR REPLACE FORCE VIEW "MON_V_VIS_VERS_FALLITO" ("ID_SESSIONE_INGEST", "DT_APERTURA", "DT_CHIUSURA", "DT_STATO_COR", "ID_AMBIENTE_VERS", "NM_AMBIENTE_VERS", "ID_VERS", "NM_VERS", "CD_KEY_OBJECT", "DS_OBJECT", "TI_STATO", "TI_STATO_VERIFICA_HASH", "TI_ERR", "CD_ERR", "DL_ERR", "TI_STATO_RISOLUZ", "FL_VERIF", "FL_NON_RISOLUB", "FL_FORZA_WARNING", "FL_FORZA_ACCETTAZIONE", "DL_MOTIVO_FORZA_ACCETTAZIONE", "DL_MOTIVO_CHIUSO_WARNING", "CD_WARN", "DL_WARN", "NI_UNITA_DOC_DA_VERS", "NI_UNITA_DOC_VERS", "NI_UNITA_DOC_VERS_OK", "NI_UNITA_DOC_VERS_ERR", "NI_UNITA_DOC_VERS_TIMEOUT", "NM_TIPO_OBJECT", "ID_OBJECT", "CD_VERSIONE_XML_VERS", "BL_XML", "NI_UNITA_DOC_ATTESE", "PG_OGGETTO_TRASF", "NM_AMBIENTE_VERS_PADRE", "NM_VERS_PADRE", "CD_KEY_OBJECT_PADRE", "NI_TOT_OBJECT_TRASF", "CD_VERS_GEN", "TI_GEST_OGGETTI_FIGLI", "NOTE", "CD_TRASF", "CD_VERSIONE_TRASF") AS select
 ses.id_sessione_ingest, 
 ses.dt_apertura,
 ses.dt_chiusura,
 stato_cor.ts_reg_stato dt_stato_cor,
 
 amb.id_ambiente_vers, amb.nm_ambiente_vers, ses.id_vers, vers.nm_vers,
 ses.cd_key_object,
 ses.ds_object,
 
 ses.ti_stato,
 ses.ti_stato_verifica_hash,
 
 case
	when ses.ti_stato = 'CHIUSO_ERR' then 'INVIO_OGGETTO'
	when ses.ti_stato = 'CHIUSO_ERR_NOTIF' then 'NOTIFICA_FILE'
	when ses.ti_stato = 'CHIUSO_ERR_SCHED' then 'PREPARAZIONE_XML'
	when ses.ti_stato = 'CHIUSO_ERR_CODA' then 'REGISTRAZIONE_IN_CODA'
	when ses.ti_stato in ('CHIUSO_ERR_VERS', 'CHIUSO_ERR_RECUPERABILE') then 'VERSAMENTO_SACER'
										-- in futuro considerare anche gli stati 'CHIUSO_ERR_CRASH_DPI', 'CHIUSO_ERR_CRASH_FTP'
	else null
 end ti_err,
 cd_err,
 dl_err,
 
 case
	when ses.ti_stato in ('CHIUSO_ERR', 'CHIUSO_ERR_NOTIF', 'CHIUSO_ERR_SCHED', 'CHIUSO_ERR_CODA', 'CHIUSO_ERR_VERS', 'CHIUSO_ERR_RECUPERABILE', 'CHIUSO_ERR_TRASFORMAZIONE', 'CHIUSO_ERR_VERSAMENTO_A_PING') then
		case
				when exists (select *
							from PIG_OBJECT obj
							where obj.id_vers = ses.id_vers
							and obj.cd_key_object = ses.cd_key_object
							and obj.ti_stato_object in ('CHIUSO_OK'))
					then 'RISOLTO'
				when exists (select *
							from PIG_OBJECT obj
							where obj.id_vers = ses.id_vers
							and obj.cd_key_object = ses.cd_key_object
							and obj.ti_stato_object in ('IN_ATTESA_FILE', 'IN_ATTESA_SCHED', 'IN_CODA_VERS', 'IN_ATTESA_VERS', 'DA_TRASFORMARE',
														'TRASFORMAZIONE_NON_ATTIVA', 'TRASFORMAZIONE_IN_CORSO', 'PREPARAZIONE_OGG_IN_CORSO','TRASFORMATO', 'VERSATO_A_PING',
														'ERRORE_TRASFORMAZIONE', 'WARNING_TRASFORMAZIONE',
														'ERRORE_VERSAMENTO_A_PING'))
					then 'IN_CORSO'
				when exists (select *
							from PIG_OBJECT obj
							where obj.id_vers = ses.id_vers
							and obj.cd_key_object = ses.cd_key_object
							and obj.ti_stato_object in ('WARNING'))
					then 'WARNING'
				when exists (select *
							from PIG_OBJECT obj
							where obj.id_vers = ses.id_vers
							and obj.cd_key_object = ses.cd_key_object
							and obj.ti_stato_object in ('CHIUSO_WARNING'))
					then 'CHIUSO_WARNING'
					else 'NON_RISOLTO'
		end
	else null	
 end ti_stato_risoluz,
 ses.fl_ses_err_verif fl_verif,
 ses.fl_ses_err_non_risolub fl_non_risolub,
 
 ses.fl_forza_warning,
 ses.fl_forza_accettazione, 
 ses.dl_motivo_forza_accettazione,
 ses.dl_motivo_chiuso_warning,
  case
	when ses.ti_stato in ('CHIUSO_WARNING', 'CHIUSO_FORZATA')  then ses.cd_err
	else null
 end cd_warn,
  case
	when ses.ti_stato in ('CHIUSO_WARNING', 'CHIUSO_FORZATA')  then ses.dl_err
	else null
 end dl_warn,

 ses.ni_unita_doc_da_vers, 
 ses.ni_unita_doc_vers, 
 ses.ni_unita_doc_vers_ok, 
 ses.ni_unita_doc_vers_err,
 ses.ni_unita_doc_vers_timeout,
 ses.nm_tipo_object,
 ses.id_object, 
 ses.cd_versione_xml_vers, 
 xml_ses.bl_xml,
 
 ses.ni_unita_doc_attese,
 ses.pg_oggetto_trasf,
 ses.nm_ambiente_vers_padre,
 ses.nm_vers_padre,
 ses.cd_key_object_padre,
 ses.ni_tot_object_trasf,
 
 ses.cd_vers_gen,
 ses.ti_gest_oggetti_figli,
 ses.note,
 ses.cd_trasf,
 ses.cd_versione_trasf 
 
from PIG_SESSIONE_INGEST ses
join PIG_VERS vers
 on (vers.id_vers = ses.id_vers)
join PIG_AMBIENTE_VERS amb
 on (amb.id_ambiente_vers = vers.id_ambiente_vers)
 
join  PIG_STATO_SESSIONE_INGEST stato_cor
 on (stato_cor.id_stato_sessione_ingest = ses.id_stato_sessione_ingest_cor)
 
left join PIG_XML_SESSIONE_INGEST xml_ses
 on (xml_ses.id_sessione_ingest = ses.id_sessione_ingest);

-- changeset root:1751557724186-108
COMMENT ON COLUMN MON_V_VIS_VERS_FALLITO.ID_SESSIONE_INGEST IS 'PK.1 relativa a tabella PIG_SESSIONE_INGEST';

-- changeset root:1751557724186-109
CREATE OR REPLACE FORCE VIEW "PIG_V_LIS_TIOBJDATRASF_BYSTRUT" ("ID_VERS_DA_TRASF", "NM_VERS_DA_TRASF", "ID_TIPO_OBJECT_DA_TRASF", "NM_TIPO_OBJECT_DA_TRASF", "DS_TIPO_OBJECT_DA_TRASF", "ID_VERS_GEN", "NM_VERS_GEN", "ID_TIPO_OBJECT_GEN", "NM_TIPO_OBJECT_GEN", "CD_TRASF", "DS_TRASF", "ID_ORGANIZ_APPLIC") AS select 
 vers_da_trasf.id_vers id_vers_da_trasf, vers_da_trasf.nm_vers nm_vers_da_trasf, 
 ti_obj_da_trasf.id_tipo_object id_tipo_object_da_trasf, ti_obj_da_trasf.nm_tipo_object nm_tipo_object_da_trasf, ti_obj_da_trasf.ds_tipo_object ds_tipo_object_da_trasf,
 
 vers_gen.id_vers id_vers_gen, vers_gen.nm_vers nm_vers_gen, 
 ti_obj_gen.id_tipo_object id_tipo_object_gen, ti_obj_gen.nm_tipo_object nm_tipo_object_gen, 
 
 trasf.cd_trasf, trasf.ds_trasf,
 
 dich.id_organiz_applic

from PIG_V_LIS_STRUT_VERS_SACER dich

join pig_vers vers_gen
	on (vers_gen.id_vers = dich.id_vers)
join pig_tipo_object ti_obj_gen
	on (ti_obj_gen.id_tipo_object = dich.id_tipo_object)

join PIG_VERS_TIPO_OBJECT_DA_TRASF da_trasf
	on (da_trasf.id_vers_gen = dich.id_vers
	and da_trasf.id_tipo_object_gen = dich.id_tipo_object)

join pig_tipo_object ti_obj_da_trasf
	on (ti_obj_da_trasf.id_tipo_object = da_trasf.id_tipo_object_da_trasf)
join pig_vers vers_da_trasf
	on (vers_da_trasf.id_vers = ti_obj_da_trasf.id_vers)

join XFO_TRASF trasf
	on (trasf.id_trasf = ti_obj_da_trasf.id_trasf);

-- changeset root:1751557724186-110
COMMENT ON COLUMN PIG_V_LIS_TIOBJDATRASF_BYSTRUT.ID_TIPO_OBJECT_DA_TRASF IS 'PK.1';

-- changeset root:1751557724186-111
CREATE OR REPLACE FORCE VIEW "MON_V_VIS_UNITA_DOC_SESSIONE" ("ID_SESSIONE_INGEST", "DT_APERTURA", "DT_CHIUSURA", "ID_AMBIENTE_VERS", "NM_AMBIENTE_VERS", "ID_VERS", "NM_VERS", "CD_KEY_OBJECT", "DS_OBJECT", "ID_UNITA_DOC_SESSIONE", "CD_REGISTRO_UNITA_DOC_SACER", "AA_UNITA_DOC_SACER", "CD_KEY_UNITA_DOC_SACER", "NI_SIZE_FILE_BYTE", "TI_STATO_UNITA_DOC_OBJECT", "CD_ERR_SACER", "DL_ERR_SACER", "BL_XML_VERS_SACER", "BL_XML_INDICE_SACER", "ID_ORGANIZ_IAM", "DL_COMPOSITO_ORGANIZ", "FL_VERS_SIMULATO", "DT_STATO") AS SELECT ses.id_sessione_ingest
	,ses.dt_apertura
	,ses.dt_chiusura
	,amb.id_ambiente_vers
	,amb.nm_ambiente_vers
	,ses.id_vers
	,vers.nm_vers
	,ses.cd_key_object
	,ses.ds_object
	,
	--
	ud_ses.id_unita_doc_sessione
	,ud_ses.cd_registro_unita_doc_sacer
	,ud_ses.aa_unita_doc_sacer
	,ud_ses.cd_key_unita_doc_sacer
	,ud_ses.ni_size_file_byte
	,ud_ses.ti_stato_unita_doc_sessione
	,ud_ses.cd_err_sacer
	,ud_ses.dl_err_sacer
	,
	--
	xml_vers.bl_xml_sacer bl_xml_vers_sacer
	,xml_indice.bl_xml_sacer bl_xml_indice_sacer
	,
	--
	ud_ses.id_organiz_iam
	,org.dl_composito_organiz
	,ud_ses.fl_vers_simulato
	,ud_ses.dt_stato
FROM PIG_UNITA_DOC_SESSIONE ud_ses
JOIN PIG_SESSIONE_INGEST ses ON (ses.id_sessione_ingest = ud_ses.id_sessione_ingest)
JOIN PIG_VERS vers ON (vers.id_vers = ses.id_vers)
JOIN PIG_AMBIENTE_VERS amb ON (amb.id_ambiente_vers = vers.id_ambiente_vers)
LEFT JOIN PIG_XML_SACER_UNITA_DOC_SES xml_vers ON (
		xml_vers.id_unita_doc_sessione = ud_ses.id_unita_doc_sessione
		AND xml_vers.ti_xml_sacer = 'XML_VERS'
		)
LEFT JOIN PIG_XML_SACER_UNITA_DOC_SES xml_indice ON (
		xml_indice.id_unita_doc_sessione = ud_ses.id_unita_doc_sessione
		AND xml_indice.ti_xml_sacer = 'XML_INDICE'
		)
LEFT JOIN sacer_iam.USR_V_TREE_ORGANIZ_IAM org ON (org.id_organiz_iam = ud_ses.id_organiz_iam);

-- changeset root:1751557724186-112
COMMENT ON COLUMN MON_V_VIS_UNITA_DOC_SESSIONE.ID_UNITA_DOC_SESSIONE IS 'PK.1';

-- changeset root:1751557724186-113
CREATE OR REPLACE FORCE VIEW "MON_V_VIS_OBJ_NON_VERS" ("ID_AMBIENTE_VERS", "NM_AMBIENTE_VERS", "ID_VERS", "NM_VERS", "NM_TIPO_OBJECT", "CD_KEY_OBJECT", "DS_OBJECT", "FL_VERIF", "FL_NON_RISOLUB", "DT_FIRST_SES_ERR", "DT_LAST_SES_ERR", "ID_OBJECT", "FL_VERS_SACER_DA_RECUP", "ID_OBJECT_NON_VERS", "CD_VERS_GEN", "CD_TRASF", "CD_VERSIONE_TRASF", "TI_GEST_OGGETTI_FIGLI") AS SELECT DISTINCT amb.id_ambiente_vers
	,amb.nm_ambiente_vers
	,vers.id_vers
	,vers.nm_vers
	,(
		SELECT ses_ti_obj.nm_tipo_object
		FROM pig_sessione_ingest ses_ti_obj
		WHERE ses_ti_obj.id_vers = ses.id_vers
			AND ses_ti_obj.cd_key_object = ses.cd_key_object
			AND ses_ti_obj.dt_apertura = (
				SELECT max(dt_apertura)
				FROM pig_sessione_ingest ses_max
				WHERE ses_max.id_vers = ses.id_vers
					AND ses_max.cd_key_object = ses.cd_key_object
				)
		) nm_tipo_object
	,ses.cd_key_object
	,(
		SELECT ses_ds_object.ds_object
		FROM pig_sessione_ingest ses_ds_object
		WHERE ses_ds_object.id_vers = ses.id_vers
			AND ses_ds_object.cd_key_object = ses.cd_key_object
			AND ses_ds_object.dt_apertura = (
				SELECT max(dt_apertura)
				FROM pig_sessione_ingest ses_max
				WHERE ses_max.id_vers = ses.id_vers
					AND ses_max.cd_key_object = ses.cd_key_object
				)
		) ds_object
	,CASE 
		WHEN EXISTS (
				SELECT *
				FROM PIG_SESSIONE_INGEST ses_err
				WHERE ses_err.id_vers = ses.id_vers
					AND ses_err.cd_key_object = ses.cd_key_object
					AND ses_err.fl_ses_err_verif = '1'
					AND ses_err.dt_apertura = (
						SELECT max(dt_apertura)
						FROM pig_sessione_ingest ses_max
						WHERE ses_max.id_vers = ses.id_vers
							AND ses_max.cd_key_object = ses.cd_key_object
						)
				)
			THEN '1'
		ELSE '0'
		END fl_verif
	,CASE 
		WHEN EXISTS (
				SELECT *
				FROM PIG_SESSIONE_INGEST ses_err
				WHERE ses_err.id_vers = ses.id_vers
					AND ses_err.cd_key_object = ses.cd_key_object
					AND ses_err.fl_ses_err_non_risolub = '1'
					AND ses_err.dt_apertura = (
						SELECT max(dt_apertura)
						FROM pig_sessione_ingest ses_max
						WHERE ses_max.id_vers = ses.id_vers
							AND ses_max.cd_key_object = ses.cd_key_object
						)
				)
			THEN '1'
		ELSE '0'
		END fl_non_risolub
	,(
		SELECT min(ses_err.dt_apertura)
		FROM PIG_SESSIONE_INGEST ses_err
		WHERE ses_err.id_vers = ses.id_vers
			AND ses_err.cd_key_object = ses.cd_key_object
			--  and ses_err.nm_tipo_object = ses.nm_tipo_object
		) dt_first_ses_err
	,(
		SELECT max(ses_err.dt_apertura)
		FROM PIG_SESSIONE_INGEST ses_err
		WHERE ses_err.id_vers = ses.id_vers
			AND ses_err.cd_key_object = ses.cd_key_object
			--  and ses_err.nm_tipo_object = ses.nm_tipo_object
		) dt_last_ses_err
	,obj_da_recup.id_object
	,obj_da_recup.fl_vers_sacer_da_recup
	,CASE 
		WHEN (
				SELECT count(DISTINCT ses_obj.id_object)
				FROM PIG_SESSIONE_INGEST ses_obj
				WHERE ses_obj.id_vers = ses.id_vers
					AND ses_obj.cd_key_object = ses.cd_key_object
					--		  and ses_obj.nm_tipo_object = ses.nm_tipo_object
					AND ses_obj.id_object IS NOT NULL
				) = 1
			THEN (
					SELECT DISTINCT ses_obj.id_object
					FROM PIG_SESSIONE_INGEST ses_obj
					WHERE ses_obj.id_vers = ses.id_vers
						AND ses_obj.cd_key_object = ses.cd_key_object
						--			  and ses_obj.nm_tipo_object = ses.nm_tipo_object
						AND ses_obj.id_object IS NOT NULL
					)
		ELSE NULL
		END id_object_non_vers
	,(
		SELECT ses_ti_obj.cd_vers_gen
		FROM pig_sessione_ingest ses_ti_obj
		WHERE ses_ti_obj.id_vers = ses.id_vers
			AND ses_ti_obj.cd_key_object = ses.cd_key_object
			AND ses_ti_obj.dt_apertura = (
				SELECT max(dt_apertura)
				FROM pig_sessione_ingest ses_max
				WHERE ses_max.id_vers = ses.id_vers
					AND ses_max.cd_key_object = ses.cd_key_object
				)
		) cd_vers_gen
	,(
		SELECT ses_ti_obj.cd_trasf
		FROM pig_sessione_ingest ses_ti_obj
		WHERE ses_ti_obj.id_vers = ses.id_vers
			AND ses_ti_obj.cd_key_object = ses.cd_key_object
			AND ses_ti_obj.dt_apertura = (
				SELECT max(dt_apertura)
				FROM pig_sessione_ingest ses_max
				WHERE ses_max.id_vers = ses.id_vers
					AND ses_max.cd_key_object = ses.cd_key_object
				)
		) cd_trasf
	,(
		SELECT ses_ti_obj.cd_trasf
		FROM pig_sessione_ingest ses_ti_obj
		WHERE ses_ti_obj.id_vers = ses.id_vers
			AND ses_ti_obj.cd_key_object = ses.cd_key_object
			AND ses_ti_obj.dt_apertura = (
				SELECT max(dt_apertura)
				FROM pig_sessione_ingest ses_max
				WHERE ses_max.id_vers = ses.id_vers
					AND ses_max.cd_key_object = ses.cd_key_object
				)
		) cd_versione_trasf
	,(
		SELECT ses_obj.ti_gest_oggetti_figli
		FROM pig_sessione_ingest ses_obj
		WHERE ses_obj.id_vers = ses.id_vers
			AND ses_obj.cd_key_object = ses.cd_key_object
			AND ses_obj.dt_apertura = (
				SELECT max(dt_apertura)
				FROM pig_sessione_ingest ses_max
				WHERE ses_max.id_vers = ses.id_vers
					AND ses_max.cd_key_object = ses.cd_key_object
				)
		) ti_gest_oggetti_figli
FROM PIG_SESSIONE_INGEST ses
JOIN PIG_VERS vers ON (vers.id_vers = ses.id_vers)
JOIN PIG_AMBIENTE_VERS amb ON (amb.id_ambiente_vers = vers.id_ambiente_vers)
LEFT JOIN PIG_OBJECT obj_da_recup ON (
		obj_da_recup.id_vers = ses.id_vers
		AND obj_da_recup.cd_key_object = ses.cd_key_object
		)
WHERE ses.ti_stato IN (
		'CHIUSO_ERR'
		,'CHIUSO_ERR_NOTIF'
		,'CHIUSO_ERR_SCHED'
		,'CHIUSO_ERR_CODA'
		,'CHIUSO_ERR_VERS'
		,'CHIUSO_ERR_TIMEOUT'
		,'CHIUSO_ERR_TRASFORMAZIONE'
		,'CHIUSO_ERR_VERSAMENTO_A_PING'
		)
	AND ses.id_vers IS NOT NULL
	--and ses.nm_tipo_object is not null
	AND ses.cd_key_object IS NOT NULL
	AND NOT EXISTS (
		SELECT *
		FROM PIG_OBJECT obj
		WHERE obj.id_vers = ses.id_vers
			AND obj.cd_key_object = ses.cd_key_object
			AND obj.ti_stato_object IN (
				'CHIUSO_OK'
				,'IN_ATTESA_FILE'
				,'IN_ATTESA_SCHED'
				,'IN_CODA_VERS'
				,'IN_ATTESA_VERS'
				,'WARNING'
				,'CHIUSO_WARNING'
				,'DA_TRASFORMARE'
				,'CHIUSO_ERR_CRASH_DPI'
				,'CHIUSO_ERR_CRASH_FTP'
				,'CHIUSO_ERR_CRASH_FS_PRIM'
				,'CHIUSO_ERR_CRASH_FS_SECOND'
				,'ANNULLATO'
				,'TRASFORMAZIONE_NON_ATTIVA'
				,'TRASFORMAZIONE_IN_CORSO'
				,'PREPARAZIONE_OGG_IN_CORSO'
				,'TRASFORMATO'
				,'VERSATO_A_PING'
				,'ERRORE_TRASFORMAZIONE'
				,'WARNING_TRASFORMAZIONE'
				,'ERRORE_VERSAMENTO_A_PING'
				,'IN_CORSO_ANNULLAMENTO'
				)
		);

-- changeset root:1751557724186-114
COMMENT ON COLUMN MON_V_VIS_OBJ_NON_VERS.ID_VERS IS 'PK.1 relativa a tabella PIG_VERS';

-- changeset root:1751557724186-115
COMMENT ON COLUMN MON_V_VIS_OBJ_NON_VERS.CD_KEY_OBJECT IS 'PK.1 relativa a tabella PIG_VERS';

-- changeset root:1751557724186-116
CREATE OR REPLACE FORCE VIEW "PIG_V_GETVAL_PARAM_BY_VERS" ("TI_APPART", "ID_PARAM_APPLIC", "NM_PARAM_APPLIC", "ID_VALORE_PARAM_APPLIC", "DS_VALORE_PARAM_APPLIC", "ID_VERS", "NM_VERS") AS select
 'VERS' ti_appart,
 par.id_param_applic, par.nm_param_applic,
 val.id_valore_param_applic, val.ds_valore_param_applic,
 vers.id_vers, vers.nm_vers
 
from PIG_PARAM_APPLIC par
join PIG_VALORE_PARAM_APPLIC val
	on (val.id_param_applic = par.id_param_applic)
join PIG_VERS vers
	on (vers.id_vers = val.id_vers)
where par.fl_appart_applic in ('1', '0')
and par.fl_appart_ambiente in ('1', '0')
and par.fl_appart_vers = '1'
and fl_appart_tipo_oggetto = '0'

and val.ti_appart = 'VERS'

UNION

select
 'AMBIENTE' ti_appart,
 par.id_param_applic, par.nm_param_applic,
 val.id_valore_param_applic, val.ds_valore_param_applic,
 vers.id_vers, vers.nm_vers
 
from PIG_PARAM_APPLIC par
join PIG_VALORE_PARAM_APPLIC val
	on (val.id_param_applic = par.id_param_applic)
join PIG_AMBIENTE_VERS amb
	on (amb.id_ambiente_vers = val.id_ambiente_vers)
join PIG_VERS vers
	on (vers.id_ambiente_vers = amb.id_ambiente_vers)
	
where par.fl_appart_applic in ('1', '0')
and par.fl_appart_ambiente = '1'
and par.fl_appart_vers = '1'
and fl_appart_tipo_oggetto = '0'

and val.ti_appart = 'AMBIENTE'

and not exists (select *
				from PIG_VALORE_PARAM_APPLIC val_vers
				where val_vers.id_param_applic = par.id_param_applic
				and val_vers.id_vers = vers.id_vers
				and val_vers.ti_appart = 'VERS')

UNION

select
 'APPLIC' ti_appart,
 par.id_param_applic, par.nm_param_applic,
 val.id_valore_param_applic, val.ds_valore_param_applic,
 vers.id_vers, vers.nm_vers
 
from PIG_PARAM_APPLIC par
join PIG_VALORE_PARAM_APPLIC val
	on (val.id_param_applic = par.id_param_applic)
join PIG_VERS vers
	on (vers.id_vers like '%')
	
where par.fl_appart_applic = '1'
and par.fl_appart_ambiente in ('1', '0')
and par.fl_appart_vers = '1'
and fl_appart_tipo_oggetto = '0'

and val.ti_appart = 'APPLIC'

and not exists (select *
				from PIG_VALORE_PARAM_APPLIC val_vers
				where val_vers.id_param_applic = par.id_param_applic
				and val_vers.id_vers = vers.id_vers
				and val_vers.ti_appart = 'VERS')
and not exists (select *
				from PIG_VALORE_PARAM_APPLIC val_amb
				where val_amb.id_param_applic = par.id_param_applic
				and val_amb.id_ambiente_vers = vers.id_ambiente_vers
				and val_amb.ti_appart = 'AMBIENTE');

-- changeset root:1751557724186-117
COMMENT ON COLUMN PIG_V_GETVAL_PARAM_BY_VERS.ID_VALORE_PARAM_APPLIC IS 'PK.1';

-- changeset root:1751557724186-118
CREATE OR REPLACE FORCE VIEW "MON_V_LIS_OBJ_NON_VERS" ("ID_AMBIENTE_VERS", "NM_AMBIENTE_VERS", "ID_VERS", "NM_VERS", "NM_TIPO_OBJECT", "CD_KEY_OBJECT", "DS_OBJECT", "DT_FIRST_SES_ERR", "DT_LAST_SES_ERR", "FL_VERIF", "FL_NON_RISOLUB", "FL_VERS_SACER_DA_RECUP") AS select distinct
 amb.id_ambiente_vers, amb.nm_ambiente_vers, vers.id_vers, vers.nm_vers, 
 (select DISTINCT ses_ti_obj.nm_tipo_object
  from pig_sessione_ingest ses_ti_obj
  where ses_ti_obj.id_vers = ses.id_vers
  and ses_ti_obj.cd_key_object = ses.cd_key_object
  and ses_ti_obj.dt_apertura = (select max(dt_apertura)
								   from pig_sessione_ingest ses_max
								   where ses_max.id_vers = ses.id_vers
								   and ses_max.cd_key_object = ses.cd_key_object
								   )
 ) nm_tipo_object,
 ses.cd_key_object,
 (select DISTINCT ses_ds_object.ds_object
  from pig_sessione_ingest ses_ds_object
  where ses_ds_object.id_vers = ses.id_vers
  and ses_ds_object.cd_key_object = ses.cd_key_object
  and ses_ds_object.dt_apertura = (select max(dt_apertura)
								   from pig_sessione_ingest ses_max
								   where ses_max.id_vers = ses.id_vers
								   and ses_max.cd_key_object = ses.cd_key_object
								   )
 ) ds_object,
  (select min(ses_err.dt_apertura)
  from PIG_SESSIONE_INGEST ses_err
  where ses_err.id_vers = ses.id_vers
  and ses_err.cd_key_object = ses.cd_key_object
  ) dt_first_ses_err,
  
 (select max(ses_err.dt_apertura)
  from PIG_SESSIONE_INGEST ses_err
  where ses_err.id_vers = ses.id_vers
  and ses_err.cd_key_object = ses.cd_key_object
  ) dt_last_ses_err,
 case
	when not exists (select *
					from PIG_SESSIONE_INGEST ses_err
					where ses_err.id_vers = ses.id_vers
					and ses_err.cd_key_object = ses.cd_key_object					
					and ses_err.fl_ses_err_verif = '0')
		then '1'
		else '0'
 end fl_verif,
 case
	when not exists (select *
					from PIG_SESSIONE_INGEST ses_err
					where ses_err.id_vers = ses.id_vers
					and ses_err.cd_key_object = ses.cd_key_object
					and ses_err.fl_ses_err_verif = '0')
		then
			case
				when not exists (select *
								from PIG_SESSIONE_INGEST ses_err
								where ses_err.id_vers = ses.id_vers
								and ses_err.cd_key_object = ses.cd_key_object
								and ses_err.fl_ses_err_non_risolub = '0')
					then '1'
					else '0'
			end
		else null
 end fl_non_risolub,
 obj_da_recup.fl_vers_sacer_da_recup

from PIG_SESSIONE_INGEST ses
join PIG_VERS vers
 on (vers.id_vers = ses.id_vers)
join PIG_AMBIENTE_VERS amb
 on (amb.id_ambiente_vers = vers.id_ambiente_vers)
 
left join PIG_OBJECT obj_da_recup
 on (obj_da_recup.id_vers = ses.id_vers
 and obj_da_recup.cd_key_object = ses.cd_key_object)

where ses.ti_stato in ('CHIUSO_ERR_NOTIF', 'CHIUSO_ERR_SCHED', 'CHIUSO_ERR_CODA', 'CHIUSO_ERR_VERS', 'CHIUSO_ERR_TIMEOUT',
					   'CHIUSO_ERR_TRASFORMAZIONE', 'CHIUSO_ERR_VERSAMENTO_A_PING')
and ses.id_vers is not null
--and ses.nm_tipo_object is not null
and ses.cd_key_object is not null

and not exists (select *
				from PIG_OBJECT obj
				where obj.id_vers = ses.id_vers
				and obj.cd_key_object = ses.cd_key_object
				and obj.ti_stato_object in ('CHIUSO_OK', 'IN_ATTESA_FILE', 'IN_ATTESA_SCHED', 'IN_CODA_VERS', 'IN_ATTESA_VERS', 'WARNING', 'CHIUSO_WARNING', 'DA_TRASFORMARE',
											'CHIUSO_ERR_CRASH_DPI', 'CHIUSO_ERR_CRASH_FTP', 'CHIUSO_ERR_CRASH_FS_PRIM', 'CHIUSO_ERR_CRASH_FS_SECOND', 'ANNULLATO',
											'TRASFORMAZIONE_NON_ATTIVA', 'TRASFORMAZIONE_IN_CORSO', 'PREPARAZIONE_OGG_IN_CORSO','TRASFORMATO', 'VERSATO_A_PING',
										    'ERRORE_TRASFORMAZIONE', 'WARNING_TRASFORMAZIONE','ERRORE_VERSAMENTO_A_PING', 'IN_CORSO_ANNULLAMENTO'));

-- changeset root:1751557724186-119
COMMENT ON COLUMN MON_V_LIS_OBJ_NON_VERS.ID_VERS IS 'PK.1 relativa a tabella PIG_VERS';

-- changeset root:1751557724186-120
COMMENT ON COLUMN MON_V_LIS_OBJ_NON_VERS.CD_KEY_OBJECT IS 'PK.1 relativa a tabella PIG_VERS';

-- changeset root:1751557724186-121
CREATE OR REPLACE FORCE VIEW "MON_V_LIS_VERS_FALLITI" ("ID_SESSIONE_INGEST", "DT_APERTURA", "TI_STATO", "DT_STATO_COR", "ID_AMBIENTE_VERS", "NM_AMBIENTE_VERS", "ID_VERS", "NM_VERS", "CD_KEY_OBJECT", "DS_OBJECT", "CD_ERR", "DL_ERR", "TI_STATO_RISOLUZ", "FL_VERIF", "FL_NON_RISOLUB", "NM_TIPO_OBJECT", "TI_DT_CREAZIONE", "BL_XML", "NOTE") AS select
 ses.id_sessione_ingest,
 ses.dt_apertura,
 stato_cor.ti_stato,
 stato_cor.ts_reg_stato dt_stato_cor,
 
 amb.id_ambiente_vers, amb.nm_ambiente_vers, ses.id_vers, vers.nm_vers,
 ses.cd_key_object,
 ses.ds_object,
 
 ses.cd_err, 
 ses.dl_err,
 case
	when exists (select *
				from PIG_OBJECT obj
				where obj.id_vers = ses.id_vers
				and obj.cd_key_object = ses.cd_key_object
				and obj.ti_stato_object in ('CHIUSO_OK'))
		then 'RISOLTO'
	when exists (select *
				from PIG_OBJECT obj
				where obj.id_vers = ses.id_vers
				and obj.cd_key_object = ses.cd_key_object
				and obj.ti_stato_object in ('IN_ATTESA_FILE', 'IN_ATTESA_SCHED', 'IN_CODA_VERS', 'IN_ATTESA_VERS', 'DA_TRASFORMARE',
											'TRASFORMAZIONE_NON_ATTIVA','TRASFORMAZIONE_IN_CORSO', 'PREPARAZIONE_OGG_IN_CORSO','TRASFORMATO', 'VERSATO_A_PING',
											'ERRORE_TRASFORMAZIONE', 'WARNING_TRASFORMAZIONE',
											'ERRORE_VERSAMENTO_A_PING'))
		then 'IN_CORSO'
	when exists (select *
				from PIG_OBJECT obj
				where obj.id_vers = ses.id_vers
				and obj.cd_key_object = ses.cd_key_object
				and obj.ti_stato_object in ('WARNING'))
		then 'WARNING'
	when exists (select *
				from PIG_OBJECT obj
				where obj.id_vers = ses.id_vers
				and obj.cd_key_object = ses.cd_key_object
				and obj.ti_stato_object in ('CHIUSO_WARNING'))
		then 'CHIUSO_WARNING'
		else 'NON_RISOLTO'
 end ti_stato_risoluz,
 ses.fl_ses_err_verif fl_verif,
 ses.fl_ses_err_non_risolub fl_non_risolub,
 
 ses.nm_tipo_object, 
 case
	when stato_cor.ts_reg_stato between trunc(sysdate) and sysdate then 'CORR'
	when stato_cor.ts_reg_stato between trunc(sysdate - 6) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss') then '6_GG_PREC_CORR'
	else 'PREC_6_GG_PREC_CORR'
 end ti_dt_creazione,
 
 case
	when ses.nm_tipo_object = 'StudioDicom'
		then substr(xml_ses.bl_xml, 1, instr(xml_ses.bl_xml, '<StudyInstanceUID>'))
	else null
 end bl_xml,
 ses.note

from PIG_SESSIONE_INGEST ses
join PIG_VERS vers
 on (vers.id_vers = ses.id_vers)
join PIG_AMBIENTE_VERS amb
 on (amb.id_ambiente_vers = vers.id_ambiente_vers)
 
join  PIG_STATO_SESSIONE_INGEST stato_cor
 on (stato_cor.id_stato_sessione_ingest = ses.id_stato_sessione_ingest_cor)

left join PIG_XML_SESSIONE_INGEST xml_ses
 on (xml_ses.id_sessione_ingest = ses.id_sessione_ingest)
 
where ses.id_vers is not null
and ses.ti_stato in ('CHIUSO_ERR', 'CHIUSO_ERR_NOTIF', 'CHIUSO_ERR_SCHED', 'CHIUSO_ERR_CODA', 'CHIUSO_ERR_VERS', 'CHIUSO_ERR_RECUPERABILE',
					 'CHIUSO_ERR_TRASFORMAZIONE', 'CHIUSO_ERR_VERSAMENTO_A_PING')
							-- in futuro considerare anche gli stati 'CHIUSO_ERR_CRASH_DPI', 'CHIUSO_ERR_CRASH_FTP'

and (ses.nm_tipo_object is not null
or (ses.nm_tipo_object is null
and ses.ti_stato = 'CHIUSO_ERR_NOTIF'))
and vers.fl_cessato = 0;

-- changeset root:1751557724186-122
COMMENT ON COLUMN MON_V_LIS_VERS_FALLITI.ID_SESSIONE_INGEST IS 'PK.1 relativa a tabella PIG_SESSIONE_INGEST';

-- changeset root:1751557724186-123
CREATE OR REPLACE FORCE VIEW "MON_V_RIEP_VERS" ("NM_AMBIENTE_VERS", "NM_VERS", "ID_VERS", "FL_CESSATO", "FL_SES_ERR_NORIS_NOVER", "FL_OBJ_WARN", "FL_SES_NOTIF_DELAY", "FL_SES_REGCODA_NORIS_NOVER", "FL_SES_PREPXML_REGCODA_DELAY", "FL_SES_VERS_SACER_NORIS_NOVER", "FL_SES_VERS_SACER_DELAY") AS select
 amb.nm_ambiente_vers,
 vers.nm_vers,
 vers.id_vers,
 vers.fl_cessato,
 case
	when exists (select *
				from PIG_SESSIONE_INGEST ses
				where ses.id_vers = vers.id_vers
				and ses.ti_stato in ('CHIUSO_ERR', 'CHIUSO_ERR_NOTIF', 'CHIUSO_ERR_SCHED')
				and ses.fl_ses_err_verif = '0'
				and not exists (select *
								from PIG_OBJECT obj
								where obj.id_vers = ses.id_vers
								and obj.cd_key_object = ses.cd_key_object
								and obj.ti_stato_object in ('CHIUSO_OK', 'IN_ATTESA_FILE', 'IN_ATTESA_SCHED', 'IN_CODA_VERS', 'IN_ATTESA_VERS', 'WARNING', 'CHIUSO_WARNING'))
				)
		then '1'
		else '0'
 end fl_ses_err_noris_nover,
 case
	when exists (select *
				from PIG_OBJECT obj
				where obj.id_vers = vers.id_vers
				and obj.ti_stato_object = 'WARNING')
		then '1'
		else '0'
 end fl_obj_warn,
 case
	when exists (select *
				from PIG_OBJECT obj, PIG_SESSIONE_INGEST ses
				where obj.id_vers = vers.id_vers
				and obj.ti_stato_object = 'IN_ATTESA_FILE'
				and ses.id_sessione_ingest = obj.id_last_sessione_ingest
				and trunc(ses.dt_apertura) <= trunc(sysdate) - 1 )
		then '1'
		else '0'
 end fl_ses_notif_delay,
 case
	when exists (select *
				from PIG_SESSIONE_INGEST ses
				where ses.id_vers = vers.id_vers
				and ses.ti_stato = 'CHIUSO_ERR_CODA'
				and ses.fl_ses_err_verif = '0'
				and not exists (select *
								from PIG_OBJECT obj
								where obj.id_vers = ses.id_vers
								and obj.cd_key_object = ses.cd_key_object
								and obj.ti_stato_object in ('CHIUSO_OK', 'IN_ATTESA_FILE', 'IN_ATTESA_SCHED', 'IN_CODA_VERS', 'IN_ATTESA_VERS', 'WARNING', 'CHIUSO_WARNING'))
				)
		then '1'
		else '0'
 end fl_ses_regcoda_noris_nover,
 case
	when exists (select *
				from PIG_OBJECT obj, PIG_SESSIONE_INGEST ses
				where obj.id_vers = vers.id_vers
				and obj.ti_stato_object in ('IN_ATTESA_SCHED', 'IN_ATTESA_VERS')
				and ses.id_sessione_ingest = obj.id_last_sessione_ingest
				and trunc(ses.dt_apertura) <= trunc(sysdate) - 1 )
		then '1'
		else '0'
 end fl_ses_prepXML_regCoda_delay,
 case
	when exists (select *
				from PIG_SESSIONE_INGEST ses
				where ses.id_vers = vers.id_vers
				and ses.ti_stato in ('CHIUSO_ERR_VERS', 'CHIUSO_ERR_RECUPERABILE')
				and ses.fl_ses_err_verif = '0'
				and not exists (select *
								from PIG_OBJECT obj
								where obj.id_vers = ses.id_vers
								and obj.cd_key_object = ses.cd_key_object
								and obj.ti_stato_object in ('CHIUSO_OK', 'IN_ATTESA_FILE', 'IN_ATTESA_SCHED', 'IN_CODA_VERS', 'IN_ATTESA_VERS', 'WARNING', 'CHIUSO_WARNING'))
				)
		then '1'
		else '0'
 end fl_ses_vers_sacer_noris_nover,
 
 case
	when exists (select *
				from PIG_OBJECT obj, PIG_SESSIONE_INGEST ses
				where obj.id_vers = vers.id_vers
				and obj.ti_stato_object = 'IN_CODA_VERS'
				and ses.id_sessione_ingest = obj.id_last_sessione_ingest
				and trunc(ses.dt_apertura) <= trunc(sysdate) - 1 )
		then '1'
		else '0'
 end fl_ses_vers_sacer_delay

from PIG_VERS vers
join PIG_AMBIENTE_VERS amb
 on (amb.id_ambiente_vers = vers.id_ambiente_vers)
 where vers.fl_cessato = 0;

-- changeset root:1751557724186-124
COMMENT ON COLUMN MON_V_RIEP_VERS.ID_VERS IS 'PK.1 relativa a tabella PIG_VERS';

-- changeset root:1751557724186-125
CREATE OR REPLACE FORCE VIEW "MON_V_SES_RANGE_DT" ("ID_VERS", "ID_SESSIONE_INGEST", "NM_TIPO_OBJECT", "TI_STATO", "TI_STATO_RISOLUZ", "FL_VERIF", "FL_NON_RISOLUB", "TI_DT_CREAZIONE") AS select
 ses.id_vers, ses.id_sessione_ingest, ses.nm_tipo_object, 
 ses.ti_stato,
 case
	when exists (select *
				from PIG_OBJECT obj
				where obj.id_vers = ses.id_vers
				and obj.cd_key_object = ses.cd_key_object
				and obj.ti_stato_object in ('CHIUSO_OK'))
		then 'RISOLTO'
	when exists (select *
				from PIG_OBJECT obj
				where obj.id_vers = ses.id_vers
				and obj.cd_key_object = ses.cd_key_object
				and obj.ti_stato_object in ('IN_ATTESA_FILE', 'IN_ATTESA_SCHED', 'IN_CODA_VERS', 'IN_ATTESA_VERS', 'DA_TRASFORMARE',
											'TRASFORMAZIONE_NON_ATTIVA','TRASFORMAZIONE_IN_CORSO', 'PREPARAZIONE_OGG_IN_CORSO','TRASFORMATO', 'VERSATO_A_PING',
											'ERRORE_TRASFORMAZIONE', 'WARNING_TRASFORMAZIONE',
											'ERRORE_VERSAMENTO_A_PING'))
		then 'IN_CORSO'
	when exists (select *
				from PIG_OBJECT obj
				where obj.id_vers = ses.id_vers
				and obj.cd_key_object = ses.cd_key_object
				and obj.ti_stato_object in ('WARNING'))
		then 'WARNING'
	when exists (select *
				from PIG_OBJECT obj
				where obj.id_vers = ses.id_vers
				and obj.cd_key_object = ses.cd_key_object
				and obj.ti_stato_object in ('CHIUSO_WARNING'))
		then 'CHIUSO_WARNING'
		else 'NON_RISOLTO'
 end ti_stato_risoluz,
 ses.fl_ses_err_verif,
 ses.fl_ses_err_non_risolub,
 case
	when stato_cor.ts_reg_stato between trunc(sysdate) and sysdate + 1/24 then 'CORR'
	when stato_cor.ts_reg_stato between trunc(sysdate - 6) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss') then '6_GG_PREC_CORR'
	else 'PREC_6_GG_PREC_CORR'
 end ti_dt_creazione

from PIG_SESSIONE_INGEST ses
join  PIG_STATO_SESSIONE_INGEST stato_cor
 on (stato_cor.id_stato_sessione_ingest = ses.id_stato_sessione_ingest_cor)
join PIG_VERS vers
on (vers.id_vers = ses.id_vers)

where ses.id_vers is not null
and ses.ti_stato in ('CHIUSO_ERR', 'CHIUSO_ERR_NOTIF', 'CHIUSO_ERR_SCHED', 'CHIUSO_ERR_CODA', 'CHIUSO_ERR_VERS', 'CHIUSO_ERR_RECUPERABILE',
				     'CHIUSO_ERR_TRASFORMAZIONE', 'CHIUSO_ERR_VERSAMENTO_A_PING')

and (ses.nm_tipo_object is not null
or (ses.nm_tipo_object is null
and ses.ti_stato = 'CHIUSO_ERR_NOTIF'))
and vers.fl_cessato = 0;

-- changeset root:1751557724186-126
COMMENT ON COLUMN MON_V_SES_RANGE_DT.ID_SESSIONE_INGEST IS 'PK.1 relativa a tabella PIG_SESSIONE_INGEST';

-- changeset root:1751557724186-127
CREATE OR REPLACE FORCE VIEW "USR_V_ABIL_AMB_XVERS" ("ID_USER_IAM", "NM_APPLIC", "ID_ORGANIZ_APPLIC", "NM_ORGANIZ", "DS_ORGANIZ") AS select
 abiliam.id_user_iam,
 abiliam.nm_applic,
 amb.id_ambiente_vers,
 amb.nm_ambiente_vers,
 amb.ds_ambiente_vers
 
from SACER_IAM.USR_V_ABIL_AMB_SACER_XENTE abiliam
join PIG_AMBIENTE_VERS amb on (amb.id_ambiente_vers = abiliam.id_organiz_applic)
join SACER_IAM.USR_V_ABIL_ENTE_CONVENZ abilente on (abilente.id_ente_convenz = amb.id_ente_gestore);

-- changeset root:1751557724186-128
COMMENT ON COLUMN USR_V_ABIL_AMB_XVERS.ID_USER_IAM IS 'PK.1';

-- changeset root:1751557724186-129
COMMENT ON COLUMN USR_V_ABIL_AMB_XVERS.ID_ORGANIZ_APPLIC IS 'PK.2';

-- changeset root:1751557724186-130
CREATE OR REPLACE FORCE VIEW "PIG_V_GETVAL_PARAM_BY_AMB" ("TI_APPART", "ID_PARAM_APPLIC", "NM_PARAM_APPLIC", "ID_VALORE_PARAM_APPLIC", "DS_VALORE_PARAM_APPLIC", "ID_AMBIENTE_VERS", "NM_AMBIENTE_VERS") AS select
 'AMBIENTE' ti_appart,
 par.id_param_applic, par.nm_param_applic,
 val.id_valore_param_applic, val.ds_valore_param_applic,
 amb.id_ambiente_vers, amb.nm_ambiente_vers
 
from PIG_PARAM_APPLIC par
join PIG_VALORE_PARAM_APPLIC val
	on (val.id_param_applic = par.id_param_applic)
join PIG_AMBIENTE_VERS amb
	on (amb.id_ambiente_vers = val.id_ambiente_vers)
where par.fl_appart_applic in ('1', '0')
and par.fl_appart_ambiente = '1'
and par.fl_appart_vers = '0'
and fl_appart_tipo_oggetto = '0'

and val.ti_appart = 'AMBIENTE'

UNION

select
 'APPLIC' ti_appart,
 par.id_param_applic, par.nm_param_applic,
 val.id_valore_param_applic, val.ds_valore_param_applic,
 amb.id_ambiente_vers, amb.nm_ambiente_vers
 
from PIG_PARAM_APPLIC par
join PIG_VALORE_PARAM_APPLIC val
	on (val.id_param_applic = par.id_param_applic)
join PIG_AMBIENTE_VERS amb
	on (amb.nm_ambiente_vers like '%')
	
where par.fl_appart_applic = '1'
and par.fl_appart_ambiente = '1'
and par.fl_appart_vers = '0'
and fl_appart_tipo_oggetto = '0'

and val.ti_appart = 'APPLIC'

and not exists (select *
				from PIG_VALORE_PARAM_APPLIC val_amb
				where val_amb.id_param_applic = par.id_param_applic
				and val_amb.id_ambiente_vers = amb.id_ambiente_vers
				and val_amb.ti_appart = 'AMBIENTE'
				);

-- changeset root:1751557724186-131
COMMENT ON COLUMN PIG_V_GETVAL_PARAM_BY_AMB.ID_VALORE_PARAM_APPLIC IS 'PK.1';

-- changeset root:1751557724186-132
CREATE OR REPLACE FORCE VIEW "APL_V_PARAM_APPLIC" ("NM_PARAM_APPLIC", "DS_PARAM_APPLIC", "DS_VALORE_PARAM_APPLIC", "TI_PARAM_APPLIC") AS select 
	par.nm_param_applic,
    par.ds_param_applic,
    val.ds_valore_param_applic,
    par.ti_param_applic
from PIG_PARAM_APPLIC par
join PIG_VALORE_PARAM_APPLIC val
	on (val.id_param_applic = par.id_param_applic)
where par.fl_appart_applic = '1'
and par.fl_appart_ambiente = '0'
and par.fl_appart_vers = '0'
and par.fl_appart_tipo_oggetto = '0'

and val.ti_appart = 'APPLIC';

-- changeset root:1751557724186-133
COMMENT ON COLUMN APL_V_PARAM_APPLIC.NM_PARAM_APPLIC IS 'PK.1';

-- changeset root:1751557724186-134
CREATE OR REPLACE FORCE VIEW "PIG_V_GETVAL_PARAM_BY_APL" ("ID_PARAM_APPLIC", "NM_PARAM_APPLIC", "ID_VALORE_PARAM_APPLIC", "DS_VALORE_PARAM_APPLIC") AS select
 par.id_param_applic, par.nm_param_applic,
 val.id_valore_param_applic, val.ds_valore_param_applic
 
from PIG_PARAM_APPLIC par
join PIG_VALORE_PARAM_APPLIC val
	on (val.id_param_applic = par.id_param_applic)
where par.fl_appart_applic = '1'
and par.fl_appart_ambiente = '0'
and par.fl_appart_vers = '0'
and fl_appart_tipo_oggetto = '0'

and val.ti_appart = 'APPLIC';

-- changeset root:1751557724186-135
COMMENT ON COLUMN PIG_V_GETVAL_PARAM_BY_APL.ID_VALORE_PARAM_APPLIC IS 'PK.1';

-- changeset root:1751557724186-136
CREATE OR REPLACE FORCE VIEW "PIG_V_CHK_DEL_DICHVERSSACER" ("ID_DICH_VERS_SACER", "FL_DEL_DCH_VERS_SACER_OK") AS select
 dich_todel.id_dich_vers_sacer,
 case
	when not exists (select *
					 from PIG_OBJECT obj
					
					 where obj.id_vers = dich_todel.id_vers
					 and obj.ti_stato_object in ('IN_ATTESA_FILE', 'IN_ATTESA_SCHED')
					 )
		then '1'
		else '0'
 end fl_del_dch_vers_sacer_ok

from PIG_DICH_VERS_SACER dich_todel;

-- changeset root:1751557724186-137
COMMENT ON COLUMN PIG_V_CHK_DEL_DICHVERSSACER.ID_DICH_VERS_SACER IS 'PK.1';

-- changeset root:1751557724186-138
CREATE OR REPLACE FORCE VIEW "PIG_V_LIS_DICH_VERS_SACER" ("ID_VERS", "ID_TIPO_OBJECT", "NM_TIPO_OBJECT", "TI_DICH_VERS_TI_OBJ", "ID_DICH_VERS_SACER", "ID_ORGANIZ_IAM_DICH", "TI_DICH_VERS", "NM_USERID_SACER", "CD_PASSWORD_SACER", "NM_ORGANIZ_IAM_DICH", "DL_COMPOSITO_ORGANIZ_DICH") AS select
vers.id_vers,
null id_tipo_object,
null nm_tipo_object,

'VERS' ti_dich_vers_ti_obj,

dich_vers.id_dich_vers_sacer id_dich_ver_sacer,
dich_vers.id_organiz_iam id_organiz_iam_dich,
dich_vers.ti_dich_vers,
paramversuser.ds_valore_param_applic ,
paramverspsw.ds_valore_param_applic ,

org_dich.nm_organiz nm_organiz_iam_dich,
org_dich.dl_composito_organiz dl_composito_organiz_dich

from PIG_VERS vers
join PIG_DICH_VERS_SACER dich_vers 
 on (dich_vers.id_vers = vers.id_vers)

join sacer_iam.USR_V_TREE_ORGANIZ_IAM org_dich
 on (org_dich.id_organiz_iam = dich_vers.id_organiz_iam)

left join pig_v_getval_param_by_vers paramversuser
on (paramversuser.id_vers = vers.id_vers and paramversuser.nm_param_applic = 'USERID_USER_VERS')

left join pig_v_getval_param_by_vers paramverspsw
on (paramverspsw.id_vers = vers.id_vers and paramverspsw.nm_param_applic = 'PSW_USER_VERS')

UNION

select
vers.id_vers,
ti_obj.id_tipo_object,
ti_obj.nm_tipo_object,

'TI_OBJ' ti_dich_vers_ti_obj,

dich_ti_obj.id_dich_vers_sacer_tipo_obj id_dich_ver_sacer,
dich_ti_obj.id_organiz_iam id_organiz_iam_dich,
dich_ti_obj.ti_dich_vers,
paramobjuser.ds_valore_param_applic ,
paramobjpsw.ds_valore_param_applic ,

org_dich.nm_organiz nm_organiz_iam_dich,
org_dich.dl_composito_organiz dl_composito_organiz_dich

from PIG_VERS vers
join PIG_TIPO_OBJECT ti_obj			
 on (ti_obj.id_vers = vers.id_vers)
join PIG_DICH_VERS_SACER_TIPO_OBJ dich_ti_obj
 on (dich_ti_obj.id_tipo_object = ti_obj.id_tipo_object)

join sacer_iam.USR_V_TREE_ORGANIZ_IAM org_dich
 on (org_dich.id_organiz_iam = dich_ti_obj.id_organiz_iam)
 
join pig_v_getval_param_by_tiogg paramobjuser
on (paramobjuser.id_tipo_object = ti_obj.id_tipo_object and paramobjuser.nm_param_applic = 'USERID_USER_VERS')

join pig_v_getval_param_by_tiogg paramobjpsw
on (paramobjpsw.id_tipo_object = ti_obj.id_tipo_object and paramobjpsw.nm_param_applic = 'PSW_USER_VERS');

-- changeset root:1751557724186-139
COMMENT ON COLUMN PIG_V_LIS_DICH_VERS_SACER.TI_DICH_VERS_TI_OBJ IS 'PK.1';

-- changeset root:1751557724186-140
COMMENT ON COLUMN PIG_V_LIS_DICH_VERS_SACER.ID_DICH_VERS_SACER IS 'PK.2';

-- changeset root:1751557724186-141
COMMENT ON COLUMN PIG_V_LIS_DICH_VERS_SACER.ID_ORGANIZ_IAM_DICH IS 'PK.3';

-- changeset root:1751557724186-142
CREATE OR REPLACE FORCE VIEW "PIG_V_CHK_DEL_DICHVERSSACEROBJ" ("ID_DICH_VERS_SACER_TIPO_OBJ", "FL_DEL_DCH_VERS_SACER_TIOBJ_OK") AS select
 dich_todel.id_dich_vers_sacer_tipo_obj,
 case
	when not exists (select *
					 from PIG_OBJECT obj
					 					
					 where obj.id_tipo_object = dich_todel.id_tipo_object
					 and obj.ti_stato_object in ('IN_ATTESA_FILE', 'IN_ATTESA_SCHED')
					 )
		then '1'
		else '0'
 end fl_del_dch_vers_sacer_tiobj_ok

from PIG_DICH_VERS_SACER_TIPO_OBJ dich_todel;

-- changeset root:1751557724186-143
COMMENT ON COLUMN PIG_V_CHK_DEL_DICHVERSSACEROBJ.ID_DICH_VERS_SACER_TIPO_OBJ IS 'PK.1';

-- changeset root:1751557724186-144
CREATE OR REPLACE FORCE VIEW "MON_V_CHK_OK_OBJ" ("ID_OBJECT", "ID_OBJECT_PADRE", "FL_OBJECT_CHIUSO_OK") AS select
obj.id_object,
obj.id_object_padre,
case
	when obj.ti_stato_object in ('ANNULLATO', 'CHIUSO_OK')
		then '1'
		else '0'
end fl_object_chiuso_ok

from PIG_OBJECT obj

join PIG_SESSIONE_INGEST ses_cor
 on (ses_cor.id_sessione_ingest = obj.id_last_sessione_ingest);

-- changeset root:1751557724186-145
CREATE OR REPLACE FORCE VIEW "PIG_V_CHK_ORG_VERS_SACER" ("ID_OBJECT", "FL_ORG_VERS_SACER_OK") AS select
 obj.id_object,
 
 case
	when exists (select *
				 from PIG_UNITA_DOC_OBJECT ud
				 where ud.id_object = obj.id_object
				 and ud.id_organiz_iam is null
				 )
	or exists (select *
			   from PIG_UNITA_DOC_OBJECT ud
			   where ud.id_object = obj.id_object
			   and ud.id_organiz_iam is not null
			   and ud.id_organiz_iam not in (select lis_strut.id_organiz_iam_strut
											from PIG_V_LIS_STRUT_VERS_SACER lis_strut
											where lis_strut.id_tipo_object = obj.id_tipo_object
											)
			   )
		then '0'
		else '1'
 end fl_org_vers_sacer_ok

from PIG_object obj;

-- changeset root:1751557724186-146
COMMENT ON COLUMN PIG_V_CHK_ORG_VERS_SACER.ID_OBJECT IS 'PK.1';

-- changeset root:1751557724186-147
CREATE OR REPLACE FORCE VIEW "PIG_V_CHK_SIMULA_VERS_SACER" ("ID_OBJECT", "FL_SIMULA_VERS_SACER_OK") AS select
 obj.id_object,
 
 case
	when exists (select *
				 from PIG_UNITA_DOC_OBJECT ud
				 where ud.id_object = obj.id_object
				 and ud.fl_vers_simulato = '1'
				 )
		then '0'
		else '1'
 end fl_simula_vers_sacer_ok

from PIG_object obj;

-- changeset root:1751557724186-148
COMMENT ON COLUMN PIG_V_CHK_SIMULA_VERS_SACER.ID_OBJECT IS 'PK.1';

-- changeset root:1751557724186-149
CREATE OR REPLACE FORCE VIEW "PIG_V_LIS_CHK_UD_OBJ_ERR" ("ID_OBJECT", "ID_UNITA_DOC_OBJECT", "FL_UNITA_DOC_ERR", "CD_ERR", "DS_ERR") AS select
 tmp.id_object,
 tmp.id_unita_doc_object,
	 
 case
	when tmp.id_organiz_iam is null
		then '1'
		else
			case
				when fl_organiz_iam_non_prev = '1'
					then '1'
					else 
						case
							when tmp.fl_vers_simulato = '1'
								then '1'
								else '0'
						end
			end
 end fl_unita_doc_err,
	 
 case
	when tmp.id_organiz_iam is null
		then 'PING-PREPXML-FILE-015'
		else
			case
				when fl_organiz_iam_non_prev = '1'
					then 'PING-PREPXML-FILE-015'
					else 
						case
							when tmp.fl_vers_simulato = '1'
								then 'PING-PREPXML-FILE-016'
								else null
						end
			end
 end cd_err,
	 
 case
	when tmp.id_organiz_iam is null
		then 'Non e'' definita la struttura per cui versare a Sacer'
		else
			case
				when fl_organiz_iam_non_prev = '1'
					then 'La struttura per cui versare a Sacer non e'' fra quelle previste dal tipo oggetto o dal versatore'
					else 
						case
							when tmp.fl_vers_simulato = '1'
								then 'L''indicazione di versamento a Sacer simulato e'' settata nel XML di versamento'
								else null
						end
			end
 end ds_err
 
from (
		select
		 ud.id_object,
		 ud.id_unita_doc_object,
		 ud.id_organiz_iam,
		 ud.fl_vers_simulato,
		 case
			when ud.id_organiz_iam is not null
			and ud.id_organiz_iam not in (select lis_strut.id_organiz_iam_strut
										from PIG_V_LIS_STRUT_VERS_SACER lis_strut
										where lis_strut.id_tipo_object = obj.id_tipo_object
										)
				then '1'
				else '0'
		 end fl_organiz_iam_non_prev
 
		from PIG_UNITA_DOC_OBJECT ud
		join PIG_OBJECT obj
		 on (obj.id_object = ud.id_object)
	) tmp;

-- changeset root:1751557724186-150
COMMENT ON COLUMN PIG_V_LIS_CHK_UD_OBJ_ERR.ID_UNITA_DOC_OBJECT IS 'PK.1';

-- changeset root:1751557724186-151
CREATE OR REPLACE FORCE VIEW "PIG_V_LIS_CHK_UD_SES_ERR" ("ID_SESSIONE_INGEST", "ID_UNITA_DOC_SESSIONE", "FL_UNITA_DOC_ERR", "CD_ERR", "DS_ERR") AS select
 tmp.id_sessione_ingest,
 tmp.id_unita_doc_sessione,
	 
 case
	when tmp.id_organiz_iam is null
		then '1'
		else
			case
				when fl_organiz_iam_non_prev = '1'
					then '1'
					else 
						case
							when tmp.fl_vers_simulato = '1'
								then '1'
								else '0'
						end
			end
 end fl_unita_doc_err,
	 
 case
	when tmp.id_organiz_iam is null
		then 'PING-PREPXML-FILE-015'
		else
			case
				when fl_organiz_iam_non_prev = '1'
					then 'PING-PREPXML-FILE-015'
					else 
						case
							when tmp.fl_vers_simulato = '1'
								then 'PING-PREPXML-FILE-016'
								else null
						end
			end
 end cd_err,
	 
 case
	when tmp.id_organiz_iam is null
		then 'Non e'' definita la struttura per cui versare a Sacer'
		else
			case
				when fl_organiz_iam_non_prev = '1'
					then 'La struttura per cui versare a Sacer non e'' fra quelle previste dal tipo oggetto o dal versatore'
					else 
						case
							when tmp.fl_vers_simulato = '1'
								then 'L''indicazione di versamento a Sacer simulato e'' settata nel XML di versamento'
								else null
						end
			end
 end ds_err
 
from (
		select
		 ud.id_sessione_ingest,
		 ud.id_unita_doc_sessione,
		 ud.id_organiz_iam,
		 ud.fl_vers_simulato,
		 case
			when ud.id_organiz_iam is not null
			and ud.id_organiz_iam not in (select lis_strut.id_organiz_iam_strut
										from PIG_V_LIS_STRUT_VERS_SACER lis_strut
										where lis_strut.id_tipo_object = obj.id_tipo_object
										)
				then '1'
				else '0'
		 end fl_organiz_iam_non_prev
 
		from PIG_UNITA_DOC_SESSIONE ud
		join PIG_SESSIONE_INGEST ses
		 on (ses.id_sessione_ingest = ud.id_sessione_ingest)
		join PIG_OBJECT obj
		 on (obj.id_object = ses.id_object)
	) tmp;

-- changeset root:1751557724186-152
COMMENT ON COLUMN PIG_V_LIS_CHK_UD_SES_ERR.ID_UNITA_DOC_SESSIONE IS 'PK.1';

-- changeset root:1751557724186-153
CREATE OR REPLACE FORCE VIEW "PIG_V_CHK_SES_PREC_NOT_ANNUL" ("ID_OBJECT", "FL_SES_PREC_NOT_ANNULLATA") AS select
obj.id_object,
case
	when ses_last.id_sessione_ingest is not null
		then
			case
				when ses_last.ti_stato != 'ANNULLATO'
					then '1'
					else '0'
			end
		else '1'
end fl_ses_prec_not_annullata
from PIG_OBJECT obj
left join PIG_SESSIONE_INGEST ses_last
	on (ses_last.id_object = obj.id_object
	and ses_last.id_sessione_ingest != obj.id_last_sessione_ingest)
where ses_last.dt_apertura = (select max (dt_apertura)
							  from PIG_SESSIONE_INGEST ses_max
							  where ses_max.id_object = obj.id_object
							  and ses_max.id_sessione_ingest != obj.id_last_sessione_ingest
							 )
or ses_last.dt_apertura is null;

-- changeset root:1751557724186-154
COMMENT ON COLUMN PIG_V_CHK_SES_PREC_NOT_ANNUL.ID_OBJECT IS 'PK.1';

-- changeset root:1751557724186-155
CREATE OR REPLACE FORCE VIEW "MON_V_CHK_OBJ_TERMINATO" ("ID_OBJECT", "FL_OBJECT_TERMINATO") AS select
obj.id_object,
case
	when obj.ti_stato_object in ('ANNULLATO', 'CHIUSO_OK')
		then '1'
	when obj.ti_stato_object in ('CHIUSO_ERR_SCHED', 'CHIUSO_ERR_CODA', 'CHIUSO_ERR_VERS')
	and not exists (select *
					from PIG_SESSIONE_INGEST ses
					where ses.id_object = obj.id_object
					and (fl_ses_err_non_risolub = '0'
					or fl_ses_err_non_risolub is null)
					)
		then '1'
		else '0'
end fl_object_terminato

from PIG_OBJECT obj;

-- changeset root:1751557724186-156
COMMENT ON COLUMN MON_V_CHK_OBJ_TERMINATO.ID_OBJECT IS 'PK.1';

-- changeset root:1751557724186-157
CREATE OR REPLACE FORCE VIEW "MON_V_CALC_STATO_OBJ_DA_TRASF" ("ID_OGGETTO_PADRE", "TI_STATO_OBJECT_PADRE") AS SELECT obj_da_trasf.id_object id_oggetto_padre
	,CASE 
		WHEN NOT EXISTS (
				SELECT 1 FROM PIG_OBJECT obj_figlio
				JOIN MON_V_CHK_OBJ_TERMINATO figlio_terminato ON figlio_terminato.id_object = obj_figlio.id_object
				WHERE 
					obj_figlio.id_object_padre = obj_da_trasf.id_object
					AND figlio_terminato.fl_object_terminato = '0')
			THEN CASE 
					WHEN NOT EXISTS (SELECT 1 FROM PIG_OBJECT obj_figlio
										WHERE 
											obj_figlio.id_object_padre = obj_da_trasf.id_object
											AND obj_figlio.ti_stato_object != 'ANNULLATO')
						THEN 'ANNULLATO'
					ELSE CASE 
							WHEN EXISTS (SELECT 1 FROM PIG_OBJECT obj_figlio
										 JOIN PIG_UNITA_DOC_OBJECT ud_obj ON ud_obj.id_object = obj_figlio.id_object
										 WHERE obj_figlio.id_object_padre = obj_da_trasf.id_object
										 AND ud_obj.ti_stato_unita_doc_object = 'VERSATA_ERR'
										 AND ud_obj.cd_err_sacer NOT IN ('UD-002','UD-002-001'))
							THEN 'CHIUSO_ERR_VERS'
							ELSE 'CHIUSO_OK'
							END
					END
		ELSE NULL
		END ti_stato_object_padre
FROM PIG_OBJECT obj_da_trasf;

-- changeset root:1751557724186-158
COMMENT ON COLUMN MON_V_CALC_STATO_OBJ_DA_TRASF.ID_OGGETTO_PADRE IS 'PK.1';

-- changeset root:1751557724186-159
CREATE OR REPLACE FORCE VIEW "MON_V_OBJ_NON_VERS" ("ID_VERS", "CD_KEY_OBJECT", "NM_TIPO_OBJECT", "FL_VERIF", "FL_NON_RISOLUB") AS select distinct
 ses.id_vers,  ses.cd_key_object,
 
 (select distinct ses_ti_obj.nm_tipo_object
  from pig_sessione_ingest ses_ti_obj
  where ses_ti_obj.id_vers = ses.id_vers
  and ses_ti_obj.cd_key_object = ses.cd_key_object
  and ses_ti_obj.dt_apertura = (select max(dt_apertura)
								   from pig_sessione_ingest ses_max
								   where ses_max.id_vers = ses.id_vers
								   and ses_max.cd_key_object = ses.cd_key_object
								   )
 ) nm_tipo_object, 
 case
	when not exists (select *
					from PIG_SESSIONE_INGEST ses_err
					where ses_err.id_vers = ses.id_vers
					and ses_err.cd_key_object = ses.cd_key_object
--					and ses_err.nm_tipo_object = ses.nm_tipo_object
					and ses_err.fl_ses_err_verif = '0')
		then '1'
		else '0'
 end fl_verif,
 case
	when not exists (select *
					from PIG_SESSIONE_INGEST ses_err
					where ses_err.id_vers = ses.id_vers
					and ses_err.cd_key_object = ses.cd_key_object
--					and ses_err.nm_tipo_object = ses.nm_tipo_object
					and ses_err.fl_ses_err_verif = '0')
		then
			case
				when not exists (select *
								from PIG_SESSIONE_INGEST ses_err
								where ses_err.id_vers = ses.id_vers
								and ses_err.cd_key_object = ses.cd_key_object
--								and ses_err.nm_tipo_object = ses.nm_tipo_object
								and ses_err.fl_ses_err_non_risolub = '0')
					then '1'
					else '0'
			end
		else null
 end fl_non_risolub

from PIG_SESSIONE_INGEST ses

where ses.ti_stato in ('CHIUSO_ERR_NOTIF', 'CHIUSO_ERR_SCHED', 'CHIUSO_ERR_CODA', 'CHIUSO_ERR_VERS', 'CHIUSO_ERR_RECUPERABILE',
					   'CHIUSO_ERR_TRASFORMAZIONE', 'CHIUSO_ERR_VERSAMENTO_A_PING')
and ses.id_vers is not null
--and ses.nm_tipo_object is not null
and ses.cd_key_object is not null

and not exists (select *
				from PIG_OBJECT obj
				where obj.id_vers = ses.id_vers
				and obj.cd_key_object = ses.cd_key_object
				and obj.ti_stato_object in ('CHIUSO_OK', 'IN_ATTESA_FILE', 'IN_ATTESA_SCHED', 'IN_CODA_VERS', 'IN_ATTESA_VERS', 'WARNING', 'CHIUSO_WARNING', 'DA_TRASFORMARE',
											'CHIUSO_ERR_CRASH_DPI', 'CHIUSO_ERR_CRASH_FTP', 'CHIUSO_ERR_CRASH_FS_PRIM', 'CHIUSO_ERR_CRASH_FS_SECOND', 'ANNULLATO',
											'TRASFORMAZIONE_NON_ATTIVA','TRASFORMAZIONE_IN_CORSO', 'PREPARAZIONE_OGG_IN_CORSO','TRASFORMATO', 'VERSATO_A_PING',
										    'ERRORE_TRASFORMAZIONE', 'WARNING_TRASFORMAZIONE','ERRORE_VERSAMENTO_A_PING','IN_CORSO_ANNULLAMENTO'));

-- changeset root:1751557724186-160
COMMENT ON COLUMN MON_V_OBJ_NON_VERS.ID_VERS IS 'PK.1 relativa a tabella PIG_VERS';

-- changeset root:1751557724186-161
COMMENT ON COLUMN MON_V_OBJ_NON_VERS.CD_KEY_OBJECT IS 'PK.1 relativa a tabella PIG_VERS';

-- changeset root:1751557724186-162
CREATE OR REPLACE FORCE VIEW "MON_V_VIS_SES_ERRATA" ("ID_SESSIONE_INGEST", "DT_APERTURA", "DT_CHIUSURA", "NM_AMBIENTE_VERS", "NM_VERS", "CD_KEY_OBJECT", "NM_TIPO_OBJECT", "TI_STATO", "CD_ERR", "DL_ERR", "FL_VERIF", "FL_FORZA_WARNING", "FL_FORZA_ACCETTAZIONE", "DL_MOTIVO_FORZA_ACCETTAZIONE", "DL_MOTIVO_CHIUSO_WARNING", "CD_VERSIONE_XML_VERS", "BL_XML") AS select
 ses.id_sessione_ingest,
 ses.dt_apertura,
 ses.dt_chiusura,
 ses.nm_ambiente_vers, ses.nm_vers,
 ses.cd_key_object,
 ses.nm_tipo_object,
 ses.ti_stato,
 ses.cd_err, 
 ses.dl_err,
 ses.fl_ses_err_verif fl_verif,
 ses.fl_forza_warning, 
 ses.fl_forza_accettazione, 
 ses.dl_motivo_forza_accettazione,
 ses.dl_motivo_chiuso_warning,
 ses.cd_versione_xml_vers,
 xml_ses.bl_xml
from PIG_SESSIONE_INGEST ses
left join PIG_XML_SESSIONE_INGEST xml_ses
 on (xml_ses.id_sessione_ingest = ses.id_sessione_ingest);

-- changeset root:1751557724186-163
COMMENT ON COLUMN MON_V_VIS_SES_ERRATA.ID_SESSIONE_INGEST IS 'PK.1 relativa a tabella PIG_SESSIONE_INGEST';

-- changeset root:1751557724186-164
CREATE OR REPLACE FORCE VIEW "MON_V_LIS_SES_ERRATE" ("ID_SESSIONE_INGEST", "DT_APERTURA", "NM_AMBIENTE_VERS", "NM_VERS", "CD_KEY_OBJECT", "TI_STATO", "CD_ERR", "DL_ERR", "FL_VERIF", "NM_TIPO_OBJECT", "BL_XML") AS select
 ses.id_sessione_ingest,
 ses.dt_apertura,
 ses.nm_ambiente_vers, ses.nm_vers,
 ses.cd_key_object,
 ses.ti_stato,
 ses.cd_err, 
 ses.dl_err,
 ses.fl_ses_err_verif fl_verif,
 ses.nm_tipo_object,
 xml_ses.bl_xml
from PIG_SESSIONE_INGEST ses
left join PIG_XML_SESSIONE_INGEST xml_ses
 on (xml_ses.id_sessione_ingest = ses.id_sessione_ingest)

where (ses.ti_stato = 'CHIUSO_ERR' and (ses.id_vers is null or ses.nm_tipo_object is null))
or (ses.ti_stato = 'CHIUSO_ERR_NOTIF' and ses.id_vers is null);

-- changeset root:1751557724186-165
COMMENT ON COLUMN MON_V_LIS_SES_ERRATE.ID_SESSIONE_INGEST IS 'PK.1 relativa a tabella PIG_SESSIONE_INGEST';

-- changeset root:1751557724186-166
CREATE OR REPLACE FORCE VIEW "MON_V_LIS_VERS_OBJ_NON_VERS" ("ID_VERS", "CD_KEY_OBJECT", "NM_TIPO_OBJECT", "ID_SESSIONE_INGEST", "DT_APERTURA", "DT_CHIUSURA", "TI_STATO", "CD_ERR", "DL_ERR", "FL_VERIF", "FL_NON_RISOLUB") AS select
 ses.id_vers,
 ses.cd_key_object,
 ses.nm_tipo_object,
 ses.id_sessione_ingest,
 ses.dt_apertura,
 ses.dt_chiusura,
 ses.ti_stato,
 
 cd_err,
 dl_err,
 ses.fl_ses_err_verif fl_verif,
 ses.fl_ses_err_non_risolub fl_non_risolub
from PIG_SESSIONE_INGEST ses;

-- changeset root:1751557724186-167
COMMENT ON COLUMN MON_V_LIS_VERS_OBJ_NON_VERS.ID_SESSIONE_INGEST IS 'PK.1 relativa a tabella PIG_SESSIONE_INGEST';

-- changeset root:1751557724186-168
CREATE OR REPLACE FORCE VIEW "MON_V_LIS_UNITA_DOC_OBJECT" ("ID_UNITA_DOC_OBJECT", "ID_OBJECT", "CD_REGISTRO_UNITA_DOC_SACER", "AA_UNITA_DOC_SACER", "CD_KEY_UNITA_DOC_SACER", "NI_SIZE_FILE_BYTE", "TI_STATO_UNITA_DOC_OBJECT", "CD_ERR_SACER", "DL_ERR_SACER", "ID_ORGANIZ_IAM", "FL_VERS_SIMULATO", "DL_COMPOSITO_ORGANIZ", "CD_CONCAT_DL_ERR_SACER", "NM_STRUT", "NM_ENTE", "NM_AMBIENTE", "DT_STATO") AS SELECT ud.id_unita_doc_object
	,ud.id_object
	,ud.cd_registro_unita_doc_sacer
	,ud.aa_unita_doc_sacer
	,ud.cd_key_unita_doc_sacer
	,ud.ni_size_file_byte
	,ud.ti_stato_unita_doc_object
	,ud.cd_err_sacer
	,ud.dl_err_sacer
	,ud.id_organiz_iam
	,ud.fl_vers_simulato
	,org.dl_composito_organiz
	,ud.cd_err_sacer || ' ' || ud.dl_err_sacer cd_concat_dl_err_sacer
	,substr(org.dl_composito_organiz, instr(org.dl_composito_organiz, '/', - 1) + 2) nm_strut
	,substr(org.dl_composito_organiz, instr(org.dl_composito_organiz, '/', - 1, 2) + 2, instr(org.dl_composito_organiz, '/', - 1) - instr(org.dl_composito_organiz, '/', - 1, 2) - 3) nm_ente
	,substr(org.dl_composito_organiz, 1, instr(org.dl_composito_organiz, '/') - 2) nm_ambiente
	,ud.dt_stato
FROM PIG_UNITA_DOC_OBJECT ud
LEFT JOIN sacer_iam.USR_V_TREE_ORGANIZ_IAM org ON (org.id_organiz_iam = ud.id_organiz_iam);

-- changeset root:1751557724186-169
COMMENT ON COLUMN MON_V_LIS_UNITA_DOC_OBJECT.ID_UNITA_DOC_OBJECT IS 'PK.1';

-- changeset root:1751557724186-170
CREATE OR REPLACE FORCE VIEW "MON_V_LIS_UNITA_DOC_SESSIONE" ("ID_UNITA_DOC_SESSIONE", "ID_SESSIONE_INGEST", "CD_REGISTRO_UNITA_DOC_SACER", "AA_UNITA_DOC_SACER", "CD_KEY_UNITA_DOC_SACER", "NI_SIZE_FILE_BYTE", "TI_STATO_UNITA_DOC_SESSIONE", "CD_ERR_SACER", "DL_ERR_SACER", "ID_ORGANIZ_IAM", "FL_VERS_SIMULATO", "DL_COMPOSITO_ORGANIZ", "CD_CONCAT_DL_ERR_SACER", "NM_STRUT", "NM_ENTE", "NM_AMBIENTE", "DT_STATO") AS SELECT ud.id_unita_doc_sessione
	,ud.id_sessione_ingest
	,ud.cd_registro_unita_doc_sacer
	,ud.aa_unita_doc_sacer
	,ud.cd_key_unita_doc_sacer
	,ud.ni_size_file_byte
	,ud.ti_stato_unita_doc_sessione
	,ud.cd_err_sacer
	,ud.dl_err_sacer
	,ud.id_organiz_iam
	,ud.fl_vers_simulato
	,org.dl_composito_organiz
	,ud.cd_err_sacer || ' ' || ud.dl_err_sacer cd_concat_dl_err_sacer
	,substr(org.dl_composito_organiz, instr(org.dl_composito_organiz, '/', - 1) + 2) nm_strut
	,substr(org.dl_composito_organiz, instr(org.dl_composito_organiz, '/', - 1, 2) + 2, instr(org.dl_composito_organiz, '/', - 1) - instr(org.dl_composito_organiz, '/', - 1, 2) - 3) nm_ente
	,substr(org.dl_composito_organiz, 1, instr(org.dl_composito_organiz, '/') - 2) nm_ambiente
	,ud.dt_stato
FROM PIG_UNITA_DOC_SESSIONE ud
LEFT JOIN sacer_iam.USR_V_TREE_ORGANIZ_IAM org ON (org.id_organiz_iam = ud.id_organiz_iam);

-- changeset root:1751557724186-171
COMMENT ON COLUMN MON_V_LIS_UNITA_DOC_SESSIONE.ID_UNITA_DOC_SESSIONE IS 'PK.1';

-- changeset root:1751557724186-172
CREATE OR REPLACE FORCE VIEW "PIG_V_SISMA_CHECKS" ("ID_SISMA", "FL_VERIFICA_IN_CORSO", "FL_VERIFICA_ERRATA", "FL_FILE_MANCANTE") AS SELECT sISMA.id_SISMA,
           CASE
               WHEN EXISTS
                        (SELECT 1
                           FROM pig_SISMA_documenti docs
                          WHERE docs.id_SISMA = sISMA.id_SISMA
                            AND (docs.FL_ESITO_VERIFICA = '0'
                             AND docs.fl_deleted = '0') --                   (docs.FL_ESITO_VERIFICA = 1 AND docs.err_desc is not null AND docs.fl_deleted = 0) or
                                                       ) THEN
                   '1'
               ELSE
                   '0'
           END    AS "FL_VERIFICA_IN_CORSO",
           CASE
               WHEN EXISTS
                        (SELECT 1
                           FROM pig_SISMA_documenti docs
                          WHERE docs.id_SISMA = sISMA.id_SISMA
                            AND docs.FL_ESITO_VERIFICA = '1'
                            AND (docs.cd_err IS NOT NULL
                              OR docs.ds_err IS NOT NULL)
                            AND docs.fl_deleted = '0') THEN
                   '1'
               ELSE
                   '0'
           END    AS "FL_VERIFICA_ERRATA",
           CASE
               WHEN EXISTS
                        (SELECT 1
                           FROM pig_sisma_piano_doc_req  req
                                JOIN pig_sisma_fase_progetto fase_progetto
                                    ON (fase_progetto.id_sisma_fase_progetto =
                                        req.id_sisma_fase_progetto)
                                JOIN pig_sisma_val_doc doc
                                    ON (doc.id_sisma_val_doc =
                                        req.id_pig_sisma_val_doc)
                          WHERE req.id_sisma_fase_progetto =
                                sisma.id_sisma_fase_progetto
                            AND req.fl_doc_obbligatorio = '1'
                            AND NOT EXISTS
                                    (SELECT 1
                                       FROM pig_sisma_documenti docs
                                      WHERE docs.id_sisma = sisma.id_sisma
                                        AND docs.fl_deleted = '0'
                                        AND req.id_pig_sisma_val_doc =
                                            docs.id_sisma_val_doc)) THEN
                   '1'
               ELSE
                   '0'
           END    AS "FL_FILE_MANCANTE"
      FROM pig_SISMA SISMA;

-- changeset root:1751557724186-173
COMMENT ON COLUMN PIG_V_SISMA_CHECKS.ID_SISMA IS 'PK.1';

-- changeset root:1751557724186-174
CREATE OR REPLACE FORCE VIEW "PIG_V_DETT_SISMA" ("ID_SISMA", "NM_TIPO_DOCUMENTO", "ID_DOCUMENTO", "CD_ERR", "FL_ESITO_VERIFICA", "FL_DELETED") AS SELECT su.id_sisma,
           val.nm_tipo_documento,
           sdoc.id_sisma_documenti     "ID_DOCUMENTO",
           sdoc.cd_err,
           sdoc.fl_esito_verifica,
           sdoc.fl_deleted
      FROM pig_sisma  su
           JOIN pig_sisma_documenti sDOC ON su.id_sisma = sdoc.id_sisma
           JOIN pig_sisma_val_doc val
               ON sdoc.id_sisma_val_doc = val.id_sisma_val_doc;

-- changeset root:1751557724186-175
CREATE OR REPLACE FORCE VIEW "PIG_V_VALORE_SET_PARAM_TRASF" ("ID_VERS_TIPO_OBJECT_DA_TRASF", "ID_SET_PARAM_TRASF", "NM_SET_PARAM_TRASF", "ID_VALORE_SET_PARAM_TRASF", "DS_LISTA_VALORE_PARAM") AS SELECT
    tmp.id_vers_tipo_object_da_trasf,
    tmp.id_set_param_trasf,
    tmp.nm_set_param_trasf,
    MAX(tmp.id_valore_set_param_trasf),
    LISTAGG(tmp.nm_param_trasf
            || ' = '
            || tmp.val_param, u'\000A') WITHIN GROUP(
        ORDER BY
            tmp.nm_param_trasf
    ) ds_lista_valore_param
FROM
    (
        SELECT
            id_vers_tipo_object_da_trasf,
            id_set_param_trasf,
            nm_set_param_trasf,
            nm_param_trasf,
            id_valore_set_param_trasf,
            CASE
                WHEN length(val_param) > 50 THEN
                    substr(val_param, 1, 47)
                    || '...'
                ELSE
                    val_param
            END val_param
        FROM
            pig_v_val_param_trasf_def_spec
    ) tmp
GROUP BY
    tmp.id_vers_tipo_object_da_trasf,
    tmp.id_set_param_trasf,
    tmp.nm_set_param_trasf;

-- changeset root:1751557724186-176
COMMENT ON COLUMN PIG_V_VALORE_SET_PARAM_TRASF.ID_VERS_TIPO_OBJECT_DA_TRASF IS 'PK.1';

-- changeset root:1751557724186-177
COMMENT ON COLUMN PIG_V_VALORE_SET_PARAM_TRASF.ID_SET_PARAM_TRASF IS 'PK.2';

-- changeset root:1751557724186-178
CREATE OR REPLACE FORCE VIEW "PIG_V_VALORE_PARAM_TRASF" ("ID_VERS_TIPO_OBJECT_DA_TRASF", "ID_SET_PARAM_TRASF", "NM_SET_PARAM_TRASF", "NM_PARAM_TRASF", "ID_PARAM_TRASF", "DS_PARAM_TRASF", "TI_PARAM_TRASF", "ID_VALORE_SET_PARAM_TRASF", "ID_VALORE_PARAM_TRASF", "DS_VALORE_PARAM") AS select
id_vers_tipo_object_da_trasf,
id_set_param_trasf,
nm_set_param_trasf,

nm_param_trasf,
id_param_trasf,
ds_param_trasf,
ti_param_trasf,

id_valore_set_param_trasf,
id_valore_param_trasf,

case
	when ti_val_param = 'DEFAULT'
		then '[' || val_param || ']'
	else val_param
end ds_valore_param

from PIG_V_VAL_PARAM_TRASF_DEF_SPEC;

-- changeset root:1751557724186-179
COMMENT ON COLUMN PIG_V_VALORE_PARAM_TRASF.ID_VERS_TIPO_OBJECT_DA_TRASF IS 'PK.1';

-- changeset root:1751557724186-180
COMMENT ON COLUMN PIG_V_VALORE_PARAM_TRASF.ID_PARAM_TRASF IS 'PK.2';

-- changeset root:1751557724186-181
CREATE OR REPLACE FORCE VIEW "PIG_V_RIC_VERS" ("ID_AMBIENTE_VERS", "NM_AMBIENTE_VERS", "ID_VERS", "NM_VERS", "DS_LISTA_DICH_STRUT_SACER", "NM_USERID_SACER", "ID_ORGANIZ_IAM_STRUT", "NM_ORGANIZ_IAM_STRUT", "DL_COMPOSITO_ORGANIZ_STRUT", "NM_ORGANIZ_IAM_ENTE", "NM_ORGANIZ_IAM_AMBIENTE", "NM_TIPO_VERSATORE", "NM_ENTE_CONVENZ", "NM_AMBIENTE_ENTE_CONVENZ") AS SELECT
        amb_vers.id_ambiente_vers,
        amb_vers.nm_ambiente_vers,
        vers.id_vers,
        vers.nm_vers,
        (
            SELECT
                LISTAGG(
                    CASE
                        WHEN ti_dich_vers_ti_obj = 'VERS' THEN
                            'Per versatore ' || lis_dich.dl_composito_organiz_dich
                        ELSE
                            'Per tipo oggetto '
                            || lis_dich.nm_tipo_object
                            || ' '
                            || lis_dich.dl_composito_organiz_dich
                    END,
                    '; ' ON OVERFLOW TRUNCATE) WITHIN GROUP(
                    ORDER BY
                        ti_dich_vers_ti_obj DESC,
                        lis_dich.nm_tipo_object,
                        lis_dich.dl_composito_organiz_dich
                )
            FROM
                pig_v_lis_dich_vers_sacer lis_dich
            WHERE
                lis_dich.id_vers = vers.id_vers
        )                          ds_lista_dich_strut_sacer,
        strut_vers.nm_userid_sacer,
        strut_vers.id_organiz_iam_strut,
        strut_vers.nm_organiz_iam_strut,
        strut_vers.dl_composito_organiz_strut,
        org_ente.nm_organiz        nm_organiz_iam_ente,
        org_ambiente.nm_organiz    nm_organiz_iam_ambiente,
        CASE
            WHEN vers.id_ente_convenz IS NOT NULL THEN
                'PRODUTTORE'
            ELSE
                (
                    SELECT
                        sia.ti_ente_non_convenz
                    FROM
                        sacer_iam.org_ente_siam sia
                    WHERE
                        sia.id_ente_siam = vers.id_ente_fornit_estern
                )
        END                        AS nm_tipo_versatore,
        org_ente_convenz.nm_ente_siam  nm_ente_convenz,
        org_ambiente_convenz.nm_ambiente_ente_convenz

    FROM
             pig_vers vers
        JOIN pig_ambiente_vers            amb_vers ON ( amb_vers.id_ambiente_vers = vers.id_ambiente_vers )
        LEFT JOIN pig_v_lis_strut_vers_sacer   strut_vers ON ( strut_vers.id_vers = vers.id_vers )
        LEFT JOIN sacer_iam.usr_organiz_iam    org_strut ON ( org_strut.id_organiz_iam = strut_vers.id_organiz_iam_strut )
        LEFT JOIN sacer_iam.usr_organiz_iam    org_ente ON ( org_ente.id_organiz_iam = org_strut.id_organiz_iam_padre )
        LEFT JOIN sacer_iam.usr_organiz_iam    org_ambiente ON ( org_ambiente.id_organiz_iam = org_ente.id_organiz_iam_padre )
        LEFT JOIN sacer_iam.org_ente_siam   org_ente_convenz ON ( org_ente_convenz.id_ente_siam = vers.id_ente_convenz )
        LEFT JOIN sacer_iam.org_ambiente_ente_convenz   org_ambiente_convenz ON ( org_ambiente_convenz.id_ambiente_ente_convenz = org_ente_convenz.id_ambiente_ente_convenz );

-- changeset root:1751557724186-182
COMMENT ON COLUMN PIG_V_RIC_VERS.ID_VERS IS 'PK.1';

-- changeset root:1751557724186-183
COMMENT ON COLUMN PIG_V_RIC_VERS.ID_ORGANIZ_IAM_STRUT IS 'PK.2';

-- changeset root:1751557724186-184
CREATE OR REPLACE FORCE VIEW "APL_V_RANGE_MBYTE_CODA" ("NI_LIMITE_INF", "NI_LIMITE_SUP", "ID_CODA_DA_USARE") AS select 
 -1 ni_limite_inf,
 
(select to_number(ds_valore_param_applic)
 from PIG_V_GETVAL_PARAM_BY_APL
 where nm_param_applic = 'NUM_BYTE_LIMITE_SUP_1') ni_limite_sup,
 
 coda_1.ds_valore_param_applic id_coda_da_usare

from PIG_V_GETVAL_PARAM_BY_APL coda_1
where nm_param_applic = 'ID_CODA_1'

UNION

select 
 (select to_number(ds_valore_param_applic)
 from PIG_V_GETVAL_PARAM_BY_APL
 where nm_param_applic = 'NUM_BYTE_LIMITE_SUP_1') ni_limite_inf,
 
(select to_number(ds_valore_param_applic)
 from PIG_V_GETVAL_PARAM_BY_APL
 where nm_param_applic = 'NUM_BYTE_LIMITE_SUP_2') ni_limite_sup,
 
 coda_2.ds_valore_param_applic id_coda_da_usare

from PIG_V_GETVAL_PARAM_BY_APL coda_2
where nm_param_applic = 'ID_CODA_2'

UNION

select 
 (select to_number(ds_valore_param_applic)
 from PIG_V_GETVAL_PARAM_BY_APL
 where nm_param_applic = 'NUM_BYTE_LIMITE_SUP_2') ni_limite_inf,
 
(select to_number(ds_valore_param_applic)
 from PIG_V_GETVAL_PARAM_BY_APL
 where nm_param_applic = 'NUM_BYTE_LIMITE_SUP_3') ni_limite_sup,
 
 coda_3.ds_valore_param_applic id_coda_da_usare

from PIG_V_GETVAL_PARAM_BY_APL coda_3
where nm_param_applic = 'ID_CODA_3'

order by 1, 2;

-- changeset root:1751557724186-185
COMMENT ON COLUMN APL_V_RANGE_MBYTE_CODA.NI_LIMITE_INF IS 'PK.1';

-- changeset root:1751557724186-186
CREATE SEQUENCE SIAM_ABIL_ORGANIZ START WITH 7762 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-187
CREATE SEQUENCE SIAM_ABIL_TIPO_DATO START WITH 20143 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-188
CREATE SEQUENCE SIAM_AUTOR_SERV START WITH 70320 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-189
CREATE SEQUENCE SIAM_ENTE_SIAM_DA_ALLINEA START WITH 401 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-190
CREATE SEQUENCE SIAM_IND_IP_USER START WITH 61 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-191
CREATE SEQUENCE SIAM_ORGANIZ_DA_REPLIC START WITH 4262 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-192
CREATE SEQUENCE SIAM_USER START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-193
CREATE SEQUENCE SPIG_ABIL_VERS START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-194
CREATE SEQUENCE SPIG_AMBIENTE_VERS START WITH 305 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-195
CREATE SEQUENCE SPIG_CLASSE_ERRORE START WITH 41 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-196
CREATE SEQUENCE SPIG_CONT_UNITA_DOC_SACER START WITH 323 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-197
CREATE SEQUENCE SPIG_DEC_JOB START WITH 101 INCREMENT BY 1 MINVALUE 1 MAXVALUE 999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-198
CREATE SEQUENCE SPIG_DICH_ABIL_VERS START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-199
CREATE SEQUENCE SPIG_DICH_VERS_SACER START WITH 1104 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-200
CREATE SEQUENCE SPIG_DICH_VERS_SACER_TIPO_OBJ START WITH 1085 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-201
CREATE SEQUENCE SPIG_ERRORE START WITH 481 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-202
CREATE SEQUENCE SPIG_FILE_OBJECT START WITH 550528 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 500 NOORDER;

-- changeset root:1751557724186-203
CREATE SEQUENCE SPIG_INFO_DICOM START WITH 416139 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 500 NOORDER;

-- changeset root:1751557724186-204
CREATE SEQUENCE SPIG_KS_INSTANCE START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-205
CREATE SEQUENCE SPIG_OBJECT START WITH 584162 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 500 NOORDER;

-- changeset root:1751557724186-206
CREATE SEQUENCE SPIG_OBJECT_TRASF START WITH 6005 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-207
CREATE SEQUENCE SPIG_PARAM_APPLIC START WITH 802 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-208
CREATE SEQUENCE SPIG_PARTITION START WITH 23 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-209
CREATE SEQUENCE SPIG_PARTITION_VERS START WITH 589 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-210
CREATE SEQUENCE SPIG_SESSIONE_INGEST START WITH 646569 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 500 NOORDER;

-- changeset root:1751557724186-211
CREATE SEQUENCE SPIG_SESSIONE_RECUP START WITH 64 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-212
CREATE SEQUENCE SPIG_SISMA START WITH 1840 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-213
CREATE SEQUENCE SPIG_SISMA_DOCUMENTI START WITH 1920 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-214
CREATE SEQUENCE SPIG_SISMA_DOC_ENTRY START WITH 2300 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-215
CREATE SEQUENCE SPIG_SISMA_FINANZIAMENTO START WITH 10 INCREMENT BY 1 MINVALUE 0 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-216
CREATE SEQUENCE SPIG_SISMA_PIANO_DOC_REQ START WITH 1040 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-217
CREATE SEQUENCE SPIG_SISMA_STORICO_STATI START WITH 4470 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-218
CREATE SEQUENCE SPIG_SISMA_VAL_ATTO START WITH 1020 INCREMENT BY 1 MINVALUE 0 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-219
CREATE SEQUENCE SPIG_SISMA_VAL_DOC START WITH 100 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-220
CREATE SEQUENCE SPIG_SOP_CLASS START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-221
CREATE SEQUENCE SPIG_SOP_CLASS_DICOM START WITH 141 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-222
CREATE SEQUENCE SPIG_SOP_CLASS_DICOM_VERS START WITH 1601 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-223
CREATE SEQUENCE SPIG_STATO_CLASSE_ERRORE START WITH 21 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-224
CREATE SEQUENCE SPIG_STATO_OBJECT START WITH 101 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-225
CREATE SEQUENCE SPIG_STORICO_VERS_AMBIENTE START WITH 61 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-226
CREATE SEQUENCE SPIG_STRUMENTI_URBANISTICI START WITH 1341 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-227
CREATE SEQUENCE SPIG_STRUM_URB_ATTO START WITH 41 INCREMENT BY 1 MINVALUE 0 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-228
CREATE SEQUENCE SPIG_STRUM_URB_COLLEGAMENTI START WITH 281 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-229
CREATE SEQUENCE SPIG_STRUM_URB_DOCUMENTI START WITH 1561 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-230
CREATE SEQUENCE SPIG_STRUM_URB_STORICO_STATI START WITH 4470 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-231
CREATE SEQUENCE SPIG_SUB_PARTITION START WITH 206 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-232
CREATE SEQUENCE SPIG_UNITA_DOC_OBJECT START WITH 6133878 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 500 NOORDER;

-- changeset root:1751557724186-233
CREATE SEQUENCE SPIG_UNITA_DOC_SESSIONE START WITH 6481715 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-234
CREATE SEQUENCE SPIG_USO_RUOLO_DICH START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-235
CREATE SEQUENCE SPIG_USO_RUOLO_VERS START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-236
CREATE SEQUENCE SPIG_USR_APPART_USER_VERS START WITH 121 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-237
CREATE SEQUENCE SPIG_USR_USER START WITH 21 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-238
CREATE SEQUENCE SPIG_VALORE_PARAM_TRASF START WITH 1962 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-239
CREATE SEQUENCE SPIG_VALORE_SET_PARAM_TRASF START WITH 1524 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-240
CREATE SEQUENCE SPIG_VAL_SUB_PARTITION START WITH 238 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-241
CREATE SEQUENCE SPIG_VERS_DA_TRASF_TRASF START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-242
CREATE SEQUENCE SPIG_VERS_TIPO_OBJECT_DA_TRASF START WITH 1584 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-243
CREATE SEQUENCE SPIG_XML_ANNUL_SESSIONE_INGEST START WITH 1581 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-244
CREATE SEQUENCE SPIG_XML_OBJECT START WITH 432145 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 500 NOORDER;

-- changeset root:1751557724186-245
CREATE SEQUENCE SPIG_XML_OBJECT_TRASF START WITH 61 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-246
CREATE SEQUENCE SPIG_XML_SACER_UNITA_DOC START WITH 12143155 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 500 NOORDER;

-- changeset root:1751557724186-247
CREATE SEQUENCE SPIG_XML_SACER_UNITA_DOC_SES START WITH 6648587 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-248
CREATE SEQUENCE SPIG_XML_SESSIONE_INGEST START WITH 488049 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 500 NOORDER;

-- changeset root:1751557724186-249
CREATE SEQUENCE SXFO_FILE_TRASF START WITH 12519 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-250
CREATE SEQUENCE SXFO_PARAM_TRASF START WITH 5131 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-251
CREATE SEQUENCE SXFO_SET_PARAM_TRASF START WITH 21 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-252
CREATE SEQUENCE SXFO_SET_VALORI_PARAM START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-253
CREATE SEQUENCE SXFO_STORICO_TRASF START WITH 2202 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-254
CREATE SEQUENCE SXFO_TRASF START WITH 1201 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-255
CREATE SEQUENCE SXFO_VALORE_PARAM START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751557724186-256
CREATE TABLE IAM_AUTOR_SERV (ID_AUTOR_SERV NUMBER NOT NULL, ID_ABIL_ORGANIZ NUMBER NOT NULL, NM_SERVIZIO_WEB VARCHAR2(100 BYTE) NOT NULL, FL_ORGANIZ_DEFAULT CHAR(1 BYTE) DEFAULT '0' NOT NULL, CONSTRAINT PK_AUT_SERV PRIMARY KEY (ID_AUTOR_SERV));

-- changeset root:1751557724186-257
CREATE TABLE IAM_ENTE_SIAM_DA_ALLINEA (ID_ENTE_SIAM_DA_ALLINEA NUMBER NOT NULL, ID_ENTE_SIAM NUMBER NOT NULL, NM_ENTE_SIAM VARCHAR2(254 BYTE) NOT NULL, TI_OPER_ALLINEA VARCHAR2(20 BYTE) NOT NULL, TI_STATO_ALLINEA VARCHAR2(30 BYTE) NOT NULL, DT_LOG_ENTE_SIAM_DA_ALLINEA date NOT NULL, CD_ERR VARCHAR2(100 BYTE), DS_MSG_ERR VARCHAR2(254 BYTE), DT_ERR date, CONSTRAINT PK_ENTE_SIAM_DA_ALLINEA PRIMARY KEY (ID_ENTE_SIAM_DA_ALLINEA));

-- changeset root:1751557724186-258
CREATE TABLE IAM_IND_IP_USER (ID_IND_IP_USER NUMBER NOT NULL, ID_USER_IAM NUMBER NOT NULL, CD_IND_IP_USER VARCHAR2(100 BYTE) NOT NULL, CONSTRAINT PK_IND_IP PRIMARY KEY (ID_IND_IP_USER));

-- changeset root:1751557724186-259 splitStatements:true
CREATE TABLE MD_APPLICATIONFILES (ID NUMBER NOT NULL, APPLICATIONS_ID_FK NUMBER NOT NULL, NAME VARCHAR2(200 BYTE) NOT NULL, URI VARCHAR2(4000 BYTE) NOT NULL, TYPE VARCHAR2(100 BYTE) NOT NULL, STATE VARCHAR2(100 BYTE) NOT NULL, LANGUAGE VARCHAR2(100 BYTE), LOC NUMBER, SECURITY_GROUP_ID NUMBER DEFAULT 0 NOT NULL, CREATED_ON date DEFAULT SYSDATE NOT NULL, CREATED_BY VARCHAR2(4000 BYTE), UPDATED_ON date, UPDATED_BY VARCHAR2(4000 BYTE), CONSTRAINT MD_APPLICATIONFILES_PK PRIMARY KEY (ID));
COMMENT ON TABLE MD_APPLICATIONFILES IS 'Holds a tuple for each file that is being processed whether it is changed or not.';
COMMENT ON COLUMN MD_APPLICATIONFILES.NAME IS 'file name  //OBJECTNAME';
COMMENT ON COLUMN MD_APPLICATIONFILES.URI IS 'The uri is the part of the file url after the base dir has been removed.  See MD_APPLICATION for base dir';
COMMENT ON COLUMN MD_APPLICATIONFILES.TYPE IS 'This will denote the type of file we have, including DIR, FILE (text), BINARY, IGNORE (where we choose to ignore files)';
COMMENT ON COLUMN MD_APPLICATIONFILES.STATE IS 'State will be how this file is operated on.  For example. it will be OPEN, NEW, FIXED, IGNORED, REVIEWED, COMPLETE';
COMMENT ON COLUMN MD_APPLICATIONFILES.LANGUAGE IS 'Language of the file that has been processed.';
COMMENT ON COLUMN MD_APPLICATIONFILES.SECURITY_GROUP_ID IS 'APEX';
COMMENT ON COLUMN MD_APPLICATIONFILES.CREATED_ON IS 'APEX';
COMMENT ON COLUMN MD_APPLICATIONFILES.CREATED_BY IS 'APEX';
COMMENT ON COLUMN MD_APPLICATIONFILES.UPDATED_ON IS 'APEX';
COMMENT ON COLUMN MD_APPLICATIONFILES.UPDATED_BY IS 'APEX';

-- changeset root:1751557724186-260 splitStatements:true
CREATE TABLE MD_APPLICATIONS (ID NUMBER NOT NULL, NAME VARCHAR2(4000 BYTE), DESCRIPTION VARCHAR2(4000 BYTE), BASE_DIR VARCHAR2(4000 BYTE), OUTPUT_DIR VARCHAR2(4000 BYTE), BACKUP_DIR VARCHAR2(4000 BYTE), INPLACE NUMBER, PROJECT_ID_FK NUMBER NOT NULL, SECURITY_GROUP_ID NUMBER DEFAULT 0 NOT NULL, CREATED_ON date DEFAULT SYSDATE NOT NULL, CREATED_BY VARCHAR2(255 BYTE), LAST_UPDATED_ON date, LAST_UPDATED_BY VARCHAR2(255 BYTE), CONSTRAINT MD_APPLICATIONS_PK PRIMARY KEY (ID));
COMMENT ON TABLE MD_APPLICATIONS IS 'This is the base table for application projects.  It holds the base information for applications associated with a database';
COMMENT ON COLUMN MD_APPLICATIONS.ID IS 'Primary Key';
COMMENT ON COLUMN MD_APPLICATIONS.NAME IS 'Name of the application suite  //OBJECTNAME';
COMMENT ON COLUMN MD_APPLICATIONS.DESCRIPTION IS 'Overview of what the application does.';
COMMENT ON COLUMN MD_APPLICATIONS.BASE_DIR IS 'This is the base src directory for the application.  It could be an svn checkout, a clearcase view or something similar';
COMMENT ON COLUMN MD_APPLICATIONS.OUTPUT_DIR IS 'This is the output directory where the scanner will present the converted files, if there are converted or modified.';
COMMENT ON COLUMN MD_APPLICATIONS.BACKUP_DIR IS 'This is the directory in which the application files are backed up if a backp is chosen';
COMMENT ON COLUMN MD_APPLICATIONS.INPLACE IS 'Designates whether the changes have been made inplace, in the source directory or not';
COMMENT ON COLUMN MD_APPLICATIONS.PROJECT_ID_FK IS 'project of the database(s) this application relates to';

-- changeset root:1751557724186-261 splitStatements:true
CREATE TABLE MD_CATALOGS (ID NUMBER NOT NULL, CONNECTION_ID_FK NUMBER NOT NULL, CATALOG_NAME VARCHAR2(4000 BYTE), DUMMY_FLAG CHAR(1 BYTE) DEFAULT 'N', NATIVE_SQL CLOB, NATIVE_KEY VARCHAR2(4000 BYTE), COMMENTS VARCHAR2(4000 BYTE), SECURITY_GROUP_ID NUMBER DEFAULT 0 NOT NULL, CREATED_ON date DEFAULT SYSDATE NOT NULL, CREATED_BY VARCHAR2(255 BYTE), LAST_UPDATED_ON date, LAST_UPDATED_BY VARCHAR2(255 BYTE), CONSTRAINT MD_CATALOGS_PK PRIMARY KEY (ID));
COMMENT ON TABLE MD_CATALOGS IS 'Store catalogs in this table.';
COMMENT ON COLUMN MD_CATALOGS.CONNECTION_ID_FK IS 'Foreign key into the connections table - Shows what connection this catalog belongs to //PARENTFIELD';
COMMENT ON COLUMN MD_CATALOGS.CATALOG_NAME IS 'Name of the catalog //OBJECTNAME';
COMMENT ON COLUMN MD_CATALOGS.DUMMY_FLAG IS 'Flag to show if this catalog is a "dummy" catalog which is used as a placeholder for those platforms that do not support catalogs.  ''N'' signifies that this is NOT a dummy catalog, while ''Y'' signifies that it is.';
COMMENT ON COLUMN MD_CATALOGS.NATIVE_SQL IS 'THe SQL used to create this catalog';
COMMENT ON COLUMN MD_CATALOGS.NATIVE_KEY IS 'A unique identifier used to identify the catalog at source.';

-- changeset root:1751557724186-262 splitStatements:true
CREATE TABLE MD_COLUMNS (ID NUMBER NOT NULL, TABLE_ID_FK NUMBER NOT NULL, COLUMN_NAME VARCHAR2(4000 BYTE) NOT NULL, COLUMN_ORDER NUMBER NOT NULL, COLUMN_TYPE VARCHAR2(4000 BYTE), PRECISION NUMBER, SCALE NUMBER, NULLABLE CHAR(1 BYTE) NOT NULL, DEFAULT_VALUE VARCHAR2(4000 BYTE), NATIVE_SQL CLOB, NATIVE_KEY VARCHAR2(4000 BYTE), DATATYPE_TRANSFORMED_FLAG CHAR(1 BYTE), COMMENTS VARCHAR2(4000 BYTE), SECURITY_GROUP_ID NUMBER DEFAULT 0 NOT NULL, CREATED_BY VARCHAR2(255 BYTE), CREATED_ON date DEFAULT SYSDATE NOT NULL, LAST_UPDATED_BY VARCHAR2(255 BYTE), LAST_UPDATED_ON date, CONSTRAINT MD_COLUMNS_PK PRIMARY KEY (ID));
COMMENT ON TABLE MD_COLUMNS IS 'Column information is stored in this table.';
COMMENT ON COLUMN MD_COLUMNS.ID IS 'Primary Key';
COMMENT ON COLUMN MD_COLUMNS.TABLE_ID_FK IS 'The table that this column is part of //PARENTFIELD';
COMMENT ON COLUMN MD_COLUMNS.COLUMN_NAME IS 'The name of the column //OBJECTNAME';
COMMENT ON COLUMN MD_COLUMNS.COLUMN_ORDER IS 'The order this appears in the table';
COMMENT ON COLUMN MD_COLUMNS.COLUMN_TYPE IS 'The type of the column';
COMMENT ON COLUMN MD_COLUMNS.PRECISION IS 'The precision on the column';
COMMENT ON COLUMN MD_COLUMNS.SCALE IS 'The scale of the column';
COMMENT ON COLUMN MD_COLUMNS.NULLABLE IS 'Yes or No.  Null signifies NO';
COMMENT ON COLUMN MD_COLUMNS.DEFAULT_VALUE IS 'Default value on the column';
COMMENT ON COLUMN MD_COLUMNS.NATIVE_SQL IS 'The SQL used to create this column at source';
COMMENT ON COLUMN MD_COLUMNS.NATIVE_KEY IS 'Unique identifier for this object at source';
COMMENT ON COLUMN MD_COLUMNS.DATATYPE_TRANSFORMED_FLAG IS 'This is set to ''Y'' to show if the data type was transformed.  This is useful so we don''t apply more than 1 datatype transformation to a column';

-- changeset root:1751557724186-263 splitStatements:true
CREATE TABLE MD_CONNECTIONS (ID NUMBER NOT NULL, PROJECT_ID_FK NUMBER NOT NULL, TYPE VARCHAR2(4000 BYTE), HOST VARCHAR2(4000 BYTE), PORT NUMBER, USERNAME VARCHAR2(4000 BYTE), PASSWORD VARCHAR2(4000 BYTE), DBURL VARCHAR2(4000 BYTE), NAME VARCHAR2(255 BYTE), NATIVE_SQL CLOB, STATUS VARCHAR2(30 BYTE), NUM_CATALOGS NUMBER, NUM_COLUMNS NUMBER, NUM_CONSTRAINTS NUMBER, NUM_GROUPS NUMBER, NUM_ROLES NUMBER, NUM_INDEXES NUMBER, NUM_OTHER_OBJECTS NUMBER, NUM_PACKAGES NUMBER, NUM_PRIVILEGES NUMBER, NUM_SCHEMAS NUMBER, NUM_SEQUENCES NUMBER, NUM_STORED_PROGRAMS NUMBER, NUM_SYNONYMS NUMBER, NUM_TABLES NUMBER, NUM_TABLESPACES NUMBER, NUM_TRIGGERS NUMBER, NUM_USER_DEFINED_DATA_TYPES NUMBER, NUM_USERS NUMBER, NUM_VIEWS NUMBER, COMMENTS VARCHAR2(4000 BYTE), SECURITY_GROUP_ID NUMBER DEFAULT 0 NOT NULL, CREATED_ON date DEFAULT SYSDATE NOT NULL, CREATED_BY VARCHAR2(255 BYTE), LAST_UPDATED_ON date, LAST_UPDATED_BY VARCHAR2(255 BYTE), CONSTRAINT MD_CONNECTIONS_PK PRIMARY KEY (ID));
COMMENT ON TABLE MD_CONNECTIONS IS 'This table is used to store connection information.  For example, in migrations, we could be carrying out a consolidation which occurs across many connections.';
COMMENT ON COLUMN MD_CONNECTIONS.ID IS 'Primary key';
COMMENT ON COLUMN MD_CONNECTIONS.PROJECT_ID_FK IS 'The project to which this connection belongs //PARENTFIELD';
COMMENT ON COLUMN MD_CONNECTIONS.TYPE IS 'The type of the connection - For example it could be used to store "ORACLE" or "MYSQL"';
COMMENT ON COLUMN MD_CONNECTIONS.HOST IS 'The host to which this connection connects.';
COMMENT ON COLUMN MD_CONNECTIONS.PORT IS 'The port to which this connection connects';
COMMENT ON COLUMN MD_CONNECTIONS.USERNAME IS 'The username used to make the connection';
COMMENT ON COLUMN MD_CONNECTIONS.PASSWORD IS 'The password used to make this connection';
COMMENT ON COLUMN MD_CONNECTIONS.DBURL IS 'The database url used to make this connection';
COMMENT ON COLUMN MD_CONNECTIONS.NAME IS '//OBJECTNAME';
COMMENT ON COLUMN MD_CONNECTIONS.NATIVE_SQL IS 'The native sql used to create this connection';
COMMENT ON COLUMN MD_CONNECTIONS.STATUS IS 'Status of Migration, = captured,converted,generated,datamoved';

-- changeset root:1751557724186-264
CREATE TABLE MD_CONSTRAINTS (ID NUMBER NOT NULL, DELETE_CLAUSE VARCHAR2(4000 BYTE), NAME VARCHAR2(4000 BYTE), CONSTRAINT_TYPE VARCHAR2(4000 BYTE), TABLE_ID_FK NUMBER NOT NULL, REFTABLE_ID_FK NUMBER, CONSTRAINT_TEXT CLOB, LANGUAGE VARCHAR2(40 BYTE) NOT NULL, COMMENTS VARCHAR2(4000 BYTE), SECURITY_GROUP_ID NUMBER DEFAULT 0 NOT NULL, CREATED_ON date DEFAULT SYSDATE NOT NULL, CREATED_BY VARCHAR2(255 BYTE), LAST_UPDATED_ON date, LAST_UPDATED_BY VARCHAR2(255 BYTE));

-- changeset root:1751557724186-265 splitStatements:true
CREATE TABLE MD_FILE_ARTIFACTS (ID NUMBER NOT NULL, APPLICATIONFILES_ID NUMBER NOT NULL, PATTERN VARCHAR2(4000 BYTE), STRING_FOUND VARCHAR2(4000 BYTE), STRING_REPLACED VARCHAR2(4000 BYTE), TYPE VARCHAR2(200 BYTE), STATUS VARCHAR2(4000 BYTE), LINE NUMBER, PATTERN_START NUMBER, PATTERN_END NUMBER, DUE_DATE date, DB_TYPE VARCHAR2(100 BYTE), CODE_TYPE VARCHAR2(1000 BYTE), DESCRIPTION VARCHAR2(4000 BYTE), PRIORITY NUMBER(*, 0), SECURITY_GROUP_ID VARCHAR2(20 BYTE) DEFAULT '0' NOT NULL, CREATED_ON date DEFAULT SYSDATE NOT NULL, CREATED_BY VARCHAR2(4000 BYTE), LAST_UPDATED date, LAST_UPDATED_BY VARCHAR2(4000 BYTE), CONSTRAINT MD_FILE_ARTIFACTS_PK PRIMARY KEY (ID));
COMMENT ON TABLE MD_FILE_ARTIFACTS IS 'Holds a tuple for each interesting thing the scanner finds in a file';
COMMENT ON COLUMN MD_FILE_ARTIFACTS.PATTERN IS 'Pattern used to search source file for interesting artifiacts';
COMMENT ON COLUMN MD_FILE_ARTIFACTS.STRING_FOUND IS 'String found in source from the pattern supplied';
COMMENT ON COLUMN MD_FILE_ARTIFACTS.STRING_REPLACED IS 'This is the string which replace the string found if it was replaced.';
COMMENT ON COLUMN MD_FILE_ARTIFACTS.TYPE IS 'This is the type of the replacement.  It could be a straight replace from a replacement pattern, or we could have passed the string to a translator which would change the string depending on the database.';
COMMENT ON COLUMN MD_FILE_ARTIFACTS.STATUS IS 'Pattern used to search source file for interesting artifiacts';
COMMENT ON COLUMN MD_FILE_ARTIFACTS.DUE_DATE IS 'Due date is used by the TODO mechanism to manage the validation and work to complete this change';
COMMENT ON COLUMN MD_FILE_ARTIFACTS.DB_TYPE IS 'Source database calls type';
COMMENT ON COLUMN MD_FILE_ARTIFACTS.CODE_TYPE IS 'Source code db api, like dblib, jdbc';
COMMENT ON COLUMN MD_FILE_ARTIFACTS.DESCRIPTION IS 'This is a description of the artifact which will have a default generated by the scanner and then can be modified by the user to be more appropriate for their use';
COMMENT ON COLUMN MD_FILE_ARTIFACTS.PRIORITY IS 'The priority is set for the TODOs so they can be managed by the user';

-- changeset root:1751557724186-266 splitStatements:true
CREATE TABLE MD_GROUP_MEMBERS (ID NUMBER NOT NULL, GROUP_ID_FK NUMBER NOT NULL, USER_ID_FK NUMBER, GROUP_MEMBER_ID_FK NUMBER, SECURITY_GROUP_ID NUMBER DEFAULT 0 NOT NULL, CREATED_ON date DEFAULT SYSDATE NOT NULL, CREATED_BY VARCHAR2(255 BYTE), LAST_UPDATED_ON date, LAST_UPDATED_BY VARCHAR2(255 BYTE), CONSTRAINT MD_GROUP_MEMBERS_PK PRIMARY KEY (ID));
COMMENT ON TABLE MD_GROUP_MEMBERS IS 'This table is used to store the members of a group.';
COMMENT ON COLUMN MD_GROUP_MEMBERS.ID IS 'Primary Key';
COMMENT ON COLUMN MD_GROUP_MEMBERS.USER_ID_FK IS 'Id of member';
COMMENT ON COLUMN MD_GROUP_MEMBERS.GROUP_MEMBER_ID_FK IS 'groups can be members of groups';

-- changeset root:1751557724186-267 splitStatements:true
CREATE TABLE MD_INDEX_DETAILS (ID NUMBER NOT NULL, INDEX_ID_FK NUMBER NOT NULL, COLUMN_ID_FK NUMBER NOT NULL, INDEX_PORTION NUMBER, DETAIL_ORDER NUMBER NOT NULL, SECURITY_GROUP_ID NUMBER DEFAULT 0 NOT NULL, CREATED_ON date DEFAULT SYSDATE NOT NULL, CREATED_BY VARCHAR2(255 BYTE), LAST_UPDATED_ON date, LAST_UPDATED_BY VARCHAR2(255 BYTE), CONSTRAINT MD_INDEX_DETAILS_PK PRIMARY KEY (ID));
COMMENT ON TABLE MD_INDEX_DETAILS IS 'This table stores the details of an index.  It shows what columns are "part" of the index.';
COMMENT ON COLUMN MD_INDEX_DETAILS.INDEX_ID_FK IS 'The index to which this detail belongs. //PARENTFIELD';
COMMENT ON COLUMN MD_INDEX_DETAILS.INDEX_PORTION IS 'To support indexing on part of a field';

-- changeset root:1751557724186-268 splitStatements:true
CREATE TABLE MD_MIGR_PARAMETER (ID NUMBER NOT NULL, CONNECTION_ID_FK NUMBER NOT NULL, OBJECT_ID NUMBER NOT NULL, OBJECT_TYPE VARCHAR2(4000 BYTE) NOT NULL, PARAM_EXISTING NUMBER NOT NULL, PARAM_ORDER NUMBER NOT NULL, PARAM_NAME VARCHAR2(4000 BYTE) NOT NULL, PARAM_TYPE VARCHAR2(4000 BYTE) NOT NULL, PARAM_DATA_TYPE VARCHAR2(4000 BYTE) NOT NULL, PERCISION NUMBER, SCALE NUMBER, NULLABLE CHAR(1 BYTE) NOT NULL, DEFAULT_VALUE VARCHAR2(4000 BYTE), SECURITY_GROUP_ID NUMBER DEFAULT 0 NOT NULL, CREATED_ON date DEFAULT SYSDATE NOT NULL, CREATED_BY VARCHAR2(255 BYTE), LAST_UPDATED_ON date, LAST_UPDATED_BY VARCHAR2(255 BYTE), CONSTRAINT MIGR_PARAMETER_PK PRIMARY KEY (ID));
COMMENT ON COLUMN MD_MIGR_PARAMETER.CONNECTION_ID_FK IS 'the connection in which this belongs //PARENTFIELD';
COMMENT ON COLUMN MD_MIGR_PARAMETER.PARAM_EXISTING IS '1 represents a new parameter for PL/SQL that was not present in the origional. 0 represents a n existing parameter that was present in the origional';
COMMENT ON COLUMN MD_MIGR_PARAMETER.PARAM_ORDER IS 'IF -1 THEN THIS PARAM IS A RETURN PARAMETER. 1 WILL BE THE FIRST PARAMETER IN THE PARAMETER LIST';

-- changeset root:1751557724186-269 splitStatements:true
CREATE TABLE MD_OTHER_OBJECTS (ID NUMBER NOT NULL, SCHEMA_ID_FK NUMBER NOT NULL, NAME VARCHAR2(4000 BYTE), NATIVE_SQL CLOB, NATIVE_KEY VARCHAR2(4000 BYTE), COMMENTS VARCHAR2(4000 BYTE), SECURITY_GROUP_ID NUMBER DEFAULT 0 NOT NULL, CREATED_ON date DEFAULT SYSDATE NOT NULL, CREATED_BY VARCHAR2(255 BYTE), LAST_UPDATED_ON date, LAST_UPDATED_BY VARCHAR2(255 BYTE), CONSTRAINT MD_OTHER_OBJECTS_PK PRIMARY KEY (ID));
COMMENT ON TABLE MD_OTHER_OBJECTS IS 'For storing objects that don''t belong anywhere else';
COMMENT ON COLUMN MD_OTHER_OBJECTS.ID IS 'Primary Key';
COMMENT ON COLUMN MD_OTHER_OBJECTS.SCHEMA_ID_FK IS 'Schema to which this object blongs. //PARENTFIELD';
COMMENT ON COLUMN MD_OTHER_OBJECTS.NAME IS 'Name of this object //OBJECTNAME';
COMMENT ON COLUMN MD_OTHER_OBJECTS.NATIVE_SQL IS 'The native SQL used to create this object';
COMMENT ON COLUMN MD_OTHER_OBJECTS.NATIVE_KEY IS 'A key that identifies this object at source.';

-- changeset root:1751557724186-270 splitStatements:true
CREATE TABLE MD_PARTITIONS (ID NUMBER NOT NULL, TABLE_ID_FK NUMBER NOT NULL, NATIVE_SQL CLOB, PARTITION_EXPRESSION VARCHAR2(4000 BYTE), COMMENTS VARCHAR2(4000 BYTE), SECURITY_GROUP_ID NUMBER DEFAULT 0 NOT NULL, CREATED_BY VARCHAR2(255 BYTE), CREATED_ON date DEFAULT SYSDATE NOT NULL, LAST_UPDATED_BY VARCHAR2(255 BYTE), LAST_UPDATED_ON date, CONSTRAINT MD_PARTITIONS_PK PRIMARY KEY (ID));
COMMENT ON TABLE MD_PARTITIONS IS 'Partition information is stored in this table.';
COMMENT ON COLUMN MD_PARTITIONS.ID IS 'Primary Key';
COMMENT ON COLUMN MD_PARTITIONS.TABLE_ID_FK IS 'The table that this partition refers to //PARENTFIELD';
COMMENT ON COLUMN MD_PARTITIONS.NATIVE_SQL IS 'The SQL used to create this partition at source';
COMMENT ON COLUMN MD_PARTITIONS.PARTITION_EXPRESSION IS 'The partition expression';

-- changeset root:1751557724186-271 splitStatements:true
CREATE TABLE MD_PROJECTS (ID NUMBER NOT NULL, PROJECT_NAME VARCHAR2(4000 BYTE) NOT NULL, COMMENTS VARCHAR2(4000 BYTE), SECURITY_GROUP_ID NUMBER DEFAULT 0 NOT NULL, CREATED_ON date DEFAULT SYSDATE NOT NULL, CREATED_BY VARCHAR2(255 BYTE), LAST_UPDATED_ON date, LAST_UPDATED_BY VARCHAR2(255 BYTE), CONSTRAINT MD_PROJECTS_PK PRIMARY KEY (ID));
COMMENT ON TABLE MD_PROJECTS IS 'This is a top level container for a set of connections.';
COMMENT ON COLUMN MD_PROJECTS.ID IS 'Primary key';
COMMENT ON COLUMN MD_PROJECTS.PROJECT_NAME IS 'Name of the project //OBJECTNAME';

-- changeset root:1751557724186-272 splitStatements:true
CREATE TABLE MD_REPOVERSIONS (REVISION NUMBER NOT NULL);
COMMENT ON TABLE MD_REPOVERSIONS IS 'This table is used to version this schema for future requirements.';

-- changeset root:1751557724186-273 splitStatements:true
CREATE TABLE MD_SEQUENCES (ID NUMBER NOT NULL, SCHEMA_ID_FK NUMBER NOT NULL, NAME VARCHAR2(4000 BYTE) NOT NULL, SEQ_START NUMBER NOT NULL, INCR NUMBER DEFAULT 1 NOT NULL, NATIVE_SQL CLOB, NATIVE_KEY VARCHAR2(4000 BYTE), COMMENTS VARCHAR2(4000 BYTE), SECURITY_GROUP_ID NUMBER DEFAULT 0 NOT NULL, CREATED_ON date DEFAULT SYSDATE NOT NULL, CREATED_BY VARCHAR2(255 BYTE) DEFAULT '0' NOT NULL, LAST_UPDATED_ON date, LAST_UPDATED_BY VARCHAR2(255 BYTE), CONSTRAINT MD_SEQUENCES_PK PRIMARY KEY (ID));
COMMENT ON TABLE MD_SEQUENCES IS 'For storing information on sequences.';
COMMENT ON COLUMN MD_SEQUENCES.ID IS 'Primary Key';
COMMENT ON COLUMN MD_SEQUENCES.SCHEMA_ID_FK IS 'The schema to which this object belongs. //PARENTFIELD';
COMMENT ON COLUMN MD_SEQUENCES.NAME IS 'Name of this sequence //OBJECTNAME';
COMMENT ON COLUMN MD_SEQUENCES.SEQ_START IS 'Starting point of the sequence';
COMMENT ON COLUMN MD_SEQUENCES.INCR IS 'Increment value of the sequence';
COMMENT ON COLUMN MD_SEQUENCES.NATIVE_SQL IS 'SQL used to create this object at source';
COMMENT ON COLUMN MD_SEQUENCES.NATIVE_KEY IS 'Identifier for this object at source.';

-- changeset root:1751557724186-274 splitStatements:true
CREATE TABLE MD_TABLESPACES (ID NUMBER NOT NULL, SCHEMA_ID_FK NUMBER NOT NULL, TABLESPACE_NAME VARCHAR2(4000 BYTE), NATIVE_SQL CLOB, NATIVE_KEY VARCHAR2(4000 BYTE), COMMENTS VARCHAR2(4000 BYTE), SECURITY_GROUP_ID NUMBER DEFAULT 0 NOT NULL, CREATED_ON date DEFAULT SYSDATE NOT NULL, CREATED_BY VARCHAR2(255 BYTE), LAST_UPDATED_ON date, LAST_UPDATED_BY VARCHAR2(255 BYTE), CONSTRAINT MD_TABLESPACES_PK PRIMARY KEY (ID));
COMMENT ON TABLE MD_TABLESPACES IS 'For storing information about tablespaces.';
COMMENT ON COLUMN MD_TABLESPACES.ID IS 'Primary Key';
COMMENT ON COLUMN MD_TABLESPACES.SCHEMA_ID_FK IS 'Schema to which this tablespace belongs //PARENTFIELD';
COMMENT ON COLUMN MD_TABLESPACES.TABLESPACE_NAME IS 'Name of the table space //OBJECTNAME';
COMMENT ON COLUMN MD_TABLESPACES.NATIVE_SQL IS 'The SQL used to create this tablespace';
COMMENT ON COLUMN MD_TABLESPACES.NATIVE_KEY IS 'A unique identifier for this object at source';

-- changeset root:1751557724186-275 splitStatements:true
CREATE TABLE MD_USERS (ID NUMBER NOT NULL, SCHEMA_ID_FK NUMBER NOT NULL, USERNAME VARCHAR2(4000 BYTE) NOT NULL, PASSWORD VARCHAR2(4000 BYTE), NATIVE_SQL CLOB, NATIVE_KEY VARCHAR2(4000 BYTE), COMMENTS VARCHAR2(4000 BYTE), SECURITY_GROUP_ID NUMBER DEFAULT 0 NOT NULL, CREATED_ON date DEFAULT SYSDATE NOT NULL, CREATED_BY VARCHAR2(255 BYTE), LAST_UPDATED_ON date, LAST_UPDATED_BY VARCHAR2(255 BYTE), CONSTRAINT MD_USERS_PK PRIMARY KEY (ID));
COMMENT ON TABLE MD_USERS IS 'User information.';
COMMENT ON COLUMN MD_USERS.ID IS 'Primary Key';
COMMENT ON COLUMN MD_USERS.SCHEMA_ID_FK IS 'Shema in which this object belongs //PARENTFIELD';
COMMENT ON COLUMN MD_USERS.USERNAME IS 'Username for login //OBJECTNAME';
COMMENT ON COLUMN MD_USERS.PASSWORD IS 'Password for login';
COMMENT ON COLUMN MD_USERS.NATIVE_SQL IS 'SQL Used to create this object at source';
COMMENT ON COLUMN MD_USERS.NATIVE_KEY IS 'Unique identifier for this object at source.';

-- changeset root:1751557724186-276 splitStatements:true
CREATE TABLE MD_USER_PRIVILEGES (ID NUMBER NOT NULL, USER_ID_FK NUMBER NOT NULL, PRIVILEGE_ID_FK NUMBER, SECURITY_GROUP_ID NUMBER DEFAULT 0 NOT NULL, CREATED_ON date DEFAULT SYSDATE NOT NULL, CREATED_BY VARCHAR2(255 BYTE), LAST_UPDATED_ON date, LAST_UDPATED_BY VARCHAR2(255 BYTE), CONSTRAINT MD_USER_PRIVILEGES_PK PRIMARY KEY (ID));
COMMENT ON TABLE MD_USER_PRIVILEGES IS 'This table stores privileges granted to individual users';
COMMENT ON COLUMN MD_USER_PRIVILEGES.ID IS 'Primary Key';
COMMENT ON COLUMN MD_USER_PRIVILEGES.USER_ID_FK IS 'User';
COMMENT ON COLUMN MD_USER_PRIVILEGES.PRIVILEGE_ID_FK IS 'Privilege';

-- changeset root:1751557724186-277
CREATE TABLE PIG_CLASSE_ERRORE (ID_CLASSE_ERRORE NUMBER NOT NULL, CD_CLASSE_ERRORE VARCHAR2(100 BYTE) NOT NULL, DS_CLASSE_ERRORE VARCHAR2(254 BYTE) NOT NULL, CONSTRAINT PK_CLA_ERR PRIMARY KEY (ID_CLASSE_ERRORE));

-- changeset root:1751557724186-278
CREATE TABLE PIG_CONT_UNITA_DOC_SACER (ID_CONT_UNITA_DOC_SACER NUMBER NOT NULL, ID_TIPO_OBJECT NUMBER NOT NULL, AA_UNITA_DOC_SACER NUMBER(4, 0) NOT NULL, PG_CONT_UNITA_DOC_SACER NUMBER NOT NULL, CONSTRAINT PK_CONT_UD PRIMARY KEY (ID_CONT_UNITA_DOC_SACER));

-- changeset root:1751557724186-279 splitStatements:true
CREATE TABLE PIG_DEC_JOB (ID_JOB NUMBER NOT NULL, NM_JOB VARCHAR2(100 BYTE) NOT NULL, TI_SCHED_JOB VARCHAR2(20 BYTE) NOT NULL, TI_SCOPO_JOB VARCHAR2(20 BYTE) NOT NULL, NM_NODO_ASSEGNATO VARCHAR2(100 BYTE), TI_STATO_TIMER VARCHAR2(20 BYTE), CD_SCHED_HOUR VARCHAR2(100 BYTE), CD_SCHED_MINUTE VARCHAR2(100 BYTE), CD_SCHED_DAYOFMONTH VARCHAR2(100 BYTE), CD_SCHED_MONTH VARCHAR2(100 BYTE), CD_SCHED_DAYOFWEEK VARCHAR2(100 BYTE), DT_PROSSIMA_ATTIVAZIONE date, FL_DATA_ACCURATA VARCHAR2(1 BYTE), DS_JOB VARCHAR2(200 BYTE), NM_AMBITO VARCHAR2(200 BYTE), NI_ORD_EXEC NUMBER, CONSTRAINT PK_JOB PRIMARY KEY (ID_JOB));
COMMENT ON TABLE PIG_DEC_JOB IS 'Tabella per configurare l''esecuzione dei timer. Utilizzata dai job su jboss e dalle sonde Zabbix';
COMMENT ON COLUMN PIG_DEC_JOB.NM_NODO_ASSEGNATO IS 'Nome del nodo del cluster su cui verr√† eseguito il job';
COMMENT ON COLUMN PIG_DEC_JOB.TI_STATO_TIMER IS 'Stato del job: ATTIVO, INATTIVO o ESECUZIONE_SINGOLA';
COMMENT ON COLUMN PIG_DEC_JOB.CD_SCHED_HOUR IS 'Campo ''ora'' nella schedulazione del job';
COMMENT ON COLUMN PIG_DEC_JOB.CD_SCHED_MINUTE IS 'Campo ''minuto'' nella schedulazione del job';
COMMENT ON COLUMN PIG_DEC_JOB.CD_SCHED_DAYOFMONTH IS 'Campo ''giorno del mese'' nella schedulazione del job';
COMMENT ON COLUMN PIG_DEC_JOB.CD_SCHED_MONTH IS 'Campo ''mese'' nella schedulazione del job';
COMMENT ON COLUMN PIG_DEC_JOB.CD_SCHED_DAYOFWEEK IS 'Campo ''giorno della settimana'' nella schedulazione del job';
COMMENT ON COLUMN PIG_DEC_JOB.DT_PROSSIMA_ATTIVAZIONE IS 'Quando il job verr√† eseguito la prossima volta (se √® attivo).';

-- changeset root:1751557724186-280 splitStatements:true
CREATE TABLE PIG_DEC_JOB_FOTO (ID_JOB_FOTO NUMBER NOT NULL, NM_JOB_FOTO VARCHAR2(100 BYTE) NOT NULL, TI_SCHED_JOB_FOTO VARCHAR2(20 BYTE) NOT NULL, TI_SCOPO_JOB_FOTO VARCHAR2(40 BYTE) NOT NULL, NM_NODO_ASSEGNATO_FOTO VARCHAR2(100 BYTE), TI_STATO_TIMER_FOTO VARCHAR2(20 BYTE), CD_SCHED_HOUR_FOTO VARCHAR2(100 BYTE), CD_SCHED_MINUTE_FOTO VARCHAR2(100 BYTE), CD_SCHED_DAYOFMONTH_FOTO VARCHAR2(100 BYTE), CD_SCHED_MONTH_FOTO VARCHAR2(100 BYTE), CD_SCHED_DAYOFWEEK_FOTO VARCHAR2(100 BYTE), DT_PROSSIMA_ATTIVAZIONE_FOTO date, FL_DATA_ACCURATA_FOTO VARCHAR2(1 BYTE), DS_JOB_FOTO VARCHAR2(200 BYTE), NM_AMBITO_FOTO VARCHAR2(200 BYTE), NI_ORD_EXEC_FOTO NUMBER, DT_JOB_FOTO date, CONSTRAINT PK_JOB_FOTO PRIMARY KEY (ID_JOB_FOTO));
COMMENT ON TABLE PIG_DEC_JOB_FOTO IS 'Tabella per configurare l''esecuzione dei timer. Utilizzata dai job su jboss e dalle sonde Zabbix';
COMMENT ON COLUMN PIG_DEC_JOB_FOTO.NM_NODO_ASSEGNATO_FOTO IS 'Nome del nodo del cluster su cui verr√† eseguito il job';
COMMENT ON COLUMN PIG_DEC_JOB_FOTO.TI_STATO_TIMER_FOTO IS 'Stato del job: ATTIVO, INATTIVO o ESECUZIONE_SINGOLA';
COMMENT ON COLUMN PIG_DEC_JOB_FOTO.CD_SCHED_HOUR_FOTO IS 'Campo ''ora'' nella schedulazione del job';
COMMENT ON COLUMN PIG_DEC_JOB_FOTO.CD_SCHED_MINUTE_FOTO IS 'Campo ''minuto'' nella schedulazione del job';
COMMENT ON COLUMN PIG_DEC_JOB_FOTO.CD_SCHED_DAYOFMONTH_FOTO IS 'Campo ''giorno del mese'' nella schedulazione del job';
COMMENT ON COLUMN PIG_DEC_JOB_FOTO.CD_SCHED_MONTH_FOTO IS 'Campo ''mese'' nella schedulazione del job';
COMMENT ON COLUMN PIG_DEC_JOB_FOTO.CD_SCHED_DAYOFWEEK_FOTO IS 'Campo ''giorno della settimana'' nella schedulazione del job';
COMMENT ON COLUMN PIG_DEC_JOB_FOTO.DT_PROSSIMA_ATTIVAZIONE_FOTO IS 'Quando il job verr√† eseguito la prossima volta (se √® attivo).';

-- changeset root:1751557724186-281
CREATE TABLE PIG_ERRORE (ID_ERRORE NUMBER NOT NULL, CD_ERRORE VARCHAR2(100 BYTE) NOT NULL, DS_ERRORE VARCHAR2(500 BYTE) NOT NULL, DS_ERRORE_FILTRO VARCHAR2(500 BYTE), ID_CLASSE_ERRORE NUMBER, CONSTRAINT PK_ERR PRIMARY KEY (ID_ERRORE));

-- changeset root:1751557724186-282
CREATE TABLE PIG_KS_INSTANCE (ID_KS_INSTANCE NUMBER NOT NULL, NM_KS_INSTANCE VARCHAR2(20 BYTE) NOT NULL, URL_KS_INSTANCE VARCHAR2(1024 BYTE) NOT NULL, DIR_KS_INSTANCE VARCHAR2(1024 BYTE) NOT NULL, CONSTRAINT PK_KS_INSTANCE PRIMARY KEY (ID_KS_INSTANCE));

-- changeset root:1751557724186-283
CREATE TABLE PIG_PARTITION (ID_PARTITION NUMBER NOT NULL, TI_PARTITION VARCHAR2(20 BYTE) NOT NULL, CD_PARTITION VARCHAR2(100 BYTE) NOT NULL, CONSTRAINT PK_PART PRIMARY KEY (ID_PARTITION));

-- changeset root:1751557724186-284
CREATE TABLE PIG_PARTITION_VERS (ID_PARTITION_VERS NUMBER NOT NULL, ID_VERS NUMBER NOT NULL, TI_PARTITION VARCHAR2(20 BYTE) NOT NULL, ID_PARTITION NUMBER NOT NULL, CONSTRAINT PK_PART_STRUT PRIMARY KEY (ID_PARTITION_VERS));

-- changeset root:1751557724186-285
CREATE TABLE PIG_PRIORITA_OBJECT (ID_PRIORITA_OBJECT NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL, ID_OBJECT NUMBER NOT NULL, DT_MODIFICA date NOT NULL, NM_USER VARCHAR2(200 BYTE) NOT NULL, TI_PRIORITA_VERSAMENTO VARCHAR2(50 BYTE) NOT NULL, CONSTRAINT PK_PIG_PRIORITA_OBJECT PRIMARY KEY (ID_PRIORITA_OBJECT));

-- changeset root:1751557724186-286
CREATE TABLE PIG_SISMA_DOC_ENTRY (ID_SISMA_DOC_ENTRY NUMBER NOT NULL, NM_ENTRY VARCHAR2(256 CHAR) NOT NULL, ID_SISMA_DOCUMENTI NUMBER NOT NULL, CONSTRAINT PIG_SISMA_DOC_ENTRY_PK PRIMARY KEY (ID_SISMA_DOC_ENTRY));

-- changeset root:1751557724186-287
CREATE TABLE PIG_SISMA_FASE_STATO_PROGETTO (ID_SISMA_FASE_STATO_PROGETTO NUMBER NOT NULL, ID_SISMA_STATO_PROGETTO NUMBER NOT NULL, ID_SISMA_FASE_PROGETTO NUMBER NOT NULL, CONSTRAINT PIG_SISMA_FASE_STATO_PROGETTO_PK PRIMARY KEY (ID_SISMA_FASE_STATO_PROGETTO));

-- changeset root:1751557724186-288
CREATE TABLE PIG_SISMA_FINANZIAMENTO (ID_SISMA_FINANZIAMENTO NUMBER NOT NULL, CD_TIPO_FINANZIAMENTO VARCHAR2(60 CHAR) NOT NULL, DS_TIPO_FINANZIAMENTO VARCHAR2(1024 CHAR) NOT NULL, DS_TIPO_REGISTRO_SA_PUBBLICO VARCHAR2(100 BYTE) NOT NULL, DS_TIPO_REGISTRO_AGENZIA VARCHAR2(100 BYTE) NOT NULL, CONSTRAINT PIG_SISMA_FINANZIAMENTO_PK PRIMARY KEY (ID_SISMA_FINANZIAMENTO));

-- changeset root:1751557724186-289
CREATE TABLE PIG_SISMA_PROGETTI_AG (ID_SISMA_PROGETTI_AG NUMBER NOT NULL, ID_ENTE_SIAM NUMBER, ID_SISMA_FINANZIAMENTO NUMBER, CODICE_INTERVENTO VARCHAR2(42 BYTE), DENOMINAZIONE_INTERVENTO VARCHAR2(383 BYTE), NM_ENTE_SIAM VARCHAR2(300 BYTE), SOGGETTO_ATTUATORE VARCHAR2(300 BYTE), NATURA_SOGGETTO_ATTUATORE VARCHAR2(47 BYTE), ENTE_PROPRIETARIO VARCHAR2(254 BYTE), NATURA_ENTE_PROPRIETARIO VARCHAR2(49 BYTE), UBICAZIONE_COMUNE VARCHAR2(94 BYTE), UBICAZIONE_PROVINCIA VARCHAR2(45 BYTE), FL_INTERVENTO_SOGGETTO_A_TUTELA VARCHAR2(1 BYTE), CONSTRAINT PIG_SISMA_PROGETTI_AG_PK PRIMARY KEY (ID_SISMA_PROGETTI_AG));

-- changeset root:1751557724186-290
CREATE TABLE PIG_SISMA_STATO_PROGETTO (ID_SISMA_STATO_PROGETTO NUMBER NOT NULL, TI_STATO_PROGETTO VARCHAR2(20 CHAR) NOT NULL, DS_STATO_PROGETTO VARCHAR2(200 CHAR) NOT NULL, CONSTRAINT PIG_SISMA_STATO_PROGETTO_PK PRIMARY KEY (ID_SISMA_STATO_PROGETTO));

-- changeset root:1751557724186-291
CREATE TABLE PIG_SISMA_STORICO_STATI (ID_STATO NUMBER NOT NULL, ID_SISMA NUMBER NOT NULL, TI_STATO VARCHAR2(30 BYTE) NOT NULL, TS_REG_STATO TIMESTAMP(3) NOT NULL, CD_DESC VARCHAR2(1024 BYTE), CONSTRAINT PK_SISMA_STORICO_STATI PRIMARY KEY (ID_STATO));

-- changeset root:1751557724186-292
CREATE TABLE PIG_SISMA_VAL_ATTO (ID_SISMA_VAL_ATTO NUMBER NOT NULL, NM_TIPO_ATTO VARCHAR2(60 CHAR) NOT NULL, TI_TIPO_ATTO VARCHAR2(60 CHAR) NOT NULL, CONSTRAINT PK_SISMA_VAL_ATTO PRIMARY KEY (ID_SISMA_VAL_ATTO));

-- changeset root:1751557724186-293
CREATE TABLE PIG_SOP_CLASS_DICOM (ID_SOP_CLASS_DICOM NUMBER NOT NULL, CD_SOP_CLASS_DICOM VARCHAR2(100 BYTE) NOT NULL, DS_SOP_CLASS_DICOM VARCHAR2(254 BYTE) NOT NULL, CONSTRAINT PK_SOP_CLASS PRIMARY KEY (ID_SOP_CLASS_DICOM));

-- changeset root:1751557724186-294
CREATE TABLE PIG_SOP_CLASS_DICOM_VERS (ID_SOP_CLASS_DICOM_VERS NUMBER NOT NULL, ID_VERS NUMBER NOT NULL, ID_SOP_CLASS_DICOM NUMBER NOT NULL, CONSTRAINT PK_SOP_CLASS_VERS PRIMARY KEY (ID_SOP_CLASS_DICOM_VERS));

-- changeset root:1751557724186-295
CREATE TABLE PIG_STATO_CLASSE_ERRORE (ID_STATO_CLASSE_ERRORE NUMBER NOT NULL, ID_CLASSE_ERRORE NUMBER NOT NULL, ID_STATO_OBJECT NUMBER NOT NULL, CONSTRAINT PK_STATO_CLA_ERR PRIMARY KEY (ID_STATO_CLASSE_ERRORE));

-- changeset root:1751557724186-296
CREATE TABLE PIG_STATO_OBJECT (ID_STATO_OBJECT NUMBER NOT NULL, TI_STATO_OBJECT VARCHAR2(30 BYTE) NOT NULL, DS_TI_STATO_OBJECT VARCHAR2(254 BYTE) NOT NULL, CONSTRAINT PK_STATO_OBJ PRIMARY KEY (ID_STATO_OBJECT));

-- changeset root:1751557724186-297
CREATE TABLE PIG_STORICO_VERS_AMBIENTE (ID_STORICO_VERS_AMBIENTE NUMBER NOT NULL, ID_VERS NUMBER NOT NULL, ID_AMBIENTE_VERS NUMBER NOT NULL, DT_INI_VAL date NOT NULL, DT_FINE_VAL date NOT NULL, CONSTRAINT PK_PIG_STORICO_VERS_AMBIENTE PRIMARY KEY (ID_STORICO_VERS_AMBIENTE));

-- changeset root:1751557724186-298
CREATE TABLE PIG_STRUM_URB_ATTO (ID_ATTO NUMBER NOT NULL, TI_ATTO VARCHAR2(40 CHAR) NOT NULL, CD_NOME VARCHAR2(30 CHAR) NOT NULL, DS_DESCRIZIONE VARCHAR2(1024 BYTE), CONSTRAINT PK_PIG_STRUM_URB_ATTO PRIMARY KEY (ID_ATTO));

-- changeset root:1751557724186-299
CREATE TABLE PIG_STRUM_URB_COLLEGAMENTI (ID_STRUM_URB_COLLEGAMENTI NUMBER NOT NULL, ID_STRUMENTI_URBANISTICI NUMBER NOT NULL, NUMERO VARCHAR2(80 BYTE), ANNO NUMBER, ID_STRUM_URB_PIANO_STATO NUMBER NOT NULL, ID_STRUM_URB_ATTO NUMBER, CONSTRAINT PK_STRUM_URB_COLLEGAMENTI PRIMARY KEY (ID_STRUM_URB_COLLEGAMENTI));

-- changeset root:1751557724186-300
CREATE TABLE PIG_STRUM_URB_STORICO_STATI (ID_STATO NUMBER NOT NULL, ID_STRUMENTI_URBANISTICI NUMBER NOT NULL, TI_STATO VARCHAR2(30 BYTE) NOT NULL, TS_REG_STATO TIMESTAMP(3) NOT NULL, CD_DESC VARCHAR2(1024 BYTE), CONSTRAINT PK_STRUM_URB_STORICO_STATI PRIMARY KEY (ID_STATO));

-- changeset root:1751557724186-301
CREATE TABLE PIG_SUB_PARTITION (ID_SUB_PARTITION NUMBER NOT NULL, ID_PARTITION NUMBER NOT NULL, CD_SUB_PARTITION VARCHAR2(100 BYTE) NOT NULL, CONSTRAINT PK_SUB_PART PRIMARY KEY (ID_SUB_PARTITION));

-- changeset root:1751557724186-302
CREATE TABLE PIG_USR_APPART_USER_VERS (ID_APPART_USER_VERS NUMBER NOT NULL, ID_USER NUMBER NOT NULL, ID_VERS NUMBER NOT NULL, CONSTRAINT PK_PIG_USR_APPART_USER_VERS PRIMARY KEY (ID_APPART_USER_VERS));

-- changeset root:1751557724186-303
CREATE TABLE PIG_USR_USER (ID_USER NUMBER NOT NULL, NM_USER_ID VARCHAR2(100 BYTE) NOT NULL, NM_COGNOME_USER VARCHAR2(100 BYTE) NOT NULL, NM_NOME_USER VARCHAR2(100 BYTE) NOT NULL, CD_PSW VARCHAR2(100 BYTE) DEFAULT 'password' NOT NULL, FL_ATTIVO CHAR(1 BYTE) NOT NULL, DT_REG_PSW date NOT NULL, DT_SCAD_PSW date NOT NULL, CONSTRAINT PK_ID_USER PRIMARY KEY (ID_USER));

-- changeset root:1751557724186-304
CREATE TABLE PIG_VAL_SUB_PARTITION (ID_VAL_SUB_PARTITION NUMBER NOT NULL, ID_PARTITION NUMBER NOT NULL, CD_VAL_SUB_PARTITION VARCHAR2(100 BYTE) NOT NULL, ID_SUB_PARTITION NUMBER NOT NULL, CONSTRAINT PK_VAL_SUB_PART PRIMARY KEY (ID_VAL_SUB_PARTITION));

-- changeset root:1751557724186-305
CREATE TABLE PIG_XML_ANNUL_SESSIONE_INGEST (ID_XML_ANNUL_SESSIONE_INGEST NUMBER NOT NULL, ID_SESSIONE_INGEST NUMBER NOT NULL, TI_XML_ANNUL VARCHAR2(20 BYTE) NOT NULL, CD_VERSIONE_XML_ANNUL VARCHAR2(100 BYTE) NOT NULL, DT_REG_XML_ANNUL date NOT NULL, BL_XML_ANNUL CLOB NOT NULL, CONSTRAINT PK_XML_ANN_SES_INGEST PRIMARY KEY (ID_XML_ANNUL_SESSIONE_INGEST));

-- changeset root:1751557724186-306
CREATE TABLE PIG_XML_OBJECT_TRASF (ID_XML_OBJECT_TRASF NUMBER NOT NULL, ID_OBJECT_TRASF NUMBER NOT NULL, CD_VERSIONE_XML_VERS VARCHAR2(100 BYTE) NOT NULL, BL_XML CLOB NOT NULL, CONSTRAINT PK_XML_OBJ_TRASF_NEW PRIMARY KEY (ID_XML_OBJECT_TRASF));

-- changeset root:1751557724186-307
CREATE TABLE TMP_CLASSE_ERRORE (CD_CLASSE_ERRORE VARCHAR2(100 BYTE) NOT NULL, DS_CLASSE_ERRORE VARCHAR2(254 BYTE) NOT NULL);

-- changeset root:1751557724186-308
CREATE TABLE TMP_ERRORE (CD_ERRORE VARCHAR2(100 BYTE) NOT NULL, DS_ERRORE VARCHAR2(500 BYTE) NOT NULL);

-- changeset root:1751557724186-309
CREATE TABLE TMP_ERRORE_FILTRO (CD_ERRORE VARCHAR2(100 BYTE) NOT NULL, DS_ERRORE_FILTRO VARCHAR2(500 BYTE));

-- changeset root:1751557724186-310
CREATE TABLE TMP_MESI (NI_MESE VARCHAR2(2 BYTE) NOT NULL, INI_ANNO VARCHAR2(2 BYTE) NOT NULL, FIN_ANNO VARCHAR2(2 BYTE) NOT NULL, TRIMESTRE NUMBER NOT NULL, INI_TRIMESTRE VARCHAR2(2 BYTE) NOT NULL, FIN_TRIMESTRE VARCHAR2(2 BYTE) NOT NULL, GG_SUCC_TRIMESTRE VARCHAR2(5 BYTE) NOT NULL, QUADRIMESTRE NUMBER NOT NULL, INI_QUADRIMESTRE VARCHAR2(2 BYTE) NOT NULL, FIN_QUADRIMESTRE VARCHAR2(2 BYTE) NOT NULL, GG_SUCC_QUADRIMESTRE VARCHAR2(5 BYTE) NOT NULL, SEMESTRE NUMBER NOT NULL, INI_SEMESTRE VARCHAR2(2 BYTE) NOT NULL, FIN_SEMESTRE VARCHAR2(2 BYTE) NOT NULL, GG_SUCC_SEMESTRE VARCHAR2(5 BYTE) NOT NULL, GG_SUCC_ANNO VARCHAR2(5 BYTE) DEFAULT '01/01' NOT NULL);

-- changeset root:1751557724186-311
CREATE TABLE TMP_OBJ_SES_IN_CODA_VERS (ID_OBJECT NUMBER NOT NULL, ID_SESSIONE_INGEST NUMBER NOT NULL, CD_KEY_OBJECT VARCHAR2(100 BYTE) NOT NULL);

-- changeset root:1751557724186-312
CREATE TABLE TMP_OBJ_SES_IN_CODA_VERS_FABIO (ID_OBJECT NUMBER NOT NULL, ID_SESSIONE_INGEST NUMBER NOT NULL, CD_KEY_OBJECT VARCHAR2(100 BYTE) NOT NULL);

-- changeset root:1751557724186-313
CREATE TABLE TMP_VERS_ENTE_CONVENZ (NM_VERS VARCHAR2(100 BYTE) NOT NULL, ID_VERS NUMBER, NM_TIPO_OBJECT VARCHAR2(100 BYTE), TI_DICH_VERS_TI_OBJ VARCHAR2(6 BYTE), TI_DICH_VERS VARCHAR2(20 BYTE), ID_ORGANIZ_IAM_DICH NUMBER, DL_COMPOSITO_ORGANIZ_DICH VARCHAR2(4000 BYTE), ID_ENTE_SIAM NUMBER, NM_ENTE_SIAM VARCHAR2(254 BYTE));

-- changeset root:1751557724186-314
CREATE TABLE TMP_VERS_UN_SOLO_ENTE_CONVENZ (NM_VERS VARCHAR2(100 BYTE) NOT NULL, NM_ENTE_SIAM VARCHAR2(254 BYTE));

-- changeset root:1751557724186-315
CREATE TABLE XFO_FILE_TRASF (ID_FILE_TRASF NUMBER NOT NULL, ID_TRASF NUMBER NOT NULL, NM_FILE_TRASF VARCHAR2(200 BYTE) NOT NULL, BL_FILE_TRASF BLOB NOT NULL, CONSTRAINT PK_FILE_TRASF PRIMARY KEY (ID_FILE_TRASF));

-- changeset root:1751557724186-316
CREATE TABLE XFO_STORICO_TRASF (ID_STORICO_TRASF NUMBER NOT NULL, ID_TRASF NUMBER NOT NULL, CD_TRASF VARCHAR2(100 BYTE) NOT NULL, CD_VERSIONE VARCHAR2(100 BYTE) NOT NULL, DS_VERSIONE VARCHAR2(4000 BYTE) NOT NULL, DT_ISTITUZ date NOT NULL, DT_SOPPRES date NOT NULL, BL_TRASF BLOB NOT NULL, CONSTRAINT PK_STO_TRASF PRIMARY KEY (ID_STORICO_TRASF));

-- changeset root:1751557724186-317
CREATE UNIQUE INDEX UN_ABIL_ORG ON IAM_ABIL_ORGANIZ(ID_USER_IAM, ID_ORGANIZ_APPLIC);

-- changeset root:1751557724186-318
ALTER TABLE IAM_ABIL_ORGANIZ ADD CONSTRAINT UN_ABIL_ORG UNIQUE (ID_USER_IAM, ID_ORGANIZ_APPLIC) USING INDEX UN_ABIL_ORG;

-- changeset root:1751557724186-319
CREATE UNIQUE INDEX UN_ABIL_TI_DATO ON IAM_ABIL_TIPO_DATO(ID_ABIL_ORGANIZ, NM_CLASSE_TIPO_DATO, ID_TIPO_DATO_APPLIC);

-- changeset root:1751557724186-320
ALTER TABLE IAM_ABIL_TIPO_DATO ADD CONSTRAINT UN_ABIL_TI_DATO UNIQUE (ID_ABIL_ORGANIZ, NM_CLASSE_TIPO_DATO, ID_TIPO_DATO_APPLIC) USING INDEX UN_ABIL_TI_DATO;

-- changeset root:1751557724186-321
CREATE UNIQUE INDEX UN_AMB_VERS ON PIG_AMBIENTE_VERS(NM_AMBIENTE_VERS);

-- changeset root:1751557724186-322
ALTER TABLE PIG_AMBIENTE_VERS ADD CONSTRAINT UN_AMB_VERS UNIQUE (NM_AMBIENTE_VERS) USING INDEX UN_AMB_VERS;

-- changeset root:1751557724186-323
CREATE UNIQUE INDEX UN_ATT_SPEC ON PIG_ATTRIB_DATI_SPEC(ID_XSD_SPEC, NM_ATTRIB_DATI_SPEC);

-- changeset root:1751557724186-324
ALTER TABLE PIG_ATTRIB_DATI_SPEC ADD CONSTRAINT UN_ATT_SPEC UNIQUE (ID_XSD_SPEC, NM_ATTRIB_DATI_SPEC) USING INDEX UN_ATT_SPEC;

-- changeset root:1751557724186-325
CREATE UNIQUE INDEX UN_AUT_SERV ON IAM_AUTOR_SERV(ID_ABIL_ORGANIZ, NM_SERVIZIO_WEB);

-- changeset root:1751557724186-326
ALTER TABLE IAM_AUTOR_SERV ADD CONSTRAINT UN_AUT_SERV UNIQUE (ID_ABIL_ORGANIZ, NM_SERVIZIO_WEB) USING INDEX UN_AUT_SERV;

-- changeset root:1751557724186-327
CREATE UNIQUE INDEX UN_CLA_ERR ON PIG_CLASSE_ERRORE(CD_CLASSE_ERRORE);

-- changeset root:1751557724186-328
ALTER TABLE PIG_CLASSE_ERRORE ADD CONSTRAINT UN_CLA_ERR UNIQUE (CD_CLASSE_ERRORE) USING INDEX UN_CLA_ERR;

-- changeset root:1751557724186-329
CREATE UNIQUE INDEX UN_CONT_UD ON PIG_CONT_UNITA_DOC_SACER(ID_TIPO_OBJECT, AA_UNITA_DOC_SACER);

-- changeset root:1751557724186-330
ALTER TABLE PIG_CONT_UNITA_DOC_SACER ADD CONSTRAINT UN_CONT_UD UNIQUE (ID_TIPO_OBJECT, AA_UNITA_DOC_SACER) USING INDEX UN_CONT_UD;

-- changeset root:1751557724186-331
CREATE UNIQUE INDEX UN_DCH_VERS_SACER ON PIG_DICH_VERS_SACER(ID_VERS);

-- changeset root:1751557724186-332
ALTER TABLE PIG_DICH_VERS_SACER ADD CONSTRAINT UN_DCH_VERS_SACER UNIQUE (ID_VERS) USING INDEX UN_DCH_VERS_SACER;

-- changeset root:1751557724186-333
CREATE UNIQUE INDEX UN_DCH_VERS_SACER_TI_OBJ ON PIG_DICH_VERS_SACER_TIPO_OBJ(ID_TIPO_OBJECT);

-- changeset root:1751557724186-334
ALTER TABLE PIG_DICH_VERS_SACER_TIPO_OBJ ADD CONSTRAINT UN_DCH_VERS_SACER_TI_OBJ UNIQUE (ID_TIPO_OBJECT) USING INDEX UN_DCH_VERS_SACER_TI_OBJ;

-- changeset root:1751557724186-335
CREATE UNIQUE INDEX UN_ERR ON PIG_ERRORE(CD_ERRORE);

-- changeset root:1751557724186-336
ALTER TABLE PIG_ERRORE ADD CONSTRAINT UN_ERR UNIQUE (CD_ERRORE) USING INDEX UN_ERR;

-- changeset root:1751557724186-337
CREATE UNIQUE INDEX UN_FILE_OBJ_NEW ON PIG_FILE_OBJECT(ID_OBJECT, NM_FILE_OBJECT);

-- changeset root:1751557724186-338
ALTER TABLE PIG_FILE_OBJECT ADD CONSTRAINT UN_FILE_OBJ_NEW UNIQUE (ID_OBJECT, NM_FILE_OBJECT) USING INDEX UN_FILE_OBJ_NEW ENABLE NOVALIDATE;

-- changeset root:1751557724186-339
CREATE UNIQUE INDEX UN_FILE_TRASF ON XFO_FILE_TRASF(ID_TRASF, NM_FILE_TRASF);

-- changeset root:1751557724186-340
ALTER TABLE XFO_FILE_TRASF ADD CONSTRAINT UN_FILE_TRASF UNIQUE (ID_TRASF, NM_FILE_TRASF) USING INDEX UN_FILE_TRASF;

-- changeset root:1751557724186-341
CREATE UNIQUE INDEX UN_IND_IP ON IAM_IND_IP_USER(ID_USER_IAM, CD_IND_IP_USER);

-- changeset root:1751557724186-342
ALTER TABLE IAM_IND_IP_USER ADD CONSTRAINT UN_IND_IP UNIQUE (ID_USER_IAM, CD_IND_IP_USER) USING INDEX UN_IND_IP;

-- changeset root:1751557724186-343
CREATE UNIQUE INDEX UN_INFO_DICOM_NEW ON PIG_INFO_DICOM(ID_OBJECT);

-- changeset root:1751557724186-344
ALTER TABLE PIG_INFO_DICOM ADD CONSTRAINT UN_INFO_DICOM_NEW UNIQUE (ID_OBJECT) USING INDEX UN_INFO_DICOM_NEW;

-- changeset root:1751557724186-345
CREATE UNIQUE INDEX UN_JOB ON PIG_DEC_JOB(NM_JOB);

-- changeset root:1751557724186-346
ALTER TABLE PIG_DEC_JOB ADD CONSTRAINT UN_JOB UNIQUE (NM_JOB) USING INDEX UN_JOB;

-- changeset root:1751557724186-347
CREATE UNIQUE INDEX UN_JOB_FOTO ON PIG_DEC_JOB_FOTO(NM_JOB_FOTO);

-- changeset root:1751557724186-348
ALTER TABLE PIG_DEC_JOB_FOTO ADD CONSTRAINT UN_JOB_FOTO UNIQUE (NM_JOB_FOTO) USING INDEX UN_JOB_FOTO;

-- changeset root:1751557724186-349
CREATE UNIQUE INDEX UN_NM_KS_INSTANCE ON PIG_KS_INSTANCE(NM_KS_INSTANCE);

-- changeset root:1751557724186-350
ALTER TABLE PIG_KS_INSTANCE ADD CONSTRAINT UN_NM_KS_INSTANCE UNIQUE (NM_KS_INSTANCE) USING INDEX UN_NM_KS_INSTANCE;

-- changeset root:1751557724186-351
CREATE UNIQUE INDEX UN_NM_USER_ID ON PIG_USR_USER(NM_USER_ID);

-- changeset root:1751557724186-352
ALTER TABLE PIG_USR_USER ADD CONSTRAINT UN_NM_USER_ID UNIQUE (NM_USER_ID) USING INDEX UN_NM_USER_ID;

-- changeset root:1751557724186-353
CREATE UNIQUE INDEX UN_OBJ_NEW ON PIG_OBJECT(ID_VERS, CD_KEY_OBJECT);

-- changeset root:1751557724186-354
ALTER TABLE PIG_OBJECT ADD CONSTRAINT UN_OBJ_NEW UNIQUE (ID_VERS, CD_KEY_OBJECT) USING INDEX UN_OBJ_NEW;

-- changeset root:1751557724186-355
CREATE UNIQUE INDEX UN_OBJ_TRASF_NEW ON PIG_OBJECT_TRASF(ID_OBJECT, CD_KEY_OBJECT_TRASF);

-- changeset root:1751557724186-356
ALTER TABLE PIG_OBJECT_TRASF ADD CONSTRAINT UN_OBJ_TRASF_NEW UNIQUE (ID_OBJECT, CD_KEY_OBJECT_TRASF) USING INDEX UN_OBJ_TRASF_NEW ENABLE NOVALIDATE;

-- changeset root:1751557724186-357
CREATE UNIQUE INDEX UN_OBJ_TRASF_PG_NEW ON PIG_OBJECT_TRASF(ID_OBJECT, PG_OGGETTO_TRASF);

-- changeset root:1751557724186-358
ALTER TABLE PIG_OBJECT_TRASF ADD CONSTRAINT UN_OBJ_TRASF_PG_NEW UNIQUE (ID_OBJECT, PG_OGGETTO_TRASF) USING INDEX UN_OBJ_TRASF_PG_NEW ENABLE NOVALIDATE;

-- changeset root:1751557724186-359
CREATE UNIQUE INDEX UN_OBJ_TRASF_VERS_NEW ON PIG_OBJECT_TRASF(ID_VERS, CD_KEY_OBJECT_TRASF);

-- changeset root:1751557724186-360
ALTER TABLE PIG_OBJECT_TRASF ADD CONSTRAINT UN_OBJ_TRASF_VERS_NEW UNIQUE (ID_VERS, CD_KEY_OBJECT_TRASF) USING INDEX UN_OBJ_TRASF_VERS_NEW ENABLE NOVALIDATE;

-- changeset root:1751557724186-361
CREATE UNIQUE INDEX UN_PART ON PIG_PARTITION(TI_PARTITION, CD_PARTITION);

-- changeset root:1751557724186-362
ALTER TABLE PIG_PARTITION ADD CONSTRAINT UN_PART UNIQUE (TI_PARTITION, CD_PARTITION) USING INDEX UN_PART;

-- changeset root:1751557724186-363
CREATE UNIQUE INDEX UN_PART_STRUT ON PIG_PARTITION_VERS(ID_VERS, TI_PARTITION);

-- changeset root:1751557724186-364
ALTER TABLE PIG_PARTITION_VERS ADD CONSTRAINT UN_PART_STRUT UNIQUE (ID_VERS, TI_PARTITION) USING INDEX UN_PART_STRUT;

-- changeset root:1751557724186-365
CREATE UNIQUE INDEX UN_PAR_APL ON PIG_PARAM_APPLIC(NM_PARAM_APPLIC);

-- changeset root:1751557724186-366
ALTER TABLE PIG_PARAM_APPLIC ADD CONSTRAINT UN_PAR_APL UNIQUE (NM_PARAM_APPLIC) USING INDEX UN_PAR_APL;

-- changeset root:1751557724186-367
CREATE UNIQUE INDEX UN_PAR_TRASF ON XFO_PARAM_TRASF(ID_SET_PARAM_TRASF, NM_PARAM_TRASF);

-- changeset root:1751557724186-368
ALTER TABLE XFO_PARAM_TRASF ADD CONSTRAINT UN_PAR_TRASF UNIQUE (ID_SET_PARAM_TRASF, NM_PARAM_TRASF) USING INDEX UN_PAR_TRASF;

-- changeset root:1751557724186-369
CREATE UNIQUE INDEX UN_PIG_SISMA_VERS ON PIG_SISMA(CD_KEY, ID_VERS);

-- changeset root:1751557724186-370
ALTER TABLE PIG_SISMA ADD CONSTRAINT UN_PIG_SISMA_VERS UNIQUE (CD_KEY, ID_VERS) USING INDEX UN_PIG_SISMA_VERS;

-- changeset root:1751557724186-371
CREATE UNIQUE INDEX UN_PIG_STORICO_VERS_AMBIENTE ON PIG_STORICO_VERS_AMBIENTE(ID_VERS, DT_INI_VAL);

-- changeset root:1751557724186-372
ALTER TABLE PIG_STORICO_VERS_AMBIENTE ADD CONSTRAINT UN_PIG_STORICO_VERS_AMBIENTE UNIQUE (ID_VERS, DT_INI_VAL) USING INDEX UN_PIG_STORICO_VERS_AMBIENTE;

-- changeset root:1751557724186-373
CREATE UNIQUE INDEX UN_PIG_STRUM_URB_VERS ON PIG_STRUMENTI_URBANISTICI(CD_KEY, ID_VERS);

-- changeset root:1751557724186-374
ALTER TABLE PIG_STRUMENTI_URBANISTICI ADD CONSTRAINT UN_PIG_STRUM_URB_VERS UNIQUE (CD_KEY, ID_VERS) USING INDEX UN_PIG_STRUM_URB_VERS;

-- changeset root:1751557724186-375
CREATE UNIQUE INDEX UN_PIG_USR_APPART_USER_VERS ON PIG_USR_APPART_USER_VERS(ID_USER, ID_VERS);

-- changeset root:1751557724186-376
ALTER TABLE PIG_USR_APPART_USER_VERS ADD CONSTRAINT UN_PIG_USR_APPART_USER_VERS UNIQUE (ID_USER, ID_VERS) USING INDEX UN_PIG_USR_APPART_USER_VERS;

-- changeset root:1751557724186-377
CREATE UNIQUE INDEX UN_SET_PAR_TRASF ON XFO_SET_PARAM_TRASF(ID_TRASF, NM_SET_PARAM_TRASF);

-- changeset root:1751557724186-378
ALTER TABLE XFO_SET_PARAM_TRASF ADD CONSTRAINT UN_SET_PAR_TRASF UNIQUE (ID_TRASF, NM_SET_PARAM_TRASF) USING INDEX UN_SET_PAR_TRASF;

-- changeset root:1751557724186-379
CREATE UNIQUE INDEX UN_SOP_CLASS ON PIG_SOP_CLASS_DICOM(CD_SOP_CLASS_DICOM);

-- changeset root:1751557724186-380
ALTER TABLE PIG_SOP_CLASS_DICOM ADD CONSTRAINT UN_SOP_CLASS UNIQUE (CD_SOP_CLASS_DICOM) USING INDEX UN_SOP_CLASS;

-- changeset root:1751557724186-381
CREATE UNIQUE INDEX UN_SOP_CLASS_VERS ON PIG_SOP_CLASS_DICOM_VERS(ID_VERS, ID_SOP_CLASS_DICOM);

-- changeset root:1751557724186-382
ALTER TABLE PIG_SOP_CLASS_DICOM_VERS ADD CONSTRAINT UN_SOP_CLASS_VERS UNIQUE (ID_VERS, ID_SOP_CLASS_DICOM) USING INDEX UN_SOP_CLASS_VERS;

-- changeset root:1751557724186-383
CREATE UNIQUE INDEX UN_STATO_CLA_ERR ON PIG_STATO_CLASSE_ERRORE(ID_STATO_OBJECT, ID_CLASSE_ERRORE);

-- changeset root:1751557724186-384
ALTER TABLE PIG_STATO_CLASSE_ERRORE ADD CONSTRAINT UN_STATO_CLA_ERR UNIQUE (ID_STATO_OBJECT, ID_CLASSE_ERRORE) USING INDEX UN_STATO_CLA_ERR;

-- changeset root:1751557724186-385
CREATE UNIQUE INDEX UN_STATO_OBJ ON PIG_STATO_OBJECT(TI_STATO_OBJECT);

-- changeset root:1751557724186-386
ALTER TABLE PIG_STATO_OBJECT ADD CONSTRAINT UN_STATO_OBJ UNIQUE (TI_STATO_OBJECT) USING INDEX UN_STATO_OBJ;

-- changeset root:1751557724186-387
CREATE UNIQUE INDEX UN_STATO_SES_INGEST_NEW ON PIG_STATO_SESSIONE_INGEST(ID_SESSIONE_INGEST, TS_REG_STATO);

-- changeset root:1751557724186-388
ALTER TABLE PIG_STATO_SESSIONE_INGEST ADD CONSTRAINT UN_STATO_SES_INGEST_NEW UNIQUE (ID_SESSIONE_INGEST, TS_REG_STATO) USING INDEX UN_STATO_SES_INGEST_NEW ENABLE NOVALIDATE;

-- changeset root:1751557724186-389
CREATE UNIQUE INDEX UN_STO_TRASF ON XFO_STORICO_TRASF(CD_TRASF, CD_VERSIONE);

-- changeset root:1751557724186-390
ALTER TABLE XFO_STORICO_TRASF ADD CONSTRAINT UN_STO_TRASF UNIQUE (CD_TRASF, CD_VERSIONE) USING INDEX UN_STO_TRASF;

-- changeset root:1751557724186-391
CREATE UNIQUE INDEX UN_STO_TRASF_DT ON XFO_STORICO_TRASF(ID_TRASF, DT_ISTITUZ);

-- changeset root:1751557724186-392
ALTER TABLE XFO_STORICO_TRASF ADD CONSTRAINT UN_STO_TRASF_DT UNIQUE (ID_TRASF, DT_ISTITUZ) USING INDEX UN_STO_TRASF_DT;

-- changeset root:1751557724186-393
CREATE UNIQUE INDEX UN_SUB_PART ON PIG_SUB_PARTITION(ID_PARTITION, CD_SUB_PARTITION);

-- changeset root:1751557724186-394
ALTER TABLE PIG_SUB_PARTITION ADD CONSTRAINT UN_SUB_PART UNIQUE (ID_PARTITION, CD_SUB_PARTITION) USING INDEX UN_SUB_PART;

-- changeset root:1751557724186-395
CREATE UNIQUE INDEX UN_TI_FILE_OBJ ON PIG_TIPO_FILE_OBJECT(ID_TIPO_OBJECT, NM_TIPO_FILE_OBJECT);

-- changeset root:1751557724186-396
ALTER TABLE PIG_TIPO_FILE_OBJECT ADD CONSTRAINT UN_TI_FILE_OBJ UNIQUE (ID_TIPO_OBJECT, NM_TIPO_FILE_OBJECT) USING INDEX UN_TI_FILE_OBJ;

-- changeset root:1751557724186-397
CREATE UNIQUE INDEX UN_TI_OBJ ON PIG_TIPO_OBJECT(ID_VERS, NM_TIPO_OBJECT);

-- changeset root:1751557724186-398
ALTER TABLE PIG_TIPO_OBJECT ADD CONSTRAINT UN_TI_OBJ UNIQUE (ID_VERS, NM_TIPO_OBJECT) USING INDEX UN_TI_OBJ;

-- changeset root:1751557724186-399
CREATE UNIQUE INDEX UN_TRASF ON XFO_TRASF(CD_TRASF);

-- changeset root:1751557724186-400
ALTER TABLE XFO_TRASF ADD CONSTRAINT UN_TRASF UNIQUE (CD_TRASF) USING INDEX UN_TRASF;

-- changeset root:1751557724186-401
CREATE UNIQUE INDEX UN_UNI_DOC_OBJ_NEW ON PIG_UNITA_DOC_OBJECT(ID_VERS, ID_OBJECT, CD_REGISTRO_UNITA_DOC_SACER, AA_UNITA_DOC_SACER, CD_KEY_UNITA_DOC_SACER);

-- changeset root:1751557724186-402
ALTER TABLE PIG_UNITA_DOC_OBJECT ADD CONSTRAINT UN_UNI_DOC_OBJ_NEW UNIQUE (ID_VERS, ID_OBJECT, CD_REGISTRO_UNITA_DOC_SACER, AA_UNITA_DOC_SACER, CD_KEY_UNITA_DOC_SACER) USING INDEX UN_UNI_DOC_OBJ_NEW ENABLE NOVALIDATE;

-- changeset root:1751557724186-403
CREATE UNIQUE INDEX UN_UNI_DOC_SES_NEW ON PIG_UNITA_DOC_SESSIONE(ID_SESSIONE_INGEST, CD_REGISTRO_UNITA_DOC_SACER, AA_UNITA_DOC_SACER, CD_KEY_UNITA_DOC_SACER);

-- changeset root:1751557724186-404
ALTER TABLE PIG_UNITA_DOC_SESSIONE ADD CONSTRAINT UN_UNI_DOC_SES_NEW UNIQUE (ID_SESSIONE_INGEST, CD_REGISTRO_UNITA_DOC_SACER, AA_UNITA_DOC_SACER, CD_KEY_UNITA_DOC_SACER) USING INDEX UN_UNI_DOC_SES_NEW ENABLE NOVALIDATE;

-- changeset root:1751557724186-405
CREATE UNIQUE INDEX UN_USR_IAM ON IAM_USER(NM_USERID);

-- changeset root:1751557724186-406
ALTER TABLE IAM_USER ADD CONSTRAINT UN_USR_IAM UNIQUE (NM_USERID) USING INDEX UN_USR_IAM;

-- changeset root:1751557724186-407
CREATE UNIQUE INDEX UN_VAL_PAR_TRASF ON PIG_VALORE_PARAM_TRASF(ID_VALORE_SET_PARAM_TRASF, ID_PARAM_TRASF);

-- changeset root:1751557724186-408
ALTER TABLE PIG_VALORE_PARAM_TRASF ADD CONSTRAINT UN_VAL_PAR_TRASF UNIQUE (ID_VALORE_SET_PARAM_TRASF, ID_PARAM_TRASF) USING INDEX UN_VAL_PAR_TRASF;

-- changeset root:1751557724186-409
CREATE UNIQUE INDEX UN_VAL_SET_PAR_TRASF ON PIG_VALORE_SET_PARAM_TRASF(ID_VERS_TIPO_OBJECT_DA_TRASF, ID_SET_PARAM_TRASF);

-- changeset root:1751557724186-410
ALTER TABLE PIG_VALORE_SET_PARAM_TRASF ADD CONSTRAINT UN_VAL_SET_PAR_TRASF UNIQUE (ID_VERS_TIPO_OBJECT_DA_TRASF, ID_SET_PARAM_TRASF) USING INDEX UN_VAL_SET_PAR_TRASF;

-- changeset root:1751557724186-411
CREATE UNIQUE INDEX UN_VAL_SUB_PART ON PIG_VAL_SUB_PARTITION(ID_PARTITION, CD_VAL_SUB_PARTITION);

-- changeset root:1751557724186-412
ALTER TABLE PIG_VAL_SUB_PARTITION ADD CONSTRAINT UN_VAL_SUB_PART UNIQUE (ID_PARTITION, CD_VAL_SUB_PARTITION) USING INDEX UN_VAL_SUB_PART;

-- changeset root:1751557724186-413
CREATE UNIQUE INDEX UN_VERS ON PIG_VERS(NM_VERS);

-- changeset root:1751557724186-414
ALTER TABLE PIG_VERS ADD CONSTRAINT UN_VERS UNIQUE (NM_VERS) USING INDEX UN_VERS;

-- changeset root:1751557724186-415
CREATE UNIQUE INDEX UN_VERS_TIOBJ_DATRASF ON PIG_VERS_TIPO_OBJECT_DA_TRASF(ID_TIPO_OBJECT_DA_TRASF, ID_VERS_GEN);

-- changeset root:1751557724186-416
ALTER TABLE PIG_VERS_TIPO_OBJECT_DA_TRASF ADD CONSTRAINT UN_VERS_TIOBJ_DATRASF UNIQUE (ID_TIPO_OBJECT_DA_TRASF, ID_VERS_GEN) USING INDEX UN_VERS_TIOBJ_DATRASF;

-- changeset root:1751557724186-417
CREATE UNIQUE INDEX UN_VERS_TIOBJ_DATRASF_CD_VERS ON PIG_VERS_TIPO_OBJECT_DA_TRASF(ID_TIPO_OBJECT_DA_TRASF, CD_VERS_GEN);

-- changeset root:1751557724186-418
ALTER TABLE PIG_VERS_TIPO_OBJECT_DA_TRASF ADD CONSTRAINT UN_VERS_TIOBJ_DATRASF_CD_VERS UNIQUE (ID_TIPO_OBJECT_DA_TRASF, CD_VERS_GEN) USING INDEX UN_VERS_TIOBJ_DATRASF_CD_VERS;

-- changeset root:1751557724186-419
CREATE UNIQUE INDEX UN_XML_ANN_SES_INGEST ON PIG_XML_ANNUL_SESSIONE_INGEST(ID_SESSIONE_INGEST, TI_XML_ANNUL);

-- changeset root:1751557724186-420
ALTER TABLE PIG_XML_ANNUL_SESSIONE_INGEST ADD CONSTRAINT UN_XML_ANN_SES_INGEST UNIQUE (ID_SESSIONE_INGEST, TI_XML_ANNUL) USING INDEX UN_XML_ANN_SES_INGEST;

-- changeset root:1751557724186-421
CREATE UNIQUE INDEX UN_XML_OBJ_NEW ON PIG_XML_OBJECT(ID_OBJECT);

-- changeset root:1751557724186-422
ALTER TABLE PIG_XML_OBJECT ADD CONSTRAINT UN_XML_OBJ_NEW UNIQUE (ID_OBJECT) USING INDEX UN_XML_OBJ_NEW;

-- changeset root:1751557724186-423
CREATE UNIQUE INDEX UN_XML_OBJ_TRASF_NEW ON PIG_XML_OBJECT_TRASF(ID_OBJECT_TRASF);

-- changeset root:1751557724186-424
ALTER TABLE PIG_XML_OBJECT_TRASF ADD CONSTRAINT UN_XML_OBJ_TRASF_NEW UNIQUE (ID_OBJECT_TRASF) USING INDEX UN_XML_OBJ_TRASF_NEW ENABLE NOVALIDATE;

-- changeset root:1751557724186-425
CREATE UNIQUE INDEX UN_XML_SES_INGEST_NEW ON PIG_XML_SESSIONE_INGEST(ID_SESSIONE_INGEST);

-- changeset root:1751557724186-426
ALTER TABLE PIG_XML_SESSIONE_INGEST ADD CONSTRAINT UN_XML_SES_INGEST_NEW UNIQUE (ID_SESSIONE_INGEST) USING INDEX UN_XML_SES_INGEST_NEW ENABLE NOVALIDATE;

-- changeset root:1751557724186-427
CREATE UNIQUE INDEX UN_XML_UNI_DOC_NEW ON PIG_XML_SACER_UNITA_DOC(ID_UNITA_DOC_OBJECT, TI_XML_SACER);

-- changeset root:1751557724186-428
ALTER TABLE PIG_XML_SACER_UNITA_DOC ADD CONSTRAINT UN_XML_UNI_DOC_NEW UNIQUE (ID_UNITA_DOC_OBJECT, TI_XML_SACER) USING INDEX UN_XML_UNI_DOC_NEW ENABLE NOVALIDATE;

-- changeset root:1751557724186-429
CREATE UNIQUE INDEX UN_XML_UNI_DOC_SES_NEW ON PIG_XML_SACER_UNITA_DOC_SES(ID_UNITA_DOC_SESSIONE, TI_XML_SACER);

-- changeset root:1751557724186-430
ALTER TABLE PIG_XML_SACER_UNITA_DOC_SES ADD CONSTRAINT UN_XML_UNI_DOC_SES_NEW UNIQUE (ID_UNITA_DOC_SESSIONE, TI_XML_SACER) USING INDEX UN_XML_UNI_DOC_SES_NEW;

-- changeset root:1751557724186-431
CREATE UNIQUE INDEX UQ_PK_PIG_STRUM_URB_ATTO ON PIG_STRUM_URB_ATTO(TI_ATTO, CD_NOME);

-- changeset root:1751557724186-432
ALTER TABLE PIG_STRUM_URB_ATTO ADD CONSTRAINT UQ_PK_PIG_STRUM_URB_ATTO UNIQUE (TI_ATTO, CD_NOME) USING INDEX UQ_PK_PIG_STRUM_URB_ATTO;

-- changeset root:1751557724186-433
CREATE INDEX IDX_ABIL_ORG ON IAM_ABIL_ORGANIZ(ID_ORGANIZ_APPLIC);

-- changeset root:1751557724186-434
CREATE INDEX IDX_ABIL_TI_DATO ON IAM_ABIL_TIPO_DATO(NM_CLASSE_TIPO_DATO, ID_TIPO_DATO_APPLIC);

-- changeset root:1751557724186-435
CREATE INDEX IDX_AUT_SERV ON IAM_AUTOR_SERV(NM_SERVIZIO_WEB);

-- changeset root:1751557724186-436
CREATE INDEX IDX_DCH_VERS_SACER_TI_OBJ_ORG ON PIG_DICH_VERS_SACER_TIPO_OBJ(ID_ORGANIZ_IAM);

-- changeset root:1751557724186-437
CREATE INDEX IDX_DICH_VERS_SACER_ORG ON PIG_DICH_VERS_SACER(ID_ORGANIZ_IAM);

-- changeset root:1751557724186-438
CREATE INDEX IDX_FILE_OBJ_NEW ON PIG_FILE_OBJECT(ID_OBJECT);

-- changeset root:1751557724186-439
CREATE INDEX IDX_ID_SISMA ON PIG_SISMA_DOCUMENTI(ID_SISMA);

-- changeset root:1751557724186-440
CREATE INDEX IDX_ID_SISMA_DOCUMENTI ON PIG_SISMA_DOC_ENTRY(ID_SISMA_DOCUMENTI);

-- changeset root:1751557724186-441
CREATE INDEX IDX_INFO_DICOM_ACCESSION_NEW ON PIG_INFO_DICOM(DS_ACCESSION_NUMBER);

-- changeset root:1751557724186-442
CREATE INDEX IDX_INFO_DICOM_COGN_PATIENT_NEW ON PIG_INFO_DICOM(DS_PATIENT_NAME);

-- changeset root:1751557724186-443
CREATE INDEX IDX_INFO_DICOM_DCM_HASH_NEW ON PIG_INFO_DICOM(DS_DCM_HASH);

-- changeset root:1751557724186-444
CREATE INDEX IDX_INFO_DICOM_ID_PATIENT_NEW ON PIG_INFO_DICOM(CD_PATIENT_ID, CD_PATIENT_ID_ISSUER);

-- changeset root:1751557724186-445
CREATE INDEX IDX_INFO_DICOM_STUDY_TIME_NEW ON PIG_INFO_DICOM(DT_STUDY_DATE);

-- changeset root:1751557724186-446
CREATE INDEX IDX_INFO_DICOM_STUDY_UID_NEW ON PIG_INFO_DICOM(DS_STUDY_INSTANCE_UID);

-- changeset root:1751557724186-447
CREATE INDEX IDX_LOG_JOB_DT ON PIG_LOG_JOB(NM_JOB, TI_REG_LOG_JOB, DT_REG_LOG_JOB);

-- changeset root:1751557724186-448
CREATE INDEX IDX_LOG_JOB_DT_HIST ON PIG_LOG_JOB_HISTORY(NM_JOB, TI_REG_LOG_JOB, DT_REG_LOG_JOB);

-- changeset root:1751557724186-449
CREATE INDEX IDX_LOG_JOB_SERVER ON PIG_LOG_JOB(CD_IND_SERVER, TO_CHAR("DT_REG_LOG_JOB",'yyyymmddhh24'));

-- changeset root:1751557724186-450
CREATE INDEX IDX_LOG_JOB_SERVER_HIST ON PIG_LOG_JOB_HISTORY(CD_IND_SERVER, TO_CHAR("DT_REG_LOG_JOB",'yyyymmddhh24'));

-- changeset root:1751557724186-451
CREATE INDEX IDX_OBJ_PADRE_NEW ON PIG_OBJECT(ID_OBJECT_PADRE);

-- changeset root:1751557724186-452
CREATE INDEX IDX_OBJ_TIPO_OBJ_NEW ON PIG_OBJECT(ID_TIPO_OBJECT);

-- changeset root:1751557724186-453
CREATE INDEX IDX_OBJ_USR_NEW ON PIG_OBJECT(ID_USER_IAM);

-- changeset root:1751557724186-454
CREATE INDEX IDX_ORG_DA_REPLIC ON IAM_ORGANIZ_DA_REPLIC(ID_ORGANIZ_APPLIC);

-- changeset root:1751557724186-455
CREATE INDEX IDX_PRIORITA_OBJECT_ID_OBJECT ON PIG_PRIORITA_OBJECT(ID_OBJECT);

-- changeset root:1751557724186-456
CREATE INDEX IDX_SES_INGEST_ID_OBJECT_NEW ON PIG_SESSIONE_INGEST(ID_OBJECT);

-- changeset root:1751557724186-457
CREATE INDEX IDX_SES_INGEST_KEY_OBJECT_NEW ON PIG_SESSIONE_INGEST(NM_AMBIENTE_VERS, NM_VERS, CD_KEY_OBJECT);

-- changeset root:1751557724186-458
CREATE INDEX IDX_SES_INGEST_KEY_VERS_OBJ_NEW ON PIG_SESSIONE_INGEST(CD_KEY_OBJECT);

-- changeset root:1751557724186-459
CREATE INDEX IDX_SES_INGEST_STATO_COR_NEW ON PIG_SESSIONE_INGEST(ID_STATO_SESSIONE_INGEST_COR);

-- changeset root:1751557724186-460
CREATE INDEX IDX_SES_INGEST_VERS_NEW ON PIG_SESSIONE_INGEST(TI_STATO);

-- changeset root:1751557724186-461
CREATE INDEX IDX_SES_RECUP_ID_OBJECT ON PIG_SESSIONE_RECUP(ID_OBJECT);

-- changeset root:1751557724186-462
CREATE INDEX IDX_SES_RECUP_KEY_OBJECT ON PIG_SESSIONE_RECUP(NM_AMBIENTE_VERS, NM_VERS, CD_KEY_OBJECT);

-- changeset root:1751557724186-463
CREATE INDEX IDX_SES_RECUP_VERS ON PIG_SESSIONE_RECUP(ID_VERS, TI_STATO);

-- changeset root:1751557724186-464
CREATE INDEX IDX_STATO_CLA_ERR ON PIG_STATO_CLASSE_ERRORE(ID_CLASSE_ERRORE);

-- changeset root:1751557724186-465
CREATE INDEX IDX_TI_OBJ_TRASF ON PIG_TIPO_OBJECT(ID_TRASF);

-- changeset root:1751557724186-466
CREATE INDEX IDX_UNI_DOC_OBJ_ORGANIZ_NEW ON PIG_UNITA_DOC_OBJECT(ID_ORGANIZ_IAM);

-- changeset root:1751557724186-467
CREATE INDEX IDX_UNI_DOC_SES_ORGANIZ_NEW ON PIG_UNITA_DOC_SESSIONE(ID_ORGANIZ_IAM);

-- changeset root:1751557724186-468
CREATE INDEX IDX_VAL_PAR_APL_AMB ON PIG_VALORE_PARAM_APPLIC(ID_AMBIENTE_VERS);

-- changeset root:1751557724186-469
CREATE INDEX IDX_VAL_PAR_APL_TI_OBJ ON PIG_VALORE_PARAM_APPLIC(ID_TIPO_OBJECT);

-- changeset root:1751557724186-470
CREATE INDEX IDX_VAL_PAR_APL_VERS ON PIG_VALORE_PARAM_APPLIC(ID_VERS);

-- changeset root:1751557724186-471
CREATE INDEX IDX_VAL_PAR_TRASF ON PIG_VALORE_PARAM_TRASF(ID_PARAM_TRASF);

-- changeset root:1751557724186-472
CREATE INDEX IDX_VAL_SET_PAR_TRASF ON PIG_VALORE_SET_PARAM_TRASF(ID_SET_PARAM_TRASF);

-- changeset root:1751557724186-473
CREATE INDEX IDX_VERS_TIOBJ_DATRASF_OBBJGEN ON PIG_VERS_TIPO_OBJECT_DA_TRASF(ID_TIPO_OBJECT_GEN);

-- changeset root:1751557724186-474
CREATE INDEX IDX_VERS_TIOBJ_DATRASF_VERSGEN ON PIG_VERS_TIPO_OBJECT_DA_TRASF(ID_VERS_GEN);

-- changeset root:1751557724186-475
CREATE INDEX IDX_XSD_SPEC ON PIG_XSD_DATI_SPEC(ID_VERS, TI_ENTITA, CD_VERSIONE_XSD);

-- changeset root:1751557724186-476
CREATE INDEX IDX_XSD_SPEC_TI_FILE ON PIG_XSD_DATI_SPEC(ID_TIPO_FILE_OBJECT, CD_VERSIONE_XSD);

-- changeset root:1751557724186-477
CREATE INDEX IDX_XSD_SPEC_TI_OBJ ON PIG_XSD_DATI_SPEC(ID_TIPO_OBJECT, CD_VERSIONE_XSD);

-- changeset root:1751557724186-478
CREATE INDEX MD_APP_FILE_TYPE_IDX ON MD_APPLICATIONFILES(TYPE, ID);

-- changeset root:1751557724186-479
CREATE INDEX MD_STATE_TYPE__ID ON MD_APPLICATIONFILES(STATE, TYPE, ID);

-- changeset root:1751557724186-480
CREATE INDEX PIG_SU_COLL_SU ON PIG_STRUM_URB_COLLEGAMENTI(ID_STRUMENTI_URBANISTICI);

-- changeset root:1751557724186-481
CREATE INDEX PIG_SU_FK_SU ON PIG_STRUM_URB_DOCUMENTI(ID_STRUMENTI_URBANISTICI);

-- changeset root:1751557724186-482
CREATE UNIQUE INDEX UN_PIG_SISMA_FINANZIAMENTO ON PIG_SISMA_FINANZIAMENTO(CD_TIPO_FINANZIAMENTO);

-- changeset root:1751557724186-483
ALTER TABLE IAM_ABIL_ORGANIZ ADD CONSTRAINT FK_ABIL_ORG_USR FOREIGN KEY (ID_USER_IAM) REFERENCES IAM_USER (ID_USER_IAM) ON DELETE CASCADE;

-- changeset root:1751557724186-484
ALTER TABLE IAM_ABIL_TIPO_DATO ADD CONSTRAINT FK_ABIL_TI_DATO_ABIL_ORG FOREIGN KEY (ID_ABIL_ORGANIZ) REFERENCES IAM_ABIL_ORGANIZ (ID_ABIL_ORGANIZ) ON DELETE CASCADE;

-- changeset root:1751557724186-485
ALTER TABLE PIG_AMBIENTE_VERS ADD CONSTRAINT FK_AMB_VERS_CONSERV FOREIGN KEY (ID_ENTE_CONSERV) REFERENCES SACER_IAM.ORG_ENTE_SIAM (ID_ENTE_SIAM);

-- changeset root:1751557724186-486
ALTER TABLE PIG_AMBIENTE_VERS ADD CONSTRAINT FK_AMB_VERS_GESTORE FOREIGN KEY (ID_ENTE_GESTORE) REFERENCES SACER_IAM.ORG_ENTE_SIAM (ID_ENTE_SIAM);

-- changeset root:1751557724186-487
ALTER TABLE PIG_ATTRIB_DATI_SPEC ADD CONSTRAINT FK_ATT_SPEC_XSD_SPEC FOREIGN KEY (ID_XSD_SPEC) REFERENCES PIG_XSD_DATI_SPEC (ID_XSD_SPEC) ON DELETE CASCADE;

-- changeset root:1751557724186-488
ALTER TABLE IAM_AUTOR_SERV ADD CONSTRAINT FK_AUT_SERV_ABIL_ORG FOREIGN KEY (ID_ABIL_ORGANIZ) REFERENCES IAM_ABIL_ORGANIZ (ID_ABIL_ORGANIZ) ON DELETE CASCADE;

-- changeset root:1751557724186-489
ALTER TABLE PIG_CONT_UNITA_DOC_SACER ADD CONSTRAINT FK_CONT_UD_TI_OBJ FOREIGN KEY (ID_TIPO_OBJECT) REFERENCES PIG_TIPO_OBJECT (ID_TIPO_OBJECT) ON DELETE CASCADE;

-- changeset root:1751557724186-490
ALTER TABLE PIG_DICH_VERS_SACER ADD CONSTRAINT FK_DCH_VERS_SACER_ORG FOREIGN KEY (ID_ORGANIZ_IAM) REFERENCES SACER_IAM.USR_ORGANIZ_IAM (ID_ORGANIZ_IAM);

-- changeset root:1751557724186-491
ALTER TABLE PIG_DICH_VERS_SACER_TIPO_OBJ ADD CONSTRAINT FK_DCH_VERS_SACER_TI_OBJ FOREIGN KEY (ID_TIPO_OBJECT) REFERENCES PIG_TIPO_OBJECT (ID_TIPO_OBJECT) ON DELETE CASCADE;

-- changeset root:1751557724186-492
ALTER TABLE PIG_DICH_VERS_SACER_TIPO_OBJ ADD CONSTRAINT FK_DCH_VERS_SACER_TI_OBJ_ORG FOREIGN KEY (ID_ORGANIZ_IAM) REFERENCES SACER_IAM.USR_ORGANIZ_IAM (ID_ORGANIZ_IAM);

-- changeset root:1751557724186-493
ALTER TABLE PIG_ERRORE ADD CONSTRAINT FK_ERR_CLA FOREIGN KEY (ID_CLASSE_ERRORE) REFERENCES PIG_CLASSE_ERRORE (ID_CLASSE_ERRORE) ON DELETE CASCADE;

-- changeset root:1751557724186-494
ALTER TABLE PIG_SISMA_FASE_STATO_PROGETTO ADD CONSTRAINT FK_FASE_PROGETTO_FASE_STATO_PROGETO FOREIGN KEY (ID_SISMA_FASE_PROGETTO) REFERENCES PIG_SISMA_FASE_PROGETTO (ID_SISMA_FASE_PROGETTO);

-- changeset root:1751557724186-495
ALTER TABLE PIG_FILE_OBJECT ADD CONSTRAINT FK_FILE_OBJ_OBJ_NEW FOREIGN KEY (ID_OBJECT) REFERENCES PIG_OBJECT (ID_OBJECT) ON DELETE CASCADE;

-- changeset root:1751557724186-496
ALTER TABLE XFO_FILE_TRASF ADD CONSTRAINT FK_FILE_TRASF FOREIGN KEY (ID_TRASF) REFERENCES XFO_TRASF (ID_TRASF);

-- changeset root:1751557724186-497
ALTER TABLE PIG_SISMA_FASE_PROGETTO ADD CONSTRAINT FK_FINANZIAMENTO FOREIGN KEY (ID_SISMA_FINANZIAMENTO) REFERENCES PIG_SISMA_FINANZIAMENTO (ID_SISMA_FINANZIAMENTO);

-- changeset root:1751557724186-498
ALTER TABLE PIG_SISMA_PROGETTI_AG ADD CONSTRAINT FK_FINANZIAMENTO_PROGETTI_AG FOREIGN KEY (ID_SISMA_FINANZIAMENTO) REFERENCES PIG_SISMA_FINANZIAMENTO (ID_SISMA_FINANZIAMENTO);

-- changeset root:1751557724186-499
ALTER TABLE PIG_SISMA ADD CONSTRAINT FK_ID_FASE_PROGETTO_PIG_SISMA FOREIGN KEY (ID_SISMA_FASE_PROGETTO) REFERENCES PIG_SISMA_FASE_PROGETTO (ID_SISMA_FASE_PROGETTO);

-- changeset root:1751557724186-500
ALTER TABLE PIG_SISMA ADD CONSTRAINT FK_ID_PROGETTI_AG_PIG_SISMA FOREIGN KEY (ID_SISMA_PROGETTI_AG) REFERENCES PIG_SISMA_PROGETTI_AG (ID_SISMA_PROGETTI_AG);

-- changeset root:1751557724186-501
ALTER TABLE PIG_SISMA ADD CONSTRAINT FK_ID_STATP_PROGETO_PIG_SISMA FOREIGN KEY (ID_SISMA_STATO_PROGETTO) REFERENCES PIG_SISMA_STATO_PROGETTO (ID_SISMA_STATO_PROGETTO);

-- changeset root:1751557724186-502
ALTER TABLE IAM_IND_IP_USER ADD CONSTRAINT FK_IND_IP_USR FOREIGN KEY (ID_USER_IAM) REFERENCES IAM_USER (ID_USER_IAM) ON DELETE CASCADE;

-- changeset root:1751557724186-503
ALTER TABLE PIG_INFO_DICOM ADD CONSTRAINT FK_INFO_DICOM_OBJ_NEW FOREIGN KEY (ID_OBJECT) REFERENCES PIG_OBJECT (ID_OBJECT) ON DELETE CASCADE;

-- changeset root:1751557724186-504
ALTER TABLE PIG_PARTITION_VERS ADD CONSTRAINT FK_PART_VERS_PART FOREIGN KEY (ID_PARTITION) REFERENCES PIG_PARTITION (ID_PARTITION) ON DELETE CASCADE;

-- changeset root:1751557724186-505
ALTER TABLE PIG_PARTITION_VERS ADD CONSTRAINT FK_PART_VERS_VERS FOREIGN KEY (ID_VERS) REFERENCES PIG_VERS (ID_VERS) ON DELETE CASCADE;

-- changeset root:1751557724186-506
ALTER TABLE XFO_PARAM_TRASF ADD CONSTRAINT FK_PAR_TRASF_SET FOREIGN KEY (ID_SET_PARAM_TRASF) REFERENCES XFO_SET_PARAM_TRASF (ID_SET_PARAM_TRASF) ON DELETE CASCADE;

-- changeset root:1751557724186-507
ALTER TABLE PIG_SISMA_DOC_ENTRY ADD CONSTRAINT FK_PIG_SISMA_DOC_ENTRY FOREIGN KEY (ID_SISMA_DOCUMENTI) REFERENCES PIG_SISMA_DOCUMENTI (ID_SISMA_DOCUMENTI) ON DELETE CASCADE;

-- changeset root:1751557724186-508
ALTER TABLE PIG_STORICO_VERS_AMBIENTE ADD CONSTRAINT FK_PIG_STO_VERS_AMB FOREIGN KEY (ID_AMBIENTE_VERS) REFERENCES PIG_AMBIENTE_VERS (ID_AMBIENTE_VERS);

-- changeset root:1751557724186-509
ALTER TABLE PIG_STORICO_VERS_AMBIENTE ADD CONSTRAINT FK_PIG_STO_VERS_VERS FOREIGN KEY (ID_VERS) REFERENCES PIG_VERS (ID_VERS);

-- changeset root:1751557724186-510
ALTER TABLE PIG_USR_APPART_USER_VERS ADD CONSTRAINT FK_PIG_USR_APPART_USER FOREIGN KEY (ID_USER) REFERENCES PIG_USR_USER (ID_USER);

-- changeset root:1751557724186-511
ALTER TABLE PIG_USR_APPART_USER_VERS ADD CONSTRAINT FK_PIG_USR_APPART_VERS FOREIGN KEY (ID_VERS) REFERENCES PIG_VERS (ID_VERS);

-- changeset root:1751557724186-512
ALTER TABLE PIG_PRIORITA_OBJECT ADD CONSTRAINT FK_PRIORITA_OBJECT_ID_OBJECT FOREIGN KEY (ID_OBJECT) REFERENCES PIG_OBJECT (ID_OBJECT);

-- changeset root:1751557724186-513
ALTER TABLE PIG_SESSIONE_INGEST ADD CONSTRAINT FK_SES_INGEST_OBJ_NEW FOREIGN KEY (ID_OBJECT) REFERENCES PIG_OBJECT (ID_OBJECT) ON DELETE CASCADE;

-- changeset root:1751557724186-514
ALTER TABLE PIG_SESSIONE_INGEST ADD CONSTRAINT FK_SES_INGEST_VERS_NEW FOREIGN KEY (ID_VERS) REFERENCES PIG_VERS (ID_VERS) ON DELETE CASCADE;

-- changeset root:1751557724186-515
ALTER TABLE PIG_SESSIONE_RECUP ADD CONSTRAINT FK_SES_RECUP_VERS FOREIGN KEY (ID_VERS) REFERENCES PIG_VERS (ID_VERS) ON DELETE CASCADE;

-- changeset root:1751557724186-516
ALTER TABLE XFO_SET_PARAM_TRASF ADD CONSTRAINT FK_SET_PAR_TRASF FOREIGN KEY (ID_TRASF) REFERENCES XFO_TRASF (ID_TRASF) ON DELETE CASCADE;

-- changeset root:1751557724186-517
ALTER TABLE PIG_SISMA_DOCUMENTI ADD CONSTRAINT FK_SISMA_DOCUMENTI_SU FOREIGN KEY (ID_SISMA) REFERENCES PIG_SISMA (ID_SISMA) ON DELETE CASCADE;

-- changeset root:1751557724186-518
ALTER TABLE PIG_SISMA_DOCUMENTI ADD CONSTRAINT FK_SISMA_DOCUMENTI_VAL_DOC FOREIGN KEY (ID_SISMA_VAL_DOC) REFERENCES PIG_SISMA_VAL_DOC (ID_SISMA_VAL_DOC);

-- changeset root:1751557724186-519
ALTER TABLE PIG_SISMA ADD CONSTRAINT FK_SISMA_IAM_USR FOREIGN KEY (ID_USER_IAM) REFERENCES IAM_USER (ID_USER_IAM);

-- changeset root:1751557724186-520
ALTER TABLE PIG_SISMA_PIANO_DOC_REQ ADD CONSTRAINT FK_SISMA_PIANO_DOC_REQ_VAL_DOC FOREIGN KEY (ID_PIG_SISMA_VAL_DOC) REFERENCES PIG_SISMA_VAL_DOC (ID_SISMA_VAL_DOC);

-- changeset root:1751557724186-521
ALTER TABLE PIG_SISMA ADD CONSTRAINT FK_SISMA_PIG_VERS FOREIGN KEY (ID_VERS) REFERENCES PIG_VERS (ID_VERS);

-- changeset root:1751557724186-522
ALTER TABLE PIG_SISMA_STORICO_STATI ADD CONSTRAINT FK_SISMA_STORICO_STATI FOREIGN KEY (ID_SISMA) REFERENCES PIG_SISMA (ID_SISMA) ON DELETE CASCADE;

-- changeset root:1751557724186-523
ALTER TABLE PIG_SISMA ADD CONSTRAINT FK_SISMA_VAL_ATTO FOREIGN KEY (ID_SISMA_VAL_ATTO) REFERENCES PIG_SISMA_VAL_ATTO (ID_SISMA_VAL_ATTO);

-- changeset root:1751557724186-524
ALTER TABLE PIG_SOP_CLASS_DICOM_VERS ADD CONSTRAINT FK_SOP_CLASS_VERS FOREIGN KEY (ID_VERS) REFERENCES PIG_VERS (ID_VERS) ON DELETE CASCADE;

-- changeset root:1751557724186-525
ALTER TABLE PIG_SOP_CLASS_DICOM_VERS ADD CONSTRAINT FK_SOP_CLASS_VERS_SOP_CLASS FOREIGN KEY (ID_SOP_CLASS_DICOM) REFERENCES PIG_SOP_CLASS_DICOM (ID_SOP_CLASS_DICOM);

-- changeset root:1751557724186-526
ALTER TABLE PIG_STATO_CLASSE_ERRORE ADD CONSTRAINT FK_STATO_CLA_ERR_CLA FOREIGN KEY (ID_CLASSE_ERRORE) REFERENCES PIG_CLASSE_ERRORE (ID_CLASSE_ERRORE) ON DELETE CASCADE;

-- changeset root:1751557724186-527
ALTER TABLE PIG_STATO_CLASSE_ERRORE ADD CONSTRAINT FK_STATO_CLA_ERR_STATO_OBJ FOREIGN KEY (ID_STATO_OBJECT) REFERENCES PIG_STATO_OBJECT (ID_STATO_OBJECT);

-- changeset root:1751557724186-528
ALTER TABLE PIG_SISMA_FASE_STATO_PROGETTO ADD CONSTRAINT FK_STATO_PROGETTO FOREIGN KEY (ID_SISMA_STATO_PROGETTO) REFERENCES PIG_SISMA_STATO_PROGETTO (ID_SISMA_STATO_PROGETTO);

-- changeset root:1751557724186-529
ALTER TABLE PIG_STATO_SESSIONE_INGEST ADD CONSTRAINT FK_STATO_SES_INGEST_NEW FOREIGN KEY (ID_SESSIONE_INGEST) REFERENCES PIG_SESSIONE_INGEST (ID_SESSIONE_INGEST) ON DELETE CASCADE;

-- changeset root:1751557724186-530
ALTER TABLE XFO_STORICO_TRASF ADD CONSTRAINT FK_STO_TRASF FOREIGN KEY (ID_TRASF) REFERENCES XFO_TRASF (ID_TRASF) ON DELETE CASCADE;

-- changeset root:1751557724186-531
ALTER TABLE PIG_STRUM_URB_STORICO_STATI ADD CONSTRAINT FK_STRUM_URB_STORICO_STATI FOREIGN KEY (ID_STRUMENTI_URBANISTICI) REFERENCES PIG_STRUMENTI_URBANISTICI (ID_STRUMENTI_URBANISTICI) ON DELETE CASCADE;

-- changeset root:1751557724186-532
ALTER TABLE PIG_DICH_VERS_SACER ADD CONSTRAINT FK_STRUT_SACER_VERS FOREIGN KEY (ID_VERS) REFERENCES PIG_VERS (ID_VERS) ON DELETE CASCADE;

-- changeset root:1751557724186-533
ALTER TABLE PIG_SUB_PARTITION ADD CONSTRAINT FK_SUB_PART_PART FOREIGN KEY (ID_PARTITION) REFERENCES PIG_PARTITION (ID_PARTITION) ON DELETE CASCADE;

-- changeset root:1751557724186-534
ALTER TABLE PIG_STRUM_URB_COLLEGAMENTI ADD CONSTRAINT FK_SU_COLLEGAMENTI_PIANO_STATO FOREIGN KEY (ID_STRUM_URB_PIANO_STATO) REFERENCES PIG_STRUM_URB_PIANO_STATO (ID_STRUM_URB_PIANO_STATO);

-- changeset root:1751557724186-535
ALTER TABLE PIG_STRUM_URB_COLLEGAMENTI ADD CONSTRAINT FK_SU_COLLEGAMENTI_SU FOREIGN KEY (ID_STRUMENTI_URBANISTICI) REFERENCES PIG_STRUMENTI_URBANISTICI (ID_STRUMENTI_URBANISTICI) ON DELETE CASCADE;

-- changeset root:1751557724186-536
ALTER TABLE PIG_STRUM_URB_DOCUMENTI ADD CONSTRAINT FK_SU_DOCUMENTI_SU FOREIGN KEY (ID_STRUMENTI_URBANISTICI) REFERENCES PIG_STRUMENTI_URBANISTICI (ID_STRUMENTI_URBANISTICI) ON DELETE CASCADE;

-- changeset root:1751557724186-537
ALTER TABLE PIG_STRUM_URB_DOCUMENTI ADD CONSTRAINT FK_SU_DOCUMENTI_VAL_DOC FOREIGN KEY (ID_STRUM_URB_VAL_DOC) REFERENCES PIG_STRUM_URB_VAL_DOC (ID_STRUM_URB_VAL_DOC);

-- changeset root:1751557724186-538
ALTER TABLE PIG_STRUM_URB_PIANO_DOC_REQ ADD CONSTRAINT FK_SU_PIANO_DOC_REQ_PIANOSTATO FOREIGN KEY (ID_STRUM_URB_PIANO_STATO) REFERENCES PIG_STRUM_URB_PIANO_STATO (ID_STRUM_URB_PIANO_STATO);

-- changeset root:1751557724186-539
ALTER TABLE PIG_STRUM_URB_PIANO_DOC_REQ ADD CONSTRAINT FK_SU_PIANO_DOC_REQ_VAL_DOC FOREIGN KEY (ID_PIG_STRUM_URB_VAL_DOC) REFERENCES PIG_STRUM_URB_VAL_DOC (ID_STRUM_URB_VAL_DOC);

-- changeset root:1751557724186-540
ALTER TABLE PIG_STRUMENTI_URBANISTICI ADD CONSTRAINT FK_SU_PIANO_STATO FOREIGN KEY (ID_STRUM_URB_PIANO_STATO) REFERENCES PIG_STRUM_URB_PIANO_STATO (ID_STRUM_URB_PIANO_STATO);

-- changeset root:1751557724186-541
ALTER TABLE PIG_STRUMENTI_URBANISTICI ADD CONSTRAINT FK_SU_PIG_VERS FOREIGN KEY (ID_VERS) REFERENCES PIG_VERS (ID_VERS);

-- changeset root:1751557724186-542
ALTER TABLE PIG_TIPO_OBJECT ADD CONSTRAINT FK_TI_OBJ_TRASF FOREIGN KEY (ID_TRASF) REFERENCES XFO_TRASF (ID_TRASF);

-- changeset root:1751557724186-543
ALTER TABLE PIG_UNITA_DOC_OBJECT ADD CONSTRAINT FK_UNI_DOC_OBJ_OBJ_NEW FOREIGN KEY (ID_OBJECT) REFERENCES PIG_OBJECT (ID_OBJECT) ON DELETE CASCADE;

-- changeset root:1751557724186-544
ALTER TABLE PIG_UNITA_DOC_OBJECT ADD CONSTRAINT FK_UNI_DOC_OBJ_ORG_IAM_NEW FOREIGN KEY (ID_ORGANIZ_IAM) REFERENCES SACER_IAM.USR_ORGANIZ_IAM (ID_ORGANIZ_IAM);

-- changeset root:1751557724186-545
ALTER TABLE PIG_UNITA_DOC_SESSIONE ADD CONSTRAINT FK_UNI_DOC_SES_ORG_IAM_NEW FOREIGN KEY (ID_ORGANIZ_IAM) REFERENCES SACER_IAM.USR_ORGANIZ_IAM (ID_ORGANIZ_IAM);

-- changeset root:1751557724186-546
ALTER TABLE PIG_UNITA_DOC_SESSIONE ADD CONSTRAINT FK_UNI_DOC_SES_SES_INGEST_NEW FOREIGN KEY (ID_SESSIONE_INGEST) REFERENCES PIG_SESSIONE_INGEST (ID_SESSIONE_INGEST) ON DELETE CASCADE;

-- changeset root:1751557724186-547
ALTER TABLE PIG_VALORE_PARAM_APPLIC ADD CONSTRAINT FK_VAL_PAR_APL FOREIGN KEY (ID_PARAM_APPLIC) REFERENCES PIG_PARAM_APPLIC (ID_PARAM_APPLIC) ON DELETE CASCADE;

-- changeset root:1751557724186-548
ALTER TABLE PIG_VALORE_PARAM_APPLIC ADD CONSTRAINT FK_VAL_PAR_APL_AMB_VERS FOREIGN KEY (ID_AMBIENTE_VERS) REFERENCES PIG_AMBIENTE_VERS (ID_AMBIENTE_VERS) ON DELETE CASCADE;

-- changeset root:1751557724186-549
ALTER TABLE PIG_VALORE_PARAM_APPLIC ADD CONSTRAINT FK_VAL_PAR_APL_TI_OBJ FOREIGN KEY (ID_TIPO_OBJECT) REFERENCES PIG_TIPO_OBJECT (ID_TIPO_OBJECT) ON DELETE CASCADE;

-- changeset root:1751557724186-550
ALTER TABLE PIG_VALORE_PARAM_APPLIC ADD CONSTRAINT FK_VAL_PAR_APL_VERS FOREIGN KEY (ID_VERS) REFERENCES PIG_VERS (ID_VERS) ON DELETE CASCADE;

-- changeset root:1751557724186-551
ALTER TABLE PIG_VALORE_PARAM_TRASF ADD CONSTRAINT FK_VAL_PAR_TRASF FOREIGN KEY (ID_PARAM_TRASF) REFERENCES XFO_PARAM_TRASF (ID_PARAM_TRASF) ON DELETE CASCADE;

-- changeset root:1751557724186-552
ALTER TABLE PIG_VALORE_PARAM_TRASF ADD CONSTRAINT FK_VAL_PAR_TRASF_VAL_SET FOREIGN KEY (ID_VALORE_SET_PARAM_TRASF) REFERENCES PIG_VALORE_SET_PARAM_TRASF (ID_VALORE_SET_PARAM_TRASF) ON DELETE CASCADE;

-- changeset root:1751557724186-553
ALTER TABLE PIG_VALORE_SET_PARAM_TRASF ADD CONSTRAINT FK_VAL_SET_PAR_TRASF FOREIGN KEY (ID_SET_PARAM_TRASF) REFERENCES XFO_SET_PARAM_TRASF (ID_SET_PARAM_TRASF) ON DELETE CASCADE;

-- changeset root:1751557724186-554
ALTER TABLE PIG_VALORE_SET_PARAM_TRASF ADD CONSTRAINT FK_VAL_SET_PAR_TRASF_VERSGEN FOREIGN KEY (ID_VERS_TIPO_OBJECT_DA_TRASF) REFERENCES PIG_VERS_TIPO_OBJECT_DA_TRASF (ID_VERS_TIPO_OBJECT_DA_TRASF) ON DELETE CASCADE;

-- changeset root:1751557724186-555
ALTER TABLE PIG_VAL_SUB_PARTITION ADD CONSTRAINT FK_VAL_SUB_PART_PART FOREIGN KEY (ID_PARTITION) REFERENCES PIG_PARTITION (ID_PARTITION) ON DELETE CASCADE;

-- changeset root:1751557724186-556
ALTER TABLE PIG_VAL_SUB_PARTITION ADD CONSTRAINT FK_VAL_SUB_PART_SUB FOREIGN KEY (ID_SUB_PARTITION) REFERENCES PIG_SUB_PARTITION (ID_SUB_PARTITION) ON DELETE CASCADE;

-- changeset root:1751557724186-557
ALTER TABLE PIG_VERS ADD CONSTRAINT FK_VERS_AMB_VERS FOREIGN KEY (ID_AMBIENTE_VERS) REFERENCES PIG_AMBIENTE_VERS (ID_AMBIENTE_VERS) ON DELETE CASCADE;

-- changeset root:1751557724186-558
ALTER TABLE PIG_VERS ADD CONSTRAINT FK_VERS_ENTE_CONVENZ FOREIGN KEY (ID_ENTE_CONVENZ) REFERENCES SACER_IAM.ORG_ENTE_SIAM (ID_ENTE_SIAM);

-- changeset root:1751557724186-559
ALTER TABLE PIG_VERS ADD CONSTRAINT FK_VERS_FORNIT_ESTERNO FOREIGN KEY (ID_ENTE_FORNIT_ESTERN) REFERENCES SACER_IAM.ORG_ENTE_SIAM (ID_ENTE_SIAM);

-- changeset root:1751557724186-560
ALTER TABLE PIG_VERS_TIPO_OBJECT_DA_TRASF ADD CONSTRAINT FK_VERS_TIOBJ_DATRASF FOREIGN KEY (ID_TIPO_OBJECT_DA_TRASF) REFERENCES PIG_TIPO_OBJECT (ID_TIPO_OBJECT) ON DELETE CASCADE;

-- changeset root:1751557724186-561
ALTER TABLE PIG_VERS_TIPO_OBJECT_DA_TRASF ADD CONSTRAINT FK_VERS_TIOBJ_DATRASF_TIOBJGEN FOREIGN KEY (ID_TIPO_OBJECT_GEN) REFERENCES PIG_TIPO_OBJECT (ID_TIPO_OBJECT);

-- changeset root:1751557724186-562
ALTER TABLE PIG_VERS_TIPO_OBJECT_DA_TRASF ADD CONSTRAINT FK_VERS_TIOBJ_DATRASF_VERSGEN FOREIGN KEY (ID_VERS_GEN) REFERENCES PIG_VERS (ID_VERS);

-- changeset root:1751557724186-563
ALTER TABLE PIG_XML_ANNUL_SESSIONE_INGEST ADD CONSTRAINT FK_XML_ANN_SES_INGEST_NEW FOREIGN KEY (ID_SESSIONE_INGEST) REFERENCES PIG_SESSIONE_INGEST (ID_SESSIONE_INGEST) ON DELETE CASCADE ENABLE NOVALIDATE;

-- changeset root:1751557724186-564
ALTER TABLE PIG_XML_OBJECT ADD CONSTRAINT FK_XML_OBJ_OBJ_NEW FOREIGN KEY (ID_OBJECT) REFERENCES PIG_OBJECT (ID_OBJECT) ON DELETE CASCADE;

-- changeset root:1751557724186-565
ALTER TABLE PIG_XML_SESSIONE_INGEST ADD CONSTRAINT FK_XML_SES_INGEST_SES_INGEST_NEW FOREIGN KEY (ID_SESSIONE_INGEST) REFERENCES PIG_SESSIONE_INGEST (ID_SESSIONE_INGEST) ON DELETE CASCADE;

-- changeset root:1751557724186-566
ALTER TABLE PIG_XML_SACER_UNITA_DOC_SES ADD CONSTRAINT FK_XML_UNI_DOC_SES_NEW FOREIGN KEY (ID_UNITA_DOC_SESSIONE) REFERENCES PIG_UNITA_DOC_SESSIONE (ID_UNITA_DOC_SESSIONE) ON DELETE CASCADE;

-- changeset root:1751557724186-567
ALTER TABLE PIG_XSD_DATI_SPEC ADD CONSTRAINT FK_XSD_VERS FOREIGN KEY (ID_VERS) REFERENCES PIG_VERS (ID_VERS) ON DELETE CASCADE;

-- changeset root:1751557724186-568
ALTER TABLE PIG_XSD_DATI_SPEC ADD CONSTRAINT FK_XSD_VERS_TI_FILE_OBJ FOREIGN KEY (ID_TIPO_FILE_OBJECT) REFERENCES PIG_TIPO_FILE_OBJECT (ID_TIPO_FILE_OBJECT) ON DELETE CASCADE;

-- changeset root:1751557724186-569
ALTER TABLE PIG_XSD_DATI_SPEC ADD CONSTRAINT FK_XSD_VERS_TI_OBJ FOREIGN KEY (ID_TIPO_OBJECT) REFERENCES PIG_TIPO_OBJECT (ID_TIPO_OBJECT) ON DELETE CASCADE;

-- changeset root:1751557724186-570
ALTER TABLE PIG_SISMA_PIANO_DOC_REQ ADD CONSTRAINT SYS_C0062713 FOREIGN KEY (ID_SISMA_FASE_PROGETTO) REFERENCES PIG_SISMA_FASE_PROGETTO (ID_SISMA_FASE_PROGETTO);

-- changeset root:1751557724186-571
ALTER TABLE PIG_SISMA_PIANO_DOC_REQ ADD CONSTRAINT SYS_C0062715 FOREIGN KEY (ID_SISMA_FINANZIAMENTO) REFERENCES PIG_SISMA_FINANZIAMENTO (ID_SISMA_FINANZIAMENTO);

