-- liquibase formatted sql

-- changeset root:1751897635013-1
CREATE TABLE TMP_DT_DA_ELAB (DT_DA_ELAB date NOT NULL, TI_STATO_DT_DA_ELAB VARCHAR2(30 BYTE) NOT NULL);

-- changeset root:1751897635013-2
CREATE TABLE VRS_URN_XML_SESSIONE_VERS (ID_URN_XML_SESSIONE_VERS NUMBER NOT NULL, ID_XML_DATI_SESSIONE_VERS NUMBER NOT NULL, TI_URN VARCHAR2(20 BYTE) NOT NULL, DS_URN VARCHAR2(254 BYTE) NOT NULL, CONSTRAINT PK_URN_XML_SES_VRS PRIMARY KEY (ID_URN_XML_SESSIONE_VERS));

-- changeset root:1751897635013-3
CREATE TABLE DEC_MODELLO_XSD_UD (ID_MODELLO_XSD_UD NUMBER NOT NULL, ID_AMBIENTE NUMBER NOT NULL, TI_USO_MODELLO_XSD VARCHAR2(20 BYTE) NOT NULL, TI_MODELLO_XSD VARCHAR2(40 BYTE) NOT NULL, DS_XSD VARCHAR2(254 BYTE) NOT NULL, CD_XSD VARCHAR2(100 BYTE) NOT NULL, BL_XSD CLOB NOT NULL, DT_ISTITUZ date DEFAULT trunc(sysdate) NOT NULL, DT_SOPPRES date DEFAULT TO_DATE('31/12/2444', 'dd/mm/yyyy') NOT NULL, ID_SISTEMA_MIGRAZ NUMBER, FL_DEFAULT CHAR(1 BYTE) NOT NULL, CONSTRAINT PK_MDL_XSD_UD PRIMARY KEY (ID_MODELLO_XSD_UD));

-- changeset root:1751897635013-4
CREATE TABLE DEC_USO_MODELLO_XSD_UNI_DOC (ID_USO_MODELLO_XSD_UNI_DOC NUMBER NOT NULL, ID_MODELLO_XSD_UD NUMBER NOT NULL, ID_TIPO_UNITA_DOC NUMBER NOT NULL, FL_STANDARD CHAR(1 BYTE) NOT NULL, DT_ISTITUZ date DEFAULT trunc(sysdate) NOT NULL, DT_SOPPRES date DEFAULT TO_DATE('31/12/2444', 'dd/mm/yyyy') NOT NULL, CONSTRAINT PK_USO_MDL_XSD_UNIDOC PRIMARY KEY (ID_USO_MODELLO_XSD_UNI_DOC));

-- changeset root:1751897635013-5
CREATE TABLE VRS_XML_MODELLO_SESSIONE_VERS (ID_XML_MODELLO_SESSIONE_VERS NUMBER NOT NULL, ID_DATI_SESSIONE_VERS NUMBER NOT NULL, BL_XML CLOB NOT NULL, ID_STRUT NUMBER, ID_USO_MODELLO_XSD_DOC NUMBER, ID_USO_MODELLO_XSD_COMP_DOC NUMBER, ID_USO_MODELLO_XSD_UNI_DOC NUMBER, FL_CANONICALIZED CHAR(1 BYTE) DEFAULT '0' NOT NULL, CONSTRAINT XML_MOD_SES_VRS_PK PRIMARY KEY (ID_XML_MODELLO_SESSIONE_VERS));

-- changeset root:1751897635013-6
CREATE SEQUENCE SDEC_FORMATO_FILE_AMMESSO START WITH 171307 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-7
CREATE SEQUENCE SDEC_FORMATO_FILE_DOC START WITH 105571 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-8
CREATE SEQUENCE SDEC_USO_FORMATO_FILE_STANDARD START WITH 173965 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-9
CREATE TABLE MON_CONTA_BY_STATO_CONSERV_NEW (ID_CONTA_BY_STATO_CONSERV NUMBER NOT NULL, DT_RIF_CONTA date NOT NULL, ID_STRUT NUMBER NOT NULL, ID_SUB_STRUT NUMBER, AA_KEY_UNITA_DOC NUMBER(4, 0) NOT NULL, ID_REGISTRO_UNITA_DOC NUMBER NOT NULL, ID_TIPO_UNITA_DOC NUMBER NOT NULL, ID_TIPO_DOC_PRINC NUMBER, NI_COMP_AIP_GENERATO NUMBER NOT NULL, NI_COMP_AIP_IN_AGGIORN NUMBER NOT NULL, NI_COMP_PRESA_IN_CARICO NUMBER NOT NULL, NI_COMP_IN_VOLUME NUMBER NOT NULL, NI_COMP_ANNUL NUMBER NOT NULL, CONSTRAINT MON_CONTA_BY_STATO_CONSERV_NEW_PK PRIMARY KEY (ID_CONTA_BY_STATO_CONSERV));

-- changeset root:1751897635013-10
CREATE SEQUENCE SELV_URN_ELENCO_VERS START WITH 66081 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-11
CREATE TABLE ELV_URN_ELENCO_VERS (ID_URN_ELENCO_VERS NUMBER NOT NULL, ID_ELENCO_VERS NUMBER NOT NULL, TI_URN VARCHAR2(20 BYTE) NOT NULL, DS_URN VARCHAR2(254 BYTE) NOT NULL, CONSTRAINT PK_URN_ELE_VRS PRIMARY KEY (ID_URN_ELENCO_VERS));

-- changeset root:1751897635013-12
CREATE SEQUENCE SELV_URN_FILE_ELENCO_VERS START WITH 39181 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-13
CREATE TABLE ARO_URN_VER_INDICE_AIP_UD (ID_URN_VER_INDICE_AIP_UD NUMBER NOT NULL, ID_VER_INDICE_AIP NUMBER NOT NULL, TI_URN VARCHAR2(20 BYTE) NOT NULL, DS_URN VARCHAR2(254 BYTE) NOT NULL, CONSTRAINT PK_URN_VER_IX_AIP_UD PRIMARY KEY (ID_URN_VER_INDICE_AIP_UD));

-- changeset root:1751897635013-14
CREATE TABLE TMP_STRUT_ANNO_DA_ELAB (ID_STRUT NUMBER NOT NULL, AA_DA_ELAB NUMBER NOT NULL, TI_STATO_DA_ELAB_ELE VARCHAR2(30 BYTE) NOT NULL, TI_STATO_DA_ELAB_IX_ELE_HASH VARCHAR2(30 BYTE) NOT NULL, TI_STATO_DA_ELAB_IX_ELE_VER VARCHAR2(30 BYTE) NOT NULL, TI_STATO_DA_ELAB_COPIA_URN_INI VARCHAR2(30 BYTE) NOT NULL, TI_STATO_DA_ELAB_CALC_URN_INI VARCHAR2(30 BYTE) NOT NULL, TI_STATO_DA_ELAB_CALC_NEW_URN VARCHAR2(30 BYTE) NOT NULL);

-- changeset root:1751897635013-15
CREATE SEQUENCE SLOG_JOB START WITH 1907954 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 100 NOORDER;

-- changeset root:1751897635013-16
CREATE SEQUENCE STMP_VER_FIRME_LOG START WITH 1028141 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-17
CREATE SEQUENCE SOST_NO_MIGRAZ_FILE START WITH 85641 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-18
CREATE SEQUENCE SELV_ELENCO_VERS_DA_ELAB START WITH 31401 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-19
CREATE SEQUENCE SMON_CONTA_BY_STATO_CONSERV START WITH 41 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-20
CREATE SEQUENCE SARO_COMP_URN_CALC START WITH 3937144 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-21
CREATE SEQUENCE STMP_VER_CONS_FISC_LOG START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-22
CREATE TABLE DEC_ERR_AA_REGISTRO_UNITA_DOC (ID_ERR_AA_REGISTRO_UNITA_DOC NUMBER NOT NULL, ID_AA_REGISTRO_UNITA_DOC NUMBER NOT NULL, AA_REGISTRO_UNITA_DOC NUMBER(4, 0) NOT NULL, DS_ERR_FMT_NUMERO VARCHAR2(4000 BYTE) NOT NULL, ID_UNITA_DOC_ERR_FMT_NUMERO NUMBER NOT NULL, CONSTRAINT PK_ERR_AA_REG PRIMARY KEY (ID_ERR_AA_REGISTRO_UNITA_DOC));

-- changeset root:1751897635013-23
CREATE TABLE VRS_SESSIONE_VERS (ID_SESSIONE_VERS NUMBER NOT NULL, ID_USER NUMBER, DT_APERTURA date NOT NULL, DT_CHIUSURA date DEFAULT to_date('31122444', 'ddmmyyyy') NOT NULL, TI_SESSIONE_VERS VARCHAR2(20 BYTE) DEFAULT 'VERSAMENTO' NOT NULL, TI_STATO_SESSIONE_VERS VARCHAR2(20 BYTE) DEFAULT 'APERTA' NOT NULL, ID_STRUT NUMBER, CD_REGISTRO_KEY_UNITA_DOC VARCHAR2(100 BYTE), AA_KEY_UNITA_DOC NUMBER(4, 0), CD_KEY_UNITA_DOC VARCHAR2(100 BYTE), ID_UNITA_DOC NUMBER, NM_USERID VARCHAR2(100 BYTE), CD_VERSIONE_WS VARCHAR2(100 BYTE), NM_AMBIENTE VARCHAR2(100 BYTE), NM_ENTE VARCHAR2(100 BYTE), NM_STRUT VARCHAR2(100 BYTE), CD_KEY_DOC_VERS VARCHAR2(100 BYTE), ID_DOC NUMBER, FL_SESSIONE_ERR_VERIF CHAR(1 BYTE), NM_USERID_WS VARCHAR2(100 BYTE), FL_SESSIONE_ERR_NON_RISOLUB CHAR(1 BYTE), CD_ERR_PRINC VARCHAR2(20 BYTE), DS_ERR_PRINC VARCHAR2(4000 BYTE), NI_FILE_ERR NUMBER, CD_IND_IP_CLIENT VARCHAR2(100 BYTE), CD_IND_SERVER VARCHAR2(100 BYTE), DT_VIRTUAL_APERTURA VARCHAR2(10 BYTE) GENERATED ALWAYS AS (TO_CHAR(DT_APERTURA,'yyyymmddhh24')), TS_APERTURA TIMESTAMP(3), TS_CHIUSURA TIMESTAMP(3), NM_UTENTE VARCHAR2(100 BYTE), CONSTRAINT PK_SES_VERS PRIMARY KEY (ID_SESSIONE_VERS));

-- changeset root:1751897635013-24
CREATE TABLE FIR_URL_DISTRIB_CRL (ID_URL_DISTRIB_CRL NUMBER NOT NULL, ID_CERTIF_CA NUMBER NOT NULL, NI_ORD_URL_DISTRIB_CRL NUMBER(3, 0) NOT NULL, DL_URL_DISTRIB_CRL VARCHAR2(1024 BYTE) NOT NULL, CONSTRAINT PK_URL_DISTR_CRL PRIMARY KEY (ID_URL_DISTRIB_CRL));

-- changeset root:1751897635013-25
CREATE TABLE ARO_RICH_ANNUL_VERS (ID_RICH_ANNUL_VERS NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, CD_RICH_ANNUL_VERS VARCHAR2(200 BYTE) NOT NULL, DS_RICH_ANNUL_VERS VARCHAR2(254 BYTE) NOT NULL, NT_RICH_ANNUL_VERS VARCHAR2(2000 BYTE) NOT NULL, DT_CREAZIONE_RICH_ANNUL_VERS date NOT NULL, ID_STATO_RICH_ANNUL_VERS_COR NUMBER, TI_CREAZIONE_RICH_ANNUL_VERS VARCHAR2(30 BYTE) NOT NULL, FL_IMMEDIATA CHAR(1 BYTE) NOT NULL, FL_FORZA_ANNUL CHAR(1 BYTE) DEFAULT '0' NOT NULL, FL_RICH_PING CHAR(1 BYTE) DEFAULT '0' NOT NULL, TI_RICH_ANNUL_VERS VARCHAR2(30 BYTE) DEFAULT 'UNITA_DOC' NOT NULL, TI_ANNULLAMENTO VARCHAR2(30 BYTE) DEFAULT 'ANNULLAMENTO_VERSAMENTO', CONSTRAINT PK_RICH_ANN_VRS PRIMARY KEY (ID_RICH_ANNUL_VERS));

-- changeset root:1751897635013-26
CREATE TABLE TMP_SUB_STRUT_CALC_CONSIST (ID_STRUT NUMBER NOT NULL, ID_SUB_STRUT NUMBER NOT NULL, AA_KEY_UNITA_DOC NUMBER(4, 0) NOT NULL, TI_STATO_ELAB VARCHAR2(30 BYTE));

-- changeset root:1751897635013-27
CREATE TABLE ARO_STATO_RICH_ANNUL_VERS (ID_STATO_RICH_ANNUL_VERS NUMBER NOT NULL, ID_RICH_ANNUL_VERS NUMBER NOT NULL, PG_STATO_RICH_ANNUL_VERS NUMBER NOT NULL, DT_REG_STATO_RICH_ANNUL_VERS date NOT NULL, DS_NOTA_RICH_ANNUL_VERS VARCHAR2(1024 BYTE), TI_STATO_RICH_ANNUL_VERS VARCHAR2(30 BYTE) NOT NULL, ID_USER_IAM NUMBER NOT NULL, CONSTRAINT PK_STATO_RICH_ANN_VRS PRIMARY KEY (ID_STATO_RICH_ANNUL_VERS));

-- changeset root:1751897635013-28 splitStatements:true
CREATE TABLE TMP_VER_FIRME_LOG (ID_LOG NUMBER NOT NULL, TS_CREAZIONE TIMESTAMP(6), DS_MESSAGE VARCHAR2(1024 BYTE), CONSTRAINT TMP_VER_FIRME_LOG_PK PRIMARY KEY (ID_LOG));
COMMENT ON TABLE TMP_VER_FIRME_LOG IS 'Tabella di log per la procedura di bonifica dei dati per il job di verifica firme';
COMMENT ON COLUMN TMP_VER_FIRME_LOG.ID_LOG IS 'PK della tabella, generato dalla sequence STMP_VER_FIRME_LOG';
COMMENT ON COLUMN TMP_VER_FIRME_LOG.TS_CREAZIONE IS 'Timestamp dell''evento';
COMMENT ON COLUMN TMP_VER_FIRME_LOG.DS_MESSAGE IS 'Messaggio di log';

-- changeset root:1751897635013-29 splitStatements:true
CREATE TABLE TMP_VERIF_COMP_COPIATO (ID_TMP_VERIF_COMP_COPIATO NUMBER DEFAULT "SACER"."STMP_VERIF_COMP_COPIATO"."NEXTVAL" NOT NULL, CD_SUB_PARTITION VARCHAR2(100 BYTE) NOT NULL, ID_COMP_DOC NUMBER NOT NULL, CD_VERSO_DIFF VARCHAR2(30 BYTE) NOT NULL, CONSTRAINT PK_TMP_VERIF_COMP_COPIATO PRIMARY KEY (ID_TMP_VERIF_COMP_COPIATO));
COMMENT ON TABLE TMP_VERIF_COMP_COPIATO IS 'Tabella contenente i componenti migrati la cui numerosita'' per partizione risulti diversa se  calcolata partendo dai documenti o dal nome della partizione.';
COMMENT ON COLUMN TMP_VERIF_COMP_COPIATO.ID_TMP_VERIF_COMP_COPIATO IS 'PK della tabella. Alimento dalla sequence stmp_verif_comp_copiato';
COMMENT ON COLUMN TMP_VERIF_COMP_COPIATO.CD_SUB_PARTITION IS 'Codice della subpartizione';
COMMENT ON COLUMN TMP_VERIF_COMP_COPIATO.ID_COMP_DOC IS 'Id del componente';
COMMENT ON COLUMN TMP_VERIF_COMP_COPIATO.CD_VERSO_DIFF IS '"Verso" della differenza di componenti. Se risultano piu'' componenti migrati partendo dai documenti vale DOC_SUBPART. Vale SUBPART_DOC altrimenti.';

-- changeset root:1751897635013-30
CREATE TABLE TMP_SUB_STRUT_AA_PER_IX_AIP (ID_SUB_STRUT NUMBER, AA_KEY_UNITA_DOC NUMBER(4, 0), DS_ESITO VARCHAR2(256 BYTE), CONT_EXCEPTION NUMBER, CONT_CAUSALE_NO_OK NUMBER);

-- changeset root:1751897635013-31
CREATE TABLE TMP_VER_IX_AIP_DA_ELIM (ID_ELENCO_VERS NUMBER, ID_VER_INDICE_AIP NUMBER, FL_VERSIONE_IX_AP_IN_SERIE CHAR(1 BYTE));

-- changeset root:1751897635013-32
CREATE TABLE TMP_ELENCO_DEL_VER_IX_AIP (ID_ELENCO_VERS NUMBER);

-- changeset root:1751897635013-33
CREATE TABLE TMP_ELENCO_UPD_STATO (ID_ELENCO_VERS NUMBER);

-- changeset root:1751897635013-34
CREATE TABLE TMP_UNITA_DOC_FISC (ID_STRUT NUMBER, AA_KEY_UNITA_DOC NUMBER(4, 0), CD_REGISTRO_KEY_UNITA_DOC VARCHAR2(100 BYTE), CD_KEY_UNITA_DOC VARCHAR2(100 BYTE), ID_UNITA_DOC NUMBER, TI_STATO_CONSERVAZIONE VARCHAR2(100 BYTE), TI_CONSERVAZIONE VARCHAR2(100 BYTE), FL_REGISTRO_FISC CHAR(1 BYTE), DT_ANNUL date, FL_IN_VOLUME CHAR(1 BYTE), FL_IN_SERIE CHAR(1 BYTE));

-- changeset root:1751897635013-35
CREATE TABLE ORG_AMBIENTE (ID_AMBIENTE NUMBER NOT NULL, NM_AMBIENTE VARCHAR2(100 BYTE) NOT NULL, DS_AMBIENTE VARCHAR2(254 BYTE) NOT NULL, DT_INI_VAL date DEFAULT TRUNC(sysdate) NOT NULL, DT_FIN_VAL date DEFAULT to_date('31/12/2444', 'dd/mm/yyyy') NOT NULL, ID_ENTE_CONSERV NUMBER, ID_ENTE_GESTORE NUMBER, DS_NOTE VARCHAR2(254 CHAR), CONSTRAINT PK_AMB PRIMARY KEY (ID_AMBIENTE));

-- changeset root:1751897635013-36
CREATE TABLE ORG_CATEG_ENTE (ID_CATEG_ENTE NUMBER NOT NULL, CD_CATEG_ENTE VARCHAR2(100 BYTE) NOT NULL, DS_CATEG_ENTE VARCHAR2(254 BYTE) NOT NULL, CONSTRAINT PK_CAT_ENTE PRIMARY KEY (ID_CATEG_ENTE));

-- changeset root:1751897635013-37
CREATE TABLE VRS_DOC_NON_VERS (ID_DOC_NON_VERS NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, CD_REGISTRO_KEY_UNITA_DOC VARCHAR2(100 BYTE) NOT NULL, AA_KEY_UNITA_DOC NUMBER(4, 0) NOT NULL, CD_KEY_UNITA_DOC VARCHAR2(100 BYTE) NOT NULL, CD_KEY_DOC_VERS VARCHAR2(100 BYTE) NOT NULL, DT_FIRST_SES_ERR date DEFAULT to_date('01/01/2000', 'dd/mm/yyyy') NOT NULL, DT_LAST_SES_ERR date DEFAULT SYSDATE NOT NULL, CD_ERR_PRINC VARCHAR2(20 BYTE) DEFAULT 'Diversi' NOT NULL, DS_ERR_PRINC VARCHAR2(4000 BYTE) DEFAULT 'Diversi' NOT NULL, CONSTRAINT PK_DOC_NOVERS PRIMARY KEY (ID_DOC_NON_VERS));

-- changeset root:1751897635013-38
CREATE TABLE DEC_MODELLO_TIPO_SERIE (ID_MODELLO_TIPO_SERIE NUMBER NOT NULL, ID_AMBIENTE NUMBER NOT NULL, NM_MODELLO_TIPO_SERIE VARCHAR2(100 BYTE) NOT NULL, DS_MODELLO_TIPO_SERIE VARCHAR2(1024 BYTE) NOT NULL, TI_RGL_NM_TIPO_SERIE VARCHAR2(30 BYTE) NOT NULL, NM_TIPO_SERIE_DA_CREARE VARCHAR2(100 BYTE), TI_RGL_DS_TIPO_SERIE VARCHAR2(30 BYTE) NOT NULL, DS_TIPO_SERIE_DA_CREARE VARCHAR2(100 BYTE), TI_RGL_CD_SERIE VARCHAR2(30 BYTE) NOT NULL, CD_SERIE_DA_CREARE VARCHAR2(100 BYTE), TI_RGL_DS_SERIE VARCHAR2(30 BYTE) NOT NULL, DS_SERIE_DA_CREARE VARCHAR2(100 BYTE), TI_RGL_ANNI_CONSERV VARCHAR2(30 BYTE) NOT NULL, NI_ANNI_CONSERV NUMBER(4, 0), FL_CONTROLLO_CONSIST_OBBLIG CHAR(1 BYTE) DEFAULT '0' NOT NULL, NI_UNITA_DOC_VOLUME NUMBER, TI_SEL_UD VARCHAR2(20 BYTE) NOT NULL, NI_AA_SEL_UD NUMBER(1, 0), FL_CREA_AUTOM CHAR(1 BYTE) DEFAULT '0' NOT NULL, GG_CREA_AUTOM CHAR(5 BYTE), TI_RGL_RANGE_ANNI_CREA_AUTOM VARCHAR2(30 BYTE), AA_INI_CREA_AUTOM NUMBER(4, 0), AA_FIN_CREA_AUTOM NUMBER(4, 0), NI_MM_CREA_AUTOM NUMBER(2, 1), TI_RGL_FILTRO_TI_DOC VARCHAR2(30 BYTE) NOT NULL, TI_RGL_CONSERVAZIONE_SERIE VARCHAR2(30 BYTE) NOT NULL, TI_CONSERVAZIONE_SERIE VARCHAR2(30 BYTE), DT_ISTITUZ date NOT NULL, DT_SOPPRES date NOT NULL, ID_TIPO_UNITA_DOC_DATI_SPEC NUMBER, ID_TIPO_DOC_DATI_SPEC NUMBER, TI_STATO_VER_SERIE_AUTOM VARCHAR2(30 BYTE) DEFAULT 'DA_VALIDARE', NI_AA_SEL_UD_SUC NUMBER(1, 0), CONSTRAINT PK_MODL_TI_SER PRIMARY KEY (ID_MODELLO_TIPO_SERIE));

-- changeset root:1751897635013-39
CREATE TABLE VRS_SES_UPD_UNITA_DOC_ERR (ID_SES_UPD_UNITA_DOC_ERR NUMBER NOT NULL, TS_INI_SES TIMESTAMP(6) NOT NULL, TS_FINE_SES TIMESTAMP(6) NOT NULL, ID_ERR_SACER_PRINC NUMBER NOT NULL, DS_ERR_PRINC VARCHAR2(4000 BYTE) NOT NULL, ID_CONTROLLO_WS_PRINC NUMBER NOT NULL, CD_VERSIONE_WS VARCHAR2(100 BYTE), NM_USERID_WS VARCHAR2(100 BYTE), TI_STATO_SES VARCHAR2(20 BYTE) NOT NULL, NM_AMBIENTE VARCHAR2(100 BYTE), NM_ENTE VARCHAR2(100 BYTE), NM_STRUT VARCHAR2(100 BYTE), CD_REGISTRO_KEY_UNITA_DOC VARCHAR2(100 BYTE), AA_KEY_UNITA_DOC NUMBER(4, 0), CD_KEY_UNITA_DOC VARCHAR2(100 BYTE), NM_TIPO_UNITA_DOC VARCHAR2(100 BYTE), NM_TIPO_DOC_PRINC VARCHAR2(100 BYTE), ID_STRUT NUMBER, ID_REGISTRO_UNITA_DOC NUMBER, ID_TIPO_UNITA_DOC NUMBER, ID_TIPO_DOC_PRINC NUMBER, CONSTRAINT PK_SES_UPD_UD_ERR PRIMARY KEY (ID_SES_UPD_UNITA_DOC_ERR));

-- changeset root:1751897635013-40
CREATE TABLE ORG_ENTE (ID_ENTE NUMBER NOT NULL, ID_AMBIENTE NUMBER NOT NULL, NM_ENTE VARCHAR2(100 BYTE) NOT NULL, DS_ENTE VARCHAR2(254 BYTE) NOT NULL, ID_CATEG_ENTE NUMBER, TIPO_DEF_TEMPLATE_ENTE VARCHAR2(30 BYTE) DEFAULT 'NO_TEMPLATE' NOT NULL, CD_ENTE_NORMALIZ VARCHAR2(100 BYTE), DT_INI_VAL_APPART_AMBIENTE date DEFAULT TRUNC(sysdate) NOT NULL, DT_FIN_VAL_APPART_AMBIENTE date DEFAULT to_date('31/12/2444', 'dd/mm/yyyy') NOT NULL, DT_INI_VAL date, DT_FINE_VAL date DEFAULT TO_DATE('31/12/2444', 'dd/mm/yyyy') NOT NULL, FL_CESSATO CHAR(1 BYTE) DEFAULT '0' NOT NULL, CONSTRAINT PK_ENT PRIMARY KEY (ID_ENTE));

-- changeset root:1751897635013-41
CREATE TABLE VRS_UNITA_DOC_NON_VERS (ID_UNITA_DOC_NON_VERS NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, CD_REGISTRO_KEY_UNITA_DOC VARCHAR2(100 BYTE) NOT NULL, AA_KEY_UNITA_DOC NUMBER(4, 0) NOT NULL, CD_KEY_UNITA_DOC VARCHAR2(100 BYTE) NOT NULL, DT_FIRST_SES_ERR date DEFAULT to_date('01/01/2000', 'dd/mm/yyyy') NOT NULL, DT_LAST_SES_ERR date DEFAULT SYSDATE NOT NULL, CD_ERR_PRINC VARCHAR2(20 BYTE) DEFAULT 'Diversi' NOT NULL, DS_ERR_PRINC VARCHAR2(4000 BYTE) DEFAULT 'Diversi' NOT NULL, CONSTRAINT PK_UD_NOVERS PRIMARY KEY (ID_UNITA_DOC_NON_VERS));

-- changeset root:1751897635013-42
CREATE TABLE ORG_PARTITION (ID_PARTITION NUMBER NOT NULL, TI_PARTITION VARCHAR2(30 BYTE) NOT NULL, CD_PARTITION VARCHAR2(100 BYTE) NOT NULL, CONSTRAINT PK_PART PRIMARY KEY (ID_PARTITION));

-- changeset root:1751897635013-43
CREATE TABLE ORG_PARTITION_STRUT (ID_PARTITION_STRUT NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, TI_PARTITION VARCHAR2(30 BYTE) NOT NULL, ID_PARTITION NUMBER NOT NULL, CONSTRAINT PK_PART_STRUT PRIMARY KEY (ID_PARTITION_STRUT));

-- changeset root:1751897635013-44
CREATE TABLE IAM_ABIL_ORGANIZ (ID_ABIL_ORGANIZ NUMBER NOT NULL, ID_USER_IAM NUMBER NOT NULL, ID_ORGANIZ_APPLIC NUMBER NOT NULL, FL_ORGANIZ_DEFAULT CHAR(1 BYTE) DEFAULT '0' NOT NULL, CONSTRAINT PK_ABIL_ORG PRIMARY KEY (ID_ABIL_ORGANIZ));

-- changeset root:1751897635013-45
CREATE TABLE ORG_STRUT (ID_STRUT NUMBER NOT NULL, ID_ENTE NUMBER NOT NULL, NM_STRUT VARCHAR2(100 BYTE) NOT NULL, DS_STRUT VARCHAR2(254 BYTE) NOT NULL, ID_CATEG_STRUT NUMBER, FL_TEMPLATE CHAR(1 BYTE) DEFAULT '0', CD_IPA VARCHAR2(100 BYTE), ID_ENTE_CONVENZ NUMBER, DT_INI_VAL date, DT_FINE_VAL date, CD_STRUT_NORMALIZ VARCHAR2(100 BYTE), DL_NOTE_STRUT VARCHAR2(1024 BYTE), DT_INI_VAL_STRUT date DEFAULT to_date('01/01/2000', 'dd/mm/yyyy') NOT NULL, DT_FINE_VAL_STRUT date DEFAULT to_date('31/12/2444', 'dd/mm/yyyy') NOT NULL, FL_CESSATO CHAR(1 BYTE) DEFAULT '0' NOT NULL, FL_ARCHIVIO_RESTITUITO CHAR(1 BYTE) DEFAULT '0' NOT NULL, CONSTRAINT PK_STRUT PRIMARY KEY (ID_STRUT));

-- changeset root:1751897635013-46
CREATE TABLE IAM_ABIL_TIPO_DATO (ID_ABIL_TIPO_DATO NUMBER NOT NULL, ID_ABIL_ORGANIZ NUMBER NOT NULL, NM_CLASSE_TIPO_DATO VARCHAR2(100 BYTE) NOT NULL, ID_TIPO_DATO_APPLIC NUMBER NOT NULL, CONSTRAINT PK_ABIL_TI_DATO PRIMARY KEY (ID_ABIL_TIPO_DATO));

-- changeset root:1751897635013-47
CREATE TABLE ORG_SUB_PARTITION (ID_SUB_PARTITION NUMBER NOT NULL, ID_PARTITION NUMBER NOT NULL, CD_SUB_PARTITION VARCHAR2(100 BYTE) NOT NULL, CONSTRAINT PK_SUB_PART PRIMARY KEY (ID_SUB_PARTITION));

-- changeset root:1751897635013-48
CREATE TABLE APL_VALORE_PARAM_APPLIC (ID_VALORE_PARAM_APPLIC NUMBER NOT NULL, ID_PARAM_APPLIC NUMBER NOT NULL, TI_APPART VARCHAR2(30 BYTE) NOT NULL, DS_VALORE_PARAM_APPLIC VARCHAR2(4000 BYTE) NOT NULL, ID_AMBIENTE NUMBER, ID_STRUT NUMBER, ID_TIPO_UNITA_DOC NUMBER, ID_AA_TIPO_FASCICOLO NUMBER, CONSTRAINT PK_VAL_PAR_APL PRIMARY KEY (ID_VALORE_PARAM_APPLIC));

-- changeset root:1751897635013-49
CREATE TABLE IAM_ORGANIZ_DA_REPLIC (ID_ORGANIZ_DA_REPLIC NUMBER NOT NULL, ID_ORGANIZ_APPLIC NUMBER NOT NULL, NM_TIPO_ORGANIZ VARCHAR2(100 BYTE) NOT NULL, NM_ORGANIZ VARCHAR2(100 BYTE) NOT NULL, TI_OPER_REPLIC VARCHAR2(20 BYTE) NOT NULL, TI_STATO_REPLIC VARCHAR2(30 BYTE) NOT NULL, DT_LOG_ORGANIZ_DA_REPLIC date NOT NULL, CD_ERR VARCHAR2(100 BYTE), DS_MSG_ERR VARCHAR2(254 BYTE), DT_ERR date, CONSTRAINT PK_ORG_DA_REPLIC PRIMARY KEY (ID_ORGANIZ_DA_REPLIC));

-- changeset root:1751897635013-50
CREATE TABLE ORG_VAL_SUB_PARTITION (ID_VAL_SUB_PARTITION NUMBER NOT NULL, ID_PARTITION NUMBER NOT NULL, CD_VAL_SUB_PARTITION VARCHAR2(100 BYTE) NOT NULL, ID_SUB_PARTITION NUMBER, CONSTRAINT PK_VAL_SUB_PART PRIMARY KEY (ID_VAL_SUB_PARTITION));

-- changeset root:1751897635013-51 splitStatements:true
CREATE TABLE DEC_JOB (ID_JOB NUMBER NOT NULL, NM_JOB VARCHAR2(100 BYTE) NOT NULL, TI_SCHED_JOB VARCHAR2(20 BYTE) NOT NULL, TI_SCOPO_JOB VARCHAR2(40 BYTE) NOT NULL, NM_NODO_ASSEGNATO VARCHAR2(100 BYTE), TI_STATO_TIMER VARCHAR2(20 BYTE), CD_SCHED_HOUR VARCHAR2(100 BYTE), CD_SCHED_MINUTE VARCHAR2(100 BYTE), CD_SCHED_DAYOFMONTH VARCHAR2(100 BYTE), CD_SCHED_MONTH VARCHAR2(100 BYTE), CD_SCHED_DAYOFWEEK VARCHAR2(100 BYTE), DT_PROSSIMA_ATTIVAZIONE date, FL_DATA_ACCURATA VARCHAR2(1 BYTE), DS_JOB VARCHAR2(200 BYTE), NM_AMBITO VARCHAR2(200 BYTE), NI_ORD_EXEC NUMBER, CONSTRAINT PK_JOB PRIMARY KEY (ID_JOB));
COMMENT ON TABLE DEC_JOB IS 'Tabella per configurare l''esecuzione dei timer. Utilizzata dai job su jboss e dalle sonde Zabbix';
COMMENT ON COLUMN DEC_JOB.NM_NODO_ASSEGNATO IS 'Nome del nodo del cluster su cui verrà eseguito il job';
COMMENT ON COLUMN DEC_JOB.TI_STATO_TIMER IS 'Stato del job: ATTIVO, INATTIVO o ESECUZIONE_SINGOLA';
COMMENT ON COLUMN DEC_JOB.CD_SCHED_HOUR IS 'Campo ''ora'' nella schedulazione del job';
COMMENT ON COLUMN DEC_JOB.CD_SCHED_MINUTE IS 'Campo ''minuto'' nella schedulazione del job';
COMMENT ON COLUMN DEC_JOB.CD_SCHED_DAYOFMONTH IS 'Campo ''giorno del mese'' nella schedulazione del job';
COMMENT ON COLUMN DEC_JOB.CD_SCHED_MONTH IS 'Campo ''mese'' nella schedulazione del job';
COMMENT ON COLUMN DEC_JOB.CD_SCHED_DAYOFWEEK IS 'Campo ''giorno della settimana'' nella schedulazione del job';
COMMENT ON COLUMN DEC_JOB.DT_PROSSIMA_ATTIVAZIONE IS 'Quando il job verrà eseguito la prossima volta (se è attivo).';

-- changeset root:1751897635013-52
CREATE TABLE IAM_USER (ID_USER_IAM NUMBER NOT NULL, NM_USERID VARCHAR2(100 BYTE) NOT NULL, CD_PSW VARCHAR2(100 BYTE) NOT NULL, NM_COGNOME_USER VARCHAR2(100 BYTE) NOT NULL, NM_NOME_USER VARCHAR2(100 BYTE) NOT NULL, FL_ATTIVO CHAR(1 BYTE) NOT NULL, DT_REG_PSW date NOT NULL, DT_SCAD_PSW date NOT NULL, FL_USER_ADMIN CHAR(1 BYTE) DEFAULT '0' NOT NULL, CD_SALT VARCHAR2(100 BYTE), CD_FISC VARCHAR2(16 BYTE), DS_EMAIL VARCHAR2(254 BYTE), FL_CONTR_IP CHAR(1 BYTE) DEFAULT '0' NOT NULL, TIPO_USER VARCHAR2(20 BYTE) DEFAULT 'PERSONA_FISICA' NOT NULL, TIPO_AUTH VARCHAR2(20 BYTE), CONSTRAINT PK_USR_IAM PRIMARY KEY (ID_USER_IAM));

-- changeset root:1751897635013-53
CREATE TABLE ORG_PARTITION_SUB_STRUT (ID_PARTITION_SUB_STRUT NUMBER NOT NULL, ID_SUB_STRUT NUMBER NOT NULL, TI_PARTITION VARCHAR2(20 BYTE) NOT NULL, ID_PARTITION NUMBER NOT NULL, CONSTRAINT PK_PART_SUB_STRUT PRIMARY KEY (ID_PARTITION_SUB_STRUT));

-- changeset root:1751897635013-54
CREATE TABLE ORG_SUB_STRUT (ID_SUB_STRUT NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, NM_SUB_STRUT VARCHAR2(100 BYTE) NOT NULL, DS_SUB_STRUT VARCHAR2(254 BYTE) NOT NULL, CONSTRAINT PK_SUB_STRUT PRIMARY KEY (ID_SUB_STRUT));

-- changeset root:1751897635013-55
CREATE TABLE DEC_AA_REGISTRO_UNITA_DOC (ID_AA_REGISTRO_UNITA_DOC NUMBER NOT NULL, ID_REGISTRO_UNITA_DOC NUMBER NOT NULL, AA_MIN_REGISTRO_UNITA_DOC NUMBER(4, 0) NOT NULL, AA_MAX_REGISTRO_UNITA_DOC NUMBER(4, 0), FL_UPD_FMT_NUMERO CHAR(1 BYTE) DEFAULT '0' NOT NULL, DS_FORMATO_NUMERO VARCHAR2(1024 BYTE), CD_FORMATO_NUMERO VARCHAR2(254 BYTE), CONSTRAINT PK_AA_REG PRIMARY KEY (ID_AA_REGISTRO_UNITA_DOC));

-- changeset root:1751897635013-56
CREATE TABLE DEC_ATTRIB_DATI_SPEC (ID_ATTRIB_DATI_SPEC NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, TI_USO_ATTRIB VARCHAR2(20 BYTE) NOT NULL, TI_ENTITA_SACER VARCHAR2(20 BYTE) NOT NULL, ID_TIPO_UNITA_DOC NUMBER, ID_TIPO_DOC NUMBER, ID_TIPO_COMP_DOC NUMBER, NM_SISTEMA_MIGRAZ VARCHAR2(100 BYTE), NM_ATTRIB_DATI_SPEC VARCHAR2(100 BYTE) NOT NULL, DS_ATTRIB_DATI_SPEC VARCHAR2(1024 BYTE) NOT NULL, TI_ATTRIB_DATI_SPEC VARCHAR2(20 BYTE), CONSTRAINT PK_ATTB_DATI_SPEC PRIMARY KEY (ID_ATTRIB_DATI_SPEC));

-- changeset root:1751897635013-57
CREATE TABLE MON_CONTA_BY_STATO_CONSERV (ID_CONTA_BY_STATO_CONSERV NUMBER NOT NULL, DT_RIF date NOT NULL, ID_STRUT NUMBER NOT NULL, AA_KEY_UNITA_DOC NUMBER(4, 0) NOT NULL, ID_REGISTRO_UNITA_DOC NUMBER NOT NULL, ID_TIPO_UNITA_DOC NUMBER NOT NULL, ID_TIPO_DOC_PRINC NUMBER NOT NULL, NI_COMP_AIP_GENERATO NUMBER NOT NULL, NI_COMP_AIP_IN_AGGIORN NUMBER NOT NULL, NI_COMP_PRESA_IN_CARICO NUMBER NOT NULL, NI_COMP_IN_VOLUME NUMBER NOT NULL, NI_COMP_ANNUL NUMBER NOT NULL, CONSTRAINT PK_CNT_STATO_CONS PRIMARY KEY (ID_CONTA_BY_STATO_CONSERV));

-- changeset root:1751897635013-58
CREATE TABLE DEC_CATEG_TIPO_UNITA_DOC (ID_CATEG_TIPO_UNITA_DOC NUMBER NOT NULL, CD_CATEG_TIPO_UNITA_DOC VARCHAR2(100 BYTE) NOT NULL, DS_CATEG_TIPO_UNITA_DOC VARCHAR2(254 BYTE) NOT NULL, ID_CATEG_TIPO_UNITA_DOC_PADRE NUMBER, CONSTRAINT PK_CAT_TI_UNI_DOC PRIMARY KEY (ID_CATEG_TIPO_UNITA_DOC));

-- changeset root:1751897635013-59
CREATE TABLE TMP_STRUT_CALC_CONSIST (ID_STRUT NUMBER NOT NULL, TI_STATO_ELAB VARCHAR2(30 BYTE));

-- changeset root:1751897635013-60
CREATE TABLE DEC_CRITERIO_FILTRO_MULTIPLO (ID_CRITERIO_FILTRO_MULT NUMBER NOT NULL, ID_CRITERIO_RAGGR NUMBER NOT NULL, TI_FILTRO_MULTIPLO VARCHAR2(30 BYTE) NOT NULL, ID_TIPO_UNITA_DOC NUMBER, TI_ESITO_VERIF_FIRME VARCHAR2(20 BYTE), ID_REGISTRO_UNITA_DOC NUMBER, ID_TIPO_DOC NUMBER, ID_REGISTRO_RANGE_UNITA_DOC NUMBER, NM_SISTEMA_MIGRAZ VARCHAR2(100 BYTE), CONSTRAINT PK_CRI_FILT_MULT PRIMARY KEY (ID_CRITERIO_FILTRO_MULT));

-- changeset root:1751897635013-61
CREATE TABLE DEC_FORMATO_FILE_AMMESSO (ID_FORMATO_FILE_AMMESSO NUMBER NOT NULL, ID_TIPO_COMP_DOC NUMBER NOT NULL, ID_FORMATO_FILE_DOC NUMBER NOT NULL, CONSTRAINT PK_FMT_FIL_AMS PRIMARY KEY (ID_FORMATO_FILE_AMMESSO));

-- changeset root:1751897635013-62 splitStatements:true
CREATE TABLE DEC_FORMATO_FILE_BUSTA (ID_FORMATO_FILE_BUSTA NUMBER NOT NULL, ID_FORMATO_FILE_STANDARD NUMBER NOT NULL, TI_FORMATO_FIRMA_MARCA VARCHAR2(20 BYTE) NOT NULL, CONSTRAINT PK_FMT_FILE_BUSTA PRIMARY KEY (ID_FORMATO_FILE_BUSTA));
COMMENT ON COLUMN DEC_FORMATO_FILE_BUSTA.TI_FORMATO_FIRMA_MARCA IS 'Valori ammessi: CADES_BES, CADES_T, CADES_C, CADES_X_Long,  XADES,  XADES_BES, XADES_T, XADES_C, XADES_X, XADES_XL, PADES, TSR, P7M, M7M, TSD, TST, CAdES_BASELINE_B, CAdES_BASELINE_T, CAdES_BASELINE_LT, CAdES_BASELINE_LTA, 
    PAdES_BASELINE_B, PAdES_BASELINE_T, PAdES_BASELINE_LT, PAdES_BASELINE_LTA, XAdES_BASELINE_B, XAdES_BASELINE_T, XAdES_BASELINE_LT, XAdES_BASELINE_LTA, CAdES-BASELINE-B, CAdES-BASELINE-T, CAdES-BASELINE-LT, CAdES-BASELINE-LTA, PAdES-BASELINE-B,
    PAdES-BASELINE-T, PAdES-BASELINE-LT, PAdES-BASELINE-LTA, XAdES-BASELINE-B, XAdES-BASELINE-T, XAdES-BASELINE-LT, XAdES-BASELINE-LTA, CMS-NOT-ETSI, PDF-NOT-ETSI, XML-NOT-ETSI, PKCS7-B, PKCS7-T, PKCS7-LT, PKCS7-LTA';

-- changeset root:1751897635013-63
CREATE TABLE DEC_FORMATO_FILE_DOC (ID_FORMATO_FILE_DOC NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, NM_FORMATO_FILE_DOC VARCHAR2(100 BYTE) NOT NULL, DS_FORMATO_FILE_DOC VARCHAR2(254 BYTE) NOT NULL, CD_VERSIONE VARCHAR2(100 BYTE) NOT NULL, DT_ISTITUZ date DEFAULT trunc(sysdate) NOT NULL, DT_SOPPRES date DEFAULT to_date('31/12/2444', 'dd/mm/yyyy') NOT NULL, CONSTRAINT PK_FMT_FILE PRIMARY KEY (ID_FORMATO_FILE_DOC));

-- changeset root:1751897635013-64
CREATE TABLE DEC_FORMATO_FILE_STANDARD (ID_FORMATO_FILE_STANDARD NUMBER NOT NULL, NM_FORMATO_FILE_STANDARD VARCHAR2(100 BYTE) NOT NULL, DS_FORMATO_FILE_STANDARD VARCHAR2(254 BYTE) NOT NULL, CD_VERSIONE VARCHAR2(100 BYTE) NOT NULL, DS_COPYRIGHT VARCHAR2(254 BYTE) NOT NULL, NM_MIMETYPE_FILE VARCHAR2(100 BYTE) NOT NULL, TI_ESITO_CONTR_FORMATO VARCHAR2(20 BYTE) NOT NULL, FL_FORMATO_CONCAT CHAR(1 BYTE) DEFAULT '0' NOT NULL, NT_IDONEITA VARCHAR2(500 BYTE), DT_VALUTAZIONE_FORMATO date, CONSTRAINT PK_FMT_FIL_STD PRIMARY KEY (ID_FORMATO_FILE_STANDARD));

-- changeset root:1751897635013-65
CREATE TABLE DEC_REGISTRO_UNITA_DOC (ID_REGISTRO_UNITA_DOC NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, CD_REGISTRO_UNITA_DOC VARCHAR2(100 BYTE) NOT NULL, DS_REGISTRO_UNITA_DOC VARCHAR2(1024 BYTE) NOT NULL, DT_ISTITUZ date DEFAULT trunc(sysdate) NOT NULL, DT_SOPPRES date DEFAULT to_date('31/12/2444', 'dd/mm/yyyy') NOT NULL, FL_REGISTRO_FISC CHAR(1 BYTE) DEFAULT '0' NOT NULL, FL_CREA_SERIE CHAR(1 BYTE) DEFAULT '0' NOT NULL, NI_ANNI_CONSERV NUMBER(4, 0), FL_CREA_TIPO_SERIE_STANDARD CHAR(1 BYTE), NM_TIPO_SERIE_DA_CREARE VARCHAR2(100 BYTE), DS_TIPO_SERIE_DA_CREARE VARCHAR2(254 BYTE), CD_SERIE_DA_CREARE VARCHAR2(100 BYTE), DS_SERIE_DA_CREARE VARCHAR2(254 BYTE), ID_MODELLO_TIPO_SERIE NUMBER, FL_TIPO_SERIE_MULT CHAR(1 BYTE) DEFAULT '0' NOT NULL, CD_REGISTRO_NORMALIZ VARCHAR2(100 BYTE), NI_AA_CONSERV NUMBER(4, 0), FL_CONSERV_UNIFORME CHAR(1 BYTE), FL_CONSERV_ILLIMITATA CHAR(1 BYTE), CONSTRAINT PK_REG_UNI_DOC PRIMARY KEY (ID_REGISTRO_UNITA_DOC));

-- changeset root:1751897635013-66
CREATE TABLE DEC_TIPO_COMP_DOC (ID_TIPO_COMP_DOC NUMBER NOT NULL, ID_TIPO_STRUT_DOC NUMBER NOT NULL, NM_TIPO_COMP_DOC VARCHAR2(100 BYTE) NOT NULL, DS_TIPO_COMP_DOC VARCHAR2(254 BYTE) NOT NULL, DT_ISTITUZ date DEFAULT trunc(sysdate) NOT NULL, DT_SOPPRES date DEFAULT to_date('31/12/2444', 'dd/mm/yyyy') NOT NULL, TI_USO_COMP_DOC VARCHAR2(20 BYTE) NOT NULL, FL_GESTITI CHAR(1 BYTE) DEFAULT '0' NOT NULL, FL_IDONEI CHAR(1 BYTE) DEFAULT '0' NOT NULL, FL_DEPRECATI CHAR(1 BYTE) DEFAULT '0' NOT NULL, CONSTRAINT PK_TIPO_COMP_DOC PRIMARY KEY (ID_TIPO_COMP_DOC));

-- changeset root:1751897635013-67
CREATE TABLE DEC_TIPO_DOC (ID_TIPO_DOC NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, NM_TIPO_DOC VARCHAR2(100 BYTE) NOT NULL, DS_TIPO_DOC VARCHAR2(1024 BYTE) NOT NULL, FL_TIPO_DOC_PRINCIPALE CHAR(1 BYTE), DT_ISTITUZ date DEFAULT trunc(sysdate) NOT NULL, DT_SOPPRES date DEFAULT to_date('31/12/2444', 'dd/mm/yyyy') NOT NULL, DL_NOTE_TIPO_DOC VARCHAR2(1024 BYTE), DS_PERIODICITA_VERS VARCHAR2(1024 BYTE), CONSTRAINT PK_TIPO_DOC PRIMARY KEY (ID_TIPO_DOC));

-- changeset root:1751897635013-68
CREATE TABLE DEC_TIPO_RAPPR_COMP (ID_TIPO_RAPPR_COMP NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, NM_TIPO_RAPPR_COMP VARCHAR2(100 BYTE) NOT NULL, DS_TIPO_RAPPR_COMP VARCHAR2(254 BYTE) NOT NULL, DT_ISTITUZ date DEFAULT trunc(sysdate) NOT NULL, DT_SOPPRES date DEFAULT to_date('31/12/2444', 'dd/mm/yyyy') NOT NULL, ID_FORMATO_CONTENUTO NUMBER, ID_FORMATO_CONVERTIT NUMBER, TI_ALGO_RAPPR VARCHAR2(20 BYTE) DEFAULT 'Apache FOP', ID_FORMATO_OUTPUT_RAPPR NUMBER, TI_OUTPUT_RAPPR VARCHAR2(20 BYTE) DEFAULT 'DIP', CONSTRAINT PK_TIPO_RAP_COMP PRIMARY KEY (ID_TIPO_RAPPR_COMP));

-- changeset root:1751897635013-69
CREATE TABLE DEC_TIPO_STRUT_DOC (ID_TIPO_STRUT_DOC NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, NM_TIPO_STRUT_DOC VARCHAR2(100 BYTE) NOT NULL, DS_TIPO_STRUT_DOC VARCHAR2(254 BYTE) NOT NULL, DT_ISTITUZ date DEFAULT trunc(sysdate) NOT NULL, DT_SOPPRES date DEFAULT to_date('31/12/2444', 'dd/mm/yyyy') NOT NULL, CONSTRAINT PK_TIPO_STRUT_DOC PRIMARY KEY (ID_TIPO_STRUT_DOC));

-- changeset root:1751897635013-70
CREATE TABLE ARO_RICHIESTA_RA (ID_RICHIESTA_RA NUMBER NOT NULL, TS_INIZIO TIMESTAMP(6) NOT NULL, TS_FINE TIMESTAMP(6), ID_STRUT NUMBER NOT NULL, TI_STATO VARCHAR2(30 BYTE) NOT NULL, CD_ERRORE VARCHAR2(300 BYTE), NOTE VARCHAR2(300 BYTE), ID_USER_IAM NUMBER NOT NULL, FL_SVUOTA_FTP CHAR(1 BYTE), CONSTRAINT PK_RICH_ARCH PRIMARY KEY (ID_RICHIESTA_RA));

-- changeset root:1751897635013-71
CREATE TABLE ARO_AIP_RESTITUZIONE_ARCHIVIO (ID_AIP_REST_ARCHIVIO NUMBER NOT NULL, ID_INDICE_AIP NUMBER NOT NULL, TI_STATO VARCHAR2(30 BYTE), TI_TIPOLOGIA_OGGETTO VARCHAR2(50 BYTE), DIM NUMBER, ID_RICHIESTA_RA NUMBER NOT NULL, CD_ERRORE VARCHAR2(300 BYTE), DT_ESTRAZIONE date, CONSTRAINT PK_AIP_REST_ARCH PRIMARY KEY (ID_AIP_REST_ARCHIVIO));

-- changeset root:1751897635013-72
CREATE TABLE DEC_TIPO_UNITA_DOC (ID_TIPO_UNITA_DOC NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, NM_TIPO_UNITA_DOC VARCHAR2(100 BYTE) NOT NULL, DS_TIPO_UNITA_DOC VARCHAR2(254 BYTE) NOT NULL, CD_SERIE VARCHAR2(100 BYTE), DT_ISTITUZ date DEFAULT trunc(sysdate) NOT NULL, DT_SOPPRES date DEFAULT to_date('31/12/2444', 'dd/mm/yyyy') NOT NULL, TI_SAVE_FILE VARCHAR2(20 BYTE) DEFAULT 'BLOB' NOT NULL, ID_CATEG_TIPO_UNITA_DOC NUMBER NOT NULL, FL_CREA_TIPO_SERIE_STANDARD VARCHAR2(30 BYTE), NM_TIPO_SERIE_DA_CREARE VARCHAR2(100 BYTE), DS_TIPO_SERIE_DA_CREARE VARCHAR2(254 BYTE), CD_SERIE_DA_CREARE VARCHAR2(100 BYTE), DS_SERIE_DA_CREARE VARCHAR2(254 BYTE), ID_MODELLO_TIPO_SERIE NUMBER, ID_TIPO_SERVIZIO NUMBER, ID_TIPO_SERVIZIO_ATTIV NUMBER, FL_VERS_MANUALE CHAR(1 BYTE) DEFAULT '0' NOT NULL, DL_NOTE_TIPO_UD VARCHAR2(1024 BYTE), ID_TIPO_SERV_CONSERV_TIPO_UD NUMBER, ID_TIPO_SERV_ATTIV_TIPO_UD NUMBER, NI_AA_CONSERV NUMBER(4, 0), FL_CONSERV_UNIFORME CHAR(1 BYTE), FL_CONSERV_ILLIMITATA CHAR(1 BYTE), CONSTRAINT PK_TIP_UNI_DOC PRIMARY KEY (ID_TIPO_UNITA_DOC));

-- changeset root:1751897635013-73
CREATE TABLE DEC_TIPO_UNITA_DOC_AMMESSO (ID_TIPO_UNITA_DOC_AMMESSO NUMBER NOT NULL, ID_TIPO_UNITA_DOC NUMBER NOT NULL, ID_REGISTRO_UNITA_DOC NUMBER NOT NULL, CONSTRAINT PK_TIP_UNI_DOC_AMS PRIMARY KEY (ID_TIPO_UNITA_DOC_AMMESSO));

-- changeset root:1751897635013-74
CREATE TABLE ARO_CONTENUTO_COMP (ID_CONTEN_COMP NUMBER NOT NULL, ID_COMP_STRUT_DOC NUMBER NOT NULL, BL_CONTEN_COMP BLOB NOT NULL, ID_STRUT NUMBER NOT NULL, AA_KEY_UNITA_DOC NUMBER(4, 0) NOT NULL, MM_VERS NUMBER(6, 0) NOT NULL, CONSTRAINT PK_CONT_COMP PRIMARY KEY (ID_CONTEN_COMP));

-- changeset root:1751897635013-75
CREATE TABLE DEC_USO_FORMATO_FILE_STANDARD (ID_USO_FORMATO_FILE_AMMESSO NUMBER NOT NULL, ID_FORMATO_FILE_DOC NUMBER NOT NULL, NI_ORD_USO NUMBER NOT NULL, ID_FORMATO_FILE_STANDARD NUMBER NOT NULL, CONSTRAINT PK_USO_FMT_FIL_AMS PRIMARY KEY (ID_USO_FORMATO_FILE_AMMESSO));

-- changeset root:1751897635013-76
CREATE TABLE DEC_XSD_ATTRIB_DATI_SPEC (ID_XSD_ATTRIB_DATI_SPEC NUMBER NOT NULL, ID_XSD_DATI_SPEC NUMBER NOT NULL, ID_ATTRIB_DATI_SPEC NUMBER NOT NULL, NI_ORD_ATTRIB NUMBER NOT NULL, DS_ATTRIB_DATI_SPEC VARCHAR2(1024 BYTE) NOT NULL, CONSTRAINT PK_XSD_ATTB PRIMARY KEY (ID_XSD_ATTRIB_DATI_SPEC));

-- changeset root:1751897635013-77
CREATE TABLE DEC_PARTE_NUMERO_REGISTRO (ID_PARTE_NUMERO_REGISTRO NUMBER NOT NULL, ID_AA_REGISTRO_UNITA_DOC NUMBER NOT NULL, NM_PARTE_NUMERO_REGISTRO VARCHAR2(100 BYTE) NOT NULL, DS_PARTE_NUMERO_REGISTRO VARCHAR2(254 BYTE) NOT NULL, NI_PARTE_NUMERO_REGISTRO NUMBER NOT NULL, TI_CHAR_PARTE VARCHAR2(30 BYTE) NOT NULL, NI_MIN_CHAR_PARTE NUMBER NOT NULL, NI_MAX_CHAR_PARTE NUMBER, TI_PAD_SX_PARTE VARCHAR2(30 BYTE), TI_CHAR_SEP CHAR(1 BYTE), DL_VALORI_PARTE VARCHAR2(1024 BYTE), TI_PARTE VARCHAR2(20 BYTE), CONSTRAINT PK_PARTE_NUM_REG PRIMARY KEY (ID_PARTE_NUMERO_REGISTRO));

-- changeset root:1751897635013-78
CREATE TABLE DEC_LIVELLO_TITOL (ID_LIVELLO_TITOL NUMBER NOT NULL, ID_TITOL NUMBER NOT NULL, NM_LIVELLO_TITOL VARCHAR2(100 BYTE) NOT NULL, TI_FMT_VOCE_TITOL VARCHAR2(20 BYTE) NOT NULL, CD_SEP_LIVELLO CHAR(1 BYTE), NI_LIVELLO NUMBER NOT NULL, CONSTRAINT PK_LIV_TITOL PRIMARY KEY (ID_LIVELLO_TITOL));

-- changeset root:1751897635013-79
CREATE TABLE DEC_VAL_VOCE_TITOL (ID_VAL_VOCE_TITOL NUMBER NOT NULL, ID_VOCE_TITOL NUMBER NOT NULL, DT_INI_VAL date NOT NULL, DT_FIN_VAL date NOT NULL, DS_VOCE_TITOL VARCHAR2(1024 BYTE) NOT NULL, FL_USO_CLASSIF CHAR(1 BYTE) NOT NULL, NI_ANNI_CONSERV NUMBER(4, 0), DL_NOTE VARCHAR2(1024 BYTE), CONSTRAINT PK_VAL_VOCE_TITOL PRIMARY KEY (ID_VAL_VOCE_TITOL));

-- changeset root:1751897635013-80
CREATE TABLE DEC_VOCE_TITOL (ID_VOCE_TITOL NUMBER NOT NULL, ID_TITOL NUMBER NOT NULL, CD_COMPOSITO_VOCE_TITOL VARCHAR2(100 BYTE) NOT NULL, CD_VOCE_TITOL VARCHAR2(100 BYTE) NOT NULL, ID_LIVELLO_TITOL NUMBER NOT NULL, NI_ORD_VOCE_TITOL NUMBER NOT NULL, DT_ISTITUZ date NOT NULL, DT_SOPPRES date NOT NULL, ID_VOCE_TITOL_PADRE NUMBER, NI_FASCIC NUMBER DEFAULT 0 NOT NULL, NI_FASCIC_VOCI_FIGLIE NUMBER DEFAULT 0 NOT NULL, CONSTRAINT PK_VOCE_TITOL PRIMARY KEY (ID_VOCE_TITOL));

-- changeset root:1751897635013-81
CREATE TABLE ORG_OPER_TITOL (ID_OPER_TITOL NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, CD_REGISTRO_DOC_INVIO VARCHAR2(100 BYTE), AA_DOC_INVIO NUMBER(4, 0), CD_DOC_INVIO VARCHAR2(100 BYTE), DT_DOC_INVIO date, TI_OPER_TITOL VARCHAR2(20 BYTE) NOT NULL, ID_TITOL NUMBER NOT NULL, DT_VAL_OPER_TITOL date NOT NULL, CONSTRAINT PK_OPER_TITOL PRIMARY KEY (ID_OPER_TITOL));

-- changeset root:1751897635013-82
CREATE TABLE ORG_OPER_VOCE_TITOL (ID_OPER_VOCE_TITOL NUMBER NOT NULL, ID_OPER_TITOL NUMBER NOT NULL, PG_OPER_VOCE_TITOL NUMBER NOT NULL, TI_OPER_VOCE_TITOL VARCHAR2(20 BYTE) NOT NULL, DT_VAL_OPER_VOCE_TITOL date NOT NULL, ID_VOCE_TITOL NUMBER NOT NULL, DL_NOTE VARCHAR2(1024 BYTE), CONSTRAINT PK_OPE_VOCE PRIMARY KEY (ID_OPER_VOCE_TITOL));

-- changeset root:1751897635013-83 splitStatements:true
CREATE TABLE FIR_CERTIF_CA (ID_CERTIF_CA NUMBER NOT NULL, NI_SERIAL_CERTIF_CA NUMBER, DT_INI_VAL_CERTIF_CA date NOT NULL, DT_FIN_VAL_CERTIF_CA date NOT NULL, DS_SUBJECT_KEY_ID VARCHAR2(100 BYTE), DL_DN_ISSUER_CERTIF_CA VARCHAR2(1024 BYTE) NOT NULL, DL_DN_SUBJECT_CERTIF_CA VARCHAR2(1024 BYTE), ID_ISSUER NUMBER DEFAULT 0 NOT NULL, DS_SERIAL_CERTIF_CA VARCHAR2(100 BYTE), CONSTRAINT PK_CER_CA PRIMARY KEY (ID_CERTIF_CA));
COMMENT ON COLUMN FIR_CERTIF_CA.DL_DN_ISSUER_CERTIF_CA IS 'DN dell''issuer. Fino ad oggi questa informazione era salvata sulla tabella FIR_ISSUER.';

-- changeset root:1751897635013-84
CREATE TABLE FIR_CERTIF_FIRMATARIO (ID_CERTIF_FIRMATARIO NUMBER NOT NULL, ID_CERTIF_CA NUMBER NOT NULL, NI_SERIAL_CERTIF_FIRMATARIO NUMBER, DT_INI_VAL_CERTIF_FIRMATARIO date NOT NULL, DT_FIN_VAL_CERTIF_FIRMATARIO date NOT NULL, DS_SERIAL_CERTIF_FIRMATARIO VARCHAR2(100 BYTE), CONSTRAINT PK_CER_FIR PRIMARY KEY (ID_CERTIF_FIRMATARIO));

-- changeset root:1751897635013-85
CREATE TABLE FIR_CRL (ID_CRL NUMBER NOT NULL, ID_CERTIF_CA NUMBER NOT NULL, NI_SERIAL_CRL NUMBER, DT_SCAD_CRL date NOT NULL, DT_INI_CRL date NOT NULL, DS_SERIAL_CRL VARCHAR2(100 BYTE), CONSTRAINT PK_CRL PRIMARY KEY (ID_CRL));

-- changeset root:1751897635013-86
CREATE TABLE VRS_DT_VERS (ID_DT_VERS NUMBER NOT NULL, DT_VERS date NOT NULL, DT_CREAZIONE_DT_VERS date NOT NULL, TI_STATO_DT_VERS VARCHAR2(20 BYTE) NOT NULL, DT_STATO_DT_VERS date NOT NULL, FL_PRESENZA_SECONDARIO CHAR(1 BYTE) DEFAULT '0' NOT NULL, FL_MIGRAZ CHAR(1 BYTE) DEFAULT '0' NOT NULL, DL_PATH_DT_VERS VARCHAR2(254 BYTE) NOT NULL, FL_ARK CHAR(1 BYTE) DEFAULT '0' NOT NULL, FL_FILE_NO_ARK CHAR(1 BYTE), DT_LAST_ARK_DT_VERS date, FL_ARK_SECONDARIO CHAR(1 BYTE), FL_FILE_NO_ARK_SECONDARIO CHAR(1 BYTE), DT_LAST_ARK_DT_VERS_SECONDARIO date, CONSTRAINT PK_DT_VERS PRIMARY KEY (ID_DT_VERS));

-- changeset root:1751897635013-87
CREATE TABLE VOL_APPART_COMP_VOLUME (ID_APPART_COMP_VOLUME NUMBER NOT NULL, ID_APPART_DOC_VOLUME NUMBER NOT NULL, ID_COMP_DOC NUMBER NOT NULL, TI_ESITO_VERIF_FIRME_CHIUS VARCHAR2(20 BYTE), DS_ESITO_VERIF_FIRME_CHIUS VARCHAR2(254 BYTE), ID_STRUT NUMBER NOT NULL, CONSTRAINT PK_APP_COMP_VOL PRIMARY KEY (ID_APPART_COMP_VOLUME));

-- changeset root:1751897635013-88
CREATE TABLE VOL_APPART_DOC_VOLUME (ID_APPART_DOC_VOLUME NUMBER NOT NULL, ID_APPART_UNITA_DOC_VOLUME NUMBER NOT NULL, ID_DOC NUMBER NOT NULL, FL_VALIDA CHAR(1 BYTE) NOT NULL, NT_GENERICHE_DOC VARCHAR2(2000 BYTE), ID_STRUT NUMBER NOT NULL, CONSTRAINT PK_APP_DOC_VOL PRIMARY KEY (ID_APPART_DOC_VOLUME));

-- changeset root:1751897635013-89
CREATE TABLE VOL_APPART_FIRMA_VOLUME (ID_APPART_FIRMA_VOLUME NUMBER NOT NULL, ID_APPART_COMP_VOLUME NUMBER NOT NULL, ID_FIRMA_COMP NUMBER NOT NULL, CONSTRAINT PK_APP_FIR_VOL PRIMARY KEY (ID_APPART_FIRMA_VOLUME));

-- changeset root:1751897635013-90
CREATE TABLE VOL_APPART_UNITA_DOC_VOLUME (ID_APPART_UNITA_DOC_VOLUME NUMBER NOT NULL, ID_VOLUME_CONSERV NUMBER NOT NULL, ID_UNITA_DOC NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, DT_CREAZIONE date DEFAULT SYSDATE NOT NULL, CONSTRAINT PK_APP_UNI_DOC_VOL PRIMARY KEY (ID_APPART_UNITA_DOC_VOLUME));

-- changeset root:1751897635013-91
CREATE TABLE VOL_CONTR_VERIF_FIRMA_VOLUME (ID_CONTR_VERIF_FIRMA_VOLUME NUMBER NOT NULL, ID_VERIF_FIRMA_VOLUME NUMBER NOT NULL, TI_CONTR VARCHAR2(20 BYTE) NOT NULL, TI_ESITO_CONTR_VERIF VARCHAR2(30 BYTE) NOT NULL, DS_MSG_CONTR_VERIF VARCHAR2(1024 BYTE) NOT NULL, ID_CRL_USATA NUMBER, CONSTRAINT PK_CTR_VER_FIR_VOL PRIMARY KEY (ID_CONTR_VERIF_FIRMA_VOLUME));

-- changeset root:1751897635013-92
CREATE TABLE ELV_UPD_UD_DA_ELAB_ELENCO (ID_UPD_UD_DA_ELAB_ELENCO NUMBER NOT NULL, ID_UPD_UNITA_DOC NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, AA_KEY_UNITA_DOC NUMBER(4, 0) NOT NULL, DT_CREAZIONE date NOT NULL, TI_STATO_UPD_ELENCO_VERS VARCHAR2(50 BYTE) NOT NULL, ID_REGISTRO_UNITA_DOC NUMBER NOT NULL, ID_TIPO_UNITA_DOC NUMBER NOT NULL, ID_TIPO_DOC_PRINC NUMBER NOT NULL, ID_SUB_STRUT NUMBER NOT NULL, CONSTRAINT PK_UPD_UD_DAELB_ELE PRIMARY KEY (ID_UPD_UD_DA_ELAB_ELENCO));

-- changeset root:1751897635013-93
CREATE TABLE VOL_VERIF_FIRMA_VOLUME (ID_VERIF_FIRMA_VOLUME NUMBER NOT NULL, ID_APPART_FIRMA_VOLUME NUMBER NOT NULL, TI_VERIF VARCHAR2(20 BYTE) NOT NULL, TI_ESITO_VERIF_FIRMA VARCHAR2(20 BYTE) NOT NULL, DS_MSG_ESITO_VERIF_FIRMA VARCHAR2(254 BYTE) NOT NULL, CONSTRAINT PK_VER_FIR_VOL PRIMARY KEY (ID_VERIF_FIRMA_VOLUME));

-- changeset root:1751897635013-94
CREATE TABLE OST_NO_MIGRAZ_FILE (ID_NO_MIGRAZ_FILE NUMBER NOT NULL, ID_MIGRAZ_SUB_PART NUMBER NOT NULL, NM_TABELLA_ID_OGGETTO VARCHAR2(30 BYTE) NOT NULL, ID_OGGETTO NUMBER NOT NULL, TI_SUPPORTO_COMP VARCHAR2(20 BYTE) NOT NULL, TI_SAVE_FILE VARCHAR2(20 BYTE) NOT NULL, ID_STRUT NUMBER NOT NULL, MM_FILE NUMBER(6, 0) NOT NULL, TI_CAUSALE_NO_MIGRAZ VARCHAR2(30 BYTE) DEFAULT 'FILE_NON_BLOB' NOT NULL, CONSTRAINT PK_NO_MGZ_FILE PRIMARY KEY (ID_NO_MIGRAZ_FILE));

-- changeset root:1751897635013-95
CREATE TABLE VOL_VOLUME_CONSERV (ID_VOLUME_CONSERV NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, NM_VOLUME_CONSERV VARCHAR2(100 BYTE) NOT NULL, DS_VOLUME_CONSERV VARCHAR2(254 BYTE) NOT NULL, TI_STATO_VOLUME_CONSERV VARCHAR2(20 BYTE) NOT NULL, ID_CRITERIO_RAGGR NUMBER, DT_CREAZIONE date NOT NULL, NI_MAX_UNITA_DOC NUMBER, NI_MAX_COMP NUMBER, TI_SCAD_CHIUS_VOLUME VARCHAR2(20 BYTE), TI_TEMPO_SCAD_CHIUS VARCHAR2(20 BYTE), NI_TEMPO_SCAD_CHIUS NUMBER, TI_TEMPO_SCAD_CHIUS_FIRME VARCHAR2(20 BYTE), NI_TEMPO_SCAD_CHIUS_FIRME NUMBER, ID_USER_CREAZIONE NUMBER NOT NULL, NI_UNITA_DOC_VOLUME NUMBER NOT NULL, NI_COMP_VOLUME NUMBER NOT NULL, NI_KB_SIZE NUMBER NOT NULL, NT_INDICE_VOLUME VARCHAR2(2000 BYTE), TI_PRESENZA_FIRME VARCHAR2(20 BYTE), TI_VAL_FIRME VARCHAR2(20 BYTE), DT_SCAD_CHIUS date NOT NULL, DT_CHIUS date, DL_MOTIVO_CHIUS VARCHAR2(1024 BYTE), DS_ALGO_HASH VARCHAR2(254 BYTE), CD_ENCODING_HASH VARCHAR2(20 BYTE), DS_HASH_FILE_INDICE VARCHAR2(254 BYTE), TM_MARCA_INDICE date, DS_HASH_FILE_MARCA VARCHAR2(254 BYTE), DT_FIRMA_MARCA date, ID_USER_FIRMA_MARCA NUMBER, DS_FIRMA_MARCA_BASE64 VARCHAR2(1024 BYTE), DS_HASH_FILE_FIRMA VARCHAR2(254 BYTE), TM_MARCA_FIRMA date, CD_VERSIONE_INDICE VARCHAR2(100 BYTE), NT_VOLUME_CHIUSO VARCHAR2(2000 BYTE), FL_ELENCO_VERS CHAR(1 BYTE), CONSTRAINT PK_VOL_CONS PRIMARY KEY (ID_VOLUME_CONSERV));

-- changeset root:1751897635013-96
CREATE TABLE SER_VER_SERIE_DA_ELAB (ID_VER_SERIE_DA_ELAB NUMBER NOT NULL, ID_VER_SERIE NUMBER NOT NULL, TI_STATO_VER_SERIE VARCHAR2(20 BYTE) NOT NULL, ID_STRUT NUMBER NOT NULL, DT_REG_STATO_VER_SERIE date NOT NULL, CONSTRAINT PK_VER_SER_DAELB PRIMARY KEY (ID_VER_SERIE_DA_ELAB));

-- changeset root:1751897635013-97
CREATE TABLE SER_STATO_SERIE (ID_STATO_SERIE NUMBER NOT NULL, ID_SERIE NUMBER NOT NULL, PG_STATO_SERIE NUMBER NOT NULL, TI_STATO_SERIE VARCHAR2(30 BYTE) NOT NULL, DT_REG_STATO_SERIE date NOT NULL, DS_AZIONE VARCHAR2(254 BYTE) NOT NULL, DS_NOTA_AZIONE VARCHAR2(1024 BYTE), ID_USER_IAM NUMBER NOT NULL, CONSTRAINT PK_STATO_SER PRIMARY KEY (ID_STATO_SERIE));

-- changeset root:1751897635013-98
CREATE TABLE REC_SESSIONE_RECUP (ID_SESSIONE_RECUP NUMBER NOT NULL, ID_UNITA_DOC_RECUP NUMBER NOT NULL, TI_SESSIONE_RECUP VARCHAR2(20 BYTE) NOT NULL, TI_STATO_SESSIONE_RECUP VARCHAR2(20 BYTE) NOT NULL, DT_APERTURA date NOT NULL, DT_CHIUSURA date, ID_USER NUMBER NOT NULL, TI_OUTPUT_RECUP VARCHAR2(30 BYTE) NOT NULL, ID_DOC NUMBER, ID_COMP_DOC NUMBER, CD_ERR VARCHAR2(100 BYTE), DL_ERR VARCHAR2(1024 BYTE), CONSTRAINT PK_SES_REC PRIMARY KEY (ID_SESSIONE_RECUP));

-- changeset root:1751897635013-99
CREATE TABLE REC_UNITA_DOC_RECUP (ID_UNITA_DOC_RECUP NUMBER NOT NULL, ID_UNITA_DOC NUMBER NOT NULL, CONSTRAINT PK_UNI_DOC_REC PRIMARY KEY (ID_UNITA_DOC_RECUP));

-- changeset root:1751897635013-100
CREATE TABLE LOG_JOB (ID_LOG_JOB NUMBER NOT NULL, NM_JOB VARCHAR2(100 BYTE) NOT NULL, TI_REG_LOG_JOB VARCHAR2(20 BYTE) NOT NULL, DT_REG_LOG_JOB date NOT NULL, DL_MSG_ERR VARCHAR2(1024 BYTE), ID_STRUT NUMBER, ID_RECORD NUMBER(*, 0), NM_ENTITY_RECORD VARCHAR2(100 BYTE), CD_IND_SERVER VARCHAR2(100 BYTE), DT_VIRTUAL_REG VARCHAR2(10 BYTE) GENERATED ALWAYS AS (TO_CHAR(DT_REG_LOG_JOB,'yyyymmddhh24')), CONSTRAINT PK_LOG_JOB PRIMARY KEY (ID_LOG_JOB));

-- changeset root:1751897635013-101
CREATE TABLE LOG_OPER (ID_LOG_OPER NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, ID_USER NUMBER NOT NULL, DT_OPER date NOT NULL, TI_OPER VARCHAR2(30 BYTE) NOT NULL, ID_VOLUME_CONSERV NUMBER, NM_VOLUME_CONSERV VARCHAR2(100 BYTE), ID_DOC NUMBER, CD_REGISTRO_KEY_UNITA_DOC VARCHAR2(100 BYTE), AA_KEY_UNITA_DOC NUMBER(4, 0), CD_KEY_UNITA_DOC VARCHAR2(100 BYTE), TI_DOC VARCHAR2(20 BYTE), PG_DOC NUMBER, ID_LOG_JOB NUMBER, CONSTRAINT PK_LOG_OPE PRIMARY KEY (ID_LOG_OPER));

-- changeset root:1751897635013-102
CREATE TABLE TMP_FIR_CERTIF_CA (ID_CERTIF_CA NUMBER NOT NULL, DL_DN_ISSUER_CERTIF_CA VARCHAR2(1024 BYTE) NOT NULL, NI_SERIAL_CERTIF_CA NUMBER NOT NULL, DT_INI_VAL_CERTIF_CA date NOT NULL, DT_FIN_VAL_CERTIF_CA date NOT NULL, DS_SUBJECT_KEY_ID VARCHAR2(100 BYTE), CONSTRAINT TMP_FIR_CERTIF_CA_PK PRIMARY KEY (ID_CERTIF_CA));

-- changeset root:1751897635013-103
CREATE TABLE TMP_BONIFICA_ISSUER_LOG (ID_BONIFICA_CA_LOG TIMESTAMP(6) DEFAULT SYSTIMESTAMP NOT NULL, STATEMENT_ESEGUITO VARCHAR2(1024 BYTE) NOT NULL, CONSTRAINT TMP_BONIFICA_ISSUER_LOG_PK PRIMARY KEY (ID_BONIFICA_CA_LOG));

-- changeset root:1751897635013-104
CREATE TABLE DEC_CONTROLLO_WS (ID_CONTROLLO_WS NUMBER NOT NULL, CD_CONTROLLO_WS VARCHAR2(100 BYTE) NOT NULL, DS_CONTROLLO_WS VARCHAR2(254 BYTE), CD_FAMIGLIA_CONTROLLO VARCHAR2(100 BYTE) NOT NULL, CD_CATEGORIA_CONTROLLO VARCHAR2(100 BYTE) NOT NULL, NI_ORD_CONTROLLO NUMBER NOT NULL, CONSTRAINT PK_CTRL_WS PRIMARY KEY (ID_CONTROLLO_WS));

-- changeset root:1751897635013-105
CREATE TABLE TMP_FIR_CRL (ID_CRL NUMBER NOT NULL, ID_CERTIF_CA NUMBER NOT NULL, NI_SERIAL_CRL NUMBER, DT_SCAD_CRL date NOT NULL, DT_INI_CRL date NOT NULL, CONSTRAINT PK_TMP_FIR_CRL PRIMARY KEY (ID_CRL));

-- changeset root:1751897635013-106
CREATE TABLE APL_PARAM_APPLIC (ID_PARAM_APPLIC NUMBER NOT NULL, NM_PARAM_APPLIC VARCHAR2(100 BYTE) NOT NULL, DS_PARAM_APPLIC VARCHAR2(254 BYTE) NOT NULL, TI_PARAM_APPLIC VARCHAR2(50 BYTE) NOT NULL, TI_GESTIONE_PARAM VARCHAR2(30 BYTE) DEFAULT 'amministrazione' NOT NULL, FL_APPART_APPLIC CHAR(1 BYTE) DEFAULT '0' NOT NULL, FL_APPART_AMBIENTE CHAR(1 BYTE) DEFAULT '0' NOT NULL, FL_APPART_STRUT CHAR(1 BYTE) DEFAULT '0' NOT NULL, FL_APPART_TIPO_UNITA_DOC CHAR(1 BYTE) DEFAULT '0' NOT NULL, FL_APPART_AA_TIPO_FASCICOLO CHAR(1 BYTE) DEFAULT '0' NOT NULL, DS_LISTA_VALORI_AMMESSI VARCHAR2(4000 BYTE), FL_MULTI CHAR(1 BYTE) DEFAULT '0' NOT NULL, DM_PARAM_APPLIC VARCHAR2(100 BYTE), TI_VALORE_PARAM_APPLIC VARCHAR2(100 BYTE) DEFAULT 'STRINGA' NOT NULL, CD_VERSIONE_APP_INI VARCHAR2(11 CHAR) DEFAULT '1.0.0' NOT NULL, CD_VERSIONE_APP_FINE VARCHAR2(11 CHAR), CONSTRAINT PK_PAR_APL PRIMARY KEY (ID_PARAM_APPLIC));

-- changeset root:1751897635013-107
CREATE TABLE MON_TIPO_UNITA_DOC_USER_VERS (ID_TIPO_UNITA_DOC_USER_VERS NUMBER NOT NULL, ID_TIPO_UNITA_DOC NUMBER NOT NULL, ID_USER_IAM NUMBER NOT NULL, DT_RIF_CONTA date NOT NULL, NI_UNITA_DOC_VERS NUMBER NOT NULL, CONSTRAINT PK_TI_UD_USR_VERS PRIMARY KEY (ID_TIPO_UNITA_DOC_USER_VERS));

-- changeset root:1751897635013-108
CREATE TABLE TPI_DT_SCHED (ID_DT_SCHED NUMBER NOT NULL, DT_SCHED date NOT NULL, TI_STATO_DT_SCHED VARCHAR2(20 BYTE) NOT NULL, FL_PRESENZA_SECONDARIO CHAR(1 BYTE) DEFAULT '0' NOT NULL, FL_MIGRAZ_IN_CORSO CHAR(1 BYTE) DEFAULT '0' NOT NULL, CONSTRAINT PK_DT_SCHED PRIMARY KEY (ID_DT_SCHED));

-- changeset root:1751897635013-109
CREATE TABLE MON_KEY_TOTAL_UD (ID_KEY_TOTAL_UD NUMBER NOT NULL, AA_KEY_UNITA_DOC NUMBER(4, 0) NOT NULL, ID_TIPO_UNITA_DOC NUMBER NOT NULL, ID_REGISTRO_UNITA_DOC NUMBER NOT NULL, ID_TIPO_DOC_PRINC NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, ID_SUB_STRUT NUMBER NOT NULL, DT_LAST_UPD_UD date, CONSTRAINT PK_KEY_TOT_UD PRIMARY KEY (ID_KEY_TOTAL_UD));

-- changeset root:1751897635013-110
CREATE TABLE TPI_SCHED_JOB (ID_SCHED_JOB NUMBER NOT NULL, ID_DT_SCHED NUMBER NOT NULL, TI_TPI_SCHED_JOB VARCHAR2(20 BYTE) NOT NULL, NM_JOB VARCHAR2(100 BYTE) NOT NULL, FL_MIGRAZ CHAR(1 BYTE) NOT NULL, DT_SCHED_JOB date, NI_ORD_SCHED_JOB NUMBER NOT NULL, FL_JOB_OK CHAR(1 BYTE), DS_DURATA_JOB VARCHAR2(254 BYTE), DL_ERR_JOB VARCHAR2(1024 BYTE), FL_FINE_SCHED CHAR(1 BYTE), CONSTRAINT PK_SCHED_JOB PRIMARY KEY (ID_SCHED_JOB));

-- changeset root:1751897635013-111
CREATE TABLE MON_KEY_TOTAL_UD_KO (ID_KEY_TOTAL_UD_KO NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, AA_KEY_UNITA_DOC NUMBER(4, 0) NOT NULL, ID_TIPO_UNITA_DOC NUMBER NOT NULL, ID_REGISTRO_UNITA_DOC NUMBER NOT NULL, ID_TIPO_DOC_PRINC NUMBER NOT NULL, DT_LAST_UPD_UD_KO date, CONSTRAINT PK_KEY_TOT_UD_KO PRIMARY KEY (ID_KEY_TOTAL_UD_KO));

-- changeset root:1751897635013-112
CREATE TABLE DEC_MODELLO_XSD_FASCICOLO (ID_MODELLO_XSD_FASCICOLO NUMBER NOT NULL, ID_AMBIENTE NUMBER NOT NULL, TI_MODELLO_XSD VARCHAR2(40 BYTE) NOT NULL, TI_USO_MODELLO_XSD VARCHAR2(20 BYTE) NOT NULL, CD_XSD VARCHAR2(100 BYTE) NOT NULL, DS_XSD VARCHAR2(254 BYTE) NOT NULL, BL_XSD CLOB NOT NULL, DT_ISTITUZ date DEFAULT TRUNC(sysdate) NOT NULL, DT_SOPPRES date DEFAULT to_date('31/12/2444', 'dd/mm/yyyy') NOT NULL, ID_SISTEMA_MIGRAZ NUMBER, FL_DEFAULT CHAR(1 BYTE) NOT NULL, CONSTRAINT PK_MDL_XSD_FASC PRIMARY KEY (ID_MODELLO_XSD_FASCICOLO));

-- changeset root:1751897635013-113
CREATE TABLE DEC_SEL_CRITERIO_RAGGR_FASC (ID_SEL_CRITERIO_RAGGR_FASC NUMBER NOT NULL, ID_CRITERIO_RAGGR_FASC NUMBER NOT NULL, TI_SEL VARCHAR2(30 BYTE) NOT NULL, ID_SISTEMA_MIGRAZ NUMBER, ID_TIPO_FASCICOLO NUMBER, ID_VOCE_TITOL NUMBER, CONSTRAINT PK_SEL_CRIT_RAG_FASC PRIMARY KEY (ID_SEL_CRITERIO_RAGGR_FASC));

-- changeset root:1751897635013-114
CREATE TABLE ELV_ELENCO_VERS_FASC (ID_ELENCO_VERS_FASC NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, ID_CRITERIO_RAGGR_FASC NUMBER NOT NULL, TS_CREAZIONE_ELENCO TIMESTAMP(6) NOT NULL, NI_FASC_VERS_ELENCO NUMBER NOT NULL, NT_INDICE_ELENCO VARCHAR2(2000 BYTE), DT_SCAD_CHIUS date NOT NULL, DL_MOTIVO_CHIUS VARCHAR2(1024 BYTE), NT_ELENCO_CHIUSO VARCHAR2(2000 BYTE), AA_FASCICOLO NUMBER(4, 0), FL_ELENCO_STANDARD CHAR(1 BYTE) DEFAULT '0' NOT NULL, NI_MAX_FASC_CRIT NUMBER NOT NULL, TI_SCAD_CHIUS_CRIT VARCHAR2(20 BYTE), TI_TEMPO_SCAD_CHIUS_CRIT VARCHAR2(20 BYTE), NI_TEMPO_SCAD_CHIUS_CRIT NUMBER, ID_STATO_ELENCO_VERS_FASC_COR NUMBER, NI_INDICI_AIP NUMBER, DS_URN_ELENCO VARCHAR2(254 BYTE), DS_URN_NORMALIZ_ELENCO VARCHAR2(254 BYTE), CONSTRAINT PK_ELE_VRS_FASC PRIMARY KEY (ID_ELENCO_VERS_FASC));

-- changeset root:1751897635013-115
CREATE TABLE ELV_ELENCO_VERS_FASC_DA_ELAB (ID_ELENCO_VERS_DA_ELAB NUMBER NOT NULL, ID_ELENCO_VERS_FASC NUMBER NOT NULL, TI_STATO VARCHAR2(40 BYTE) NOT NULL, ID_STRUT NUMBER NOT NULL, ID_CRITERIO_RAGGR_FASC NUMBER NOT NULL, AA_FASCICOLO NUMBER(4, 0), CONSTRAINT PK_ELE_VRS_FASC_DAELB PRIMARY KEY (ID_ELENCO_VERS_DA_ELAB));

-- changeset root:1751897635013-116
CREATE TABLE OST_MIGRAZ_FILE (ID_MIGRAZ_FILE NUMBER NOT NULL, ID_MIGRAZ_SUB_PART NUMBER NOT NULL, NM_TABELLA_ID_OGGETTO VARCHAR2(30 BYTE) NOT NULL, ID_OGGETTO NUMBER NOT NULL, TI_STATO_COR VARCHAR2(30 BYTE) NOT NULL, TS_REG_STATO_COR TIMESTAMP(6) NOT NULL, NM_TENANT VARCHAR2(100 BYTE) NOT NULL, NM_BUCKET VARCHAR2(100 BYTE) NOT NULL, CD_KEY_FILE VARCHAR2(254 BYTE) NOT NULL, TS_MIGRATO TIMESTAMP(6), TS_VERIFICATO TIMESTAMP(6), NI_MIGRAZ_ERR NUMBER DEFAULT 0 NOT NULL, ID_STRUT NUMBER NOT NULL, MM_FILE NUMBER(6, 0) NOT NULL, CONSTRAINT PK_OST_MIGRAZ_FILE PRIMARY KEY (ID_MIGRAZ_FILE));

-- changeset root:1751897635013-117
CREATE TABLE ELV_STATO_ELENCO_VERS_FASC (ID_STATO_ELENCO_VERS_FASC NUMBER NOT NULL, ID_ELENCO_VERS_FASC NUMBER NOT NULL, TS_STATO TIMESTAMP(6) NOT NULL, TI_STATO VARCHAR2(40 BYTE) NOT NULL, ID_USER_IAM NUMBER, CONSTRAINT PK_STATO_ELE_FASC PRIMARY KEY (ID_STATO_ELENCO_VERS_FASC));

-- changeset root:1751897635013-118
CREATE TABLE OST_MIGRAZ_SUB_PART (ID_MIGRAZ_SUB_PART NUMBER NOT NULL, ID_SUB_PARTITION NUMBER NOT NULL, NM_TABELLA_FILE VARCHAR2(30 BYTE) NOT NULL, NM_COLONNA_ID_FILE VARCHAR2(30 BYTE) NOT NULL, NM_COLONNA_BLOB_FILE VARCHAR2(30 BYTE) NOT NULL, NM_TABLESPACE VARCHAR2(30 BYTE) NOT NULL, MM_MAX NUMBER NOT NULL, NI_BYTE_SIZE NUMBER DEFAULT 0 NOT NULL, NI_FILE_ERRORE_NORMALIZ NUMBER DEFAULT 0 NOT NULL, NI_FILE_DA_MIGRARE NUMBER DEFAULT 0 NOT NULL, NI_FILE_MIGRAZ_IN_CORSO NUMBER DEFAULT 0 NOT NULL, NI_FILE_MIGRATI NUMBER DEFAULT 0 NOT NULL, NI_FILE_MIGRAZ_IN_ERRORE NUMBER DEFAULT 0 NOT NULL, ID_STATO_MIGRAZ_SUB_PART_COR NUMBER, TI_STATO_COPIA VARCHAR2(30 BYTE), NI_ISTANZA_JOB_PREPARA NUMBER, NI_ISTANZA_JOB_PRODUCER NUMBER, NI_FILE_SUB_PART NUMBER, CONSTRAINT PK_MGZ_SUBPART PRIMARY KEY (ID_MIGRAZ_SUB_PART));

-- changeset root:1751897635013-119
CREATE TABLE MON_CONTA_FASCICOLI (ID_CONTA_FASCICOLI NUMBER NOT NULL, DT_RIF_CONTA date NOT NULL, ID_STRUT NUMBER NOT NULL, AA_FASCICOLO NUMBER(4, 0) NOT NULL, ID_TIPO_FASCICOLO NUMBER NOT NULL, ID_USER_IAM NUMBER NOT NULL, NI_FASCICOLI_VERS NUMBER NOT NULL, CONSTRAINT PK_CNT_FASC PRIMARY KEY (ID_CONTA_FASCICOLI));

-- changeset root:1751897635013-120
CREATE TABLE OST_STATO_MIGRAZ_SUB_PART (ID_STATO_MIGRAZ_SUB_PART NUMBER NOT NULL, ID_MIGRAZ_SUB_PART NUMBER NOT NULL, TS_REG_STATO TIMESTAMP(6) NOT NULL, TI_STATO VARCHAR2(30 BYTE) NOT NULL, CONSTRAINT PK_STATO_MGZ_SUBPART PRIMARY KEY (ID_STATO_MIGRAZ_SUB_PART));

-- changeset root:1751897635013-121
CREATE TABLE MON_CONTA_FASCICOLI_KO (ID_CONTA_FASCICOLI_KO NUMBER NOT NULL, DT_RIF_CONTA date NOT NULL, ID_STRUT NUMBER NOT NULL, TI_STATO_FASCICOLO_KO VARCHAR2(20 BYTE) NOT NULL, AA_FASCICOLO NUMBER(4, 0) NOT NULL, ID_TIPO_FASCICOLO NUMBER NOT NULL, NI_FASCICOLI_KO NUMBER NOT NULL, CONSTRAINT PK_CNT_FASC_KO PRIMARY KEY (ID_CONTA_FASCICOLI_KO));

-- changeset root:1751897635013-122 splitStatements:true
CREATE TABLE OST_MIGRAZ_STRUT_MESE (ID_MIGRAZ_STRUT_MESE NUMBER NOT NULL, ID_MIGRAZ_SUB_PART NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, MM_VERS NUMBER(6, 0) NOT NULL, DT_VERS_INI date NOT NULL, DT_VERS_FINE date NOT NULL, FL_FILE_AGGIUNTI CHAR(1 BYTE) DEFAULT '0' NOT NULL, NI_COMP_DA_DOC NUMBER, NI_COMP_DA_CONTENUTO NUMBER, CONSTRAINT PK_MGZ_STRUT_MM PRIMARY KEY (ID_MIGRAZ_STRUT_MESE));
COMMENT ON COLUMN OST_MIGRAZ_STRUT_MESE.NI_COMP_DA_DOC IS 'Conteggio dei componenti calcolato a partire dai documenti versati.';
COMMENT ON COLUMN OST_MIGRAZ_STRUT_MESE.NI_COMP_DA_CONTENUTO IS 'Conteggio dei componenti calcolato a partire dalla partizione.';

-- changeset root:1751897635013-123
CREATE TABLE DEC_CRITERIO_RAGGR_FASC (ID_CRITERIO_RAGGR_FASC NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, NM_CRITERIO_RAGGR VARCHAR2(100 BYTE) NOT NULL, DS_CRITERIO_RAGGR VARCHAR2(254 BYTE) NOT NULL, NI_MAX_FASC NUMBER NOT NULL, TI_SCAD_CHIUS VARCHAR2(20 BYTE), TI_TEMPO_SCAD_CHIUS VARCHAR2(20 BYTE), NI_TEMPO_SCAD_CHIUS NUMBER, AA_FASCICOLO NUMBER(4, 0), AA_FASCICOLO_DA NUMBER, AA_FASCICOLO_A NUMBER, DT_VERS_DA date, DT_VERS_A date, TI_CONSERVAZIONE VARCHAR2(30 BYTE), DS_OGGETTO_FASCICOLO VARCHAR2(4000 BYTE), DT_APE_FASCICOLO_DA date, DT_APE_FASCICOLO_A date, DT_CHIU_FASCICOLO_DA date, DT_CHIU_FASCICOLO_A date, FL_FILTRO_TIPO_FASCICOLO CHAR(1 BYTE) DEFAULT '0' NOT NULL, FL_FILTRO_SISTEMA_MIGRAZ CHAR(1 BYTE) DEFAULT '0' NOT NULL, DT_ISTITUZ date NOT NULL, DT_SOPPRES date DEFAULT to_date('31/12/2444', 'dd/mm/yyyy') NOT NULL, NT_CRITERIO_RAGGR VARCHAR2(2000 BYTE), FL_CRITERIO_RAGGR_STANDARD CHAR(1 BYTE) DEFAULT '0' NOT NULL, FL_FILTRO_VOCE_TITOL CHAR(1 BYTE) DEFAULT '0' NOT NULL, CONSTRAINT PK_CRIT_RAG_FASC PRIMARY KEY (ID_CRITERIO_RAGGR_FASC));

-- changeset root:1751897635013-124
CREATE TABLE FIR_FILE_PER_FIRMA (ID_FILE_PER_FIRMA NUMBER NOT NULL, TI_FILE_PER_FIRMA VARCHAR2(20 BYTE) NOT NULL, ID_CERTIF_CA NUMBER, ID_CRL NUMBER, ID_CERTIF_FIRMATARIO NUMBER, BL_FILE_PER_FIRMA BLOB NOT NULL, NM_FILE_DOWNLOAD VARCHAR2(100 BYTE), ID_OCSP NUMBER, ID_CERTIF_OCSP NUMBER, CONSTRAINT PK_FIL_FIR PRIMARY KEY (ID_FILE_PER_FIRMA));

-- changeset root:1751897635013-125
CREATE TABLE DEC_NOTA_MODELLO_TIPO_SERIE (ID_NOTA_MODELLO_TIPO_SERIE NUMBER NOT NULL, ID_MODELLO_TIPO_SERIE NUMBER NOT NULL, ID_TIPO_NOTA_SERIE NUMBER NOT NULL, PG_NOTA_TIPO_SERIE NUMBER NOT NULL, DT_NOTA_TIPO_SERIE date NOT NULL, DS_NOTA_TIPO_SERIE VARCHAR2(1024 BYTE) NOT NULL, ID_USER_IAM NUMBER NOT NULL, CONSTRAINT PK_NOT_MODL_TI_SER PRIMARY KEY (ID_NOTA_MODELLO_TIPO_SERIE));

-- changeset root:1751897635013-126
CREATE TABLE DEC_AA_VAL (ID_AA_VAL NUMBER NOT NULL, AA_VAL NUMBER(4, 0) NOT NULL, CONSTRAINT PK_AA_VAL PRIMARY KEY (ID_AA_VAL));

-- changeset root:1751897635013-127 splitStatements:true
CREATE GLOBAL TEMPORARY TABLE TMP_VERIF_COMP_COPIATO_STAGE (ID_COMP_DOC NUMBER NOT NULL, CD_VERSO_DIFF VARCHAR2(30 BYTE) NOT NULL, CONSTRAINT PK_TMP_VERIF_COMP_COPIATO_STA PRIMARY KEY (ID_COMP_DOC, CD_VERSO_DIFF));
COMMENT ON TABLE TMP_VERIF_COMP_COPIATO_STAGE IS 'Tabella contenente tutti i componenti migrati risulti "problematica"';
COMMENT ON COLUMN TMP_VERIF_COMP_COPIATO_STAGE.ID_COMP_DOC IS 'Verso in cui viene riscontrata la differenza, parte della PK';

-- changeset root:1751897635013-128
CREATE TABLE DEC_WARN_AA_REGISTRO_UD (ID_WARN_AA_REGISTRO_UNITA_DOC NUMBER NOT NULL, ID_AA_REGISTRO_UNITA_DOC NUMBER NOT NULL, AA_REGISTRO_UNITA_DOC NUMBER(4, 0) NOT NULL, FL_WARN_AA_REGISTRO_UNITA_DOC CHAR(1 BYTE) DEFAULT '0' NOT NULL, CONSTRAINT PK_WARN_AA_REG PRIMARY KEY (ID_WARN_AA_REGISTRO_UNITA_DOC));

-- changeset root:1751897635013-129
CREATE TABLE DEC_CAMPO_OUT_SEL_UD (ID_CAMPO_OUT_SEL_UD NUMBER NOT NULL, ID_OUT_SEL_UD NUMBER NOT NULL, NM_CAMPO VARCHAR2(100 BYTE) NOT NULL, TI_CAMPO VARCHAR2(20 BYTE) NOT NULL, ID_ATTRIB_DATI_SPEC NUMBER, TI_TRASFORM_CAMPO VARCHAR2(30 BYTE), CONSTRAINT PK_CPO_SEL_UD PRIMARY KEY (ID_CAMPO_OUT_SEL_UD));

-- changeset root:1751897635013-130
CREATE TABLE DEC_AA_TIPO_FASCICOLO (ID_AA_TIPO_FASCICOLO NUMBER NOT NULL, ID_TIPO_FASCICOLO NUMBER NOT NULL, AA_INI_TIPO_FASCICOLO NUMBER(4, 0) NOT NULL, AA_FIN_TIPO_FASCICOLO NUMBER(4, 0) NOT NULL, FL_UPD_FMT_NUMERO CHAR(1 BYTE) DEFAULT '0' NOT NULL, NI_CHAR_PAD_PARTE_CLASSIF NUMBER DEFAULT 3 NOT NULL, CONSTRAINT PK_AA_TI_FASC PRIMARY KEY (ID_AA_TIPO_FASCICOLO));

-- changeset root:1751897635013-131
CREATE TABLE DEC_OUT_SEL_UD (ID_OUT_SEL_UD NUMBER NOT NULL, ID_TIPO_SERIE_UD NUMBER NOT NULL, TI_OUT VARCHAR2(20 BYTE) NOT NULL, DL_FORMATO_OUT VARCHAR2(254 BYTE), CONSTRAINT PK_OUT_SEL_UD PRIMARY KEY (ID_OUT_SEL_UD));

-- changeset root:1751897635013-132
CREATE TABLE SER_FILE_INPUT_VER_SERIE (ID_FILE_INPUT_VER_SERIE NUMBER NOT NULL, TI_SCOPO_FILE_INPUT_VER_SERIE VARCHAR2(20 BYTE) NOT NULL, ID_VER_SERIE NUMBER NOT NULL, CD_DOC_FILE_INPUT_VER_SERIE VARCHAR2(100 BYTE), DS_DOC_FILE_INPUT_VER_SERIE VARCHAR2(254 BYTE), FL_FORNITO_ENTE CHAR(1 BYTE) NOT NULL, ID_USER_IAM NUMBER NOT NULL, BL_FILE_INPUT_VER_SERIE CLOB NOT NULL, CONSTRAINT PK_FILE_INP_VER_SER PRIMARY KEY (ID_FILE_INPUT_VER_SERIE));

-- changeset root:1751897635013-133
CREATE TABLE DEC_ERR_AA_TIPO_FASCICOLO (ID_ERR_AA_TIPO_FASCICOLO NUMBER NOT NULL, ID_AA_TIPO_FASCICOLO NUMBER NOT NULL, AA_FASCICOLO NUMBER(4, 0) NOT NULL, DS_ERR_FMT_NUMERO VARCHAR2(4000 BYTE) NOT NULL, ID_FASCICOLO_ERR_FMT_NUMERO NUMBER NOT NULL, CONSTRAINT PK_ERR_TI_FASC PRIMARY KEY (ID_ERR_AA_TIPO_FASCICOLO));

-- changeset root:1751897635013-134
CREATE TABLE DEC_TIPO_SERIE (ID_TIPO_SERIE NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, NM_TIPO_SERIE VARCHAR2(100 BYTE) NOT NULL, FL_TIPO_SERIE_PADRE CHAR(1 BYTE) NOT NULL, NI_ANNI_CONSERV NUMBER(4, 0), ID_TIPO_SERIE_PADRE NUMBER, TIPO_CONTEN_SERIE VARCHAR2(20 BYTE) NOT NULL, NI_UNITA_DOC_VOLUME NUMBER, TI_SEL_UD VARCHAR2(20 BYTE), FL_CONTROLLO_CONSIST_OBBLIG CHAR(1 BYTE) DEFAULT '0' NOT NULL, FL_CREA_AUTOM CHAR(1 BYTE) DEFAULT '0' NOT NULL, CD_SERIE_DEFAULT VARCHAR2(100 BYTE), DS_SERIE_DEFAULT VARCHAR2(254 BYTE), GG_CREA_AUTOM CHAR(5 BYTE), AA_INI_CREA_AUTOM NUMBER(4, 0), AA_FIN_CREA_AUTOM NUMBER(4, 0), NI_MM_CREA_AUTOM NUMBER(2, 1), NI_AA_SEL_UD NUMBER(1, 0), TI_CONSERVAZIONE_SERIE VARCHAR2(20 BYTE) DEFAULT 'IN_ARCHIVIO' NOT NULL, DS_TIPO_SERIE VARCHAR2(254 BYTE) DEFAULT 'da definire' NOT NULL, TI_STATO_VER_SERIE_AUTOM VARCHAR2(30 BYTE), TI_CREA_STANDARD VARCHAR2(30 BYTE), ID_MODELLO_TIPO_SERIE NUMBER, DT_ISTITUZ date DEFAULT to_date ('01/01/2015', 'dd/mm/yyyy') NOT NULL, DT_SOPPRES date DEFAULT to_date ('31/12/2444', 'dd/mm/yyyy') NOT NULL, NI_AA_SEL_UD_SUC NUMBER(1, 0), CONSTRAINT PK_TI_SER PRIMARY KEY (ID_TIPO_SERIE));

-- changeset root:1751897635013-135
CREATE TABLE DEC_TIPO_SERIE_UD (ID_TIPO_SERIE_UD NUMBER NOT NULL, ID_TIPO_SERIE NUMBER NOT NULL, ID_REGISTRO_UNITA_DOC NUMBER NOT NULL, ID_TIPO_UNITA_DOC NUMBER NOT NULL, FL_SEL_UNITA_DOC_ANNUL CHAR(1 BYTE) DEFAULT '0' NOT NULL, CONSTRAINT PK_TI_SER_UD PRIMARY KEY (ID_TIPO_SERIE_UD));

-- changeset root:1751897635013-136
CREATE TABLE DEC_TIPO_FASCICOLO (ID_TIPO_FASCICOLO NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, NM_TIPO_FASCICOLO VARCHAR2(100 BYTE) NOT NULL, DS_TIPO_FASCICOLO VARCHAR2(254 BYTE) NOT NULL, DT_ISTITUZ date DEFAULT TRUNC(sysdate) NOT NULL, DT_SOPPRES date DEFAULT to_date('31/12/2444', 'dd/mm/yyyy') NOT NULL, CONSTRAINT PK_TI_FASC PRIMARY KEY (ID_TIPO_FASCICOLO));

-- changeset root:1751897635013-137
CREATE TABLE DEC_NOTA_TIPO_SERIE (ID_NOTA_TIPO_SERIE NUMBER NOT NULL, ID_TIPO_SERIE NUMBER NOT NULL, ID_TIPO_NOTA_SERIE NUMBER NOT NULL, PG_NOTA_TIPO_SERIE NUMBER NOT NULL, DT_NOTA_TIPO_SERIE date NOT NULL, DS_NOTA_TIPO_SERIE VARCHAR2(1024 BYTE) NOT NULL, ID_USER_IAM NUMBER NOT NULL, CONSTRAINT PK_NOT_TI_SER PRIMARY KEY (ID_NOTA_TIPO_SERIE));

-- changeset root:1751897635013-138
CREATE TABLE DEC_USO_MODELLO_XSD_FASC (ID_USO_MODELLO_XSD_FASC NUMBER NOT NULL, ID_AA_TIPO_FASCICOLO NUMBER NOT NULL, ID_MODELLO_XSD_FASCICOLO NUMBER NOT NULL, FL_STANDARD CHAR(1 BYTE) NOT NULL, DT_ISTITUZ date DEFAULT to_date ('01/01/2018', 'dd/mm/yyyy') NOT NULL, DT_SOPPRES date DEFAULT to_date ('31/12/2444', 'dd/mm/yyyy') NOT NULL, CONSTRAINT PK_USO_MDL_XSD_FAS PRIMARY KEY (ID_USO_MODELLO_XSD_FASC));

-- changeset root:1751897635013-139
CREATE TABLE DEC_TIPO_NOTA_SERIE (ID_TIPO_NOTA_SERIE NUMBER NOT NULL, CD_TIPO_NOTA_SERIE VARCHAR2(100 BYTE) NOT NULL, DS_TIPO_NOTA_SERIE VARCHAR2(254 BYTE) NOT NULL, FL_OBBLIG CHAR(1 BYTE) DEFAULT '0' NOT NULL, FL_MOLT CHAR(1 BYTE) NOT NULL, NI_ORD NUMBER NOT NULL, CONSTRAINT PK_TI_NOT_SER PRIMARY KEY (ID_TIPO_NOTA_SERIE));

-- changeset root:1751897635013-140
CREATE TABLE DEC_WARN_AA_TIPO_FASCICOLO (ID_WARN_AA_TIPO_FASCICOLO NUMBER NOT NULL, ID_AA_TIPO_FASCICOLO NUMBER NOT NULL, AA_TIPO_FASCICOLO NUMBER(4, 0) NOT NULL, FL_WARN_AA_TIPO_FASCICOLO CHAR(1 BYTE) DEFAULT '0' NOT NULL, CONSTRAINT PK_WARN_AA_TI_FASC PRIMARY KEY (ID_WARN_AA_TIPO_FASCICOLO));

-- changeset root:1751897635013-141
CREATE TABLE SER_CONTENUTO_VER_SERIE (ID_CONTENUTO_VER_SERIE NUMBER NOT NULL, ID_VER_SERIE NUMBER NOT NULL, TI_CONTENUTO_VER_SERIE VARCHAR2(20 BYTE) NOT NULL, NI_UD_CONTENUTO_VER_SERIE NUMBER DEFAULT 0 NOT NULL, TI_STATO_CONTENUTO_VER_SERIE VARCHAR2(30 BYTE) DEFAULT 'CREAZIONE_IN_CORSO' NOT NULL, ID_FIRST_UD_APPART_VER_SERIE NUMBER, ID_LAST_UD_APPART_VER_SERIE NUMBER, DT_STATO_CONTENUTO_VER_SERIE date NOT NULL, FL_TIPO_SERIE_UPD CHAR(1 BYTE) DEFAULT '0' NOT NULL, CONSTRAINT PK_CONTEN_VER_SER PRIMARY KEY (ID_CONTENUTO_VER_SERIE));

-- changeset root:1751897635013-142
CREATE TABLE SER_ERR_FILE_INPUT (ID_ERR_FILE_INPUT NUMBER NOT NULL, ID_FILE_INPUT_VER_SERIE NUMBER NOT NULL, NI_REC_ERR NUMBER NOT NULL, TI_ERR_REC VARCHAR2(30 BYTE) NOT NULL, DS_REC_ERR VARCHAR2(4000 BYTE) NOT NULL, CONSTRAINT PK_ERR_FILE_INP PRIMARY KEY (ID_ERR_FILE_INPUT));

-- changeset root:1751897635013-143
CREATE TABLE HSM_SESSIONE_FIRMA (ID_SESSIONE_FIRMA NUMBER NOT NULL, ID_USER_IAM NUMBER NOT NULL, TI_SESSIONE_FIRMA VARCHAR2(30 BYTE) NOT NULL, TS_INIZIO TIMESTAMP(6) NOT NULL, TS_FINE TIMESTAMP(6), TI_ESITO_SESSIONE_FIRMA VARCHAR2(20 BYTE), CD_ERR VARCHAR2(100 BYTE), DS_ERR VARCHAR2(4000 BYTE), CONSTRAINT PK_SES_FIR PRIMARY KEY (ID_SESSIONE_FIRMA));

-- changeset root:1751897635013-144
CREATE TABLE SER_SERIE (ID_SERIE NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, CD_COMPOSITO_SERIE VARCHAR2(100 BYTE) NOT NULL, AA_SERIE NUMBER(4, 0) NOT NULL, DS_SERIE VARCHAR2(254 BYTE) NOT NULL, ID_TIPO_SERIE NUMBER NOT NULL, NI_ANNI_CONSERV NUMBER NOT NULL, ID_SERIE_PADRE NUMBER, DT_ANNUL date DEFAULT to_date('31/12/2444', 'dd/mm/yyyy') NOT NULL, ID_STATO_SERIE_COR NUMBER, CD_SERIE_NORMALIZ VARCHAR2(100 BYTE) NOT NULL, CONSTRAINT PK_SER PRIMARY KEY (ID_SERIE));

-- changeset root:1751897635013-145
CREATE TABLE SER_UD_ERR_FILE_INPUT (ID_UD_ERR_FILE_INPUT NUMBER NOT NULL, ID_ERR_FILE_INPUT NUMBER NOT NULL, ID_UNITA_DOC NUMBER NOT NULL, CD_UD_SERIE VARCHAR2(254 BYTE) NOT NULL, DT_UD_SERIE date NOT NULL, INFO_UD_SERIE VARCHAR2(4000 BYTE) NOT NULL, DS_KEY_ORD_UD_SERIE VARCHAR2(254 BYTE) NOT NULL, PG_UD_SERIE NUMBER, CONSTRAINT PK_UD_ERR_FILE_INP PRIMARY KEY (ID_UD_ERR_FILE_INPUT));

-- changeset root:1751897635013-146
CREATE TABLE SER_VER_SERIE (ID_VER_SERIE NUMBER NOT NULL, ID_SERIE NUMBER NOT NULL, PG_VER_SERIE NUMBER NOT NULL, CD_VER_SERIE VARCHAR2(100 BYTE) NOT NULL, ID_STATO_VER_SERIE_COR NUMBER, DT_INIZIO_SEL_SERIE date, DT_FINE_SEL_SERIE date, ID_VER_SERIE_PADRE NUMBER, DT_CREAZIONE_UNITA_DOC_DA date, DT_CREAZIONE_UNITA_DOC_A date, DT_REG_UNITA_DOC_DA date, DT_REG_UNITA_DOC_A date, DS_LISTA_ANNI_SEL_SERIE VARCHAR2(254 BYTE), NI_PERIODO_SEL_SERIE NUMBER, TI_PERIODO_SEL_SERIE VARCHAR2(20 BYTE), FL_UPD_ANNUL_UNITA_DOC CHAR(1 BYTE) DEFAULT '0' NOT NULL, FL_UPD_MODIF_UNITA_DOC CHAR(1 BYTE) DEFAULT '0' NOT NULL, CONSTRAINT PK_VER_SER PRIMARY KEY (ID_VER_SERIE));

-- changeset root:1751897635013-147
CREATE TABLE SER_CONSIST_VER_SERIE (ID_CONSIST_VER_SERIE NUMBER NOT NULL, ID_VER_SERIE NUMBER NOT NULL, CD_DOC_CONSIST_VER_SERIE VARCHAR2(100 BYTE), DS_DOC_CONSIST_VER_SERIE VARCHAR2(254 BYTE), NI_FIRST_UNITA_DOC_ATTESA NUMBER, NI_LAST_UNITA_DOC_ATTESA NUMBER, NI_UNITA_DOC_ATTESE NUMBER, ID_USER_IAM NUMBER NOT NULL, CD_FIRST_UNITA_DOC_ATTESA VARCHAR2(254 BYTE), CD_LAST_UNITA_DOC_ATTESA VARCHAR2(254 BYTE), TI_MOD_CONSIST_FIRST_LAST VARCHAR2(20 BYTE), DT_COMUNIC_CONSIST_VER_SERIE date DEFAULT SYSDATE NOT NULL, CD_REGISTRO_FIRST VARCHAR2(100 BYTE), AA_UNITA_DOC_FIRST NUMBER(4, 0), CD_UNITA_DOC_FIRST VARCHAR2(100 BYTE), CD_REGISTRO_LAST VARCHAR2(100 BYTE), AA_UNITA_DOC_LAST NUMBER(4, 0), CD_UNITA_DOC_LAST VARCHAR2(100 BYTE), CONSTRAINT PK_CONS_VER_SER PRIMARY KEY (ID_CONSIST_VER_SERIE));

-- changeset root:1751897635013-148
CREATE TABLE SER_LACUNA_CONSIST_VER_SERIE (ID_LACUNA_CONSIST_VER_SERIE NUMBER NOT NULL, ID_CONSIST_VER_SERIE NUMBER NOT NULL, PG_LACUNA NUMBER NOT NULL, NI_INI_LACUNA NUMBER, NI_FIN_LACUNA NUMBER, DL_LACUNA VARCHAR2(1024 BYTE), TI_LACUNA VARCHAR2(20 BYTE) DEFAULT 'MANCANTI' NOT NULL, TI_MOD_LACUNA VARCHAR2(20 BYTE) DEFAULT 'RANGE_NUMERI' NOT NULL, DL_NOTA_LACUNA VARCHAR2(1024 BYTE), CONSTRAINT PK_LAC_CONS_VER_SER PRIMARY KEY (ID_LACUNA_CONSIST_VER_SERIE));

-- changeset root:1751897635013-149
CREATE TABLE DEC_XSD_DATI_SPEC (ID_XSD_DATI_SPEC NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, TI_USO_XSD VARCHAR2(20 BYTE) NOT NULL, TI_ENTITA_SACER VARCHAR2(20 BYTE) NOT NULL, ID_TIPO_UNITA_DOC NUMBER, ID_TIPO_DOC NUMBER, ID_TIPO_COMP_DOC NUMBER, NM_SISTEMA_MIGRAZ VARCHAR2(100 BYTE), CD_VERSIONE_XSD VARCHAR2(100 BYTE) NOT NULL, BL_XSD CLOB, DT_ISTITUZ date DEFAULT TRUNC(sysdate) NOT NULL, DT_SOPPRES date DEFAULT to_date('31/12/2444', 'dd/mm/yyyy') NOT NULL, DS_VERSIONE_XSD VARCHAR2(254 BYTE), CONSTRAINT PK_XSD_DATI_SPEC PRIMARY KEY (ID_XSD_DATI_SPEC));

-- changeset root:1751897635013-150
CREATE TABLE SER_STATO_VER_SERIE (ID_STATO_VER_SERIE NUMBER NOT NULL, ID_VER_SERIE NUMBER NOT NULL, PG_STATO_VER_SERIE NUMBER NOT NULL, TI_STATO_VER_SERIE VARCHAR2(20 BYTE) NOT NULL, DT_REG_STATO_VER_SERIE date NOT NULL, ID_USER_IAM NUMBER NOT NULL, DS_AZIONE VARCHAR2(254 BYTE) NOT NULL, DS_NOTA_AZIONE VARCHAR2(1024 BYTE), CONSTRAINT PK_STATO_VER_SER PRIMARY KEY (ID_STATO_VER_SERIE));

-- changeset root:1751897635013-151
CREATE TABLE DEC_CRITERIO_RAGGR (ID_CRITERIO_RAGGR NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, NM_CRITERIO_RAGGR VARCHAR2(100 BYTE) NOT NULL, DS_CRITERIO_RAGGR VARCHAR2(254 BYTE) NOT NULL, NI_MAX_COMP NUMBER, TI_SCAD_CHIUS_VOLUME VARCHAR2(20 BYTE), TI_TEMPO_SCAD_CHIUS VARCHAR2(20 BYTE), NI_TEMPO_SCAD_CHIUS NUMBER, AA_KEY_UNITA_DOC NUMBER(4, 0), CD_KEY_UNITA_DOC VARCHAR2(100 BYTE), FL_UNITA_DOC_FIRMATO CHAR(1 BYTE), DT_CREAZIONE_UNITA_DOC_DA date, DT_CREAZIONE_UNITA_DOC_A date, FL_FORZA_ACCETTAZIONE CHAR(1 BYTE), FL_FORZA_CONSERVAZIONE CHAR(1 BYTE), DT_ISTITUZ date NOT NULL, DT_SOPPRES date DEFAULT to_date('31/12/2444', 'dd/mm/yyyy') NOT NULL, FL_FILTRO_TIPO_UNITA_DOC CHAR(1 BYTE) DEFAULT '0' NOT NULL, FL_FILTRO_REGISTRO_KEY CHAR(1 BYTE) DEFAULT '0' NOT NULL, FL_FILTRO_RANGE_REGISTRO_KEY CHAR(1 BYTE) DEFAULT '0' NOT NULL, AA_KEY_UNITA_DOC_DA NUMBER, AA_KEY_UNITA_DOC_A NUMBER, CD_KEY_UNITA_DOC_DA VARCHAR2(100 BYTE), CD_KEY_UNITA_DOC_A VARCHAR2(100 BYTE), FL_FILTRO_TI_ESITO_VERIF_FIRME CHAR(1 BYTE) DEFAULT '0' NOT NULL, DL_OGGETTO_UNITA_DOC VARCHAR2(1024 BYTE), DT_REG_UNITA_DOC_DA date, DT_REG_UNITA_DOC_A date, FL_FILTRO_TIPO_DOC CHAR(1 BYTE) DEFAULT '0' NOT NULL, DL_DOC VARCHAR2(1024 BYTE), DS_AUTORE_DOC VARCHAR2(254 BYTE), BL_FILTRI_DATI_SPEC_DOC CLOB, TI_CONSERVAZIONE VARCHAR2(30 BYTE), FL_FILTRO_SISTEMA_MIGRAZ CHAR(1 BYTE) DEFAULT '0' NOT NULL, NT_CRITERIO_RAGGR VARCHAR2(2000 BYTE), FL_CRITERIO_RAGGR_STANDARD CHAR(1 BYTE) DEFAULT '0' NOT NULL, FL_CRITERIO_RAGGR_FISC CHAR(1 BYTE) DEFAULT '0' NOT NULL, TI_GEST_ELENCO_CRITERIO VARCHAR2(30 BYTE), TI_VALID_ELENCO VARCHAR2(20 BYTE) DEFAULT 'NO_FIRMA' NOT NULL, TI_MOD_VALID_ELENCO VARCHAR2(20 BYTE) DEFAULT 'MANUALE' NOT NULL, NI_MAX_ELENCHI_BY_GG NUMBER, CONSTRAINT PK_CRI_RAG PRIMARY KEY (ID_CRITERIO_RAGGR));

-- changeset root:1751897635013-152
CREATE TABLE SER_VOL_VER_SERIE (ID_VOL_VER_SERIE NUMBER NOT NULL, ID_VER_SERIE NUMBER NOT NULL, PG_VOL_VER_SERIE NUMBER NOT NULL, NI_UNITA_DOC_VOL NUMBER NOT NULL, ID_FIRST_UD_APPART_VOL NUMBER, ID_LAST_UD_APPART_VOL NUMBER, CONSTRAINT PK_VOL_VER_SER PRIMARY KEY (ID_VOL_VER_SERIE));

-- changeset root:1751897635013-153
CREATE TABLE SER_ERR_CONTENUTO_VER_SERIE (ID_ERR_CONTENUTO_VER_SERIE NUMBER NOT NULL, ID_CONTENUTO_VER_SERIE NUMBER NOT NULL, PG_ERR NUMBER NOT NULL, TI_GRAVITA_ERR VARCHAR2(20 BYTE) NOT NULL, TI_ERR VARCHAR2(30 BYTE) NOT NULL, DL_ERR VARCHAR2(1024 BYTE) NOT NULL, TI_ORIGINE_ERR VARCHAR2(20 BYTE) DEFAULT 'CONTROLLO' NOT NULL, CONSTRAINT PK_ERR_CONTEN_SERIE PRIMARY KEY (ID_ERR_CONTENUTO_VER_SERIE));

-- changeset root:1751897635013-154
CREATE TABLE SER_UD_NON_VERS_ERR (ID_UD_NON_VERS_ERR NUMBER NOT NULL, ID_ERR_CONTENUTO_VER_SERIE NUMBER NOT NULL, ID_UNITA_DOC_NON_VERS NUMBER NOT NULL, CONSTRAINT PK_UD_NOVERS_ERR PRIMARY KEY (ID_UD_NON_VERS_ERR));

-- changeset root:1751897635013-155
CREATE TABLE SER_NOTA_VER_SERIE (ID_NOTA_VER_SERIE NUMBER NOT NULL, ID_VER_SERIE NUMBER NOT NULL, ID_TIPO_NOTA_SERIE NUMBER NOT NULL, PG_NOTA_VER_SERIE NUMBER NOT NULL, DT_NOTA_VER_SERIE date NOT NULL, DS_NOTA_VER_SERIE VARCHAR2(1024 BYTE) NOT NULL, ID_USER_IAM NUMBER NOT NULL, CONSTRAINT PK_NOT_VER_SER PRIMARY KEY (ID_NOTA_VER_SERIE));

-- changeset root:1751897635013-156
CREATE TABLE MON_CONTA_UD_DOC_COMP (ID_CONTA_UD_DOC_COMP NUMBER NOT NULL, DT_RIF_CONTA date NOT NULL, ID_STRUT NUMBER NOT NULL, ID_SUB_STRUT NUMBER NOT NULL, AA_KEY_UNITA_DOC NUMBER(4, 0) NOT NULL, ID_REGISTRO_UNITA_DOC NUMBER NOT NULL, ID_TIPO_UNITA_DOC NUMBER NOT NULL, ID_TIPO_DOC_PRINC NUMBER NOT NULL, NI_UNITA_DOC_VERS NUMBER DEFAULT 0 NOT NULL, NI_DOC_VERS NUMBER DEFAULT 0 NOT NULL, NI_COMP_VERS NUMBER DEFAULT 0 NOT NULL, NI_SIZE_VERS NUMBER DEFAULT 0 NOT NULL, NI_DOC_AGG NUMBER DEFAULT 0 NOT NULL, NI_COMP_AGG NUMBER DEFAULT 0 NOT NULL, NI_SIZE_AGG NUMBER DEFAULT 0 NOT NULL, NI_UNITA_DOC_ANNUL NUMBER DEFAULT 0 NOT NULL, NI_DOC_ANNUL_UD NUMBER DEFAULT 0 NOT NULL, NI_COMP_ANNUL_UD NUMBER DEFAULT 0 NOT NULL, NI_SIZE_ANNUL_UD NUMBER DEFAULT 0 NOT NULL, CONSTRAINT PK_CNT_UD_DOC_COMP PRIMARY KEY (ID_CONTA_UD_DOC_COMP));

-- changeset root:1751897635013-157
CREATE TABLE ELV_DOC_AGG_DA_ELAB_ELENCO (ID_DOC_AGG_DA_ELAB_ELENCO NUMBER NOT NULL, ID_DOC NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, AA_KEY_UNITA_DOC NUMBER(4, 0) NOT NULL, DT_CREAZIONE date NOT NULL, TI_STATO_DOC_DA_ELAB VARCHAR2(30 BYTE) NOT NULL, CONSTRAINT PK_DOC_AGG_DAELB_ELE PRIMARY KEY (ID_DOC_AGG_DA_ELAB_ELENCO));

-- changeset root:1751897635013-158
CREATE TABLE DEC_CLASSE_ERR_SACER (ID_CLASSE_ERR_SACER NUMBER NOT NULL, TI_USO_ERR VARCHAR2(30 BYTE) NOT NULL, CD_CLASSE_ERR VARCHAR2(100 BYTE) NOT NULL, DS_CLASSE_ERR VARCHAR2(254 BYTE) NOT NULL, CONSTRAINT PK_CLA_ERR_SACER PRIMARY KEY (ID_CLASSE_ERR_SACER));

-- changeset root:1751897635013-159
CREATE TABLE ELV_ELENCO_VERS (ID_ELENCO_VERS NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, NM_ELENCO VARCHAR2(100 BYTE) NOT NULL, DS_ELENCO VARCHAR2(254 BYTE) NOT NULL, TI_STATO_ELENCO VARCHAR2(40 BYTE) NOT NULL, ID_CRITERIO_RAGGR NUMBER NOT NULL, DT_CREAZIONE_ELENCO date NOT NULL, NI_MAX_COMP NUMBER NOT NULL, TI_SCAD_CHIUS VARCHAR2(20 BYTE), TI_TEMPO_SCAD_CHIUS VARCHAR2(20 BYTE), NI_TEMPO_SCAD_CHIUS NUMBER, NI_UNITA_DOC_VERS_ELENCO NUMBER NOT NULL, NI_DOC_VERS_ELENCO NUMBER NOT NULL, NI_COMP_VERS_ELENCO NUMBER NOT NULL, NI_SIZE_VERS_ELENCO NUMBER NOT NULL, NI_UNITA_DOC_MOD_ELENCO NUMBER NOT NULL, NI_DOC_AGG_ELENCO NUMBER NOT NULL, NI_COMP_AGG_ELENCO NUMBER NOT NULL, NI_SIZE_AGG_ELENCO NUMBER NOT NULL, NT_INDICE_ELENCO VARCHAR2(2000 BYTE), DT_SCAD_CHIUS date NOT NULL, ID_USER_CHIUSO_ELENCO NUMBER, DT_CHIUS date, DL_MOTIVO_CHIUS VARCHAR2(1024 BYTE), DT_FIRMA_INDICE date, ID_USER_FIRMA_INDICE NUMBER, NT_ELENCO_CHIUSO VARCHAR2(2000 BYTE), AA_KEY_UNITA_DOC NUMBER(4, 0), FL_ELENCO_STANDARD CHAR(1 BYTE) DEFAULT '0' NOT NULL, FL_ELENCO_FISC CHAR(1 BYTE) DEFAULT '0' NOT NULL, TI_GEST_ELENCO VARCHAR2(30 BYTE), DT_CREAZIONE_ELENCO_IX_AIP date, DT_FIRMA_ELENCO_IX_AIP date, DT_MARCA_ELENCO_IX_AIP date, NI_INDICI_AIP NUMBER, TI_VALID_ELENCO VARCHAR2(20 BYTE), TI_MOD_VALID_ELENCO VARCHAR2(20 BYTE), NI_UPD_UNITA_DOC NUMBER DEFAULT 0 NOT NULL, ID_STATO_ELENCO_VERS_COR NUMBER, CONSTRAINT PK_ELE_VRS PRIMARY KEY (ID_ELENCO_VERS));

-- changeset root:1751897635013-160
CREATE TABLE DEC_ERR_SACER (ID_ERR_SACER NUMBER NOT NULL, ID_CLASSE_ERR_SACER NUMBER NOT NULL, CD_ERR VARCHAR2(100 BYTE) NOT NULL, DS_ERR VARCHAR2(4000 BYTE) NOT NULL, DS_ERR_FILTRO VARCHAR2(4000 BYTE), TI_ERR_SACER VARCHAR2(20 BYTE) NOT NULL, CONSTRAINT PK_ERR_SACER PRIMARY KEY (ID_ERR_SACER));

-- changeset root:1751897635013-161 splitStatements:true
CREATE TABLE TMP_VER_CONS_FISC_LOG (ID_LOG NUMBER NOT NULL, TS_CREAZIONE TIMESTAMP(6), DS_MESSAGE VARCHAR2(1024 BYTE), CONSTRAINT TMP_VER_CONS_FISC_LOG_PK PRIMARY KEY (ID_LOG));
COMMENT ON TABLE TMP_VER_CONS_FISC_LOG IS 'Tabella di log per le procedure di allineamento conservazione fiscale';
COMMENT ON COLUMN TMP_VER_CONS_FISC_LOG.ID_LOG IS 'PK della tabella, generato dalla sequence STMP_VER_CONS_FISC_LOG';
COMMENT ON COLUMN TMP_VER_CONS_FISC_LOG.TS_CREAZIONE IS 'Timestamp dell''evento';
COMMENT ON COLUMN TMP_VER_CONS_FISC_LOG.DS_MESSAGE IS 'Messaggio di log';

-- changeset root:1751897635013-162
CREATE TABLE ELV_LOG_ELENCO_VERS (ID_LOG_ELENCO_VERS NUMBER NOT NULL, ID_USER NUMBER, ID_ELENCO_VERS NUMBER NOT NULL, TM_OPER TIMESTAMP(6) NOT NULL, TI_OPER VARCHAR2(50 BYTE) NOT NULL, NM_ELENCO VARCHAR2(100 BYTE) NOT NULL, ID_STRUT NUMBER NOT NULL, ID_LOG_JOB NUMBER, CD_REGISTRO_KEY_UNITA_DOC VARCHAR2(100 BYTE), AA_KEY_UNITA_DOC NUMBER(4, 0), CD_KEY_UNITA_DOC VARCHAR2(100 BYTE), TI_DOC VARCHAR2(20 BYTE), PG_DOC NUMBER, PG_UPD_UNITA_DOC NUMBER, CONSTRAINT PK_LOG_ELE_VRS PRIMARY KEY (ID_LOG_ELENCO_VERS));

-- changeset root:1751897635013-163
CREATE TABLE GEN_PACKAGE_TEST (ID TIMESTAMP(6) NOT NULL, DESCRIZIONE_CHIAMANTE VARCHAR2(50 BYTE) NOT NULL, STRING_PARAM VARCHAR2(50 BYTE), NUMBER_PARAM NUMBER(38, 0), DATE_PARAM date, CONSTRAINT SYS_C0010880 PRIMARY KEY (ID));

-- changeset root:1751897635013-164
CREATE TABLE ELV_UD_VERS_DA_ELAB_ELENCO (ID_UD_VERS_DA_ELAB_ELENCO NUMBER NOT NULL, ID_UNITA_DOC NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, AA_KEY_UNITA_DOC NUMBER(4, 0) NOT NULL, DT_CREAZIONE date NOT NULL, TI_STATO_UD_DA_ELAB VARCHAR2(30 BYTE) NOT NULL, CONSTRAINT PK_UD_VERS_DAELB_ELE PRIMARY KEY (ID_UD_VERS_DA_ELAB_ELENCO));

-- changeset root:1751897635013-165
CREATE TABLE VRS_ERR_SES_UPD_UNITA_DOC_ERR (ID_ERR_SES_UPD_UNITA_DOC_ERR NUMBER NOT NULL, ID_SES_UPD_UNITA_DOC_ERR NUMBER NOT NULL, PG_ERR NUMBER DEFAULT 1 NOT NULL, TI_ERR VARCHAR2(20 BYTE) NOT NULL, ID_ERR_SACER NUMBER NOT NULL, DS_ERR VARCHAR2(4000 BYTE) NOT NULL, ID_CONTROLLO_WS NUMBER NOT NULL, FL_ERR_PRINC CHAR(1 BYTE) DEFAULT '0' NOT NULL, CONSTRAINT PK_ERR_SES_UPD_UD_ERR PRIMARY KEY (ID_ERR_SES_UPD_UNITA_DOC_ERR));

-- changeset root:1751897635013-166
CREATE TABLE VRS_XML_SES_UPD_UNITA_DOC_ERR (ID_XML_SES_UPD_UNITA_DOC_ERR NUMBER NOT NULL, ID_SES_UPD_UD_ERR NUMBER NOT NULL, TI_XML VARCHAR2(20 BYTE) NOT NULL, CD_VERSIONE_XML VARCHAR2(100 BYTE) NOT NULL, BL_XML CLOB, CONSTRAINT PK_XML_SES_UPD_UD_ERR PRIMARY KEY (ID_XML_SES_UPD_UNITA_DOC_ERR));

-- changeset root:1751897635013-167
CREATE TABLE ARO_UPD_UNITA_DOC (ID_UPD_UNITA_DOC NUMBER NOT NULL, ID_UNITA_DOC NUMBER NOT NULL, PG_UPD_UNITA_DOC NUMBER NOT NULL, DT_ANNUL date NOT NULL, TS_INI_SES TIMESTAMP(6) NOT NULL, TS_FINE_SES TIMESTAMP(6) NOT NULL, CD_IND_IP_CLIENT VARCHAR2(100 BYTE) NOT NULL, CD_IND_SERVER VARCHAR2(100 BYTE) NOT NULL, ID_USER_IAM_VERS NUMBER NOT NULL, FL_FORZA_UPD CHAR(1 BYTE) NOT NULL, NT_UPD VARCHAR2(4000 BYTE), DS_CLASSIF_PRINC VARCHAR2(254 BYTE), CD_FASCIC_PRINC VARCHAR2(4000 BYTE), DS_OGGETTO_FASCIC_PRINC VARCHAR2(4000 BYTE), CD_SOTTOFASCIC_PRINC VARCHAR2(4000 BYTE), DS_OGGETTO_SOTTOFASCIC_PRINC VARCHAR2(4000 BYTE), DL_OGGETTO_UNITA_DOC VARCHAR2(4000 BYTE), DT_REG_UNITA_DOC date, TI_STATO_UPD_ELENCO_VERS VARCHAR2(50 BYTE), ID_ELENCO_VERS NUMBER, NT_ANNUL VARCHAR2(2000 BYTE), ID_STRUT NUMBER NOT NULL, AA_KEY_UNITA_DOC NUMBER(4, 0) NOT NULL, ID_REGISTRO_UNITA_DOC NUMBER NOT NULL, ID_TIPO_UNITA_DOC NUMBER NOT NULL, ID_TIPO_DOC_PRINC NUMBER NOT NULL, FL_SES_UPD_KO_RISOLTI CHAR(1 BYTE) DEFAULT '0' NOT NULL, FL_UPD_PROFILO_ARCHIV CHAR(1 BYTE) DEFAULT '0' NOT NULL, FL_UPD_FASCICOLO_PRINC CHAR(1 BYTE) DEFAULT '0' NOT NULL, FL_UPD_FASCICOLI_SEC CHAR(1 BYTE) DEFAULT '0' NOT NULL, FL_UPD_PROFILO_UNITA_DOC CHAR(1 BYTE) DEFAULT '0' NOT NULL, FL_UPD_LINK_UNITA_DOC CHAR(1 BYTE) DEFAULT '0' NOT NULL, FL_UPD_DATI_SPEC CHAR(1 BYTE) DEFAULT '0' NOT NULL, FL_UPD_DATI_SPEC_MIGRAZ CHAR(1 BYTE) DEFAULT '0' NOT NULL, TIPO_UPD_UNITA_DOC VARCHAR2(30 BYTE) DEFAULT 'METADATI' NOT NULL, TS_STATO_ELENCO_VERS TIMESTAMP(6), NI_RESET_STATO NUMBER, TS_LAST_RESET_STATO TIMESTAMP(6), FL_UPD_PROFILO_NORMATIVO CHAR(1 BYTE) DEFAULT '0' NOT NULL, CONSTRAINT PK_UPD_UD PRIMARY KEY (ID_UPD_UNITA_DOC));

-- changeset root:1751897635013-168
CREATE TABLE ARO_ARCHIV_SEC (ID_ARCHIV_SEC NUMBER NOT NULL, ID_UNITA_DOC NUMBER NOT NULL, DS_CLASSIF VARCHAR2(254 BYTE), CD_FASCIC VARCHAR2(4000 BYTE), DS_OGGETTO_FASCIC VARCHAR2(4000 BYTE), CD_SOTTOFASCIC VARCHAR2(4000 BYTE), DS_OGGETTO_SOTTOFASCIC VARCHAR2(4000 BYTE), ID_STRUT NUMBER NOT NULL, CONSTRAINT PK_ARC_SEC PRIMARY KEY (ID_ARCHIV_SEC));

-- changeset root:1751897635013-169
CREATE TABLE ARO_DOC (ID_DOC NUMBER NOT NULL, ID_UNITA_DOC NUMBER NOT NULL, PG_DOC NUMBER NOT NULL, ID_TIPO_DOC NUMBER NOT NULL, TI_STATO_DOC VARCHAR2(30 BYTE), DT_CREAZIONE date NOT NULL, CD_KEY_DOC_VERS VARCHAR2(100 BYTE) NOT NULL, DL_DOC VARCHAR2(4000 BYTE), DS_AUTORE_DOC VARCHAR2(4000 BYTE), FL_DOC_FISC CHAR(1 BYTE) NOT NULL, FL_DOC_FIRMATO CHAR(1 BYTE) NOT NULL, TI_ESITO_VERIF_FIRME VARCHAR2(20 BYTE), DS_MSG_ESITO_VERIF_FIRME VARCHAR2(254 BYTE), ID_STRUT NUMBER NOT NULL, TI_DOC VARCHAR2(20 BYTE) NOT NULL, FL_FORZA_ACCETTAZIONE CHAR(1 BYTE) DEFAULT '0' NOT NULL, FL_FORZA_CONSERVAZIONE CHAR(1 BYTE) DEFAULT '0' NOT NULL, TI_CONSERVAZIONE VARCHAR2(25 BYTE) DEFAULT 'SOSTITUTIVA' NOT NULL, NM_SISTEMA_MIGRAZ VARCHAR2(100 BYTE), DT_ANNUL date DEFAULT to_date('31/12/2444', 'dd/mm/yyyy') NOT NULL, TI_ANNUL VARCHAR2(20 BYTE), NT_DOC VARCHAR2(2000 BYTE), NT_ANNUL VARCHAR2(2000 BYTE), TI_CREAZIONE VARCHAR2(20 BYTE) DEFAULT 'VERSAMENTO_UNITA_DOC' NOT NULL, TI_STATO_DOC_ELENCO_VERS VARCHAR2(50 BYTE), ID_ELENCO_VERS NUMBER, NI_ORD_DOC NUMBER, TS_STATO_ELENCO_VERS TIMESTAMP(6), NI_RESET_STATO NUMBER, TS_LAST_RESET_STATO TIMESTAMP(6), CONSTRAINT PK_DOC PRIMARY KEY (ID_DOC));

-- changeset root:1751897635013-170
CREATE TABLE ARO_USO_XSD_DATI_SPEC (ID_USO_XSD_DATI_SPEC NUMBER NOT NULL, TI_USO_XSD VARCHAR2(20 BYTE) NOT NULL, TI_ENTITA_SACER VARCHAR2(20 BYTE) NOT NULL, ID_XSD_DATI_SPEC NUMBER NOT NULL, ID_UNITA_DOC NUMBER NOT NULL, ID_DOC NUMBER, ID_COMP_DOC NUMBER, ID_STRUT NUMBER NOT NULL, CONSTRAINT PK_USO_XSD_DATI_SPEC PRIMARY KEY (ID_USO_XSD_DATI_SPEC));

-- changeset root:1751897635013-171
CREATE TABLE VRS_SES_FASCICOLO_KO (ID_SES_FASCICOLO_KO NUMBER NOT NULL, ID_FASCICOLO_KO NUMBER, ID_TIPO_FASCICOLO NUMBER NOT NULL, ID_FASCICOLO NUMBER, TS_INI_SES TIMESTAMP(6) NOT NULL, TS_FINE_SES TIMESTAMP(6) NOT NULL, CD_VERSIONE_WS VARCHAR2(100 BYTE) NOT NULL, ID_USER_IAM NUMBER, ID_ERR_SACER_PRINC NUMBER NOT NULL, DS_ERR_PRINC VARCHAR2(4000 BYTE) NOT NULL, TI_STATO_SES VARCHAR2(20 BYTE) NOT NULL, ID_STRUT NUMBER NOT NULL, AA_FASCICOLO NUMBER(4, 0) NOT NULL, CD_IND_IP_CLIENT VARCHAR2(100 BYTE) NOT NULL, CD_IND_SERVER VARCHAR2(100 BYTE) NOT NULL, CONSTRAINT PK_VRS_SES_FASCICOLO_KO_NP PRIMARY KEY (ID_SES_FASCICOLO_KO));

-- changeset root:1751897635013-172
CREATE TABLE VRS_ERR_SES_FASCICOLO_KO (ID_ERR_SES_FASCICOLO_KO NUMBER NOT NULL, ID_SES_FASCICOLO_KO NUMBER NOT NULL, PG_ERR NUMBER DEFAULT 1 NOT NULL, TI_ERR VARCHAR2(20 BYTE) NOT NULL, ID_ERR_SACER NUMBER NOT NULL, DS_ERR VARCHAR2(4000 BYTE) NOT NULL, FL_ERR_PRINC CHAR(1 BYTE) DEFAULT '1' NOT NULL, CONSTRAINT PK_ERR_SES_FASC_KO PRIMARY KEY (ID_ERR_SES_FASCICOLO_KO));

-- changeset root:1751897635013-173
CREATE TABLE ARO_UD_APPART_VER_SERIE (ID_UD_APPART_VER_SERIE NUMBER NOT NULL, ID_CONTENUTO_VER_SERIE NUMBER NOT NULL, ID_UNITA_DOC NUMBER NOT NULL, CD_UD_SERIE VARCHAR2(254 BYTE) NOT NULL, DT_UD_SERIE date NOT NULL, INFO_UD_SERIE VARCHAR2(4000 BYTE) NOT NULL, DS_KEY_ORD_UD_SERIE VARCHAR2(254 BYTE) NOT NULL, PG_UD_SERIE NUMBER, ID_VOL_VER_SERIE NUMBER, ID_VER_INDICE_AIP_UD NUMBER, CONSTRAINT PK_UD_APP_VER_SER PRIMARY KEY (ID_UD_APPART_VER_SERIE));

-- changeset root:1751897635013-174
CREATE TABLE ARO_ITEM_RICH_ANNUL_VERS (ID_ITEM_RICH_ANNUL_VERS NUMBER NOT NULL, ID_RICH_ANNUL_VERS NUMBER NOT NULL, PG_ITEM_RICH_ANNUL_VERS NUMBER NOT NULL, TI_ITEM_RICH_ANNUL_VERS VARCHAR2(20 BYTE) NOT NULL, ID_STRUT NUMBER NOT NULL, CD_REGISTRO_KEY_UNITA_DOC VARCHAR2(100 BYTE), AA_KEY_UNITA_DOC NUMBER(4, 0), CD_KEY_UNITA_DOC VARCHAR2(100 BYTE), TI_STATO_ITEM VARCHAR2(30 BYTE) NOT NULL, ID_UNITA_DOC NUMBER, AA_FASCICOLO NUMBER(4, 0), CD_KEY_FASCICOLO VARCHAR2(100 BYTE), ID_FASCICOLO NUMBER, CONSTRAINT PK_ITEM_RICH_ANN_VRS PRIMARY KEY (ID_ITEM_RICH_ANNUL_VERS));

-- changeset root:1751897635013-175
CREATE TABLE ARO_ERR_RICH_ANNUL_VERS (ID_ERR_RICH_ANNUL_VRS NUMBER NOT NULL, ID_ITEM_RICH_ANNUL_VERS NUMBER NOT NULL, PG_ERR NUMBER NOT NULL, TI_ERR VARCHAR2(30 BYTE) NOT NULL, DS_ERR VARCHAR2(4000 BYTE) NOT NULL, TI_GRAVITA VARCHAR2(20 BYTE) NOT NULL, CONSTRAINT PK_ERR_RICH_ANN_VRS PRIMARY KEY (ID_ERR_RICH_ANNUL_VRS));

-- changeset root:1751897635013-176
CREATE TABLE VRS_DATI_SESSIONE_VERS (ID_DATI_SESSIONE_VERS NUMBER NOT NULL, ID_SESSIONE_VERS NUMBER NOT NULL, PG_DATI_SESSIONE_VERS NUMBER DEFAULT 1 NOT NULL, TI_DATI_SESSIONE_VERS VARCHAR2(20 BYTE) NOT NULL, NI_FILE NUMBER, CD_KEY_ALLEG VARCHAR2(100 BYTE), ID_STRUT NUMBER, CONSTRAINT PK_DAT_SES_VRS PRIMARY KEY (ID_DATI_SESSIONE_VERS));

-- changeset root:1751897635013-177
CREATE TABLE VRS_SESSIONE_VERS_KO_ELIMINATE (ID_SESSIONE_VERS_KO_ELIMINATE NUMBER GENERATED ALWAYS AS IDENTITY NOT NULL, ID_STRUT NUMBER, NM_STRUT VARCHAR2(100 BYTE), DS_STRUT VARCHAR2(254 BYTE), NI_SES_ELIMINATE NUMBER, DT_ELAB date, DT_RIF date, CONSTRAINT VRS_SESSIONE_VERS_KO_ELIMINATE_PK PRIMARY KEY (ID_SESSIONE_VERS_KO_ELIMINATE));

-- changeset root:1751897635013-178
CREATE TABLE ARO_LINK_UNITA_DOC (ID_LINK_UNITA_DOC NUMBER NOT NULL, ID_UNITA_DOC NUMBER NOT NULL, CD_REGISTRO_KEY_UNITA_DOC_LINK VARCHAR2(100 BYTE) NOT NULL, AA_KEY_UNITA_DOC_LINK NUMBER(4, 0) NOT NULL, CD_KEY_UNITA_DOC_LINK VARCHAR2(100 BYTE) NOT NULL, DS_LINK_UNITA_DOC VARCHAR2(254 BYTE), ID_UNITA_DOC_LINK NUMBER, ID_STRUT NUMBER NOT NULL, CONSTRAINT PK_LNK_UNI_DOC PRIMARY KEY (ID_LINK_UNITA_DOC));

-- changeset root:1751897635013-179
CREATE TABLE MOVE_RECORD_LOG (COUNT_REC NUMBER NOT NULL, DATA TIMESTAMP(6), STATO_ELAB VARCHAR2(4000 BYTE), PROGRESS NUMBER);

-- changeset root:1751897635013-180
CREATE TABLE ARO_INDICE_AIP_UD (ID_INDICE_AIP NUMBER NOT NULL, ID_UNITA_DOC NUMBER NOT NULL, TI_FORMATO_INDICE_AIP VARCHAR2(20 BYTE) NOT NULL, ID_VER_INDICE_AIP_LAST NUMBER NOT NULL, CONSTRAINT PK_IX_AIP_UD PRIMARY KEY (ID_INDICE_AIP));

-- changeset root:1751897635013-181
CREATE TABLE ARO_UPD_DOC_UNITA_DOC (ID_UPD_DOC_UNITA_DOC NUMBER NOT NULL, ID_UPD_UNITA_DOC NUMBER NOT NULL, ID_DOC NUMBER NOT NULL, DL_DOC VARCHAR2(4000 BYTE), DS_AUTORE_DOC VARCHAR2(4000 BYTE), FL_UPD_PROFILO_DOC CHAR(1 BYTE) DEFAULT '0' NOT NULL, FL_UPD_DATI_SPEC CHAR(1 BYTE) DEFAULT '0' NOT NULL, FL_UPD_DATI_SPEC_MIGRAZ CHAR(1 BYTE) DEFAULT '0' NOT NULL, CONSTRAINT PK_UPD_DOC_UD PRIMARY KEY (ID_UPD_DOC_UNITA_DOC));

-- changeset root:1751897635013-182
CREATE TABLE ARO_STRUT_DOC (ID_STRUT_DOC NUMBER NOT NULL, ID_DOC NUMBER NOT NULL, NI_ORD_STRUT_DOC NUMBER(5, 0), ID_TIPO_STRUT_DOC NUMBER NOT NULL, FL_STRUT_ORIG CHAR(1 BYTE) NOT NULL, ID_STRUT NUMBER NOT NULL, CONSTRAINT PK_STRUT_DOC PRIMARY KEY (ID_STRUT_DOC));

-- changeset root:1751897635013-183
CREATE TABLE ARO_VER_INDICE_AIP_UD (ID_VER_INDICE_AIP NUMBER NOT NULL, ID_INDICE_AIP NUMBER NOT NULL, PG_VER_INDICE_AIP NUMBER NOT NULL, DT_CREAZIONE date NOT NULL, DS_HASH_INDICE_AIP VARCHAR2(250 BYTE), DS_URN VARCHAR2(254 BYTE), DS_CAUSALE VARCHAR2(254 BYTE) NOT NULL, CD_VER_INDICE_AIP VARCHAR2(100 BYTE) NOT NULL, CD_VER_XSD_INDICE_AIP VARCHAR2(100 BYTE) DEFAULT '1.0' NOT NULL, ID_ELENCO_VERS NUMBER, DS_HASH_AIP VARCHAR2(254 BYTE), DS_ALGO_HASH_AIP VARCHAR2(254 BYTE), CD_ENCODING_HASH_AIP VARCHAR2(20 BYTE), ID_ENTE_CONSERV NUMBER, DS_ALGO_HASH_INDICE_AIP VARCHAR2(254 BYTE) DEFAULT 'SHA-1' NOT NULL, CD_ENCODING_HASH_INDICE_AIP VARCHAR2(20 BYTE) DEFAULT 'hexBinary' NOT NULL, CONSTRAINT PK_VER_IX_AIP_UD PRIMARY KEY (ID_VER_INDICE_AIP));

-- changeset root:1751897635013-184
CREATE TABLE VRS_XML_DATI_SESSIONE_VERS (ID_XML_DATI_SESSIONE_VERS NUMBER NOT NULL, ID_DATI_SESSIONE_VERS NUMBER NOT NULL, TI_XML_DATI VARCHAR2(20 BYTE) NOT NULL, BL_XML CLOB, ID_STRUT NUMBER, CD_VERSIONE_XML VARCHAR2(100 BYTE) DEFAULT '1.0', DS_HASH_XML_VERS VARCHAR2(254 BYTE), DS_ALGO_HASH_XML_VERS VARCHAR2(254 BYTE), CD_ENCODING_HASH_XML_VERS VARCHAR2(20 BYTE), DS_URN_XML_VERS VARCHAR2(254 BYTE), FL_CANONICALIZED CHAR(1 BYTE), CONSTRAINT PK_XML_DAT_SES_VRS PRIMARY KEY (ID_XML_DATI_SESSIONE_VERS));

-- changeset root:1751897635013-185
CREATE TABLE ARO_VALORE_ATTRIB_DATI_SPEC (ID_VALORE_ATTRIB_DATI_SPEC NUMBER NOT NULL, ID_USO_XSD_DATI_SPEC NUMBER NOT NULL, ID_ATTRIB_DATI_SPEC NUMBER NOT NULL, DL_VALORE VARCHAR2(4000 BYTE), ID_STRUT NUMBER NOT NULL, CONSTRAINT PK_VL_ATTB_DATI_SPEC PRIMARY KEY (ID_VALORE_ATTRIB_DATI_SPEC));

-- changeset root:1751897635013-186
CREATE TABLE ARO_COMP_DOC (ID_COMP_DOC NUMBER NOT NULL, ID_STRUT_DOC NUMBER NOT NULL, NI_ORD_COMP_DOC NUMBER(5, 0) NOT NULL, TI_SUPPORTO_COMP VARCHAR2(20 BYTE) NOT NULL, ID_TIPO_COMP_DOC NUMBER NOT NULL, DS_NOME_COMP_VERS VARCHAR2(254 BYTE), ID_FORMATO_FILE_VERS NUMBER, ID_TIPO_RAPPR_COMP NUMBER, DS_HASH_FILE_VERS VARCHAR2(254 BYTE), DL_URN_COMP_VERS VARCHAR2(1024 BYTE), DS_ID_COMP_VERS VARCHAR2(254 BYTE), TM_RIF_TEMP_VERS date, DS_RIF_TEMP_VERS VARCHAR2(254 BYTE), FL_RIF_TEMP_DATA_FIRMA_VERS CHAR(1 BYTE), DS_URN_COMP_CALC VARCHAR2(254 BYTE), ID_FORMATO_FILE_CALC NUMBER, DS_HASH_FILE_CALC VARCHAR2(254 BYTE), DS_ALGO_HASH_FILE_CALC VARCHAR2(254 BYTE), CD_ENCODING_HASH_FILE_CALC VARCHAR2(20 BYTE), TI_ESITO_CONTR_FORMATO_FILE VARCHAR2(20 BYTE), FL_COMP_FIRMATO CHAR(1 BYTE), TI_ESITO_VERIF_FIRME VARCHAR2(20 BYTE), DS_MSG_ESITO_VERIF_FIRME VARCHAR2(254 BYTE), NI_SIZE_FILE_CALC NUMBER(19, 0), ID_COMP_DOC_PADRE NUMBER, ID_STRUT NUMBER NOT NULL, DS_MSG_ESITO_CONTR_FORMATO VARCHAR2(1024 BYTE), DS_FORMATO_RAPPR_CALC VARCHAR2(254 BYTE), ID_UNITA_DOC_RIF NUMBER, DS_FORMATO_RAPPR_ESTESO_CALC VARCHAR2(512 BYTE), FL_NO_CALC_FMT_VERIF_FIRME CHAR(1 BYTE), FL_NO_CALC_HASH_FILE CHAR(1 BYTE), DS_NOME_FILE_ARK VARCHAR2(254 BYTE), TI_ESITO_VERIF_FIRME_DT_VERS VARCHAR2(20 BYTE), DS_ESITO_VERIF_FIRME_DT_VERS VARCHAR2(254 BYTE), DS_HASH_FILE_CALC_MD5 VARCHAR2(254 BYTE), DS_ALGO_HASH_FILE_VERS VARCHAR2(254 BYTE), CD_ENCODING_HASH_FILE_VERS VARCHAR2(100 BYTE), DS_HASH_FILE_CONTR VARCHAR2(254 BYTE), TI_ESITO_CONTR_HASH_VERS VARCHAR2(20 BYTE), ID_SERVIZIO_VERIFICA_COMP_DOC NUMBER, CONSTRAINT PK_COMP_DOC PRIMARY KEY (ID_COMP_DOC));

-- changeset root:1751897635013-187
CREATE TABLE ARO_UPD_COMP_UNITA_DOC (ID_UPD_COMP_UNITA_DOC NUMBER NOT NULL, ID_UPD_DOC_UNITA_DOC NUMBER NOT NULL, ID_COMP_DOC NUMBER NOT NULL, DS_NOME_COMP_VERS VARCHAR2(254 BYTE), DL_URN_COMP_VERS VARCHAR2(1024 BYTE), DS_ID_COMP_VERS VARCHAR2(254 BYTE), FL_UPD_DATI_SPEC CHAR(1 BYTE) DEFAULT '0' NOT NULL, FL_UPD_DATI_SPEC_MIGRAZ CHAR(1 BYTE) DEFAULT '0' NOT NULL, CONSTRAINT PK_UPD_COMP_UNITA_DOC PRIMARY KEY (ID_UPD_COMP_UNITA_DOC));

-- changeset root:1751897635013-188
CREATE TABLE ARO_COMP_VER_INDICE_AIP_UD (ID_COMP_VER_INDICE_AIP_UD NUMBER NOT NULL, ID_VER_INDICE_AIP NUMBER NOT NULL, ID_COMP_DOC NUMBER NOT NULL, CONSTRAINT PK_COMP_VER_IX_AIP_UD PRIMARY KEY (ID_COMP_VER_INDICE_AIP_UD));

-- changeset root:1751897635013-189
CREATE TABLE ARO_COMP_URN_CALC (ID_COMP_URN_CALC NUMBER NOT NULL, ID_COMP_DOC NUMBER NOT NULL, TI_URN VARCHAR2(20 BYTE) NOT NULL, DS_URN VARCHAR2(254 BYTE) NOT NULL, CONSTRAINT PK_COMP_URN_CALC PRIMARY KEY (ID_COMP_URN_CALC));

-- changeset root:1751897635013-190
CREATE TABLE ARO_COMP_HASH_CALC (ID_COMP_HASH_CALC NUMBER NOT NULL, ID_COMP_DOC NUMBER NOT NULL, DS_ALGO_HASH_FILE VARCHAR2(30 BYTE) NOT NULL, DS_HASH_FILE VARCHAR2(254 BYTE) NOT NULL, CD_ENCODING_HASH_FILE VARCHAR2(20 BYTE) NOT NULL, CONSTRAINT PK_COMP_HASH_CALC PRIMARY KEY (ID_COMP_HASH_CALC));

-- changeset root:1751897635013-191
CREATE TABLE ARO_MARCA_COMP (ID_MARCA_COMP NUMBER NOT NULL, ID_COMP_DOC NUMBER NOT NULL, PG_MARCA NUMBER NOT NULL, TI_ESITO_CONTR_CONFORME VARCHAR2(30 BYTE) NOT NULL, DS_MSG_ESITO_CONTR_CONFORME VARCHAR2(254 BYTE) NOT NULL, TI_MARCA_TEMP VARCHAR2(20 BYTE), DS_MARCA_BASE64 VARCHAR2(2048 BYTE), DS_ALGO_MARCA VARCHAR2(254 BYTE), TM_MARCA_TEMP date, TI_FORMATO_MARCA VARCHAR2(20 BYTE), ID_CERTIF_CA NUMBER, DT_SCAD_MARCA date, TI_ESITO_VERIF_MARCA VARCHAR2(20 BYTE), DS_MSG_ESITO_VERIF_MARCA VARCHAR2(254 BYTE), PG_BUSTA NUMBER, ID_BUSTA_CRITTOG NUMBER NOT NULL, DS_NOTE VARCHAR2(4000 BYTE), CONSTRAINT PK_MRK_COMP PRIMARY KEY (ID_MARCA_COMP));

-- changeset root:1751897635013-192
CREATE TABLE ARO_BUSTA_CRITTOG (ID_BUSTA_CRITTOG NUMBER NOT NULL, ID_COMP_DOC NUMBER NOT NULL, PG_BUSTA_CRITTOG NUMBER NOT NULL, ID_FORMATO_FILE_CALC NUMBER, ID_STRUT NUMBER NOT NULL, CONSTRAINT PK_BUSTA_CRIT PRIMARY KEY (ID_BUSTA_CRITTOG));

-- changeset root:1751897635013-193 splitStatements:true
CREATE TABLE ARO_COMP_OBJECT_STORAGE (ID_COMP_OBJECT_STORAGE NUMBER NOT NULL, ID_COMP_DOC NUMBER NOT NULL, NM_TENANT VARCHAR2(100 BYTE), NM_BUCKET VARCHAR2(100 BYTE), CD_KEY_FILE VARCHAR2(254 BYTE), ID_DEC_BACKEND NUMBER DEFAULT (2) NOT NULL, CONSTRAINT PK_COMP_OBJ_STO PRIMARY KEY (ID_COMP_OBJECT_STORAGE));
COMMENT ON COLUMN ARO_COMP_OBJECT_STORAGE.ID_DEC_BACKEND IS 'FK verso DEC_BACKEND sull''id del backend utilizzato (sicuramente di tipo OS)';

-- changeset root:1751897635013-194
CREATE TABLE ARO_FIRMA_COMP (ID_FIRMA_COMP NUMBER NOT NULL, ID_COMP_DOC NUMBER NOT NULL, CD_FIRMATARIO VARCHAR2(100 BYTE), NM_COGNOME_FIRMATARIO VARCHAR2(100 BYTE), NM_FIRMATARIO VARCHAR2(100 BYTE), TI_FIRMA VARCHAR2(20 BYTE) DEFAULT 'DIGITALE', TI_ESITO_CONTR_CONFORME VARCHAR2(30 BYTE) NOT NULL, DS_MSG_ESITO_CONTR_CONFORME VARCHAR2(1024 BYTE) NOT NULL, DS_FIRMA_BASE64 VARCHAR2(4000 BYTE), DS_ALGO_FIRMA VARCHAR2(254 BYTE), TI_FORMATO_FIRMA VARCHAR2(20 BYTE), ID_CERTIF_FIRMATARIO NUMBER, DT_FIRMA date, TM_RIF_TEMP_USATO date, TI_RIF_TEMP_USATO VARCHAR2(20 BYTE), TI_ESITO_VERIF_FIRMA VARCHAR2(20 BYTE), DS_MSG_ESITO_VERIF_FIRMA VARCHAR2(254 BYTE), ID_STRUT NUMBER NOT NULL, ID_MARCA_COMP NUMBER, PG_FIRMA NUMBER NOT NULL, PG_BUSTA NUMBER, DL_DN_FIRMATARIO VARCHAR2(1024 BYTE), ID_BUSTA_CRITTOG NUMBER NOT NULL, BL_FIRMA_BASE64 CLOB, DS_NOTE VARCHAR2(4000 BYTE), CONSTRAINT PK_FIR_COMP PRIMARY KEY (ID_FIRMA_COMP));

-- changeset root:1751897635013-195
CREATE TABLE ARO_CONTR_FIRMA_COMP (ID_CONTR_FIRMA_COMP NUMBER NOT NULL, ID_FIRMA_COMP NUMBER NOT NULL, TI_CONTR VARCHAR2(30 BYTE) NOT NULL, TI_ESITO_CONTR_FIRMA VARCHAR2(30 BYTE) NOT NULL, DS_MSG_ESITO_CONTR_FIRMA VARCHAR2(1024 BYTE) NOT NULL, ID_CRL_USATA NUMBER, ID_OCSP_USATA NUMBER, CONSTRAINT PK_CTR_FIR_COMP PRIMARY KEY (ID_CONTR_FIRMA_COMP));

-- changeset root:1751897635013-196
CREATE TABLE ARO_CONTR_MARCA_COMP (ID_CONTR_MARCA_COMP NUMBER NOT NULL, ID_MARCA_COMP NUMBER NOT NULL, TI_CONTR VARCHAR2(20 BYTE) NOT NULL, TI_ESITO_CONTR_MARCA VARCHAR2(30 BYTE) NOT NULL, DS_MSG_ESITO_CONTR_MARCA VARCHAR2(1024 BYTE) NOT NULL, ID_CRL_USATA NUMBER, ID_OCSP_USATA NUMBER, CONSTRAINT PK_CTR_MRK_COMP PRIMARY KEY (ID_CONTR_MARCA_COMP));

-- changeset root:1751897635013-197
CREATE TABLE ARO_VERIF_FIRMA_DT_VERS (ID_VERIF_FIRMA_DT_VERS NUMBER NOT NULL, ID_FIRMA_COMP NUMBER NOT NULL, TI_ESITO_VERIF_FIRMA VARCHAR2(20 BYTE) NOT NULL, DS_MSG_ESITO_VERIF_FIRMA VARCHAR2(254 BYTE) NOT NULL, CONSTRAINT PK_VER_FIR_DTVERS PRIMARY KEY (ID_VERIF_FIRMA_DT_VERS));

-- changeset root:1751897635013-198
CREATE TABLE ARO_CONTROFIRMA_FIRMA (ID_CONTROFIRMA_FIRMA NUMBER NOT NULL, ID_FIRMA_FIGLIO NUMBER NOT NULL, ID_FIRMA_PADRE NUMBER NOT NULL, CONSTRAINT PK_CONTFIR_FIR PRIMARY KEY (ID_CONTROFIRMA_FIRMA));

-- changeset root:1751897635013-199
CREATE TABLE ARO_USO_CERTIF_CA_CONTR_COMP (ID_USO_CERTIF_CA_CONTR_COMP NUMBER NOT NULL, ID_CONTR_FIRMA_COMP NUMBER NOT NULL, ID_CERTIF_CA NUMBER NOT NULL, PG_CERTIF_CA NUMBER NOT NULL, ID_CRL_USATA NUMBER, ID_OCSP_USATA NUMBER, CONSTRAINT PK_CA_CTR_COMP PRIMARY KEY (ID_USO_CERTIF_CA_CONTR_COMP));

-- changeset root:1751897635013-200
CREATE TABLE ARO_USO_CERTIF_CA_CONTR_MARCA (ID_USO_CERTIF_CA_CONTR_MARCA NUMBER NOT NULL, ID_CONTR_MARCA_COMP NUMBER NOT NULL, ID_CERTIF_CA NUMBER NOT NULL, PG_CERTIF_CA NUMBER NOT NULL, ID_CRL_USATA NUMBER, ID_OCSP_USATA NUMBER, CONSTRAINT PK_CA_CTR_MRK PRIMARY KEY (ID_USO_CERTIF_CA_CONTR_MARCA));

-- changeset root:1751897635013-201
CREATE TABLE ARO_CONTR_VERIF_FIRMA_DT_VERS (ID_CONTR_VERIF_FIRMA_DT_VERS NUMBER NOT NULL, ID_VERIF_FIRMA_DT_VERS NUMBER NOT NULL, TI_CONTR VARCHAR2(20 BYTE) NOT NULL, TI_ESITO_CONTR_VERIF VARCHAR2(30 BYTE) NOT NULL, DS_MSG_CONTR_VERIF VARCHAR2(1024 BYTE) NOT NULL, ID_CRL_USATA NUMBER, ID_OCSP_USATA NUMBER, CONSTRAINT PK_CTR_VER_FIR_DTVERS PRIMARY KEY (ID_CONTR_VERIF_FIRMA_DT_VERS));

-- changeset root:1751897635013-202
CREATE TABLE ORG_CHK_STRUT_PARTITION (ID_STRUT NUMBER NOT NULL, FL_PART_OK CHAR(1 BYTE), CONSTRAINT IDX_PK PRIMARY KEY (ID_STRUT));

-- changeset root:1751897635013-203
CREATE TABLE ARO_UNITA_DOC (ID_UNITA_DOC NUMBER NOT NULL, ID_STRUT NUMBER, CD_REGISTRO_KEY_UNITA_DOC VARCHAR2(100 BYTE) NOT NULL, AA_KEY_UNITA_DOC NUMBER(4, 0) NOT NULL, CD_KEY_UNITA_DOC VARCHAR2(100 BYTE) NOT NULL, DT_ANNUL date DEFAULT to_date('31/12/2444', 'dd/mm/yyyy') NOT NULL, ID_SUB_STRUT NUMBER NOT NULL, TI_ANNUL VARCHAR2(20 BYTE), ID_TIPO_UNITA_DOC NUMBER NOT NULL, FL_FORZA_ACCETTAZIONE CHAR(1 BYTE) NOT NULL, FL_FORZA_CONSERVAZIONE CHAR(1 BYTE) NOT NULL, FL_FORZA_COLLEGAMENTO CHAR(1 BYTE) NOT NULL, DT_CREAZIONE date NOT NULL, FL_CARTACEO CHAR(1 BYTE) DEFAULT '0' NOT NULL, NI_ALLEG NUMBER(4, 0) NOT NULL, NI_ANNESSI NUMBER(4, 0) NOT NULL, NI_ANNOT NUMBER(4, 0) NOT NULL, FL_UNITA_DOC_FIRMATO CHAR(1 BYTE) NOT NULL, TI_ESITO_VERIF_FIRME VARCHAR2(20 BYTE), DS_MSG_ESITO_VERIF_FIRME VARCHAR2(254 BYTE), DS_CLASSIF_PRINC VARCHAR2(254 BYTE), CD_FASCIC_PRINC VARCHAR2(4000 BYTE), DS_OGGETTO_FASCIC_PRINC VARCHAR2(4000 BYTE), CD_SOTTOFASCIC_PRINC VARCHAR2(4000 BYTE), DS_OGGETTO_SOTTOFASCIC_PRINC VARCHAR2(4000 BYTE), DL_OGGETTO_UNITA_DOC VARCHAR2(4000 BYTE), DT_REG_UNITA_DOC date, DS_UFF_COMP_UNITA_DOC VARCHAR2(254 BYTE), TI_CONSERVAZIONE VARCHAR2(25 BYTE) DEFAULT 'SOSTITUTIVA' NOT NULL, ID_USER_VERS NUMBER NOT NULL, DS_KEY_ORD VARCHAR2(100 BYTE) NOT NULL, ID_REGISTRO_UNITA_DOC NUMBER NOT NULL, NM_SISTEMA_MIGRAZ VARCHAR2(100 BYTE), NT_UNITA_DOC VARCHAR2(2000 BYTE), NT_ANNUL VARCHAR2(2000 BYTE), TI_STATO_UD_ELENCO_VERS VARCHAR2(50 BYTE), ID_ELENCO_VERS NUMBER, TI_STATO_CONSERVAZIONE VARCHAR2(30 BYTE) DEFAULT 'PRESA_IN_CARICO' NOT NULL, PG_UNITA_DOC NUMBER, FL_SEQUESTRO CHAR(1 BYTE), CD_KEY_UNITA_DOC_NORMALIZ VARCHAR2(100 BYTE), TS_STATO_ELENCO_VERS TIMESTAMP(6), NI_RESET_STATO NUMBER, TS_LAST_RESET_STATO TIMESTAMP(6), CONSTRAINT PK_UNI_DOC PRIMARY KEY (ID_UNITA_DOC));

-- changeset root:1751897635013-204
CREATE TABLE DEC_TIPO_NOTA_UNITA_DOC (ID_TIPO_NOTA_UNITA_DOC NUMBER NOT NULL, CD_TIPO_NOTA_UNITA_DOC VARCHAR2(100 BYTE) NOT NULL, DS_TIPO_NOTA_UNITA_DOC VARCHAR2(254 BYTE) NOT NULL, FL_OBBLIG CHAR(1 BYTE) DEFAULT '0' NOT NULL, FL_MOLT CHAR(1 BYTE) NOT NULL, NI_ORD NUMBER NOT NULL, CONSTRAINT PK_TI_NOT_UD PRIMARY KEY (ID_TIPO_NOTA_UNITA_DOC));

-- changeset root:1751897635013-205
CREATE TABLE ARO_NOTA_UNITA_DOC (ID_NOTA_UNITA_DOC NUMBER NOT NULL, ID_UNITA_DOC NUMBER NOT NULL, ID_VER_INDICE_AIP NUMBER, ID_TIPO_NOTA_UNITA_DOC NUMBER NOT NULL, PG_NOTA_UNITA_DOC NUMBER NOT NULL, DT_NOTA_UNITA_DOC date NOT NULL, DS_NOTA_UNITA_DOC VARCHAR2(1024 BYTE) NOT NULL, ID_USER_IAM NUMBER NOT NULL, CONSTRAINT PK_NOT_UD PRIMARY KEY (ID_NOTA_UNITA_DOC));

-- changeset root:1751897635013-206
CREATE TABLE TMP_STRUT_ANNO_DA_ELAB_2 (ID_STRUT NUMBER NOT NULL, AA_DA_ELAB NUMBER NOT NULL, TI_STATO_DA_ELAB_CALC_URN_INI VARCHAR2(30 BYTE) NOT NULL);

-- changeset root:1751897635013-207
CREATE TABLE TMP_CALC_URN_INI_DA_ELAB (ID_STRUT NUMBER NOT NULL, AA_DA_ELAB NUMBER NOT NULL, ID_DOC NUMBER NOT NULL, ID_COMP_DOC NUMBER NOT NULL);

-- changeset root:1751897635013-208
CREATE TABLE ARO_XML_UPD_UNITA_DOC (ID_XML_UPD_UNITA_DOC NUMBER NOT NULL, ID_UPD_UNITA_DOC NUMBER NOT NULL, TI_XML_UPD_UNITA_DOC VARCHAR2(20 BYTE) NOT NULL, BL_XML CLOB, CD_VERSIONE_XML VARCHAR2(100 BYTE) DEFAULT '1.0' NOT NULL, DS_HASH_XML VARCHAR2(254 BYTE) NOT NULL, DS_ALGO_HASH_XML VARCHAR2(254 BYTE) NOT NULL, CD_ENCODING_HASH_XML VARCHAR2(20 BYTE) NOT NULL, DS_URN_XML VARCHAR2(254 BYTE) NOT NULL, ID_STRUT NUMBER NOT NULL, DT_INI_SES date NOT NULL, DS_URN_NORMALIZ_XML VARCHAR2(254 BYTE) NOT NULL, AA_INI_SES NUMBER(4, 0), CONSTRAINT PK_XML_UPD_UNITA_DOC PRIMARY KEY (ID_XML_UPD_UNITA_DOC));

-- changeset root:1751897635013-209
CREATE TABLE VRS_UPD_UNITA_DOC_KO (ID_UPD_UNITA_DOC_KO NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, CD_REGISTRO_KEY_UNITA_DOC VARCHAR2(100 BYTE) NOT NULL, AA_KEY_UNITA_DOC NUMBER(4, 0) NOT NULL, CD_KEY_UNITA_DOC VARCHAR2(100 BYTE) NOT NULL, ID_TIPO_UNITA_DOC_LAST NUMBER NOT NULL, ID_REGISTRO_UNITA_DOC_LAST NUMBER NOT NULL, ID_TIPO_DOC_PRINC_LAST NUMBER NOT NULL, TS_INI_FIRST_SES TIMESTAMP(6) NOT NULL, TS_INI_LAST_SES TIMESTAMP(6) NOT NULL, ID_ERR_SACER_PRINC NUMBER, DS_ERR_PRINC VARCHAR2(4000 BYTE) NOT NULL, ID_CONTROLLO_WS_PRINC NUMBER, TI_STATO_UDP_UD_KO VARCHAR2(20 BYTE) NOT NULL, ID_SES_UPD_UD_KO_FIRST NUMBER, ID_SES_UPD_UD_KO_LAST NUMBER, CONSTRAINT PK_UPD_UD_KO PRIMARY KEY (ID_UPD_UNITA_DOC_KO));

-- changeset root:1751897635013-210 splitStatements:true
CREATE TABLE DEC_SERVIZIO_VERIFICA_COMP_DOC (ID_SERVIZIO_VERIFICA_COMP_DOC NUMBER NOT NULL, CD_SERVIZIO VARCHAR2(20 BYTE) NOT NULL, NM_VERSIONE VARCHAR2(20 BYTE) NOT NULL, DS_SERVIZIO_VERIFICA_COMP_DOC VARCHAR2(200 BYTE) NOT NULL, CONSTRAINT PK_SERVIZIOVERIFICACOMPDOC PRIMARY KEY (ID_SERVIZIO_VERIFICA_COMP_DOC));
COMMENT ON COLUMN DEC_SERVIZIO_VERIFICA_COMP_DOC.ID_SERVIZIO_VERIFICA_COMP_DOC IS 'Primary key.Pilotata dalla sequence SDEC_SERVIZIO_VERIFICA_COMP_DOC';
COMMENT ON COLUMN DEC_SERVIZIO_VERIFICA_COMP_DOC.CD_SERVIZIO IS 'Codice del servizio di verifica del componente';
COMMENT ON COLUMN DEC_SERVIZIO_VERIFICA_COMP_DOC.NM_VERSIONE IS 'Versione del servizio di verifica del componente';
COMMENT ON COLUMN DEC_SERVIZIO_VERIFICA_COMP_DOC.DS_SERVIZIO_VERIFICA_COMP_DOC IS 'Descrizione del servizio di verifica del componente';

-- changeset root:1751897635013-211
CREATE TABLE ELV_ELENCO_VERS_DA_ELAB (ID_ELENCO_VERS_DA_ELAB NUMBER NOT NULL, ID_ELENCO_VERS NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, TI_STATO_ELENCO VARCHAR2(40 BYTE) NOT NULL, ID_CRITERIO_RAGGR NUMBER NOT NULL, AA_KEY_UNITA_DOC NUMBER(4, 0), TS_STATO_ELENCO TIMESTAMP(6), CONSTRAINT PK_ELE_VRS_DAELB PRIMARY KEY (ID_ELENCO_VERS_DA_ELAB));

-- changeset root:1751897635013-212
CREATE TABLE ELV_FASC_DA_ELAB_ELENCO (ID_FASC_DA_ELAB_ELENCO NUMBER NOT NULL, ID_FASCICOLO NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, AA_FASCICOLO NUMBER(4, 0) NOT NULL, TS_VERS_FASCICOLO TIMESTAMP(6) NOT NULL, TI_STATO_FASC_DA_ELAB VARCHAR2(30 BYTE) NOT NULL, ID_TIPO_FASCICOLO NUMBER NOT NULL, CONSTRAINT PK_FASC_DAELB_ELE PRIMARY KEY (ID_FASC_DA_ELAB_ELENCO));

-- changeset root:1751897635013-213 splitStatements:true
CREATE TABLE FIR_CERTIF_OCSP (ID_CERTIF_OCSP NUMBER NOT NULL, ID_CERTIF_CA NUMBER NOT NULL, NI_SERIAL_CERTIF_OCSP NUMBER, DT_INI_VAL_CERTIF_OCSP date NOT NULL, DT_FIN_VAL_CERTIF_OCSP date NOT NULL, DL_DN_SUBJECT_CERTIF_OCSP VARCHAR2(1024 BYTE) NOT NULL, DS_SERIAL_CERTIF_OCSP VARCHAR2(100 BYTE), CONSTRAINT PK_FIRCERTIFOCSP PRIMARY KEY (ID_CERTIF_OCSP));
COMMENT ON TABLE FIR_CERTIF_OCSP IS 'Tabella per memorizzare i certificarti del firmatario della response OCSP';
COMMENT ON COLUMN FIR_CERTIF_OCSP.ID_CERTIF_OCSP IS 'Primary key. Pilotata dalla sequence SFIR_CERTIF_OCSP';
COMMENT ON COLUMN FIR_CERTIF_OCSP.ID_CERTIF_CA IS 'Foreign key. Punta ad un record della tabella FIR_CERTIF_CA';
COMMENT ON COLUMN FIR_CERTIF_OCSP.NI_SERIAL_CERTIF_OCSP IS 'DEPRECATO-Seriale certificato OCSP Responder';
COMMENT ON COLUMN FIR_CERTIF_OCSP.DT_INI_VAL_CERTIF_OCSP IS 'Data inizio validità certificato OCSP Responder';
COMMENT ON COLUMN FIR_CERTIF_OCSP.DT_FIN_VAL_CERTIF_OCSP IS 'Data fine validità certificato OCSP Responder';
COMMENT ON COLUMN FIR_CERTIF_OCSP.DL_DN_SUBJECT_CERTIF_OCSP IS 'Subject Distinguished Name in formato RFC2253';
COMMENT ON COLUMN FIR_CERTIF_OCSP.DS_SERIAL_CERTIF_OCSP IS 'Seriale certificato OCSP Responder';

-- changeset root:1751897635013-214 splitStatements:true
CREATE TABLE FIR_OCSP (ID_OCSP NUMBER NOT NULL, ID_CERTIF_OCSP NUMBER NOT NULL, DS_CERTIF_ISSUERNAME VARCHAR2(1024 BYTE), DS_CERTIF_SERIAL_BASE64 VARCHAR2(2048 BYTE), DS_CERTIF_SKI_BASE64 VARCHAR2(2048 BYTE), CONSTRAINT PK_FIROCSP PRIMARY KEY (ID_OCSP));
COMMENT ON TABLE FIR_OCSP IS 'Tabella per memorizzare le ocsp response ottenute in fase di verifica firma';
COMMENT ON COLUMN FIR_OCSP.ID_OCSP IS 'Primary key. Pilotata dalla sequence SFIR_OCSP';
COMMENT ON COLUMN FIR_OCSP.ID_CERTIF_OCSP IS 'Foreign key. Punta ad un record della tabella FIR_CERTIF_OCSP';
COMMENT ON COLUMN FIR_OCSP.DS_CERTIF_ISSUERNAME IS 'Contenuto del issuername del certificato che ha firmato la OCSP response';
COMMENT ON COLUMN FIR_OCSP.DS_CERTIF_SERIAL_BASE64 IS 'Contenuto del seriale del certificato che ha firmato la OCSP response in formato base64';
COMMENT ON COLUMN FIR_OCSP.DS_CERTIF_SKI_BASE64 IS 'Contenuto del valore ski estratto dal certificato che ha firmato la OCSP response in formato base64';

-- changeset root:1751897635013-215
CREATE TABLE FAS_META_VER_AIP_FASCICOLO (ID_META_VER_AIP_FASCICOLO NUMBER NOT NULL, ID_VER_AIP_FASCICOLO NUMBER NOT NULL, NM_META VARCHAR2(254 BYTE) NOT NULL, TI_META VARCHAR2(30 BYTE) NOT NULL, TI_FORMATO_META VARCHAR2(30 BYTE), DS_HASH_FILE VARCHAR2(254 BYTE) NOT NULL, DS_ALGO_HASH_FILE VARCHAR2(254 BYTE) NOT NULL, CD_ENCODING_HASH_FILE VARCHAR2(20 BYTE) NOT NULL, DS_URN_META_FASCICOLO VARCHAR2(254 BYTE) NOT NULL, DS_URN_NORMALIZ_META_FASCICOLO VARCHAR2(254 BYTE) NOT NULL, CONSTRAINT PK_META_VER_AIP_FASC PRIMARY KEY (ID_META_VER_AIP_FASCICOLO));

-- changeset root:1751897635013-216
CREATE TABLE FAS_XML_VERS_FASCICOLO (ID_XML_VERS_FASCICOLO NUMBER NOT NULL, ID_FASCICOLO NUMBER NOT NULL, TI_XML_VERS VARCHAR2(20 BYTE) NOT NULL, CD_VERSIONE_XML VARCHAR2(100 BYTE) NOT NULL, BL_XML_VERS CLOB, DS_HASH_XML_VERS VARCHAR2(254 BYTE) NOT NULL, DS_ALGO_HASH_XML_VERS VARCHAR2(254 BYTE) NOT NULL, CD_ENCODING_HASH_XML_VERS VARCHAR2(100 BYTE) NOT NULL, DS_URN_XML_VERS VARCHAR2(254 BYTE) NOT NULL, ID_STRUT NUMBER NOT NULL, DT_VERS_FASCICOLO date NOT NULL, DS_URN_NORMALIZ_XML_VERS VARCHAR2(254 BYTE) NOT NULL, FL_CANONICALIZED CHAR(1 BYTE) DEFAULT '0' NOT NULL, CONSTRAINT PK_FAS_XML_VERS_FASCIOLO PRIMARY KEY (ID_XML_VERS_FASCICOLO));

-- changeset root:1751897635013-217
CREATE TABLE VRS_FASCICOLO_KO (ID_FASCICOLO_KO NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, AA_FASCICOLO NUMBER(4, 0) NOT NULL, CD_KEY_FASCICOLO VARCHAR2(100 BYTE) NOT NULL, TS_INI_FIRST_SES TIMESTAMP(6) NOT NULL, TS_INI_LAST_SES TIMESTAMP(6) NOT NULL, ID_ERR_SACER_PRINC NUMBER, DS_ERR_PRINC VARCHAR2(4000 BYTE) NOT NULL, ID_TIPO_FASCICOLO_LAST NUMBER NOT NULL, TI_STATO_FASCICOLO_KO VARCHAR2(20 BYTE) NOT NULL, ID_SES_FASCICOLO_KO_FIRST NUMBER, ID_SES_FASCICOLO_KO_LAST NUMBER, CONSTRAINT PK_FASC_KO PRIMARY KEY (ID_FASCICOLO_KO));

-- changeset root:1751897635013-218 splitStatements:true
CREATE TABLE DEC_BACKEND (ID_DEC_BACKEND NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL, NM_BACKEND VARCHAR2(100 BYTE) NOT NULL, NM_TIPO_BACKEND VARCHAR2(4 BYTE) NOT NULL, DL_BACKEND_URI VARCHAR2(100 BYTE), DS_DESCRIZIONE_BACKEND VARCHAR2(500 BYTE), CONSTRAINT PK_DEC_BACKEND PRIMARY KEY (ID_DEC_BACKEND));
COMMENT ON TABLE DEC_BACKEND IS 'La tabella di censimento dei backend';
COMMENT ON COLUMN DEC_BACKEND.ID_DEC_BACKEND IS 'PK fisica della tabella autogenerata';
COMMENT ON COLUMN DEC_BACKEND.NM_BACKEND IS 'PK logica della tabella.Il valore deve essere univoco';
COMMENT ON COLUMN DEC_BACKEND.NM_TIPO_BACKEND IS 'Tipologia del backend (vedi vincolo check)';
COMMENT ON COLUMN DEC_BACKEND.DL_BACKEND_URI IS 'URI del backend (se necessario)';
COMMENT ON COLUMN DEC_BACKEND.DS_DESCRIZIONE_BACKEND IS 'Descrizione del backend';

-- changeset root:1751897635013-219
CREATE TABLE VRS_ERR_SESSIONE_VERS_KO (ID_ERR_SESSIONE_VERS_KO NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY NOT NULL, ID_DATI_SESSIONE_VERS_KO NUMBER NOT NULL, PG_ERR_SESSIONE_VERS NUMBER NOT NULL, TI_ERR VARCHAR2(20 BYTE) NOT NULL, DS_ERR VARCHAR2(4000 BYTE) NOT NULL, CD_ERR VARCHAR2(20 BYTE), ID_STRUT NUMBER, FL_ERR_PRINC CHAR(1 BYTE) NOT NULL, CONSTRAINT VRS_ERR_SESSIONE_VERS_KO_PK PRIMARY KEY (ID_ERR_SESSIONE_VERS_KO));

-- changeset root:1751897635013-220
CREATE TABLE VRS_XML_DATI_SESSIONE_VERS_KO (ID_XML_DATI_SESSIONE_VERS_KO NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY NOT NULL, ID_DATI_SESSIONE_VERS_KO NUMBER NOT NULL, TI_XML_DATI VARCHAR2(20 BYTE) NOT NULL, BL_XML CLOB, ID_STRUT NUMBER, CD_VERSIONE_XML VARCHAR2(100 BYTE), DS_HASH_XML_VERS VARCHAR2(254 BYTE), DS_ALGO_HASH_XML_VERS VARCHAR2(254 BYTE), CD_ENCODING_HASH_XML_VERS VARCHAR2(20 BYTE), DS_URN_XML_VERS VARCHAR2(254 BYTE), FL_CANONICALIZED CHAR(1 BYTE), CONSTRAINT VRS_XML_DATI_SESSIONE_VERS_KO_PK PRIMARY KEY (ID_XML_DATI_SESSIONE_VERS_KO));

-- changeset root:1751897635013-221
CREATE TABLE LOG_JOB_HISTORY (ID_LOG_JOB_HIST NUMBER NOT NULL, NM_JOB VARCHAR2(100 BYTE) NOT NULL, TI_REG_LOG_JOB VARCHAR2(20 BYTE) NOT NULL, DT_REG_LOG_JOB date NOT NULL, DL_MSG_ERR VARCHAR2(1024 BYTE), ID_STRUT NUMBER, ID_RECORD NUMBER(*, 0), NM_ENTITY_RECORD VARCHAR2(100 BYTE), CD_IND_SERVER VARCHAR2(100 BYTE), DT_VIRTUAL_REG VARCHAR2(10 BYTE) GENERATED ALWAYS AS (TO_CHAR(DT_REG_LOG_JOB,'yyyymmddhh24')), CONSTRAINT PK_LOG_JOB_HISTORY PRIMARY KEY (ID_LOG_JOB_HIST));

-- changeset root:1751897635013-222
CREATE TABLE ELV_LOG_ELENCO_VERS_HISTORY (ID_LOG_ELENCO_VERS_HIST NUMBER NOT NULL, ID_USER NUMBER, ID_ELENCO_VERS NUMBER NOT NULL, TM_OPER TIMESTAMP(6) NOT NULL, TI_OPER VARCHAR2(50 BYTE) NOT NULL, NM_ELENCO VARCHAR2(100 BYTE) NOT NULL, ID_STRUT NUMBER NOT NULL, ID_LOG_JOB NUMBER, CD_REGISTRO_KEY_UNITA_DOC VARCHAR2(100 BYTE), AA_KEY_UNITA_DOC NUMBER(4, 0), CD_KEY_UNITA_DOC VARCHAR2(100 BYTE), TI_DOC VARCHAR2(20 BYTE), PG_DOC NUMBER, PG_UPD_UNITA_DOC NUMBER, CONSTRAINT PK_LOG_ELE_VRS_HIST PRIMARY KEY (ID_LOG_ELENCO_VERS_HIST));

-- changeset root:1751897635013-223
CREATE TABLE FIR_ISSUER (ID_ISSUER NUMBER NOT NULL, DL_DN_ISSUER_CERTIF_CA VARCHAR2(1024 BYTE) NOT NULL, CONSTRAINT PK_ISS PRIMARY KEY (ID_ISSUER));

-- changeset root:1751897635013-224
CREATE OR REPLACE FORCE VIEW "ORG_V_CHK_TIME_PARTITION_FASC_DA_DROPPARE" ("ID_STRUT", "FL_PART_FASC_OK", "CD_PARTITION_FASC", "FL_PART_FASC_ANNO_OK", "FL_PART_FASCKO_OK", "CD_PARTITION_FASCKO", "FL_PART_FASCKO_ANNO_OK", "FL_PART_SESFASCKO_OK", "CD_PARTITION_SESFASCKO", "FL_PART_SESFASCKO_ANNO_OK", "FL_PART_XMLVERSFASC_OK", "CD_PARTITION_XMLVERSFASC", "FL_PART_XMLVERSFASC_DATA_OK", "FL_PART_XMLFASC_OK", "CD_PARTITION_XMLFASC", "FL_PART_XMLFASC_DATA_OK", "FL_PART_XMLSESFASCKO_OK", "CD_PARTITION_XMLSESFASCKO", "FL_PART_XMLSESFASCKO_DATA_OK", "FL_PART_FILEELEVRSFASC_OK", "CD_PARTITION_FILEELEVRSFASC", "FL_PART_FILEELEVRSFASC_DATA_OK", "FL_PART_SESFASCERR_OK", "CD_PARTITION_SESFASCERR") AS select
 tmp.id_strut,

 tmp.fl_part_fasc_ok,
 tmp.cd_partition_fasc,
 case															-- verifica se per ogni anno la sub-partizione per FAS_FASCICOLO e' definita 
	when (select ds_valore_param_applic
		  from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then '1'
		else
			case
				when tmp.fl_part_fasc_ok = '1'
					then
						case
							when tmp.cd_partition_fasc is not null
								then 
									case
										when exists (select *
													 from DEC_TIPO_FASCICOLO ti_fasc
													 join DEC_AA_TIPO_FASCICOLO aa_ti_fasc
													  on (aa_ti_fasc.id_tipo_fascicolo = ti_fasc.id_tipo_fascicolo)
													 join DEC_AA_VAL aa
													  on (aa.aa_val >= aa_ti_fasc.aa_ini_tipo_fascicolo
													  and aa.aa_val <= 	case
																			when aa_ti_fasc.aa_fin_tipo_fascicolo = 2444
																				then to_number(substr(to_char (sysdate, 'dd/mm/yyyy'), 7))
																				else aa_ti_fasc.aa_fin_tipo_fascicolo
																		end
														  )
													 where ti_fasc.id_strut = tmp.id_strut
													 and ti_fasc.nm_tipo_fascicolo != 'Tipo fascicolo sconosciuto'
													)
											then 
												case
													when exists (select *
																 from DEC_TIPO_FASCICOLO ti_fasc
																 join DEC_AA_TIPO_FASCICOLO aa_ti_fasc
																  on (aa_ti_fasc.id_tipo_fascicolo = ti_fasc.id_tipo_fascicolo)
																 join DEC_AA_VAL aa
																  on (aa.aa_val >= aa_ti_fasc.aa_ini_tipo_fascicolo
																  and aa.aa_val <= 	case
																						when aa_ti_fasc.aa_fin_tipo_fascicolo = 2444
																							then to_number(substr(to_char (sysdate, 'dd/mm/yyyy'), 7))
																							else aa_ti_fasc.aa_fin_tipo_fascicolo
																					end
																	  )
																 where ti_fasc.id_strut = tmp.id_strut
																 and ti_fasc.nm_tipo_fascicolo != 'Tipo fascicolo sconosciuto'
																 and not exists (select *
																				  from ORG_PARTITION part
																				  join ORG_SUB_PARTITION subpart
																				   on (subpart.id_partition = part.id_partition)
																				  join ORG_VAL_SUB_PARTITION val_subpart
																				   on (val_subpart.id_sub_partition = subpart.id_sub_partition
																				   and val_subpart.id_partition = part.id_partition
																				   and to_number(val_subpart.cd_val_sub_partition) = aa.aa_val)
																				  where part.ti_partition = 'FASCICOLO'
																				  and part.cd_partition = tmp.cd_partition_fasc
																				)
																)
															then '0'					-- esiste anno su tipo fascicolo e tale anno non sottopartizionato
															else '1'
												end
											else '0'									-- non esiste anno su tipo fascicolo
									end
								else '1'												-- controllo partizione per struttura fallito e partizione nulla; 
																						-- si assume partizione definita (caso in cui non si usano le partizioni)
						end
					else '0'															-- controllo partizione per struttura fallito
			end
 end fl_part_fasc_anno_ok,

 tmp.fl_part_fascko_ok,
 tmp.cd_partition_fascko, 
 case															-- verifica se per ogni anno la sub-partizione per VRS_FASCICOLO_KO e' definita 
	when (select ds_valore_param_applic
		  from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then '1'
		else
			case
				when tmp.fl_part_fascko_ok = '1'
					then
						case
							when tmp.cd_partition_fascko is not null
								then 
									case
										when exists (select *
													 from DEC_TIPO_FASCICOLO ti_fasc
													 join DEC_AA_TIPO_FASCICOLO aa_ti_fasc
													  on (aa_ti_fasc.id_tipo_fascicolo = ti_fasc.id_tipo_fascicolo)
													 join DEC_AA_VAL aa
													  on (aa.aa_val >= aa_ti_fasc.aa_ini_tipo_fascicolo
													  and aa.aa_val <= 	case
																			when aa_ti_fasc.aa_fin_tipo_fascicolo = 2444
																				then to_number(substr(to_char (sysdate, 'dd/mm/yyyy'), 7))
																				else aa_ti_fasc.aa_fin_tipo_fascicolo
																		end
														 )
													 where ti_fasc.id_strut = tmp.id_strut
													 and ti_fasc.nm_tipo_fascicolo != 'Tipo fascicolo sconosciuto'
													)
											then 
												case
													when exists (select *
																 from DEC_TIPO_FASCICOLO ti_fasc
																 join DEC_AA_TIPO_FASCICOLO aa_ti_fasc
																  on (aa_ti_fasc.id_tipo_fascicolo = ti_fasc.id_tipo_fascicolo)
																 join DEC_AA_VAL aa
																  on (aa.aa_val >= aa_ti_fasc.aa_ini_tipo_fascicolo
																  and aa.aa_val <= 	case
																						when aa_ti_fasc.aa_fin_tipo_fascicolo = 2444
																							then to_number(substr(to_char (sysdate, 'dd/mm/yyyy'), 7))
																							else aa_ti_fasc.aa_fin_tipo_fascicolo
																					end
																	  )
																 where ti_fasc.id_strut = tmp.id_strut
																 and ti_fasc.nm_tipo_fascicolo != 'Tipo fascicolo sconosciuto'
																 and not exists (select *
																				  from ORG_PARTITION part
																				  join ORG_SUB_PARTITION subpart
																				   on (subpart.id_partition = part.id_partition)
																				  join ORG_VAL_SUB_PARTITION val_subpart
																				   on (val_subpart.id_sub_partition = subpart.id_sub_partition
																				   and val_subpart.id_partition = part.id_partition
																				   and to_number(val_subpart.cd_val_sub_partition) = aa.aa_val)
																				  where part.ti_partition = 'FASCICOLO_KO'
																				  and part.cd_partition = tmp.cd_partition_fascko
																				)
																)
															then '0'					-- esiste anno su tipo fascicolo e tale anno non sottopartizionato
															else '1'
												end
											else '0'									-- non esiste anno su tipo fascicolo
									end
								else '1'												-- controllo partizione per struttura fallito e partizione nulla; 
																						-- si assume partizione definita (caso in cui non si usano le partizioni)
						end
					else '0'															-- controllo partizione per struttura fallito
			end
 end fl_part_fascko_anno_ok,

 tmp.fl_part_sesfascko_ok,
 tmp.cd_partition_sesfascko, 
 case															-- verifica se per ogni anno la sub-partizione per VRS_SES_FASCICOLO_KO e' definita 
	when (select ds_valore_param_applic
		  from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then '1'
		else
			case
				when tmp.fl_part_sesfascko_ok = '1'
					then
						case
							when tmp.cd_partition_fascko is not null
								then 
									case
										when exists (select *
													 from DEC_TIPO_FASCICOLO ti_fasc
													 join DEC_AA_TIPO_FASCICOLO aa_ti_fasc
													  on (aa_ti_fasc.id_tipo_fascicolo = ti_fasc.id_tipo_fascicolo)
													 join DEC_AA_VAL aa
													  on (aa.aa_val >= aa_ti_fasc.aa_ini_tipo_fascicolo
													  and aa.aa_val <= 	case
																			when aa_ti_fasc.aa_fin_tipo_fascicolo = 2444
																				then to_number(substr(to_char (sysdate, 'dd/mm/yyyy'), 7))
																				else aa_ti_fasc.aa_fin_tipo_fascicolo
																		end
														  )
													 where ti_fasc.id_strut = tmp.id_strut
													 and ti_fasc.nm_tipo_fascicolo != 'Tipo fascicolo sconosciuto'
													)
											then 
												case
													when exists (select *
																 from DEC_TIPO_FASCICOLO ti_fasc
																 join DEC_AA_TIPO_FASCICOLO aa_ti_fasc
																  on (aa_ti_fasc.id_tipo_fascicolo = ti_fasc.id_tipo_fascicolo)
																 join DEC_AA_VAL aa
																  on (aa.aa_val >= aa_ti_fasc.aa_ini_tipo_fascicolo
																  and aa.aa_val <= 	case
																						when aa_ti_fasc.aa_fin_tipo_fascicolo = 2444
																							then to_number(substr(to_char (sysdate, 'dd/mm/yyyy'), 7))
																							else aa_ti_fasc.aa_fin_tipo_fascicolo
																					end
																	 )
																 where ti_fasc.id_strut = tmp.id_strut
																 and ti_fasc.nm_tipo_fascicolo != 'Tipo fascicolo sconosciuto'
																 and not exists (select *
																				  from ORG_PARTITION part
																				  join ORG_SUB_PARTITION subpart
																				   on (subpart.id_partition = part.id_partition)
																				  join ORG_VAL_SUB_PARTITION val_subpart
																				   on (val_subpart.id_sub_partition = subpart.id_sub_partition
																				   and val_subpart.id_partition = part.id_partition
																				   and to_number(val_subpart.cd_val_sub_partition) = aa.aa_val)
																				  where part.ti_partition = 'SES_FASCICOLO_KO'
																				  and part.cd_partition = tmp.cd_partition_sesfascko
																				)
																)
															then '0'					-- esiste anno su tipo fascicolo e tale anno non sottopartizionato
															else '1'
												end
											else '0'									-- non esiste anno su tipo fascicolo
									end
								else '1'												-- controllo partizione per struttura fallito e partizione nulla; 
																						-- si assume partizione definita (caso in cui non si usano le partizioni)
						end
					else '0'															-- controllo partizione per struttura fallito
			end
 end fl_part_sesfascko_anno_ok,


 tmp.fl_part_xmlversfasc_ok,
 tmp.cd_partition_xmlversfasc, 
 case															-- verifica se a data corrente la sub-partizione per FAS_XML_VERS_FASCICOLO e' definita 
	when (select ds_valore_param_applic
		  from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then '1'
		else
			case
				when tmp.fl_part_xmlversfasc_ok = '1'
					then
						case
							when tmp.cd_partition_xmlversfasc is not null
								then 
									case
										when not exists (select *
														 from ORG_PARTITION part
														 join ORG_SUB_PARTITION subpart
														  on (subpart.id_partition = part.id_partition)
														 join ORG_VAL_SUB_PARTITION val_subpart
														  on (val_subpart.id_sub_partition = subpart.id_sub_partition
														  and val_subpart.id_partition = part.id_partition
														  and to_date(val_subpart.cd_val_sub_partition, 'dd/mm/yyyy') > trunc(sysdate))
														 where part.ti_partition = 'XML_VERS_FASCICOLO'
														 and part.cd_partition = tmp.cd_partition_xmlversfasc
														)
											then '0'
											else '1'
									end
								else '1'												-- controllo partizione per struttura fallito e partizione nulla; 
																						-- si assume partizione definita (caso in cui non si usano le partizioni)
						end
					else '0'															-- controllo partizione per struttura fallito
			end
 end fl_part_xmlversfasc_data_ok,


 tmp.fl_part_xmlfasc_ok,
 tmp.cd_partition_xmlfasc, 
 case															-- verifica se a data corrente la sub-partizione per FAS_XML_FASCICOLO e' definita 
	when (select ds_valore_param_applic
		  from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then '1'
		else
			case
				when tmp.fl_part_xmlfasc_ok = '1'
					then
						case
							when tmp.cd_partition_xmlfasc is not null
								then 
									case
										when not exists (select *
														 from ORG_PARTITION part
														 join ORG_SUB_PARTITION subpart
														  on (subpart.id_partition = part.id_partition)
														 join ORG_VAL_SUB_PARTITION val_subpart
														  on (val_subpart.id_sub_partition = subpart.id_sub_partition
														  and val_subpart.id_partition = part.id_partition
														  and to_date(val_subpart.cd_val_sub_partition, 'dd/mm/yyyy') > trunc(sysdate))
														 where part.ti_partition = 'XML_FASCICOLO'
														 and part.cd_partition = tmp.cd_partition_xmlfasc
														)
											then '0'
											else '1'
									end
								else '1'												-- controllo partizione per struttura fallito e partizione nulla; 
																						-- si assume partizione definita (caso in cui non si usano le partizioni)
						end
					else '0'															-- controllo partizione per struttura fallito
			end
 end fl_part_xmlfasc_data_ok,


 tmp.fl_part_xmlsesfascko_ok,
 tmp.cd_partition_xmlsesfascko, 
 case															-- verifica se a data corrente la sub-partizione per VRS_XML_SES_FASCICOLO_KO e' definita 
	when (select ds_valore_param_applic
		  from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then '1'
		else
			case
				when tmp.fl_part_xmlsesfascko_ok = '1'
					then
						case
							when tmp.cd_partition_xmlsesfascko is not null
								then 
									case
										when not exists (select *
														 from ORG_PARTITION part
														 join ORG_SUB_PARTITION subpart
														  on (subpart.id_partition = part.id_partition)
														 join ORG_VAL_SUB_PARTITION val_subpart
														  on (val_subpart.id_sub_partition = subpart.id_sub_partition
														  and val_subpart.id_partition = part.id_partition
														  and to_date(val_subpart.cd_val_sub_partition, 'dd/mm/yyyy') > trunc(sysdate))
														 where part.ti_partition = 'XML_SES_FASCICOLO_KO'
														 and part.cd_partition = tmp.cd_partition_xmlsesfascko
														)
											then '0'
											else '1'
									end
								else '1'												-- controllo partizione per struttura fallito e partizione nulla; 
																						-- si assume partizione definita (caso in cui non si usano le partizioni)
						end
					else '0'															-- controllo partizione per struttura fallito
			end
 end fl_part_xmlsesfascko_data_ok,


 tmp.fl_part_fileelevrsfasc_ok,
 tmp.cd_partition_fileelevrsfasc, 
 case															-- verifica se a data corrente la sub-partizione per ELV_FILE_ELENCO_VERS_FASC e' definita 
	when (select ds_valore_param_applic
		  from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then '1'
		else
			case
				when tmp.fl_part_fileelevrsfasc_ok = '1'
					then
						case
							when tmp.cd_partition_fileelevrsfasc is not null
								then 
									case
										when not exists (select *
														 from ORG_PARTITION part
														 join ORG_SUB_PARTITION subpart
														  on (subpart.id_partition = part.id_partition)
														 join ORG_VAL_SUB_PARTITION val_subpart
														  on (val_subpart.id_sub_partition = subpart.id_sub_partition
														  and val_subpart.id_partition = part.id_partition
														  and to_date(val_subpart.cd_val_sub_partition, 'dd/mm/yyyy') > trunc(sysdate))
														 where part.ti_partition = 'FILE_ELENCO_VERS_FASC'
														 and part.cd_partition = tmp.cd_partition_fileelevrsfasc
														)
											then '0'
											else '1'
									end
								else '1'												-- controllo partizione per struttura fallito e partizione nulla; 
																						-- si assume partizione definita (caso in cui non si usano le partizioni)
						end
					else '0'															-- controllo partizione per struttura fallito
			end
 end fl_part_fileelevrsfasc_data_ok,

 tmp.fl_part_sesfascerr_ok,
 tmp.cd_partition_sesfascerr


from ORG_V_CHK_TABLE_PARTITION_FASC tmp;

-- changeset root:1751897635013-225
COMMENT ON COLUMN ORG_V_CHK_TIME_PARTITION_FASC_DA_DROPPARE.ID_STRUT IS 'PK.1';

-- changeset root:1751897635013-226
CREATE OR REPLACE FORCE VIEW "ORG_V_CHK_TIME_PARTITION_UPD_DA_DROPPARE" ("ID_STRUT", "FL_PART_VERSINIDATISPEC_OK", "CD_PARTITION_VERSINIDATISPEC", "FL_PART_VERSINIDATISPEC_AA_OK", "FL_PART_UPDDATISPEC_OK", "CD_PARTITION_UPDDATISPEC", "FL_PART_UPDDATISPEC_AA_OK", "FL_PART_XMLUPD_OK", "CD_PARTITION_XMLUPD", "FL_PART_XMLUPD_AA_OK", "FL_PART_UPDKO_OK", "CD_PARTITION_UPDKO", "FL_PART_UPDKO_AA_OK", "FL_PART_SESUPDKO_OK", "CD_PARTITION_SESUPDKO", "FL_PART_SESUPDKO_AA_OK", "FL_PART_XMLSESUPDKO_OK", "CD_PARTITION_XMLSESUPDKO", "FL_PART_XMLSESUPDKO_AA_OK", "FL_PART_SESUPDERR_OK", "CD_PARTITION_SESUPDERR") AS select
 tmp.id_strut,

 tmp.fl_part_versinidatispec_ok,
 tmp.cd_partition_versinidatispec,
 case															-- verifica se per la data corrente la sub-partizione per ARO_VERS_INI_DATI_SPEC e' definita 
	when (select ds_valore_param_applic
		  from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then '1'
		else
			case
				when tmp.fl_part_versinidatispec_ok = '1'
					then
						case
							when tmp.cd_partition_versinidatispec is not null
								then 
									case
										when not exists (select *
														  from ORG_PARTITION part
														  join ORG_SUB_PARTITION subpart
														   on (subpart.id_partition = part.id_partition)
														  join ORG_VAL_SUB_PARTITION val_subpart
														   on (val_subpart.id_sub_partition = subpart.id_sub_partition
														   and val_subpart.id_partition = part.id_partition
														   and to_date(val_subpart.cd_val_sub_partition, 'dd/mm/yyyy') > trunc(sysdate))
														  where part.ti_partition = 'VERS_INI_DATI_SPEC'
														  and part.cd_partition = tmp.cd_partition_versinidatispec
														)
											then '0'									-- non esiste sottopartizione per anno in input
											else '1'
									end
								else '1'												-- controllo partizione per struttura fallito e partizione nulla; 
																						-- si assume sotto-partizione definita (caso in cui non si usano le partizioni)
						end
					else '0'															-- controllo partizione per struttura fallito
			end
 end fl_part_versinidatispec_aa_ok,


 tmp.fl_part_upddatispec_ok,
 tmp.cd_partition_upddatispec,
 case															-- verifica se per la data corrente la sub-partizione per ARO_UPD_DATI_SPEC_UNITA_DOC e' definita 
	when (select ds_valore_param_applic
		  from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then '1'
		else
			case
				when tmp.fl_part_upddatispec_ok = '1'
					then
						case
							when tmp.cd_partition_upddatispec is not null
								then 
									case
										when not exists (select *
														  from ORG_PARTITION part
														  join ORG_SUB_PARTITION subpart
														   on (subpart.id_partition = part.id_partition)
														  join ORG_VAL_SUB_PARTITION val_subpart
														   on (val_subpart.id_sub_partition = subpart.id_sub_partition
														   and val_subpart.id_partition = part.id_partition
														   and to_date(val_subpart.cd_val_sub_partition, 'dd/mm/yyyy') > trunc(sysdate))
														  where part.ti_partition = 'UPD_DATI_SPEC_UNITA_DOC'
														  and part.cd_partition = tmp.cd_partition_upddatispec
														)
											then '0'									-- non esiste sottopartizione per anno in input
											else '1'
									end
								else '1'												-- controllo partizione per struttura fallito e partizione nulla; 
																						-- si assume sotto-partizione definita (caso in cui non si usano le partizioni)
						end
					else '0'															-- controllo partizione per struttura fallito
			end
 end fl_part_upddatispec_aa_ok,

 tmp.fl_part_xmlupd_ok,
 tmp.cd_partition_xmlupd,
 case															-- verifica se per la data corrente la sub-partizione per ARO_XML_UPD_UNITA_DOC e' definita 
	when (select ds_valore_param_applic
		  from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then '1'
		else
			case
				when tmp.fl_part_xmlupd_ok = '1'
					then
						case
							when tmp.cd_partition_xmlupd is not null
								then 
									case
										when not exists (select *
														  from ORG_PARTITION part
														  join ORG_SUB_PARTITION subpart
														   on (subpart.id_partition = part.id_partition)
														  join ORG_VAL_SUB_PARTITION val_subpart
														   on (val_subpart.id_sub_partition = subpart.id_sub_partition
														   and val_subpart.id_partition = part.id_partition
														   and to_date(val_subpart.cd_val_sub_partition, 'dd/mm/yyyy') > trunc(sysdate))
														  where part.ti_partition = 'XML_UPD_UNITA_DOC'
														  and part.cd_partition = tmp.cd_partition_xmlupd
														)
											then '0'									-- non esiste sottopartizione per anno in input
											else '1'
									end
								else '1'												-- controllo partizione per struttura fallito e partizione nulla; 
																						-- si assume sotto-partizione definita (caso in cui non si usano le partizioni)
						end
					else '0'															-- controllo partizione per struttura fallito
			end
 end fl_part_xmlupd_aa_ok,

 tmp.fl_part_updko_ok,
 tmp.cd_partition_updko,
 case															-- verifica se per ogni anno la sub-partizione per VRS_UPD_UNITA_DOC_KO e' definita 
	when (select ds_valore_param_applic
		  from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then '1'
		else
			case
				when tmp.fl_part_updko_ok = '1'
					then
						case
							when tmp.cd_partition_updko is not null
								then 
									case
                                        when exists (select *
													 from DEC_REGISTRO_UNITA_DOC reg
													 join DEC_AA_REGISTRO_UNITA_DOC aa_reg
													  on (aa_reg.id_registro_unita_doc = reg.id_registro_unita_doc)
													 join DEC_AA_VAL aa
													  on (aa.aa_val >= aa_reg.aa_min_registro_unita_doc
													  and aa.aa_val <= nvl(aa_reg.aa_max_registro_unita_doc, to_number(substr(to_char (sysdate, 'dd/mm/yyyy'), 7)))) 
													 where reg.id_strut = tmp.id_strut
													)
                                            then
                                                case
                                                    when exists (select *
                                                                 from DEC_REGISTRO_UNITA_DOC reg
                                                                 join DEC_AA_REGISTRO_UNITA_DOC aa_reg
                                                                  on (aa_reg.id_registro_unita_doc = reg.id_registro_unita_doc)
                                                                 join DEC_AA_VAL aa
                                                                  on (aa.aa_val >= aa_reg.aa_min_registro_unita_doc
                                                                  and aa.aa_val <= nvl(aa_reg.aa_max_registro_unita_doc, to_number(substr(to_char (sysdate, 'dd/mm/yyyy'), 7))))
                                                                 where reg.id_strut = tmp.id_strut
                                                                 and not exists (select *
                                                                                  from ORG_PARTITION part
                                                                                  join ORG_SUB_PARTITION subpart
                                                                                   on (subpart.id_partition = part.id_partition)
                                                                                  join ORG_VAL_SUB_PARTITION val_subpart
                                                                                   on (val_subpart.id_sub_partition = subpart.id_sub_partition
                                                                                   and val_subpart.id_partition = part.id_partition
                                                                                   and to_number(val_subpart.cd_val_sub_partition) = aa.aa_val)
                                                                                  where part.ti_partition = 'UPD_UNITA_DOC_KO'
                                                                                  and part.cd_partition = tmp.cd_partition_updko
                                                                                )
                                                                 )
                                                            then '0'						-- esiste anno su tipo registro e tale anno non sottopartizione
                                                            else '1'
                                               end
                                           else '0'                                         -- non esiste anno su tipo registro
                                    end
                                else '1'									                -- controllo partizione per struttura fallito e partizione nulla; 
                                                                                            -- si assume sotto-partizione definita (caso in cui non si usano le partizioni)
                        end
                    else '0'															    -- controllo partizione per struttura fallito
            end
 end fl_part_updko_aa_ok,

 tmp.fl_part_sesupdko_ok,
 tmp.cd_partition_sesupdko,
 case															-- verifica se per ogni la sub-partizione per VRS_SES_UPD_UNITA_DOC_KO e' definita 
	when (select ds_valore_param_applic
		  from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then '1'
		else
			case
				when tmp.fl_part_sesupdko_ok = '1'
					then
						case
							when tmp.cd_partition_sesupdko is not null
								then 
									case
                                        when exists (select *
													 from DEC_REGISTRO_UNITA_DOC reg
													 join DEC_AA_REGISTRO_UNITA_DOC aa_reg
													  on (aa_reg.id_registro_unita_doc = reg.id_registro_unita_doc)
													 join DEC_AA_VAL aa
													  on (aa.aa_val >= aa_reg.aa_min_registro_unita_doc
													  and aa.aa_val <= nvl(aa_reg.aa_max_registro_unita_doc, to_number(substr(to_char (sysdate, 'dd/mm/yyyy'), 7)))) 
													 where reg.id_strut = tmp.id_strut
													)
                                            then
                                                case
                                                    when exists (select *
                                                                 from DEC_REGISTRO_UNITA_DOC reg
                                                                 join DEC_AA_REGISTRO_UNITA_DOC aa_reg
                                                                  on (aa_reg.id_registro_unita_doc = reg.id_registro_unita_doc)
                                                                 join DEC_AA_VAL aa
                                                                  on (aa.aa_val >= aa_reg.aa_min_registro_unita_doc
                                                                  and aa.aa_val <= nvl(aa_reg.aa_max_registro_unita_doc, to_number(substr(to_char (sysdate, 'dd/mm/yyyy'), 7))))
                                                                 where reg.id_strut = tmp.id_strut
                                                                 and not exists (select *
                                                                                  from ORG_PARTITION part
                                                                                  join ORG_SUB_PARTITION subpart
                                                                                   on (subpart.id_partition = part.id_partition)
                                                                                  join ORG_VAL_SUB_PARTITION val_subpart
                                                                                   on (val_subpart.id_sub_partition = subpart.id_sub_partition
                                                                                   and val_subpart.id_partition = part.id_partition
                                                                                   and to_number(val_subpart.cd_val_sub_partition) = aa.aa_val)
                                                                                  where part.ti_partition = 'SES_UPD_UNITA_DOC_KO'
                                                                                  and part.cd_partition = tmp.cd_partition_sesupdko
                                                                                )
                                                                )
                                                            then '0'					-- esiste anno su tipo registro e tale anno non sottopartizione
                                                            else '1'
                                                end
                                            else '0'                                    -- non esiste anno su tipo registro
									end
								else '1'												-- controllo partizione per struttura fallito e partizione nulla; 
																						-- si assume sotto-partizione definita (caso in cui non si usano le partizioni)
						end
					else '0'															-- controllo partizione per struttura fallito
			end
 end fl_part_sesupdko_aa_ok,


 tmp.fl_part_xmlsesupdko_ok,
 tmp.cd_partition_xmlsesupdko,
 case															-- verifica se per la data corrente la sub-partizione per VRS_XML_SES_UPD_UNITA_DOC_KO e' definita 
	when (select ds_valore_param_applic
		  from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then '1'
		else
			case
				when tmp.fl_part_xmlsesupdko_ok = '1'
					then
						case
							when tmp.cd_partition_xmlsesupdko is not null
								then 
									case
										when not exists (select *
														  from ORG_PARTITION part
														  join ORG_SUB_PARTITION subpart
														   on (subpart.id_partition = part.id_partition)
														  join ORG_VAL_SUB_PARTITION val_subpart
														   on (val_subpart.id_sub_partition = subpart.id_sub_partition
														   and val_subpart.id_partition = part.id_partition
														   and to_date(val_subpart.cd_val_sub_partition, 'dd/mm/yyyy') > trunc(sysdate))
														  where part.ti_partition = 'XML_SES_UPD_UNITA_DOC_KO'
														  and part.cd_partition = tmp.cd_partition_xmlsesupdko
														)
											then '0'									-- non esiste sottopartizione per anno in input
											else '1'
									end
								else '1'												-- controllo partizione per struttura fallito e partizione nulla; 
																						-- si assume sotto-partizione definita (caso in cui non si usano le partizioni)
						end
					else '0'															-- controllo partizione per struttura fallito
			end
 end fl_part_xmlsesupdko_aa_ok, 
 
 tmp.fl_part_sesupderr_ok,
 tmp.cd_partition_sesupderr

from ORG_V_CHK_TABLE_PARTITION_UPD tmp;

-- changeset root:1751897635013-227
COMMENT ON COLUMN ORG_V_CHK_TIME_PARTITION_UPD_DA_DROPPARE.ID_STRUT IS 'PK.1';

-- changeset root:1751897635013-228
CREATE TABLE VRS_SESSIONE_VERS_KO (ID_SESSIONE_VERS_KO NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY NOT NULL, ID_USER NUMBER, DT_APERTURA date NOT NULL, DT_CHIUSURA date NOT NULL, TI_SESSIONE_VERS VARCHAR2(20 BYTE) NOT NULL, TI_STATO_SESSIONE_VERS VARCHAR2(20 BYTE) NOT NULL, ID_STRUT NUMBER, CD_REGISTRO_KEY_UNITA_DOC VARCHAR2(100 BYTE), AA_KEY_UNITA_DOC NUMBER(4, 0), CD_KEY_UNITA_DOC VARCHAR2(100 BYTE), ID_UNITA_DOC NUMBER, NM_USERID VARCHAR2(100 BYTE), CD_VERSIONE_WS VARCHAR2(100 BYTE), NM_AMBIENTE VARCHAR2(100 BYTE), NM_ENTE VARCHAR2(100 BYTE), NM_STRUT VARCHAR2(100 BYTE), CD_KEY_DOC_VERS VARCHAR2(100 BYTE), ID_DOC NUMBER, FL_SESSIONE_ERR_VERIF CHAR(1 BYTE), NM_USERID_WS VARCHAR2(100 BYTE), FL_SESSIONE_ERR_NON_RISOLUB CHAR(1 BYTE), CD_ERR_PRINC VARCHAR2(20 BYTE), DS_ERR_PRINC VARCHAR2(4000 BYTE), NI_FILE_ERR NUMBER, CD_IND_IP_CLIENT VARCHAR2(100 BYTE), CD_IND_SERVER VARCHAR2(100 BYTE), DT_VIRTUAL_APERTURA VARCHAR2(10 BYTE), TS_APERTURA TIMESTAMP(3), TS_CHIUSURA TIMESTAMP(3), NM_UTENTE VARCHAR2(100 BYTE), CONSTRAINT VRS_SESSIONE_VERS_KO_PK PRIMARY KEY (ID_SESSIONE_VERS_KO));

-- changeset root:1751897635013-229
CREATE TABLE VRS_DATI_SESSIONE_VERS_KO (ID_DATI_SESSIONE_VERS_KO NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY NOT NULL, ID_SESSIONE_VERS_KO NUMBER NOT NULL, PG_DATI_SESSIONE_VERS NUMBER DEFAULT 1 NOT NULL, TI_DATI_SESSIONE_VERS VARCHAR2(20 BYTE) NOT NULL, NI_FILE NUMBER, CD_KEY_ALLEG VARCHAR2(100 BYTE), ID_STRUT NUMBER, CONSTRAINT VRS_DATI_SESSIONE_VERS_KO_PK PRIMARY KEY (ID_DATI_SESSIONE_VERS_KO));

-- changeset root:1751897635013-230
CREATE TABLE VRS_SES_UPD_UNITA_DOC_KO (ID_SES_UPD_UNITA_DOC_KO NUMBER NOT NULL, ID_UPD_UNITA_DOC_KO NUMBER, ID_UPD_UNITA_DOC NUMBER, ID_TIPO_UNITA_DOC NUMBER NOT NULL, ID_REGISTRO_UNITA_DOC NUMBER NOT NULL, ID_TIPO_DOC_PRINC NUMBER NOT NULL, TS_INI_SES TIMESTAMP(6) NOT NULL, TS_FINE_SES TIMESTAMP(6) NOT NULL, CD_VERSIONE_WS VARCHAR2(100 BYTE) NOT NULL, ID_USER_IAM NUMBER, ID_ERR_SACER_PRINC NUMBER NOT NULL, ID_CONTROLLO_WS_PRINC NUMBER NOT NULL, DS_ERR_PRINC VARCHAR2(4000 BYTE) NOT NULL, TI_STATO_SES_UPD_KO VARCHAR2(20 BYTE) NOT NULL, ID_STRUT NUMBER NOT NULL, AA_KEY_UNITA_DOC NUMBER(4, 0) NOT NULL, CONSTRAINT PK_SES_UPD_UD_KO PRIMARY KEY (ID_SES_UPD_UNITA_DOC_KO));

-- changeset root:1751897635013-231
CREATE TABLE VRS_XML_SES_UPD_UNITA_DOC_KO (ID_XML_SES_UPD_UNITA_DOC_KO NUMBER NOT NULL, ID_SES_UPD_UD_KO NUMBER NOT NULL, TI_XML VARCHAR2(20 BYTE) NOT NULL, BL_XML CLOB, CD_VERSIONE_XML VARCHAR2(100 BYTE) DEFAULT '1.0' NOT NULL, ID_STRUT NUMBER NOT NULL, DT_REG_XML date NOT NULL, AA_REG_XML NUMBER(4, 0), CONSTRAINT PK_XML_SES_UPD_UD_KO PRIMARY KEY (ID_XML_SES_UPD_UNITA_DOC_KO));

-- changeset root:1751897635013-232
CREATE TABLE VRS_ERR_SES_UPD_UNITA_DOC_KO (ID_ERR_SES_UPD_UNITA_DOC_KO NUMBER NOT NULL, ID_SES_UPD_UNITA_DOC_KO NUMBER NOT NULL, PG_ERR NUMBER DEFAULT 1 NOT NULL, TI_ERR VARCHAR2(20 BYTE) NOT NULL, ID_ERR_SACER NUMBER NOT NULL, DS_ERR VARCHAR2(4000 BYTE) NOT NULL, FL_ERR_PRINC CHAR(1 BYTE) DEFAULT '1' NOT NULL, ID_CONTROLLO_WS NUMBER NOT NULL, ID_STRUT NUMBER, AA_KEY_UNITA_DOC NUMBER(4, 0), CONSTRAINT PK_ERR_SES_UPD_UD_KO PRIMARY KEY (ID_ERR_SES_UPD_UNITA_DOC_KO));

-- changeset root:1751897635013-233
CREATE TABLE MON_CONTA_UD_DOC_COMP_READ_ONLY (ID_CONTA_UD_DOC_COMP NUMBER NOT NULL, DT_RIF_CONTA date NOT NULL, ID_STRUT NUMBER NOT NULL, ID_SUB_STRUT NUMBER NOT NULL, AA_KEY_UNITA_DOC NUMBER(4, 0) NOT NULL, ID_REGISTRO_UNITA_DOC NUMBER NOT NULL, ID_TIPO_UNITA_DOC NUMBER NOT NULL, ID_TIPO_DOC_PRINC NUMBER NOT NULL, NI_UNITA_DOC_VERS NUMBER DEFAULT 0 NOT NULL, NI_DOC_VERS NUMBER DEFAULT 0 NOT NULL, NI_COMP_VERS NUMBER DEFAULT 0 NOT NULL, NI_SIZE_VERS NUMBER DEFAULT 0 NOT NULL, NI_DOC_AGG NUMBER DEFAULT 0 NOT NULL, NI_COMP_AGG NUMBER DEFAULT 0 NOT NULL, NI_SIZE_AGG NUMBER DEFAULT 0 NOT NULL, NI_UNITA_DOC_ANNUL NUMBER DEFAULT 0 NOT NULL, NI_DOC_ANNUL_UD NUMBER DEFAULT 0 NOT NULL, NI_COMP_ANNUL_UD NUMBER DEFAULT 0 NOT NULL, NI_SIZE_ANNUL_UD NUMBER DEFAULT 0 NOT NULL, CONSTRAINT PK_CNT_UD_DOC_COMP_RO PRIMARY KEY (ID_CONTA_UD_DOC_COMP));

-- changeset root:1751897635013-234
CREATE TABLE MON_CONTA_BY_STATO_CONSERV_NEW_READ_ONLY (ID_CONTA_BY_STATO_CONSERV NUMBER NOT NULL, DT_RIF_CONTA date NOT NULL, ID_STRUT NUMBER NOT NULL, ID_SUB_STRUT NUMBER, AA_KEY_UNITA_DOC NUMBER(4, 0) NOT NULL, ID_REGISTRO_UNITA_DOC NUMBER NOT NULL, ID_TIPO_UNITA_DOC NUMBER NOT NULL, ID_TIPO_DOC_PRINC NUMBER, NI_COMP_AIP_GENERATO NUMBER NOT NULL, NI_COMP_AIP_IN_AGGIORN NUMBER NOT NULL, NI_COMP_PRESA_IN_CARICO NUMBER NOT NULL, NI_COMP_IN_VOLUME NUMBER NOT NULL, NI_COMP_ANNUL NUMBER NOT NULL, CONSTRAINT MON_CONTA_BY_STATO_CONSERV_NEW_PK_RO PRIMARY KEY (ID_CONTA_BY_STATO_CONSERV));

-- changeset root:1751897635013-235
CREATE TABLE FAS_FASCICOLO (ID_FASCICOLO NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, AA_FASCICOLO NUMBER(4, 0) NOT NULL, CD_KEY_FASCICOLO VARCHAR2(100 BYTE) NOT NULL, DT_ANNULL date NOT NULL, TS_INI_SES TIMESTAMP(6) NOT NULL, TS_FINE_SES TIMESTAMP(6) NOT NULL, CD_IND_IP_CLIENT VARCHAR2(100 BYTE) NOT NULL, CD_IND_SERVER VARCHAR2(100 BYTE) NOT NULL, ID_USER_IAM_VERS NUMBER NOT NULL, ID_TIPO_FASCICOLO NUMBER NOT NULL, TI_CONSERVAZIONE VARCHAR2(30 BYTE) NOT NULL, ID_SISTEMA_MIGRAZ NUMBER, FL_FORZA_CONTR_CLASSIF CHAR(1 BYTE) NOT NULL, FL_FORZA_CONTR_NUMERO CHAR(1 BYTE) NOT NULL, FL_FORZA_CONTR_COLLEG CHAR(1 BYTE) NOT NULL, CD_INDICE_CLASSIF VARCHAR2(100 BYTE), DS_INDICE_CLASSIF VARCHAR2(254 BYTE), ID_VOCE_TITOL NUMBER, DS_OGGETTO_FASCICOLO VARCHAR2(4000 BYTE), DT_APE_FASCICOLO date, DT_CHIU_FASCICOLO date, NI_AA_CONSERVAZIONE NUMBER(4, 0) NOT NULL, CD_LIVELLO_RISERV VARCHAR2(100 BYTE), CD_PROC_AMMIN VARCHAR2(100 BYTE), DS_PROC_AMMIN VARCHAR2(100 BYTE), DS_NOTA VARCHAR2(4000 BYTE), CD_AMMIN_TITOL VARCHAR2(100 BYTE), DS_AMMIN_TITOL VARCHAR2(254 BYTE), AA_FASCICOLO_PADRE NUMBER(4, 0), CD_KEY_FASCICOLO_PADRE VARCHAR2(100 BYTE), DS_OGGETTO_FASCICOLO_PADRE VARCHAR2(4000 BYTE), ID_FASCICOLO_PADRE NUMBER, CD_KEY_ORD VARCHAR2(100 BYTE) NOT NULL, NI_UNITA_DOC NUMBER DEFAULT 0 NOT NULL, NI_SOTTO_FASCICOLI NUMBER DEFAULT 0 NOT NULL, TI_STATO_FASC_ELENCO_VERS VARCHAR2(50 BYTE), TI_STATO_CONSERVAZIONE VARCHAR2(30 BYTE) DEFAULT 'PRESA_IN_CARICO' NOT NULL, FL_SES_FASCICOLO_KO CHAR(1 BYTE) DEFAULT '0' NOT NULL, ID_ELENCO_VERS_FASC NUMBER, ID_UNITA_DOC_FIRST NUMBER, ID_UNITA_DOC_LAST NUMBER, TI_CODICE_AMMIN_TITOL VARCHAR2(20 BYTE), FL_UPD_MODIF_UNITA_DOC CHAR(1 BYTE) DEFAULT '0' NOT NULL, ID_VER_AIP_FASCICOLO_COR NUMBER, NT_ANNUL VARCHAR2(2000 BYTE), FL_UPD_ANNUL_UNITA_DOC CHAR(1 BYTE) DEFAULT '0' NOT NULL, CD_KEY_NORMALIZ_FASCICOLO VARCHAR2(100 BYTE), DS_PROC_AMMIN_MATERIA_ARG_STRUT VARCHAR2(254 BYTE), DS_INFO_CONSERVAZIONE VARCHAR2(1024 BYTE), CONSTRAINT PK_FASC PRIMARY KEY (ID_FASCICOLO));

-- changeset root:1751897635013-236
CREATE TABLE FAS_STATO_CONSERV_FASCICOLO (ID_STATO_CONSERV_FASCICOLO NUMBER NOT NULL, ID_FASCICOLO NUMBER NOT NULL, TS_STATO TIMESTAMP(6) NOT NULL, TI_STATO_CONSERVAZIONE VARCHAR2(30 BYTE) DEFAULT 'PRESA_IN_CARICO' NOT NULL, ID_USER_IAM NUMBER, CONSTRAINT PK_STATO_CONS_FASC PRIMARY KEY (ID_STATO_CONSERV_FASCICOLO));

-- changeset root:1751897635013-237
CREATE TABLE FAS_STATO_FASCICOLO_ELENCO (ID_STATO_FASCICOLO_ELENCO NUMBER NOT NULL, ID_FASCICOLO NUMBER NOT NULL, TS_STATO TIMESTAMP(6) NOT NULL, TI_STATO_FASC_ELENCO_VERS VARCHAR2(50 BYTE) NOT NULL, ID_USER_IAM NUMBER, CONSTRAINT PK_ELV_STATO_FASC_ELE PRIMARY KEY (ID_STATO_FASCICOLO_ELENCO));

-- changeset root:1751897635013-238
CREATE TABLE FAS_UNITA_DOC_FASCICOLO (ID_UNITA_DOC_FASCICOLO NUMBER NOT NULL, ID_FASCICOLO NUMBER NOT NULL, ID_UNITA_DOC NUMBER NOT NULL, DT_DATA_INSERIMENTO_FAS date, NI_POSIZIONE NUMBER, CONSTRAINT PK_UD_FASC PRIMARY KEY (ID_UNITA_DOC_FASCICOLO));

-- changeset root:1751897635013-239
CREATE TABLE FAS_WARN_FASCICOLO (ID_WARN_FASCICOLO NUMBER NOT NULL, ID_FASCICOLO NUMBER NOT NULL, PG_WARN NUMBER DEFAULT 1 NOT NULL, ID_ERR_SACER NUMBER NOT NULL, DS_WARN VARCHAR2(1024 BYTE) NOT NULL, CONSTRAINT PK_WARN_FASC PRIMARY KEY (ID_WARN_FASCICOLO));

-- changeset root:1751897635013-240
CREATE TABLE FAS_XML_FASCICOLO (ID_XML_FASCICOLO NUMBER NOT NULL, ID_FASCICOLO NUMBER NOT NULL, TI_MODELLO_XSD VARCHAR2(40 BYTE) NOT NULL, ID_MODELLO_XSD_FASCICOLO NUMBER NOT NULL, BL_XML CLOB, ID_STRUT NUMBER NOT NULL, DT_VERS_FASCICOLO date NOT NULL, FL_CANONICALIZED CHAR(1 BYTE) DEFAULT '0' NOT NULL, AA_VERS_FASCICOLO VARCHAR2(40 BYTE) GENERATED ALWAYS AS (TO_CHAR(EXTRACT(YEAR FROM DT_VERS_FASCICOLO))), CONSTRAINT PK_XML_FASC PRIMARY KEY (ID_XML_FASCICOLO));

-- changeset root:1751897635013-241
CREATE TABLE FAS_VER_AIP_FASCICOLO (ID_VER_AIP_FASCICOLO NUMBER NOT NULL, ID_FASCICOLO NUMBER NOT NULL, PG_VER_AIP_FASCICOLO NUMBER NOT NULL, CD_VER_AIP VARCHAR2(100 BYTE) NOT NULL, DT_CREAZIONE date NOT NULL, DS_CAUSALE VARCHAR2(254 BYTE) NOT NULL, ID_ELENCO_VERS_FASC NUMBER, ID_ENTE_CONSERV NUMBER, DS_URN_AIP_FASCICOLO VARCHAR2(254 BYTE) NOT NULL, DS_URN_NORMALIZ_AIP_FASCICOLO VARCHAR2(254 BYTE) NOT NULL, CONSTRAINT PK_VER_AIP_FASC PRIMARY KEY (ID_VER_AIP_FASCICOLO));

-- changeset root:1751897635013-242
ALTER TABLE FAS_VER_AIP_FASCICOLO ADD CONSTRAINT FAS_VER_AIP_FASCICOLO FOREIGN KEY (ID_FASCICOLO) REFERENCES FAS_FASCICOLO (ID_FASCICOLO) ON DELETE CASCADE;

-- changeset root:1751897635013-243
CREATE OR REPLACE FORCE VIEW "ORG_V_CHK_STRUT_PARTITION_MANUALE_ORACLE_DA_DROPPARE" ("TABLE_NAME", "PARTITION_NAME", "KEY_PARTITION") AS SELECT table_name,
           partition_name,
           TO_NUMBER (key_partition)     key_partition
      FROM (SELECT TABLE_NAME,
                   PARTITION_NAME,
                   REPLACE (HIGH_VALUE, 'null', '0')     high_value
              FROM (WITH
                        xml
                        AS
                            (SELECT DBMS_XMLGEN.getxmltype (
                                        'select table_name, partition_name, high_value 
                                 from user_tab_partitions  
                                 where table_name in (''ARO_UNITA_DOC'',
                                                      ''ARO_CONTENUTO_COMP'',
                                                      ''ARO_FILE_VER_INDICE_AIP_UD'',
                                                      ''VRS_SESSIONE_VERS'', 
                                                      ''VRS_CONTENUTO_FILE'',
                                                      ''SER_IX_VOL_VER_SERIE'',
                                                      ''SER_FILE_VER_SERIE'',
                                                      ''ELV_FILE_ELENCO_VERS'')')    AS x --attenzione che la aro_unita_Doc va per id_sub_Strut
                               FROM DUAL)
                               SELECT t.table_name, t.partition_name, t.high_value
                                 FROM xml
                                      CROSS JOIN
                                      XMLTABLE (
                                          '//ROWSET/ROW'
                                          PASSING xml.x
                                          COLUMNS table_name        VARCHAR2 (30),
                                                  partition_name    VARCHAR2 (30),
                                                  high_value        CLOB) t)),
           LATERAL (    SELECT TRIM (REGEXP_SUBSTR (high_value,
                                                    '[^,]+',
                                                    1,
                                                    LEVEL))    key_partition
                          FROM DUAL
                    CONNECT BY LEVEL <= REGEXP_COUNT (high_value, ',') + 1);

-- changeset root:1751897635013-244
CREATE OR REPLACE FORCE VIEW "ORG_V_CHK_PARTITION_UPD_ERR_DA_DROPPARE" ("FL_PART_SESUPDERR_OK", "CD_PARTITION_SESUPDERR") AS select
  case															-- verifica se a data corrente la partizione per VRS_SES_UPD_UNITA_DOC_ERR e' definita 
	when (select ds_valore_param_applic
		 from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		 then '1'
		 else
			case
				when exists (select *
							 from ORG_PARTITION part
							 join ORG_VAL_SUB_PARTITION val_part
								on (val_part.id_partition = part.id_partition)
							 where part.ti_partition = 'SES_UPD_UNITA_DOC_ERR'
							 and val_part.cd_val_sub_partition like '%/%'
							 and to_date(val_part.cd_val_sub_partition, 'dd/mm/yyyy') > trunc(sysdate)
							)
					then '1'
					else '0'
			end
  end fl_part_sesupderr_ok,
  case
	when (select ds_valore_param_applic
		  from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then null
		else
			(select max(part.cd_partition)
			 from ORG_PARTITION part
			 join ORG_VAL_SUB_PARTITION val_part
				on (val_part.id_partition = part.id_partition)
			 where part.ti_partition = 'SES_UPD_UNITA_DOC_ERR'
			 and val_part.cd_val_sub_partition like '%/%'
			 and to_date(val_part.cd_val_sub_partition, 'dd/mm/yyyy') > trunc(sysdate)
			)
  end cd_partition_sesupderr

from dual;

-- changeset root:1751897635013-245
COMMENT ON COLUMN ORG_V_CHK_PARTITION_UPD_ERR_DA_DROPPARE.FL_PART_SESUPDERR_OK IS 'PK.1';

-- changeset root:1751897635013-246
CREATE OR REPLACE FORCE VIEW "ORG_V_CHK_PARTITION_FASC_ERR_DA_DROPPARE" ("FL_PART_SESFASCERR_OK", "CD_PARTITION_SESFASCERR") AS select
  case															-- verifica se a data corrente la partizione per VRS_SES_FASCICOLO_ERR e' definita 
	when (select ds_valore_param_applic
		 from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		 then '1'
		 else
			case
				when exists (select *
							 from ORG_PARTITION part
							 join ORG_VAL_SUB_PARTITION val_part
								on (val_part.id_partition = part.id_partition)
							 where part.ti_partition = 'FASCICOLO_ERR'
							 and val_part.cd_val_sub_partition like '%/%'
							 and to_date(val_part.cd_val_sub_partition, 'dd/mm/yyyy') > trunc(sysdate)
							)
					then '1'
					else '0'
			end
  end fl_part_sesfascerr_ok,
  case
	when (select ds_valore_param_applic
		  from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then null
		else
			(select part.cd_partition
			 from ORG_PARTITION part
			 join ORG_VAL_SUB_PARTITION val_part
				on (val_part.id_partition = part.id_partition)
			 where part.ti_partition = 'FASCICOLO_ERR'
			 and val_part.cd_val_sub_partition like '%/%'
			 and to_date(val_part.cd_val_sub_partition, 'dd/mm/yyyy') > trunc(sysdate)
			)
  end cd_partition_sesfascerr

from dual;

-- changeset root:1751897635013-247
COMMENT ON COLUMN ORG_V_CHK_PARTITION_FASC_ERR_DA_DROPPARE.FL_PART_SESFASCERR_OK IS 'PK.1';

-- changeset root:1751897635013-248
CREATE OR REPLACE FORCE VIEW "OST_V_CHK_USO_TBS" ("NM_TABLESPACE", "FL_OK") AS select
migraz_subpart.nm_tablespace, 

case
	when exists (select *
			  from USER_TAB_SUBPARTITIONS ora_subpart
			  where ora_subpart.table_name != migraz_subpart.nm_tabella_file
			  and ora_subpart.tablespace_name = migraz_subpart.nm_tablespace
			  )
	or exists (select *
		   from user_tables ora_table
		   where ora_table.table_name != migraz_subpart.nm_tabella_file
		   and ora_table.tablespace_name = migraz_subpart.nm_tablespace
		   )
		then '0'
		else '1'
end fl_ok

from OST_MIGRAZ_SUB_PART migraz_subpart;

-- changeset root:1751897635013-249
COMMENT ON COLUMN OST_V_CHK_USO_TBS.NM_TABLESPACE IS 'PK.1';

-- changeset root:1751897635013-250
CREATE OR REPLACE FORCE VIEW "OST_V_SUB_PART_ALTRA" ("ID_MIGRAZ_SUB_PART", "TI_CAUSALE_NO_MIGRAZ", "CD_SUB_PARTITION_ALTRA") AS select distinct
 no_migraz_file.id_migraz_sub_part,
 ti_causale_no_migraz,
 user_obj.subobject_name cd_sub_partition_altra

from OST_NO_MIGRAZ_FILE no_migraz_file
join aro_contenuto_comp conten
	on (conten.id_comp_strut_doc = no_migraz_file.id_oggetto)
join user_objects user_obj
	on (user_obj.data_object_id = dbms_rowid.rowid_object(conten.ROWID));

-- changeset root:1751897635013-251
CREATE OR REPLACE FORCE VIEW "ORG_V_CHK_SUB_STRUT_PARTITION_ORA_2_NEW_DA_DROPPARE" ("TABLE_NAME", "PARTITION_NAME", "KEY_SUB_PARTITION") AS SELECT /*+ parallel (12) */
             TABLE_NAME,
             PARTITION_name,
             CASE
                 WHEN table_name IN ('VRS_SESSIONE_VERS',
                                     'ELV_FILE_ELENCO_VERS',
                                     'SER_FILE_VER_SERIE',
                                     'SER_IX_VOL_VER_SERIE') THEN
                     MAX (TO_NUMBER (key_sub_partition))
                 --                               SUBSTR (REPLACE (key_sub_partition, NULL, 0),
                 --                                       1,
                 --                                       4))
                 --                         - 1)
                 ELSE
                     MAX (
                         TO_NUMBER (
                             SUBSTR (REPLACE (key_sub_partition, NULL, 0),
                                     1,
                                     4)))
             END    key_sub_partition
        FROM (SELECT table_name, partition_name, key_sub_partition
                FROM (SELECT "TABLE_NAME",
                             "PARTITION_NAME",
                             SUBpartition_name,
                             TRIM (
                                 CASE
                                     WHEN table_name IN
                                              ('VRS_SESSIONE_VERS',
                                               'ELV_FILE_ELENCO_VERS',
                                               'SER_FILE_VER_SERIE',
                                               'SER_IX_VOL_VER_SERIE') THEN
                                         TO_CHAR (
                                               TO_NUMBER (
                                                   SUBSTR (
                                                       convert_high_value_sub_part (
                                                           table_name,
                                                           subpartition_name),
                                                       11,
                                                       4))
                                             - 1)
                                     WHEN table_name IN
                                              ('VRS_CONTENUTO_FILE',
                                               'ARO_FILE_VER_INDICE_AIP_UD',
                                               'ARO_CONTENUTO_COMP') THEN
                                         convert_high_value_sub_part (
                                             table_name,
                                             subpartition_name)
                                     WHEN table_name IN ('ARO_UNITA_DOC') THEN
                                         convert_high_value_sub_part (
                                             table_name,
                                             subpartition_name)
                                 END)    high_value
                        FROM user_tab_subpartitions
                       WHERE table_name IN ('ARO_UNITA_DOC',
                                            'ARO_CONTENUTO_COMP',
                                            'ARO_FILE_VER_INDICE_AIP_UD',
                                            'VRS_SESSIONE_VERS',
                                            'VRS_CONTENUTO_FILE',
                                            'SER_IX_VOL_VER_SERIE',
                                            'SER_FILE_VER_SERIE',
                                            'ELV_FILE_ELENCO_VERS')),
                     LATERAL (    SELECT TRIM (REGEXP_SUBSTR (high_value,
                                                              '[^,]+',
                                                              1,
                                                              LEVEL))    key_sub_partition
                                    FROM DUAL
                              CONNECT BY LEVEL <=
                                         REGEXP_COUNT (high_value, ',') + 1))
    GROUP BY TABLE_NAME, PARTITION_name;

-- changeset root:1751897635013-252
CREATE OR REPLACE FORCE VIEW "OST_V_LIS_SUBPART_BLOB" ("ID_SUB_PARTITION", "TI_PARTITION", "CD_PARTITION", "CD_SUB_PARTITION", "NM_TABELLA_FILE", "NM_COLONNA_ID_FILE", "NM_COLONNA_BLOB_FILE", "TABLESPACE_NAME", "NUM_ROWS", "STATUS", "MM_MAX") AS select 
 tmp.id_sub_partition, 
 tmp.ti_partition, tmp.cd_partition, tmp.cd_sub_partition, 
 'ARO_CONTENUTO_COMP' nm_tabella_file, 'id_comp_strut_doc ' nm_colonna_id_file, 'bl_conten_comp' nm_colonna_blob_file,
 oracle_sub.tablespace_name, oracle_sub.num_rows, tbs.status,
 max (val.cd_val_sub_partition) mm_max

from (select part.ti_partition, part.cd_partition,  				 -- considero solo sub-partiz con valori inferiori al mese corrente
	  sub.cd_sub_partition, sub.id_sub_partition 
	  from ORG_PARTITION part
	  join ORG_SUB_PARTITION sub
		on (sub.id_partition = part.id_partition)
	  where part.ti_partition = 'BLOB'
	  and not exists (select *
					  from ORG_VAL_SUB_PARTITION val_prec
					  where val_prec.id_sub_partition = sub.id_sub_partition
					  and val_prec.cd_val_sub_partition >= extract (year from sysdate) || lpad(extract (month from sysdate), 2, 0)
					  )
					  
	  and not exists (select *
					  from OST_MIGRAZ_SUB_PART mgz_sub_part
					  where mgz_sub_part.id_sub_partition = sub.id_sub_partition
					  )
	 ) tmp

	join ORG_VAL_SUB_PARTITION val
		on (val.id_sub_partition = tmp.id_sub_partition)

	join user_tab_subpartitions oracle_sub
		on (oracle_sub.table_name = 'ARO_CONTENUTO_COMP'
		and oracle_sub.partition_name = tmp.cd_partition
		and oracle_sub.subpartition_name = tmp.cd_sub_partition)
   
	join user_tablespaces tbs
		on (tbs.tablespace_name = oracle_sub.tablespace_name)
    
group by tmp.id_sub_partition, 
		tmp.ti_partition, tmp.cd_partition, tmp.cd_sub_partition, 
		'ARO_CONTENUTO_COMP', 'id_conten_comp', 'bl_conten_comp',
		oracle_sub.tablespace_name, oracle_sub.num_rows, tbs.status;

-- changeset root:1751897635013-253
COMMENT ON COLUMN OST_V_LIS_SUBPART_BLOB.ID_SUB_PARTITION IS 'PK.1';

-- changeset root:1751897635013-254
CREATE OR REPLACE FORCE VIEW "OST_V_LIS_SUBPART_BLOB_BY_ISTZ" ("ID_SUB_PARTITION", "TI_PARTITION", "CD_PARTITION", "CD_SUB_PARTITION", "NM_TABELLA_FILE", "NM_COLONNA_ID_FILE", "NM_COLONNA_BLOB_FILE", "TABLESPACE_NAME", "NUM_ROWS", "STATUS", "MM_MAX", "NI_ISTANZA_JOB_PREPARA") AS select 
 sub.id_sub_partition, 
 part.ti_partition, part.cd_partition, sub.cd_sub_partition, 
 mgz_subpart.nm_tabella_file, mgz_subpart.nm_colonna_id_file, mgz_subpart.nm_colonna_blob_file,
 mgz_subpart.nm_tablespace, oracle_sub.num_rows, tbs.status,
 mgz_subpart.mm_max,

 ni_istanza_job_prepara 
 
from OST_MIGRAZ_SUB_PART mgz_subpart
join OST_STATO_MIGRAZ_SUB_PART stato_cor
	on (stato_cor.id_stato_migraz_sub_part = mgz_subpart.id_stato_migraz_sub_part_cor)

join ORG_SUB_PARTITION sub
	on (sub.id_sub_partition = mgz_subpart.id_sub_partition)
join ORG_PARTITION part
	on (sub.id_partition = part.id_partition)
	
join user_tab_subpartitions oracle_sub
	on (oracle_sub.table_name = 'ARO_CONTENUTO_COMP'
	and oracle_sub.partition_name = part.cd_partition
	and oracle_sub.subpartition_name = sub.cd_sub_partition)
join user_tablespaces tbs
	on (tbs.tablespace_name = oracle_sub.tablespace_name)

where stato_cor.ti_stato = 'ASSEGNATO_PREPARA_PARTIZIONE'
and mgz_subpart.ni_istanza_job_prepara is not null;

-- changeset root:1751897635013-255
COMMENT ON COLUMN OST_V_LIS_SUBPART_BLOB_BY_ISTZ.ID_SUB_PARTITION IS 'PK.1';

-- changeset root:1751897635013-256
CREATE OR REPLACE FORCE VIEW "ORG_V_CHK_STRUT_PARTITION_MANUALE_DA_DROPPARE" ("ID_STRUT", "FL_PART_OK") AS SELECT tab2.id_strut,
           CASE
               WHEN (SELECT ds_valore_param_applic
                       FROM APL_PARAM_APPLIC  par
                            JOIN APL_VALORE_PARAM_APPLIC val
                                ON (val.id_param_applic = par.id_param_applic)
                      WHERE par.fl_appart_applic = '1'
                        AND val.ti_appart = 'APPLIC'
                        AND nm_param_applic = 'VERIFICA_PARTIZIONI') =
                    'false'
                AND 1 = 2     -----rimuovere 1=2 eserve solo per fare dei test
                          THEN                                     ---cambaito
                   '1'
               ELSE
                   CASE
                       WHEN tab2.test =
                              7
                            + (SELECT COUNT (1)
                                 FROM org_sub_strut aa
                                WHERE aa.ID_STRUT = tab2.id_Strut) THEN
                           '1'
                       ELSE
                           '0'
                   END
           END    fl_part
      FROM (  SELECT id_strut, COUNT (1) AS test
                FROM (SELECT /*+ parallel 12 */
                             a.KEY_PARTITION     AS id_Strut
                        FROM ORG_V_CHK_STRUT_PARTITION_MANUALE_ORACLE a
                             JOIN ORG_V_CHK_SUB_STRUT_PARTITION_ORA_2_new b
                                 ON a.TABLE_NAME = b.table_name
                                AND a.PARTITION_NAME = b.partition_name
                       WHERE a.TABLE_NAME IN ('VRS_SESSIONE_VERS',
                                              'ARO_CONTENUTO_COMP',
                                              'ARO_FILE_VER_INDICE_AIP_UD',
                                              'VRS_CONTENUTO_FILE',
                                              'SER_IX_VOL_VER_SERIE',
                                              'SER_FILE_VER_SERIE',
                                              'ELV_FILE_ELENCO_VERS')
                         AND b.KEY_SUB_PARTITION >=
                             TO_NUMBER (EXTRACT (YEAR FROM SYSDATE))
                      UNION ALL
                      SELECT /*+ parallel 12 */
                             a.ID_STRUT
                        FROM org_Strut a
                             JOIN org_sub_Strut b ON a.id_Strut = b.ID_STRUT
                             LEFT JOIN
                             ORG_V_CHK_STRUT_PARTITION_MANUALE_ORACLE c
                                 ON c.KEY_PARTITION = b.ID_SUB_STRUT
                             LEFT JOIN
                             ORG_V_CHK_SUB_STRUT_PARTITION_ORA_2_new d
                                 ON d.TABLE_NAME = c.TABLE_NAME
                                AND d.PARTITION_NAME = c.PARTITION_NAME
                       WHERE (c.TABLE_NAME IN ('ARO_UNITA_DOC')
                           OR c.TABLE_NAME IS NULL)
                         AND (d.KEY_SUB_PARTITION >=
                              TO_NUMBER (EXTRACT (YEAR FROM SYSDATE))
                           OR d.KEY_SUB_PARTITION IS NULL)) tab1
            GROUP BY tab1.id_Strut) tab2;

-- changeset root:1751897635013-257
CREATE OR REPLACE FORCE VIEW "ARO_V_VIS_DOC_IAM" ("NM_AMBIENTE", "NM_ENTE", "NM_STRUT", "ID_UNITA_DOC", "CD_REGISTRO_KEY_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "ID_TIPO_UNITA_DOC", "NM_TIPO_UNITA_DOC", "DL_OGGETTO_UNITA_DOC", "DT_REG_UNITA_DOC", "DT_ANNUL_UNITA_DOC", "TI_ANNUL_UNITA_DOC", "DT_CREAZIONE_UD", "NT_ANNUL_UNITA_DOC", "TI_STATO_CONSERVAZIONE", "CD_KEY_UNITA_DOC_NORMALIZ", "ID_DOC", "TI_DOC", "PG_DOC", "NM_TIPO_DOC", "DL_DOC", "DS_AUTORE_DOC", "CD_KEY_DOC_VERS", "DT_CREAZIONE", "FL_DOC_FIRMATO", "TI_ESITO_VERIF_FIRME", "DS_MSG_ESITO_VERIF_FIRME", "TI_STATO_DOC", "FL_FORZA_ACCETTAZIONE", "FL_FORZA_CONSERVAZIONE", "TI_CONSERVAZIONE", "NM_SISTEMA_MIGRAZ", "DT_ANNUL_DOC", "TI_ANNUL_DOC", "NT_ANNUL_DOC", "NT_DOC", "NI_ORD_DOC", "ID_STRUT_DOC", "NM_TIPO_STRUT_DOC", "ID_VOLUME_CONSERV", "NM_VOLUME_CONSERV", "TI_STATO_VOLUME_CONSERV", "ID_ELENCO_VERS", "NM_ELENCO_VERS", "TI_STATO_ELENCO_VERS", "CD_VERSIONE_XML", "UTENTE_VERS", "BL_XML_RICH_DOC", "DS_HASH_XML_RICH_DOC", "DS_ALGO_HASH_XML_RICH_DOC", "CD_ENCODING_HASH_XML_RICH_DOC", "DS_URN_XML_RICH_DOC", "DS_URN_XML_RICH_DOC_NORMALIZ", "DS_URN_XML_RICH_DOC_INIZIALE", "BL_XML_RISP_DOC", "DS_HASH_XML_RISP_DOC", "DS_ALGO_HASH_XML_RISP_DOC", "CD_ENCODING_HASH_XML_RISP_DOC", "DS_URN_XML_RISP_DOC", "DS_URN_XML_RISP_DOC_NORMALIZ", "DS_URN_XML_RISP_DOC_INIZIALE", "BL_XML_RAPP_DOC", "DS_HASH_XML_RAPP_DOC", "DS_ALGO_HASH_XML_RAPP_DOC", "CD_ENCODING_HASH_XML_RAPP_DOC", "DS_URN_XML_RAPP_DOC", "DS_URN_XML_RAPP_DOC_NORMALIZ", "DS_URN_XML_RAPP_DOC_INIZIALE", "UTENTE", "ID_SESSIONE_VERS") AS SELECT amb.nm_ambiente,
           ente.nm_ente,
           strut.nm_strut,
           -- info unità documentaria
           ud.id_unita_doc,
           ud.cd_registro_key_unita_doc,
           ud.aa_key_unita_doc,
           ud.cd_key_unita_doc,
           tipo_ud.id_tipo_unita_doc,
           tipo_ud.nm_tipo_unita_doc,
           ud.dl_oggetto_unita_doc,
           ud.dt_reg_unita_doc,
           ud.dt_annul
               dt_annul_unita_doc,
           ud.ti_annul
               ti_annul_unita_doc,
           ud.dt_creazione
               dt_creazione_ud,
           ud.nt_annul
               nt_annul_unita_doc,
           ud.ti_stato_conservazione,
           ud.cd_key_unita_doc_normaliz,
           -- info documento
           doc.id_doc,
           doc.ti_doc,
           doc.pg_doc,
           tipo_doc.nm_tipo_doc,
           doc.dl_doc,
           doc.ds_autore_doc,
           doc.cd_key_doc_vers,
           doc.dt_creazione,
           doc.fl_doc_firmato,
           doc.ti_esito_verif_firme,
           doc.ds_msg_esito_verif_firme,
           doc.ti_stato_doc,
           doc.fl_forza_accettazione,
           doc.fl_forza_conservazione,
           doc.ti_conservazione,
           doc.nm_sistema_migraz,
           doc.dt_annul
               dt_annul_doc,
           doc.ti_annul
               ti_annul_doc,
           doc.nt_annul
               nt_annul_doc,
           doc.nt_doc,
           doc.ni_ord_doc,
           -- info su struttura originale del documento
           strut_doc.id_strut_doc,
           tipo_strut.nm_tipo_strut_doc,
           -- info volume valido
           CASE
               WHEN doc.ti_stato_doc IS NOT NULL THEN
                   (SELECT app_ud.id_volume_conserv
                     FROM VOL_APPART_DOC_VOLUME        app_doc,
                          VOL_APPART_UNITA_DOC_VOLUME  app_ud
                    WHERE app_doc.id_doc = doc.id_doc
                      AND app_doc.fl_valida = '1'
                      AND app_ud.id_appart_unita_doc_volume =
                          app_doc.id_appart_unita_doc_volume)
           END
               id_volume_conserv,
           CASE
               WHEN doc.ti_stato_doc IS NOT NULL THEN
                   (SELECT vol.nm_volume_conserv
                     FROM VOL_APPART_DOC_VOLUME        app_doc,
                          VOL_APPART_UNITA_DOC_VOLUME  app_ud,
                          VOL_VOLUME_CONSERV           vol
                    WHERE app_doc.id_doc = doc.id_doc
                      AND app_doc.fl_valida = '1'
                      AND app_ud.id_appart_unita_doc_volume =
                          app_doc.id_appart_unita_doc_volume
                      AND vol.id_volume_conserv = app_ud.id_volume_conserv)
           END
               nm_volume_conserv,
           CASE
               WHEN doc.ti_stato_doc IS NOT NULL THEN
                   (SELECT vol.ti_stato_volume_conserv
                     FROM VOL_APPART_DOC_VOLUME        app_doc,
                          VOL_APPART_UNITA_DOC_VOLUME  app_ud,
                          VOL_VOLUME_CONSERV           vol
                    WHERE app_doc.id_doc = doc.id_doc
                      AND app_doc.fl_valida = '1'
                      AND app_ud.id_appart_unita_doc_volume =
                          app_doc.id_appart_unita_doc_volume
                      AND vol.id_volume_conserv = app_ud.id_volume_conserv)
           END
               ti_stato_volume_conserv,
           -- info elenco versamento
           CASE
               WHEN doc.id_elenco_vers IS NOT NULL THEN doc.id_elenco_vers
               WHEN ud.id_elenco_vers IS NOT NULL THEN ud.id_elenco_vers
               ELSE NULL
           END
               id_elenco_vers,
           CASE
               WHEN doc.id_elenco_vers IS NOT NULL THEN
                   (SELECT nm_elenco
                      FROM ELV_ELENCO_VERS
                     WHERE id_elenco_vers = doc.id_elenco_vers)
               WHEN ud.id_elenco_vers IS NOT NULL THEN
                   (SELECT nm_elenco
                      FROM ELV_ELENCO_VERS
                     WHERE id_elenco_vers = ud.id_elenco_vers)
               ELSE
                   NULL
           END
               nm_elenco_vers,
           CASE
               WHEN doc.id_elenco_vers IS NOT NULL THEN
                   doc.ti_stato_doc_elenco_vers
               WHEN ud.id_elenco_vers IS NOT NULL THEN
                   ud.ti_stato_ud_elenco_vers
               ELSE
                   NULL
           END
               ti_stato_elenco_vers,
           -- info sessione
           CASE
               WHEN doc.ti_creazione = 'VERSAMENTO_UNITA_DOC' THEN
                   (SELECT ses.cd_versione_ws
                     FROM VRS_SESSIONE_VERS ses
                    WHERE ses.id_unita_doc = ud.id_unita_doc
                      AND ses.ti_sessione_vers = 'VERSAMENTO'
                      AND ses.ti_stato_sessione_vers = 'CHIUSA_OK')
               ELSE
                   (SELECT ses.cd_versione_ws
                     FROM VRS_SESSIONE_VERS ses
                    WHERE ses.id_doc = doc.id_doc
                      AND ses.ti_sessione_vers = 'AGGIUNGI_DOCUMENTO'
                      AND ses.ti_stato_sessione_vers = 'CHIUSA_OK')
           END
               cd_versione_xml,
           CASE
               WHEN doc.ti_creazione = 'VERSAMENTO_UNITA_DOC' THEN
                   (SELECT usr.nm_userid
                      FROM IAM_USER usr
                     WHERE usr.id_user_iam = ud.id_user_vers)
               ELSE
                   (SELECT usr.nm_userid
                     FROM VRS_SESSIONE_VERS ses, IAM_USER usr
                    WHERE ses.id_doc = doc.id_doc
                      AND ses.ti_sessione_vers = 'AGGIUNGI_DOCUMENTO'
                      AND ses.ti_stato_sessione_vers = 'CHIUSA_OK'
                      AND usr.id_user_iam = ses.id_user)
           END
               utente_vers,
           xml_rich.bl_xml
               bl_xml_rich_doc,
           xml_rich.ds_hash_xml_vers
               ds_hash_xml_rich_doc,
           xml_rich.ds_algo_hash_xml_vers
               ds_algo_hash_xml_rich_doc,
           xml_rich.cd_encoding_hash_xml_vers
               cd_encoding_hash_xml_rich_doc,
           CASE
               WHEN EXISTS
                        (SELECT *
                           FROM VRS_URN_XML_SESSIONE_VERS urn_xml_rich
                          WHERE urn_xml_rich.id_xml_dati_sessione_vers =
                                xml_rich.id_xml_dati_sessione_vers) THEN
                   (SELECT ds_urn
                     FROM VRS_URN_XML_SESSIONE_VERS urn_xml_rich
                    WHERE urn_xml_rich.id_xml_dati_sessione_vers =
                          xml_rich.id_xml_dati_sessione_vers
                      AND urn_xml_rich.ti_urn = 'ORIGINALE')
               ELSE
                   xml_rich.ds_urn_xml_vers
           END
               ds_urn_xml_rich_doc,
           (SELECT ds_urn
             FROM VRS_URN_XML_SESSIONE_VERS urn_xml_rich
            WHERE urn_xml_rich.id_xml_dati_sessione_vers =
                  xml_rich.id_xml_dati_sessione_vers
              AND urn_xml_rich.ti_urn = 'NORMALIZZATO')
               ds_urn_xml_rich_doc_normaliz,
           (SELECT ds_urn
             FROM VRS_URN_XML_SESSIONE_VERS urn_xml_rich
            WHERE urn_xml_rich.id_xml_dati_sessione_vers =
                  xml_rich.id_xml_dati_sessione_vers
              AND urn_xml_rich.ti_urn = 'INIZIALE')
               ds_urn_xml_rich_doc_iniziale,
           xml_risp.bl_xml
               bl_xml_risp_doc,
           xml_risp.ds_hash_xml_vers
               ds_hash_xml_risp_doc,
           xml_risp.ds_algo_hash_xml_vers
               ds_algo_hash_xml_risp_doc,
           xml_risp.cd_encoding_hash_xml_vers
               cd_encoding_hash_xml_risp_doc,
           CASE
               WHEN EXISTS
                        (SELECT *
                           FROM VRS_URN_XML_SESSIONE_VERS urn_xml_risp
                          WHERE urn_xml_risp.id_xml_dati_sessione_vers =
                                xml_risp.id_xml_dati_sessione_vers) THEN
                   (SELECT ds_urn
                     FROM VRS_URN_XML_SESSIONE_VERS urn_xml_risp
                    WHERE urn_xml_risp.id_xml_dati_sessione_vers =
                          xml_risp.id_xml_dati_sessione_vers
                      AND urn_xml_risp.ti_urn = 'ORIGINALE')
               ELSE
                   xml_risp.ds_urn_xml_vers
           END
               ds_urn_xml_risp_doc,
           (SELECT ds_urn
             FROM VRS_URN_XML_SESSIONE_VERS urn_xml_risp
            WHERE urn_xml_risp.id_xml_dati_sessione_vers =
                  xml_risp.id_xml_dati_sessione_vers
              AND urn_xml_risp.ti_urn = 'NORMALIZZATO')
               ds_urn_xml_risp_doc_normaliz,
           (SELECT ds_urn
             FROM VRS_URN_XML_SESSIONE_VERS urn_xml_risp
            WHERE urn_xml_risp.id_xml_dati_sessione_vers =
                  xml_risp.id_xml_dati_sessione_vers
              AND urn_xml_risp.ti_urn = 'INIZIALE')
               ds_urn_xml_risp_doc_iniziale,
           xml_rapp.bl_xml
               bl_xml_rapp_doc,
           xml_rapp.ds_hash_xml_vers
               ds_hash_xml_rapp_doc,
           xml_rapp.ds_algo_hash_xml_vers
               ds_algo_hash_xml_rapp_doc,
           xml_rapp.cd_encoding_hash_xml_vers
               cd_encoding_hash_xml_rapp_doc,
           CASE
               WHEN EXISTS
                        (SELECT *
                           FROM VRS_URN_XML_SESSIONE_VERS urn_xml_rapp
                          WHERE urn_xml_rapp.id_xml_dati_sessione_vers =
                                xml_rapp.id_xml_dati_sessione_vers) THEN
                   (SELECT ds_urn
                     FROM VRS_URN_XML_SESSIONE_VERS urn_xml_rapp
                    WHERE urn_xml_rapp.id_xml_dati_sessione_vers =
                          xml_rapp.id_xml_dati_sessione_vers
                      AND urn_xml_rapp.ti_urn = 'ORIGINALE')
               ELSE
                   xml_rapp.ds_urn_xml_vers
           END
               ds_urn_xml_rapp_doc,
           (SELECT ds_urn
             FROM VRS_URN_XML_SESSIONE_VERS urn_xml_rapp
            WHERE urn_xml_rapp.id_xml_dati_sessione_vers =
                  xml_rapp.id_xml_dati_sessione_vers
              AND urn_xml_rapp.ti_urn = 'NORMALIZZATO')
               ds_urn_xml_rapp_doc_normaliz,
           (SELECT ds_urn
             FROM VRS_URN_XML_SESSIONE_VERS urn_xml_rapp
            WHERE urn_xml_rapp.id_xml_dati_sessione_vers =
                  xml_rapp.id_xml_dati_sessione_vers
              AND urn_xml_rapp.ti_urn = 'INIZIALE')
               ds_urn_xml_rapp_doc_iniziale,
           CASE
               WHEN doc.ti_creazione = 'VERSAMENTO_UNITA_DOC' THEN
                   (SELECT ses.nm_utente
                     FROM VRS_SESSIONE_VERS ses
                    WHERE ses.id_unita_doc = ud.id_unita_doc
                      AND ses.ti_sessione_vers = 'VERSAMENTO'
                      AND ses.ti_stato_sessione_vers = 'CHIUSA_OK')
               ELSE
                   (SELECT ses.nm_utente
                     FROM VRS_SESSIONE_VERS ses, IAM_USER usr
                    WHERE ses.id_doc = doc.id_doc
                      AND ses.ti_sessione_vers = 'AGGIUNGI_DOCUMENTO'
                      AND ses.ti_stato_sessione_vers = 'CHIUSA_OK'
                      AND usr.id_user_iam = ses.id_user)
           END
               utente,
           ses.id_sessione_vers
      FROM ARO_DOC  doc
           JOIN DEC_TIPO_DOC tipo_doc
               ON (tipo_doc.id_tipo_doc = doc.id_tipo_doc)
           JOIN ARO_UNITA_DOC ud ON (ud.id_unita_doc = doc.id_unita_doc)
           JOIN ORG_STRUT strut ON (strut.id_strut = ud.id_strut)
           JOIN ORG_ENTE ente ON (ente.id_ente = strut.id_ente)
           JOIN ORG_AMBIENTE amb ON (amb.id_ambiente = ente.id_ambiente)
           JOIN DEC_TIPO_UNITA_DOC tipo_ud
               ON (tipo_ud.id_tipo_unita_doc = ud.id_tipo_unita_doc)
           JOIN ARO_STRUT_DOC strut_doc
               ON (strut_doc.id_doc = doc.id_doc
               AND strut_doc.fl_strut_orig = '1')
           JOIN DEC_TIPO_STRUT_DOC tipo_strut
               ON (tipo_strut.id_tipo_strut_doc = strut_doc.id_tipo_strut_doc)
           LEFT JOIN VRS_SESSIONE_VERS ses
               ON (ses.id_doc = doc.id_doc
               AND ses.ti_sessione_vers = 'AGGIUNGI_DOCUMENTO'
               AND ses.ti_stato_sessione_vers = 'CHIUSA_OK')
           LEFT JOIN VRS_DATI_SESSIONE_VERS dati_ses
               ON (dati_ses.id_sessione_vers = ses.id_sessione_vers)
           LEFT JOIN VRS_XML_DATI_SESSIONE_VERS xml_rich
               ON (xml_rich.id_dati_sessione_vers =
                   dati_ses.id_dati_sessione_vers
               AND xml_rich.ti_xml_dati = 'RICHIESTA')
           LEFT JOIN VRS_XML_DATI_SESSIONE_VERS xml_risp
               ON (xml_risp.id_dati_sessione_vers =
                   dati_ses.id_dati_sessione_vers
               AND xml_risp.ti_xml_dati = 'RISPOSTA')
           LEFT JOIN VRS_XML_DATI_SESSIONE_VERS xml_rapp
               ON (xml_rapp.id_dati_sessione_vers =
                   dati_ses.id_dati_sessione_vers
               AND xml_rapp.ti_xml_dati = 'RAPP_VERS');

-- changeset root:1751897635013-258
COMMENT ON COLUMN ARO_V_VIS_DOC_IAM.ID_DOC IS 'PK.1 relativa a tabella ARO_DOC';

-- changeset root:1751897635013-259
CREATE OR REPLACE FORCE VIEW "ARO_V_VIS_UNITA_DOC_IAM" ("NM_AMBIENTE", "NM_ENTE", "NM_STRUT", "ID_UNITA_DOC", "CD_REGISTRO_KEY_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "ID_TIPO_UNITA_DOC", "NM_TIPO_UNITA_DOC", "DL_OGGETTO_UNITA_DOC", "DT_REG_UNITA_DOC", "DS_UFF_COMP_UNITA_DOC", "FL_CARTACEO", "DS_CLASSIF_PRINC", "CD_FASCIC_PRINC", "DS_OGGETTO_FASCIC_PRINC", "CD_SOTTOFASCIC_PRINC", "DS_OGGETTO_SOTTOFASCIC_PRINC", "NI_ALLEG", "NI_ANNESSI", "NI_ANNOT", "FL_FORZA_ACCETTAZIONE", "FL_FORZA_CONSERVAZIONE", "FL_FORZA_COLLEGAMENTO", "TI_CONSERVAZIONE", "UTENTE_VERS", "DT_CREAZIONE", "FL_UNITA_DOC_FIRMATO", "TI_ESITO_VERIF_FIRME_UD", "DS_MSG_ESITO_VERIF_FIRME_UD", "NM_SISTEMA_MIGRAZ", "CD_VERSIONE_XML", "BL_XML_RICH_UD", "DS_HASH_XML_RICH_UD", "DS_ALGO_HASH_XML_RICH_UD", "CD_ENCODING_HASH_XML_RICH_UD", "DS_URN_XML_RICH_UD", "DS_URN_XML_RICH_UD_NORMALIZ", "DS_URN_XML_RICH_UD_INIZIALE", "BL_XML_INDEX_UD", "DS_HASH_XML_INDEX_UD", "DS_ALGO_HASH_XML_INDEX_UD", "CD_ENCODING_HASH_XML_INDEX_UD", "DS_URN_XML_INDEX_UD", "DS_URN_XML_INDEX_UD_NORMALIZ", "DS_URN_XML_INDEX_UD_INIZIALE", "BL_XML_RISP_UD", "DS_HASH_XML_RISP_UD", "DS_ALGO_HASH_XML_RISP_UD", "CD_ENCODING_HASH_XML_RISP_UD", "DS_URN_XML_RISP_UD", "DS_URN_XML_RISP_UD_NORMALIZ", "DS_URN_XML_RISP_UD_INIZIALE", "BL_XML_RAPP_UD", "DS_HASH_XML_RAPP_UD", "DS_ALGO_HASH_XML_RAPP_UD", "CD_ENCODING_HASH_XML_RAPP_UD", "DS_URN_XML_RAPP_UD", "DS_URN_XML_RAPP_UD_NORMALIZ", "DS_URN_XML_RAPP_UD_INIZIALE", "NT_UNITA_DOC", "ID_DOC", "CD_KEY_DOC_VERS", "NM_TIPO_DOC", "DL_DOC", "DS_AUTORE_DOC", "FL_DOC_FIRMATO", "TI_ESITO_VERIF_FIRME_DOC", "DT_ANNUL", "TI_ANNUL", "NT_ANNUL", "TI_STATO_CONSERVAZIONE", "FL_HASH_VERSATO", "CD_KEY_UNITA_DOC_NORMALIZ", "CD_IND_IP_CLIENT", "NM_SISTEMA_VERSANTE", "UTENTE", "ID_SESSIONE_VERS") AS SELECT -- info organizzazione
           amb.nm_ambiente,
           ente.nm_ente,
           strut.nm_strut,
           -- info versate unità documentaria
           ud.id_unita_doc,
           ud.cd_registro_key_unita_doc,
           ud.aa_key_unita_doc,
           ud.cd_key_unita_doc,
           tipo_unita.id_tipo_unita_doc,
           tipo_unita.nm_tipo_unita_doc,
           ud.dl_oggetto_unita_doc,
           ud.dt_reg_unita_doc,
           ud.ds_uff_comp_unita_doc,
           ud.fl_cartaceo,
           ud.ds_classif_princ,
           ud.cd_fascic_princ,
           ud.ds_oggetto_fascic_princ,
           ud.cd_sottofascic_princ,
           ud.ds_oggetto_sottofascic_princ,
           ud.ni_alleg,
           ud.ni_annessi,
           ud.ni_annot,
           -- info versamento unità documentaria
           ud.fl_forza_accettazione,
           ud.fl_forza_conservazione,
           ud.fl_forza_collegamento,
           ud.ti_conservazione,
           usr.nm_userid
               utente_vers,
           ud.dt_creazione,
           ud.fl_unita_doc_firmato,
           ud.ti_esito_verif_firme
               ti_esito_verif_firme_ud,
           ud.ds_msg_esito_verif_firme
               ds_msg_esito_verif_firme_ud,
           ud.nm_sistema_migraz,
           -- info sessione versamento
           ses.cd_versione_ws
               cd_versione_xml,
           xml_rich.bl_xml
               bl_xml_rich_ud,
           xml_rich.ds_hash_xml_vers
               ds_hash_xml_rich_ud,
           xml_rich.ds_algo_hash_xml_vers
               ds_algo_hash_xml_rich_ud,
           xml_rich.cd_encoding_hash_xml_vers
               cd_encoding_hash_xml_rich_ud,
           CASE
               WHEN EXISTS
                        (SELECT *
                           FROM VRS_URN_XML_SESSIONE_VERS urn_xml_rich
                          WHERE urn_xml_rich.id_xml_dati_sessione_vers =
                                xml_rich.id_xml_dati_sessione_vers) THEN
                   (SELECT ds_urn
                     FROM VRS_URN_XML_SESSIONE_VERS urn_xml_rich
                    WHERE urn_xml_rich.id_xml_dati_sessione_vers =
                          xml_rich.id_xml_dati_sessione_vers
                      AND urn_xml_rich.ti_urn = 'ORIGINALE')
               ELSE
                   xml_rich.ds_urn_xml_vers
           END
               ds_urn_xml_rich_ud,
           (SELECT ds_urn
             FROM VRS_URN_XML_SESSIONE_VERS urn_xml_rich
            WHERE urn_xml_rich.id_xml_dati_sessione_vers =
                  xml_rich.id_xml_dati_sessione_vers
              AND urn_xml_rich.ti_urn = 'NORMALIZZATO')
               ds_urn_xml_rich_ud_normaliz,
           (SELECT ds_urn
             FROM VRS_URN_XML_SESSIONE_VERS urn_xml_rich
            WHERE urn_xml_rich.id_xml_dati_sessione_vers =
                  xml_rich.id_xml_dati_sessione_vers
              AND urn_xml_rich.ti_urn = 'INIZIALE')
               ds_urn_xml_rich_ud_iniziale,
           xml_index.bl_xml
               bl_xml_index_ud,
           xml_index.ds_hash_xml_vers
               ds_hash_xml_index_ud,
           xml_index.ds_algo_hash_xml_vers
               ds_algo_hash_xml_index_ud,
           xml_index.cd_encoding_hash_xml_vers
               cd_encoding_hash_xml_index_ud,
           CASE
               WHEN EXISTS
                        (SELECT *
                           FROM VRS_URN_XML_SESSIONE_VERS urn_xml_index
                          WHERE urn_xml_index.id_xml_dati_sessione_vers =
                                xml_index.id_xml_dati_sessione_vers) THEN
                   (SELECT ds_urn
                     FROM VRS_URN_XML_SESSIONE_VERS urn_xml_index
                    WHERE urn_xml_index.id_xml_dati_sessione_vers =
                          xml_index.id_xml_dati_sessione_vers
                      AND urn_xml_index.ti_urn = 'ORIGINALE')
               ELSE
                   xml_index.ds_urn_xml_vers
           END
               ds_urn_xml_index_ud,
           (SELECT ds_urn
             FROM VRS_URN_XML_SESSIONE_VERS urn_xml_index
            WHERE urn_xml_index.id_xml_dati_sessione_vers =
                  xml_index.id_xml_dati_sessione_vers
              AND urn_xml_index.ti_urn = 'NORMALIZZATO')
               ds_urn_xml_index_ud_normaliz,
           (SELECT ds_urn
             FROM VRS_URN_XML_SESSIONE_VERS urn_xml_index
            WHERE urn_xml_index.id_xml_dati_sessione_vers =
                  xml_index.id_xml_dati_sessione_vers
              AND urn_xml_index.ti_urn = 'INIZIALE')
               ds_urn_xml_index_ud_iniziale,
           xml_risp.bl_xml
               bl_xml_risp_ud,
           xml_risp.ds_hash_xml_vers
               ds_hash_xml_risp_ud,
           xml_risp.ds_algo_hash_xml_vers
               ds_algo_hash_xml_risp_ud,
           xml_risp.cd_encoding_hash_xml_vers
               cd_encoding_hash_xml_risp_ud,
           CASE
               WHEN EXISTS
                        (SELECT *
                           FROM VRS_URN_XML_SESSIONE_VERS urn_xml_risp
                          WHERE urn_xml_risp.id_xml_dati_sessione_vers =
                                xml_risp.id_xml_dati_sessione_vers) THEN
                   (SELECT ds_urn
                     FROM VRS_URN_XML_SESSIONE_VERS urn_xml_risp
                    WHERE urn_xml_risp.id_xml_dati_sessione_vers =
                          xml_risp.id_xml_dati_sessione_vers
                      AND urn_xml_risp.ti_urn = 'ORIGINALE')
               ELSE
                   xml_risp.ds_urn_xml_vers
           END
               ds_urn_xml_risp_ud,
           (SELECT ds_urn
             FROM VRS_URN_XML_SESSIONE_VERS urn_xml_risp
            WHERE urn_xml_risp.id_xml_dati_sessione_vers =
                  xml_risp.id_xml_dati_sessione_vers
              AND urn_xml_risp.ti_urn = 'NORMALIZZATO')
               ds_urn_xml_risp_ud_normaliz,
           (SELECT ds_urn
             FROM VRS_URN_XML_SESSIONE_VERS urn_xml_risp
            WHERE urn_xml_risp.id_xml_dati_sessione_vers =
                  xml_risp.id_xml_dati_sessione_vers
              AND urn_xml_risp.ti_urn = 'INIZIALE')
               ds_urn_xml_risp_ud_iniziale,
           xml_rapp.bl_xml
               bl_xml_rapp_ud,
           xml_rapp.ds_hash_xml_vers
               ds_hash_xml_rapp_ud,
           xml_rapp.ds_algo_hash_xml_vers
               ds_algo_hash_xml_rapp_ud,
           xml_rapp.cd_encoding_hash_xml_vers
               cd_encoding_hash_xml_rapp_ud,
           CASE
               WHEN EXISTS
                        (SELECT *
                           FROM VRS_URN_XML_SESSIONE_VERS urn_xml_rapp
                          WHERE urn_xml_rapp.id_xml_dati_sessione_vers =
                                xml_rapp.id_xml_dati_sessione_vers) THEN
                   (SELECT ds_urn
                     FROM VRS_URN_XML_SESSIONE_VERS urn_xml_rapp
                    WHERE urn_xml_rapp.id_xml_dati_sessione_vers =
                          xml_rapp.id_xml_dati_sessione_vers
                      AND urn_xml_rapp.ti_urn = 'ORIGINALE')
               ELSE
                   xml_rapp.ds_urn_xml_vers
           END
               ds_urn_xml_rapp_ud,
           (SELECT ds_urn
             FROM VRS_URN_XML_SESSIONE_VERS urn_xml_rapp
            WHERE urn_xml_rapp.id_xml_dati_sessione_vers =
                  xml_rapp.id_xml_dati_sessione_vers
              AND urn_xml_rapp.ti_urn = 'NORMALIZZATO')
               ds_urn_xml_rapp_ud_normaliz,
           (SELECT ds_urn
             FROM VRS_URN_XML_SESSIONE_VERS urn_xml_rapp
            WHERE urn_xml_rapp.id_xml_dati_sessione_vers =
                  xml_rapp.id_xml_dati_sessione_vers
              AND urn_xml_rapp.ti_urn = 'INIZIALE')
               ds_urn_xml_rapp_ud_iniziale,
           ud.nt_unita_doc,
           -- info documento principale
           doc.id_doc,
           doc.cd_key_doc_vers,
           tipo_doc.nm_tipo_doc,
           doc.dl_doc,
           doc.ds_autore_doc,
           doc.fl_doc_firmato,
           doc.ti_esito_verif_firme
               ti_esito_verif_firme_doc,
           ud.dt_annul,
           ud.ti_annul,
           ud.nt_annul,
           ud.ti_stato_conservazione,
           CASE
               WHEN EXISTS
                        (SELECT *
                           FROM ARO_STRUT_DOC  strut_doc
                                JOIN ARO_COMP_DOC comp
                                    ON (comp.id_strut_doc =
                                        strut_doc.id_strut_doc
                                    AND comp.ds_hash_file_vers IS NOT NULL)
                          WHERE strut_doc.id_doc = doc.id_doc) THEN
                   '1'
               ELSE
                   '0'
           END
               fl_hash_versato,
           ud.cd_key_unita_doc_normaliz,
           ses.cd_ind_ip_client,
           apl_sisvers.nm_sistema_versante,
           ses.nm_utente,
           ses.id_sessione_vers
      FROM ARO_UNITA_DOC  ud
           JOIN ORG_STRUT strut ON (strut.id_strut = ud.id_strut)
           JOIN ORG_ENTE ente ON (ente.id_ente = strut.id_ente)
           JOIN ORG_AMBIENTE amb ON (amb.id_ambiente = ente.id_ambiente)
           JOIN DEC_TIPO_UNITA_DOC tipo_unita
               ON (tipo_unita.id_tipo_unita_doc = ud.id_tipo_unita_doc)
           JOIN IAM_USER usr ON (usr.id_user_iam = ud.id_user_vers)
           JOIN SACER_IAM.usr_user usr_user
               ON (usr_user.id_user_iam = usr.id_user_iam)
           LEFT JOIN SACER_IAM.apl_sistema_versante apl_sisvers
               ON (apl_sisvers.id_sistema_versante =
                   usr_user.id_sistema_versante)
           JOIN VRS_SESSIONE_VERS ses
               ON (ses.id_unita_doc = ud.id_unita_doc
               AND ses.ti_sessione_vers = 'VERSAMENTO'
               AND ses.ti_stato_sessione_vers = 'CHIUSA_OK')
           JOIN VRS_DATI_SESSIONE_VERS dati_ses
               ON (dati_ses.id_sessione_vers = ses.id_sessione_vers
               AND dati_ses.pg_dati_sessione_vers = 1)
           JOIN VRS_XML_DATI_SESSIONE_VERS xml_rich
               ON (xml_rich.id_dati_sessione_vers =
                   dati_ses.id_dati_sessione_vers
               AND xml_rich.ti_xml_dati = 'RICHIESTA')
           LEFT JOIN VRS_XML_DATI_SESSIONE_VERS xml_index
               ON (xml_index.id_dati_sessione_vers =
                   dati_ses.id_dati_sessione_vers
               AND xml_index.ti_xml_dati = 'INDICE_FILE')
           JOIN VRS_XML_DATI_SESSIONE_VERS xml_risp
               ON (xml_risp.id_dati_sessione_vers =
                   dati_ses.id_dati_sessione_vers
               AND xml_risp.ti_xml_dati = 'RISPOSTA')
           LEFT JOIN VRS_XML_DATI_SESSIONE_VERS xml_rapp
               ON (xml_rapp.id_dati_sessione_vers =
                   dati_ses.id_dati_sessione_vers
               AND xml_rapp.ti_xml_dati = 'RAPP_VERS')
           JOIN ARO_DOC doc
               ON (doc.id_unita_doc = ud.id_unita_doc
               AND doc.ti_doc = 'PRINCIPALE')
           JOIN DEC_TIPO_DOC tipo_doc
               ON (tipo_doc.id_tipo_doc = doc.id_tipo_doc);

-- changeset root:1751897635013-260
COMMENT ON COLUMN ARO_V_VIS_UNITA_DOC_IAM.ID_UNITA_DOC IS 'PK.1 relativa a tabella ARO_UNITA_DOC';

-- changeset root:1751897635013-261
CREATE OR REPLACE FORCE VIEW "VRS_V_LIS_XML_DOC_URN_DA_CALC" ("ID_DOC", "ID_UNITA_DOC", "CD_REGISTRO_KEY_UNITA_DOC", "CD_REGISTRO_NORMALIZ", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC_NORMALIZ", "NM_STRUT", "CD_STRUT_NORMALIZ", "NM_ENTE", "CD_ENTE_NORMALIZ", "NI_ORD_DOC", "ID_XML_DATI_SESSIONE_VERS", "TI_XML_DATI", "DS_URN_XML_VERS") AS select 
 doc.id_doc,
 ud.id_unita_doc,
 ud.cd_registro_key_unita_doc, reg.cd_registro_normaliz,
 ud.aa_key_unita_doc,
 ud.cd_key_unita_doc, ud.cd_key_unita_doc_normaliz,
 strut.nm_strut, strut.cd_strut_normaliz,
 ente.nm_ente, ente.cd_ente_normaliz,
 doc.ni_ord_doc,
 
 xml_dati_ses.id_xml_dati_sessione_vers,
 xml_dati_ses.ti_xml_dati,
 xml_dati_ses.ds_urn_xml_vers
 
from ARO_DOC doc
join ARO_UNITA_DOC ud
	on (ud.id_unita_doc = doc.id_unita_doc)
join DEC_REGISTRO_UNITA_DOC reg
	on (reg.id_registro_unita_doc = ud.id_registro_unita_doc)
join ORG_STRUT strut
	on (strut.id_strut = ud.id_strut)
join ORG_ENTE ente
	on (ente.id_ente = strut.id_ente)
join VRS_SESSIONE_VERS ses
	on (ses.id_doc = doc.id_doc
  and ses.TI_SESSIONE_VERS = 'AGGIUNGI_DOCUMENTO')
join VRS_DATI_SESSIONE_VERS dati_ses
	on (dati_ses.id_sessione_vers = ses.id_sessione_vers)
join VRS_XML_DATI_SESSIONE_VERS xml_dati_ses
	on (xml_dati_ses.id_dati_sessione_vers = dati_ses.id_dati_sessione_vers)

where doc.ti_creazione = 'AGGIUNTA_DOCUMENTO'
and not exists (select *
				  from VRS_URN_XML_SESSIONE_VERS urn
				  where urn.id_xml_dati_sessione_vers = xml_dati_ses.id_xml_dati_sessione_vers
				  );

-- changeset root:1751897635013-262
COMMENT ON COLUMN VRS_V_LIS_XML_DOC_URN_DA_CALC.ID_XML_DATI_SESSIONE_VERS IS 'PK.1';

-- changeset root:1751897635013-263
CREATE OR REPLACE FORCE VIEW "VRS_V_LIS_XML_UD_URN_DA_CALC" ("ID_UNITA_DOC", "CD_REGISTRO_KEY_UNITA_DOC", "CD_REGISTRO_NORMALIZ", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC_NORMALIZ", "NM_STRUT", "CD_STRUT_NORMALIZ", "NM_ENTE", "CD_ENTE_NORMALIZ", "ID_XML_DATI_SESSIONE_VERS", "TI_XML_DATI", "DS_URN_XML_VERS") AS select 
 ud.id_unita_doc,
 ud.cd_registro_key_unita_doc, reg.cd_registro_normaliz,
 ud.aa_key_unita_doc,
 ud.cd_key_unita_doc, ud.cd_key_unita_doc_normaliz,
 strut.nm_strut, strut.cd_strut_normaliz,
 ente.nm_ente, ente.cd_ente_normaliz,
 
 xml_dati_ses.id_xml_dati_sessione_vers,
 xml_dati_ses.ti_xml_dati,
 xml_dati_ses.ds_urn_xml_vers
 
from ARO_UNITA_DOC ud
join DEC_REGISTRO_UNITA_DOC reg
	on (reg.id_registro_unita_doc = ud.id_registro_unita_doc)
join ORG_STRUT strut
	on (strut.id_strut = ud.id_strut)
join ORG_ENTE ente
	on (ente.id_ente = strut.id_ente)
join VRS_SESSIONE_VERS ses
	on (ses.id_unita_doc = ud.id_unita_doc
  and ses.TI_SESSIONE_VERS = 'VERSAMENTO')
join VRS_DATI_SESSIONE_VERS dati_ses
	on (dati_ses.id_sessione_vers = ses.id_sessione_vers)
join VRS_XML_DATI_SESSIONE_VERS xml_dati_ses
	on (xml_dati_ses.id_dati_sessione_vers = dati_ses.id_dati_sessione_vers)

where not exists (select *
				  from VRS_URN_XML_SESSIONE_VERS urn
				  where urn.id_xml_dati_sessione_vers = xml_dati_ses.id_xml_dati_sessione_vers
				  );

-- changeset root:1751897635013-264
COMMENT ON COLUMN VRS_V_LIS_XML_UD_URN_DA_CALC.ID_XML_DATI_SESSIONE_VERS IS 'PK.1';

-- changeset root:1751897635013-265
CREATE OR REPLACE FORCE VIEW "ARO_V_RIC_UNITA_DOC" ("ID_UNITA_DOC", "ID_STRUT_UNITA_DOC", "CD_REGISTRO_KEY_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "ID_SUB_STRUT", "DT_CREAZIONE", "FL_UNITA_DOC_FIRMATO", "TI_ESITO_VERIF_FIRME", "DS_MSG_ESITO_VERIF_FIRME", "ID_TIPO_UNITA_DOC", "ID_STRUT_TIPO_UNITA_DOC", "NM_TIPO_UNITA_DOC", "FL_FORZA_ACCETTAZIONE", "FL_FORZA_CONSERVAZIONE", "DS_KEY_ORD", "DL_OGGETTO_UNITA_DOC", "DT_REG_UNITA_DOC", "TI_CONSERVAZIONE", "NM_SISTEMA_MIGRAZ", "NI_ALLEG", "NI_ANNESSI", "NI_ANNOT", "ID_DOC", "TI_DOC", "ID_TIPO_DOC", "TI_STATO_DOC", "DL_DOC", "DS_AUTORE_DOC", "CD_KEY_DOC_VERS", "FL_FORZA_COLLEGAMENTO", "CD_VERSIONE_WS", "FL_AGG_META", "NM_TIPO_DOC_PRINC", "FL_DOC_AGGIUNTI", "FL_UNITA_DOC_ANNUL", "FL_DOC_ANNUL", "TI_STATO_CONSERVAZIONE", "TI_STATO_UD_ELENCO_VERS", "TI_STATO_DOC_ELENCO_VERS", "FL_HASH_VERS", "CD_VERSIONE_XSD_UD", "CD_VERSIONE_XSD_DOC", "DS_LISTA_STATI_ELENCO_VERS", "FL_ESISTE_PROFILO_NORMATIVO") AS SELECT -- ===============================================================================
           -- colonne unità documentaria
           ud.id_unita_doc,
           ud.id_strut
               id_strut_unita_doc,
           ud.cd_registro_key_unita_doc,
           ud.aa_key_unita_doc,
           ud.cd_key_unita_doc,
           ud.id_sub_strut,
           ud.dt_creazione,
           ud.fl_unita_doc_firmato,
           ud.ti_esito_verif_firme,
           ud.ds_msg_esito_verif_firme,
           ud.id_tipo_unita_doc,
           tipo_unita_doc.id_strut
               id_strut_tipo_unita_doc,
           tipo_unita_doc.nm_tipo_unita_doc,
           ud.fl_forza_accettazione,
           ud.fl_forza_conservazione,
           ud.ds_key_ord,
           ud.dl_oggetto_unita_doc,
           ud.dt_reg_unita_doc,
           ud.ti_conservazione,
           ud.nm_sistema_migraz,
           ud.ni_alleg,
           ud.ni_annessi,
           ud.ni_annot,
           -- ===============================================================================
           -- colonne documenti
           doc.id_doc,
           doc.ti_doc,
           doc.id_tipo_doc,
           doc.ti_stato_doc,
           doc.dl_doc,
           doc.ds_autore_doc,
           doc.cd_key_doc_vers,
           --  colonne aggiunte

           ud.fl_forza_collegamento,
           -- 30055
            (SELECT ses.cd_versione_ws
               FROM VRS_SESSIONE_VERS ses
              WHERE ses.id_unita_doc = ud.id_unita_doc
                AND ses.ti_sessione_vers = 'VERSAMENTO'
                AND ses.ti_stato_sessione_vers = 'CHIUSA_OK')
               cd_versione_ws,
           -- 27483
           CASE
               WHEN EXISTS
                        (SELECT 1
                           FROM ARO_UPD_UNITA_DOC upd_ud
                          WHERE upd_ud.id_unita_doc = ud.id_unita_doc) THEN
                   '1'
               ELSE
                   '0'
           END
               fl_agg_meta,
           (SELECT tipo_doc_princ.nm_tipo_doc
              FROM ARO_DOC  doc_princ
                   JOIN DEC_TIPO_DOC tipo_doc_princ
                       ON (tipo_doc_princ.id_tipo_doc = doc_princ.id_tipo_doc)
             WHERE doc_princ.id_unita_doc = ud.id_unita_doc
               AND doc_princ.ti_doc = 'PRINCIPALE')
               nm_tipo_doc_princ,
           CASE
               WHEN ud.dt_creazione != doc.dt_creazione THEN '1'
               ELSE '0'
           END
               fl_doc_aggiunti,
           CASE
               WHEN ud.dt_annul = TO_DATE ('31/12/2444', 'dd/mm/yyyy') THEN
                   '0'
               ELSE
                   '1'
           END
               fl_unita_doc_annul,
           CASE
               WHEN doc.dt_annul = TO_DATE ('31/12/2444', 'dd/mm/yyyy') THEN
                   '0'
               ELSE
                   '1'
           END
               fl_doc_annul,
           --  colonne aggiunte

           ud.ti_stato_conservazione,
           ud.ti_stato_ud_elenco_vers,
           doc.ti_stato_doc_elenco_vers,
           CASE
               WHEN EXISTS
                        (SELECT *
                           FROM ARO_STRUT_DOC  strut_doc
                                JOIN ARO_COMP_DOC comp
                                    ON (comp.id_strut_doc =
                                        strut_doc.id_strut_doc
                                    AND comp.ds_hash_file_vers IS NOT NULL)
                          WHERE strut_doc.id_doc = doc.id_doc) THEN
                   '1'
               ELSE
                   '0'
           END
               fl_hash_vers,
           (SELECT xsd.cd_versione_xsd
              FROM ARO_USO_XSD_DATI_SPEC  uso_xsd
                   JOIN DEC_XSD_DATI_SPEC xsd
                       ON (xsd.id_xsd_dati_spec = uso_xsd.id_xsd_dati_spec)
             WHERE uso_xsd.id_unita_doc = ud.id_unita_doc
               AND uso_xsd.ti_uso_xsd = 'VERS'
               AND uso_xsd.ti_entita_sacer = 'UNI_DOC')
               cd_versione_xsd_ud,
           (SELECT xsd.cd_versione_xsd
              FROM ARO_USO_XSD_DATI_SPEC  uso_xsd
                   JOIN DEC_XSD_DATI_SPEC xsd
                       ON (xsd.id_xsd_dati_spec = uso_xsd.id_xsd_dati_spec)
             WHERE uso_xsd.id_doc = doc.id_doc
               AND uso_xsd.ti_uso_xsd = 'VERS'
               AND uso_xsd.ti_entita_sacer = 'DOC')
               cd_versione_xsd_doc,
           (SELECT LISTAGG (tmp.ti_stato_elenco_vers, '; ')
                       WITHIN GROUP (ORDER BY tmp.ti_stato_elenco_vers)
              FROM (SELECT ud_elenco.ti_stato_ud_elenco_vers    ti_stato_elenco_vers
                      FROM ARO_UNITA_DOC ud_elenco
                     WHERE ud_elenco.id_unita_doc = ud.id_unita_doc
                    UNION
                    SELECT DISTINCT
                           doc_elenco.ti_stato_doc_elenco_vers    ti_stato_elenco_vers
                      FROM ARO_DOC doc_elenco
                     WHERE doc_elenco.id_unita_doc = ud.id_unita_doc
                       AND doc_elenco.ti_stato_doc_elenco_vers IS NOT NULL)
                   tmp)
               ds_lista_stati_elenco_vers,
           CASE
               WHEN EXISTS
                        (SELECT xms.id_xml_modello_sessione_vers
                           FROM Vrs_Xml_Modello_Sessione_Vers  xms
                                JOIN
                                dec_uso_modello_xsd_uni_doc
                                uso_modello_xsd_uni_doc
                                    ON (xms.id_uso_modello_xsd_uni_doc =
                                        uso_modello_xsd_uni_doc.id_uso_modello_xsd_uni_doc)
                                JOIN dec_Modello_Xsd_Ud modello_xsd
                                    ON (modello_xsd.id_modello_xsd_ud =
                                        uso_modello_xsd_uni_doc.id_modello_xsd_ud)
                                JOIN vrs_Dati_Sessione_Vers dati_ses
                                    ON (xms.id_dati_sessione_vers =
                                        dati_ses.id_dati_sessione_vers)
                                JOIN vrs_Sessione_Vers ses
                                    ON (ses.id_sessione_vers =
                                        dati_ses.id_sessione_vers)
                          WHERE modello_xsd.ti_Uso_Modello_Xsd = 'VERS'
                            AND modello_xsd.ti_Modello_Xsd =
                                'PROFILO_NORMATIVO_UNITA_DOC'
                            AND dati_ses.ti_Dati_Sessione_Vers = 'XML_DOC'
                            AND ses.ti_Stato_Sessione_Vers = 'CHIUSA_OK'
                            AND ses.ti_Sessione_Vers = 'VERSAMENTO'
                            AND ses.id_unita_doc = ud.id_unita_doc
                            AND ses.id_doc IS NULL) THEN
                   '1'
               ELSE
                   '0'
           END
               fl_esiste_profilo_normativo
      FROM ARO_UNITA_DOC  ud
           JOIN DEC_TIPO_UNITA_DOC tipo_unita_doc
               ON (tipo_unita_doc.id_tipo_unita_doc = ud.id_tipo_unita_doc)
           JOIN ARO_DOC doc ON (doc.id_unita_doc = ud.id_unita_doc);

-- changeset root:1751897635013-266
CREATE OR REPLACE FORCE VIEW "MON_V_RIC_CONTA_BY_STATO_CONSERV_NEW" ("ID_CONTA_BY_STATO_CONSERV", "DT_RIF_CONTA", "ID_STRUT", "ID_SUB_STRUT", "AA_KEY_UNITA_DOC", "ID_REGISTRO_UNITA_DOC", "ID_TIPO_UNITA_DOC", "ID_TIPO_DOC_PRINC", "NI_COMP_AIP_GENERATO", "NI_COMP_AIP_IN_AGGIORN", "NI_COMP_PRESA_IN_CARICO", "NI_COMP_IN_VOLUME", "NI_COMP_ANNUL") AS SELECT "ID_CONTA_BY_STATO_CONSERV",
           "DT_RIF_CONTA",
           "ID_STRUT",
           "ID_SUB_STRUT",
           "AA_KEY_UNITA_DOC",
           "ID_REGISTRO_UNITA_DOC",
           "ID_TIPO_UNITA_DOC",
           "ID_TIPO_DOC_PRINC",
           "NI_COMP_AIP_GENERATO",
           "NI_COMP_AIP_IN_AGGIORN",
           "NI_COMP_PRESA_IN_CARICO",
           "NI_COMP_IN_VOLUME",
           "NI_COMP_ANNUL"
      FROM mon_conta_by_Stato_conserv_new
    UNION ALL
    SELECT "ID_CONTA_BY_STATO_CONSERV",
           "DT_RIF_CONTA",
           "ID_STRUT",
           "ID_SUB_STRUT",
           "AA_KEY_UNITA_DOC",
           "ID_REGISTRO_UNITA_DOC",
           "ID_TIPO_UNITA_DOC",
           "ID_TIPO_DOC_PRINC",
           "NI_COMP_AIP_GENERATO",
           "NI_COMP_AIP_IN_AGGIORN",
           "NI_COMP_PRESA_IN_CARICO",
           "NI_COMP_IN_VOLUME",
           "NI_COMP_ANNUL"
      FROM mon_conta_by_Stato_conserv_new_read_only;

-- changeset root:1751897635013-267
CREATE OR REPLACE FORCE VIEW "ARO_V_LISAIPUD_URNDACALC_BYUD" ("ID_UNITA_DOC", "ID_VER_INDICE_AIP") AS select
 ix_aip.id_unita_doc,
 ver_ix_aip.id_ver_indice_aip
from ARO_INDICE_AIP_UD ix_aip
join ARO_VER_INDICE_AIP_UD ver_ix_aip
	on (ver_ix_aip.id_indice_aip = ix_aip.id_indice_aip)

where not exists (select *
				  from ARO_URN_VER_INDICE_AIP_UD urn
				  where urn.id_ver_indice_aip = ver_ix_aip.id_ver_indice_aip
				  );

-- changeset root:1751897635013-268
COMMENT ON COLUMN ARO_V_LISAIPUD_URNDACALC_BYUD.ID_UNITA_DOC IS 'PK.1';

-- changeset root:1751897635013-269
COMMENT ON COLUMN ARO_V_LISAIPUD_URNDACALC_BYUD.ID_VER_INDICE_AIP IS 'PK.2';

-- changeset root:1751897635013-270
CREATE OR REPLACE FORCE VIEW "SER_V_LIS_UD_APPART_VOL_SERIE" ("ID_UD_APPART_VER_SERIE", "ID_CONTENUTO_VER_SERIE", "ID_UNITA_DOC", "CD_UD_SERIE", "DT_UD_SERIE", "INFO_UD_SERIE", "DS_KEY_ORD_UD_SERIE", "PG_UD_SERIE", "ID_VOL_VER_SERIE", "CD_KEY_UNITA_DOC", "FL_UNITA_DOC_ANNUL", "FL_PRESENTE_ALTRA_SERIE", "DS_URN", "DS_HASH") AS select 
 ud_serie.id_ud_appart_ver_serie, 
 ud_serie.id_contenuto_ver_serie, 
 ud_serie.id_unita_doc, 
 ud_serie.cd_ud_serie, ud_serie.dt_ud_serie, ud_serie.info_ud_serie, ud_serie.ds_key_ord_ud_serie, ud_serie.pg_ud_serie, 
 ud_serie.id_vol_ver_serie,
 
 ud.cd_registro_key_unita_doc || '-' || ud.aa_key_unita_doc || '-' || ud.cd_key_unita_doc cd_key_unita_doc,
 case
	when ud.dt_annul != to_date('31/12/2444', 'dd/mm/yyyy')
		then '1'
		else '0'
 end fl_unita_doc_annul,

 case
	when exists (select *
				 from ARO_UD_APPART_VER_SERIE ud_altra_serie, SER_CONTENUTO_VER_SERIE conten_altra_serie, SER_VER_SERIE ver_altra_serie, SER_SERIE altra_serie
				 where ud_altra_serie.id_unita_doc = ud_serie.id_unita_doc
				 and conten_altra_serie.id_contenuto_ver_serie = ud_altra_serie.id_contenuto_ver_serie
				 and ver_altra_serie.id_ver_serie = conten_altra_serie.id_ver_serie
				 and altra_serie.id_serie = ver_altra_serie.id_serie

				 and altra_serie.id_serie != ver_serie.id_serie
				 and altra_serie.dt_annul = to_date('31/12/2444 00:00:00', 'dd/mm/yyyy hh24:mi:ss')
				 )
		then '1'
		else '0'
 end fl_presente_altra_serie,

 case
	when exists (select *
				 from ARO_URN_VER_INDICE_AIP_UD urn_ver
				 where urn_ver.id_ver_indice_aip = ver_ix_aip_ud.id_ver_indice_aip
				 and urn_ver.ti_urn = 'NORMALIZZATO'
				 )
		then (select ds_urn
			 from ARO_URN_VER_INDICE_AIP_UD urn_ver
			 where urn_ver.id_ver_indice_aip = ver_ix_aip_ud.id_ver_indice_aip
			 and urn_ver.ti_urn = 'NORMALIZZATO'
			 )
		else ver_ix_aip_ud.ds_urn
 end ds_urn,
 ver_ix_aip_ud.ds_hash_indice_aip ds_hash

from ARO_UD_APPART_VER_SERIE ud_serie
join ARO_UNITA_DOC ud
 on (ud.id_unita_doc = ud_serie.id_unita_doc)

join SER_CONTENUTO_VER_SERIE conten
 on (conten.id_contenuto_ver_serie = ud_serie.id_contenuto_ver_serie)
join SER_VER_SERIE ver_serie
 on (ver_serie.id_ver_serie = conten.id_ver_serie)
join ARO_VER_INDICE_AIP_UD ver_ix_aip_ud
 on (ver_ix_aip_ud.id_ver_indice_aip = ud_serie.id_ver_indice_aip_ud);

-- changeset root:1751897635013-271
COMMENT ON COLUMN SER_V_LIS_UD_APPART_VOL_SERIE.ID_UD_APPART_VER_SERIE IS 'PK.1';

-- changeset root:1751897635013-272
CREATE OR REPLACE FORCE VIEW "MON_V_RIEP_STRUT_IAM" ("ID_USER_IAM", "ID_STRUT", "ID_AMBIENTE", "NM_AMBIENTE", "NM_ENTE", "NM_STRUT", "FL_SESSIONI_FALLITE_NO_RIS", "FL_DOC_SENZA_ELENCO", "FL_ELENCO_CHIUSO", "FL_ERR_FMT_NUMERO", "FL_RICH_ANNUL_VERS_APERTA") AS SELECT abil_org.id_user_iam,
           abil_org.id_organiz_applic,
           amb.id_ambiente,
           amb.nm_ambiente,
           ente.nm_ente,
           strut.nm_strut,
           CASE
               WHEN EXISTS
                        (SELECT 1
                           FROM VRS_SESSIONE_VERS_ko ses
                          WHERE ses.id_strut = abil_org.id_organiz_applic
                            AND ti_sessione_vers IN ('VERSAMENTO')
                            --AND ti_stato_sessione_vers = 'CHIUSA_ERR'
                            AND fl_sessione_err_verif = '0'
                            AND NOT EXISTS
                                    (SELECT 1
                                       FROM ARO_UNITA_DOC ud
                                      WHERE ud.id_strut = ses.id_strut
                                        AND ud.cd_registro_key_unita_doc =
                                            ses.cd_registro_key_unita_doc
                                        AND ud.aa_key_unita_doc =
                                            ses.aa_key_unita_doc
                                        AND ud.cd_key_unita_doc =
                                            ses.cd_key_unita_doc))
                 OR EXISTS
                        (SELECT 1
                           FROM VRS_SESSIONE_VERS_ko ses
                          WHERE ses.id_strut = abil_org.id_organiz_applic
                            AND ti_sessione_vers IN ('AGGIUNGI_DOCUMENTO')
                            AND ti_stato_sessione_vers = 'CHIUSA_ERR'
                            AND fl_sessione_err_verif = '0'
                            AND ((EXISTS
                                      (SELECT 1
                                         FROM VRS_DATI_SESSIONE_VERS_ko dato_ses,
                                              VRS_ERR_SESSIONE_VERS_ko  err
                                        WHERE dato_ses.id_sessione_vers_ko =
                                              ses.id_sessione_vers_ko
                                          AND err.id_dati_sessione_vers_ko =
                                              dato_ses.id_dati_sessione_vers_ko
                                          AND err.cd_err IN
                                                  ('UD-005', 'UD-005-001'))
                              AND NOT EXISTS
                                      (SELECT 1
                                         FROM ARO_UNITA_DOC ud
                                        WHERE ud.id_strut = ses.id_strut
                                          AND ud.cd_registro_key_unita_doc =
                                              ses.cd_registro_key_unita_doc
                                          AND ud.aa_key_unita_doc =
                                              ses.aa_key_unita_doc
                                          AND ud.cd_key_unita_doc =
                                              ses.cd_key_unita_doc))
                              OR NOT EXISTS
                                     (SELECT 1
                                        FROM ARO_UNITA_DOC ud, ARO_DOC doc
                                       WHERE ud.id_strut = ses.id_strut
                                         AND ud.cd_registro_key_unita_doc =
                                             ses.cd_registro_key_unita_doc
                                         AND ud.aa_key_unita_doc =
                                             ses.aa_key_unita_doc
                                         AND ud.cd_key_unita_doc =
                                             ses.cd_key_unita_doc
                                         AND doc.id_unita_doc =
                                             ud.id_unita_doc
                                         AND doc.cd_key_doc_vers =
                                             ses.cd_key_doc_vers))) THEN
                   '1'
               ELSE
                   '0'
           END    fl_sessioni_fallite_no_ris,
           CASE
               WHEN EXISTS
                        (SELECT 1
                           FROM ELV_UD_VERS_DA_ELAB_ELENCO ud
                          WHERE ud.id_strut = abil_org.id_organiz_applic
                            AND ud.ti_stato_ud_da_elab = 'NON_SELEZ_SCHED')
                 OR EXISTS
                        (SELECT 1
                           FROM ELV_DOC_AGG_DA_ELAB_ELENCO doc
                          WHERE doc.id_strut = abil_org.id_organiz_applic
                            AND doc.ti_stato_doc_da_elab = 'NON_SELEZ_SCHED') THEN
                   '1'
               ELSE
                   '0'
           END    fl_doc_senza_elenco,
           CASE
               WHEN EXISTS
                        (SELECT 1
                           FROM ELV_ELENCO_VERS_DA_ELAB elenco
                          WHERE elenco.id_strut = abil_org.id_organiz_applic
                            AND elenco.ti_stato_elenco = 'CHIUSO') THEN
                   '1'
               ELSE
                   '0'
           END    fl_elenco_chiuso,
           CASE
               WHEN EXISTS
                        (SELECT 1
                           FROM DEC_REGISTRO_UNITA_DOC         reg,
                                DEC_AA_REGISTRO_UNITA_DOC      aa_reg,
                                DEC_ERR_AA_REGISTRO_UNITA_DOC  err_aa_reg
                          WHERE reg.id_strut = abil_org.id_organiz_applic
                            AND aa_reg.id_registro_unita_doc =
                                reg.id_registro_unita_doc
                            AND err_aa_reg.id_aa_registro_unita_doc =
                                aa_reg.id_aa_registro_unita_doc) THEN
                   '1'
               ELSE
                   '0'
           END    fl_err_fmt_numero,
           CASE
               WHEN EXISTS
                        (SELECT 1
                           FROM ARO_RICH_ANNUL_VERS        rich_annul,
                                ARO_STATO_RICH_ANNUL_VERS  stato_rich
                          WHERE rich_annul.id_strut =
                                abil_org.id_organiz_applic
                            AND stato_rich.id_stato_rich_annul_vers =
                                rich_annul.id_stato_rich_annul_vers_cor
                            AND stato_rich.ti_stato_rich_annul_vers =
                                'APERTA') THEN
                   '1'
               ELSE
                   '0'
           END    fl_rich_annul_vers_aperta
      FROM IAM_ABIL_ORGANIZ  abil_org
           JOIN ORG_STRUT strut
               ON (strut.id_strut = abil_org.id_organiz_applic
               AND strut.fl_cessato = 0)
           JOIN ORG_ENTE ente
               ON (ente.id_ente = strut.id_ente
               AND ente.tipo_def_template_ente = 'NO_TEMPLATE'
               AND ente.fl_cessato = 0)
           JOIN ORG_AMBIENTE amb ON (amb.id_ambiente = ente.id_ambiente);

-- changeset root:1751897635013-273
COMMENT ON COLUMN MON_V_RIEP_STRUT_IAM.ID_STRUT IS 'PK.1 relativa a tabella ORG_STRUT';

-- changeset root:1751897635013-274
CREATE OR REPLACE FORCE VIEW "DEC_V_CHK_FMT_NUMERO" ("ID_STRUT", "ID_REGISTRO_UNITA_DOC", "ID_AA_REGISTRO_UNITA_DOC", "FL_FMT_NUMERO_OK") AS select
 reg.id_strut,
 reg.id_registro_unita_doc,
 aa_reg.id_aa_registro_unita_doc,
 case
	when aa_reg.fl_upd_fmt_numero = '1'		-- e' in corso il controllo formato numero o deve essere svolto
		then null
		else
			case
				when exists (select *
							from DEC_ERR_AA_REGISTRO_UNITA_DOC err_reg
							where err_reg.id_aa_registro_unita_doc = aa_reg.id_aa_registro_unita_doc
							)
				or exists (select *
						   from DEC_WARN_AA_REGISTRO_UD warn_reg
						   where warn_reg.id_aa_registro_unita_doc = aa_reg.id_aa_registro_unita_doc
						   and warn_reg.fl_warn_aa_registro_unita_doc = '1'
						   )
					then '0'
					else '1'
			end
 end fl_fmt_numero_ok
from DEC_REGISTRO_UNITA_DOC reg
join DEC_AA_REGISTRO_UNITA_DOC aa_reg
 on (aa_reg.id_registro_unita_doc = reg.id_registro_unita_doc);

-- changeset root:1751897635013-275
COMMENT ON COLUMN DEC_V_CHK_FMT_NUMERO.ID_AA_REGISTRO_UNITA_DOC IS 'PK.1';

-- changeset root:1751897635013-276
CREATE OR REPLACE FORCE VIEW "ELV_V_SEL_USR_INDICE_ELENCO" ("ID_ELENCO_VERS", "NM_USERID") AS select distinct ud.id_elenco_vers, usr.nm_userid
from ARO_UNITA_DOC ud
join VRS_SESSIONE_VERS ses_ud
 on (ses_ud.id_unita_doc = ud.id_unita_doc)
join IAM_USER usr
 on (usr.id_user_iam = ses_ud.id_user)

UNION

select distinct doc.id_elenco_vers, usr.nm_userid
from ARO_DOC doc
join VRS_SESSIONE_VERS ses_doc
 on (ses_doc.id_doc = doc.id_doc)
join IAM_USER usr
 on (usr.id_user_iam = ses_doc.id_user)
 
UNION

select distinct upd.id_elenco_vers, usr.nm_userid
from ARO_UPD_UNITA_DOC upd
join IAM_USER usr
 on (usr.id_user_iam = upd.id_user_iam_vers);

-- changeset root:1751897635013-277
COMMENT ON COLUMN ELV_V_SEL_USR_INDICE_ELENCO.ID_ELENCO_VERS IS 'PK.1';

-- changeset root:1751897635013-278
COMMENT ON COLUMN ELV_V_SEL_USR_INDICE_ELENCO.NM_USERID IS 'PK.2';

-- changeset root:1751897635013-279
CREATE OR REPLACE FORCE VIEW "VRS_V_VERS_FALLITI_DA_VERIF" ("ID_STRUT", "ID_SESSIONE_VERS", "DT_APERTURA", "CD_REGISTRO_KEY_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "CD_KEY_DOC_VERS") AS select 
 vers_da_verif.id_strut, vers_da_verif.id_sessione_vers, vers_da_verif.dt_apertura, 
 vers_da_verif.cd_registro_key_unita_doc, vers_da_verif.aa_key_unita_doc, vers_da_verif.cd_key_unita_doc, null cd_key_doc_vers

from VRS_SESSIONE_VERS vers_da_verif
where vers_da_verif.ti_sessione_vers = 'VERSAMENTO'
and vers_da_verif.ti_stato_sessione_vers = 'CHIUSA_ERR'
and vers_da_verif.fl_sessione_err_verif  = '0'

and exists (select *
			from VRS_SESSIONE_VERS vers_verif
			where vers_verif.id_strut = vers_da_verif.id_strut
			and vers_verif.cd_registro_key_unita_doc = vers_da_verif.cd_registro_key_unita_doc
			and vers_verif.aa_key_unita_doc = vers_da_verif.aa_key_unita_doc
			and vers_verif.cd_key_unita_doc = vers_da_verif.cd_key_unita_doc
			
			and vers_verif.ti_sessione_vers = 'VERSAMENTO'
			and vers_verif.ti_stato_sessione_vers = 'CHIUSA_ERR'
			and vers_verif.fl_sessione_err_verif  = '1'
			
			and vers_verif.ds_err_princ = vers_da_verif.ds_err_princ
			and vers_verif.ni_file_err = vers_da_verif.ni_file_err
			)

and not exists (select *
 			    from ARO_UNITA_DOC ud
			    where ud.id_strut = vers_da_verif.id_strut
			    and ud.cd_registro_key_unita_doc = vers_da_verif.cd_registro_key_unita_doc
			    and ud.aa_key_unita_doc = vers_da_verif.aa_key_unita_doc
			    and ud.cd_key_unita_doc = vers_da_verif.cd_key_unita_doc
			    and ud.dt_annul >= trunc(vers_da_verif.dt_apertura )
			   )

UNION

select 
 agg_da_verif.id_strut, agg_da_verif.id_sessione_vers, agg_da_verif.dt_apertura, 
 agg_da_verif.cd_registro_key_unita_doc, agg_da_verif.aa_key_unita_doc, agg_da_verif.cd_key_unita_doc, agg_da_verif.cd_key_doc_vers
 
from VRS_SESSIONE_VERS agg_da_verif
where agg_da_verif.ti_sessione_vers = 'AGGIUNGI_DOCUMENTO'
and agg_da_verif.ti_stato_sessione_vers = 'CHIUSA_ERR'
and agg_da_verif.fl_sessione_err_verif  = '0'
and exists (select *
			from VRS_SESSIONE_VERS agg_verif
			where agg_verif.id_strut = agg_da_verif.id_strut
			and agg_verif.cd_registro_key_unita_doc = agg_da_verif.cd_registro_key_unita_doc
			and agg_verif.aa_key_unita_doc = agg_da_verif.aa_key_unita_doc
			and agg_verif.cd_key_unita_doc = agg_da_verif.cd_key_unita_doc
			and agg_verif.cd_key_doc_vers = agg_da_verif.cd_key_doc_vers

			and agg_verif.ti_sessione_vers = 'AGGIUNGI_DOCUMENTO'
			and agg_verif.ti_stato_sessione_vers = 'CHIUSA_ERR'
			and agg_verif.fl_sessione_err_verif  = '1'

			and agg_verif.ds_err_princ = agg_da_verif.ds_err_princ
			and agg_verif.ni_file_err = agg_da_verif.ni_file_err
			)

and (not exists (select *
				from ARO_UNITA_DOC ud
				where ud.id_strut = agg_da_verif.id_strut
				and ud.cd_registro_key_unita_doc = agg_da_verif.cd_registro_key_unita_doc
				and ud.aa_key_unita_doc = agg_da_verif.aa_key_unita_doc
				and ud.cd_key_unita_doc = agg_da_verif.cd_key_unita_doc
				and ud.dt_annul >= trunc(agg_da_verif.dt_apertura)
				)
		or not exists (select *
						from ARO_UNITA_DOC ud, ARO_DOC doc
						where ud.id_strut = agg_da_verif.id_strut
						and ud.cd_registro_key_unita_doc = agg_da_verif.cd_registro_key_unita_doc
						and ud.aa_key_unita_doc = agg_da_verif.aa_key_unita_doc
						and ud.cd_key_unita_doc = agg_da_verif.cd_key_unita_doc
						and doc.id_unita_doc = ud.id_unita_doc
						and doc.cd_key_doc_vers = agg_da_verif.cd_key_doc_vers
						and doc.dt_annul >= trunc(agg_da_verif.dt_apertura)
						)
			);

-- changeset root:1751897635013-280
COMMENT ON COLUMN VRS_V_VERS_FALLITI_DA_VERIF.ID_SESSIONE_VERS IS 'PK.1';

-- changeset root:1751897635013-281
CREATE OR REPLACE FORCE VIEW "SER_V_SEL_UD_NOVERS" ("ID_VER_SERIE", "ID_SERIE", "ID_UNITA_DOC_NON_VERS", "AA_KEY_UNITA_DOC") AS select distinct
 ver_serie.id_ver_serie,
 ver_serie.id_serie,
 ud_non_vers.id_unita_doc_non_vers,
 ud_non_vers.aa_key_unita_doc
 
from SER_VER_SERIE ver_serie
join SER_SERIE serie
 on (serie.id_serie = ver_serie.id_serie)
join DEC_TIPO_SERIE ti_serie
 on (ti_serie.id_tipo_serie = serie.id_tipo_serie)
join DEC_TIPO_SERIE_UD ti_serie_ud
 on (ti_serie_ud.id_tipo_serie = ti_serie.id_tipo_serie)
join DEC_REGISTRO_UNITA_DOC reg
 on (reg.id_registro_unita_doc = ti_serie_ud.id_registro_unita_doc)

join VRS_UNITA_DOC_NON_VERS ud_non_vers
 on (ud_non_vers.id_strut = serie.id_strut
 and ud_non_vers.cd_registro_key_unita_doc = reg.cd_registro_unita_doc )
 
where exists (select *
			  from VRS_SESSIONE_VERS ses
			  where ses.id_strut = ud_non_vers.id_strut
			  and ses.cd_registro_key_unita_doc = ud_non_vers.cd_registro_key_unita_doc
			  and ses.aa_key_unita_doc = ud_non_vers.aa_key_unita_doc
			  and ses.cd_key_unita_doc = ud_non_vers.cd_key_unita_doc
			  
			  and (ses.fl_sessione_err_verif = '0'
			  or (ses.fl_sessione_err_verif = '1'
			  and ses.fl_sessione_err_non_risolub = '0'))
			  );

-- changeset root:1751897635013-282
COMMENT ON COLUMN SER_V_SEL_UD_NOVERS.ID_VER_SERIE IS 'PK.1';

-- changeset root:1751897635013-283
COMMENT ON COLUMN SER_V_SEL_UD_NOVERS.ID_UNITA_DOC_NON_VERS IS 'PK.2';

-- changeset root:1751897635013-284
CREATE OR REPLACE FORCE VIEW "SER_V_SEL_UD_NOVERS_BUCO" ("ID_VER_SERIE", "ID_SERIE", "ID_UNITA_DOC_NON_VERS", "PG_UNITA_DOC") AS select distinct
 ver_serie.id_ver_serie,
 ver_serie.id_serie,
 ud_non_vers.id_unita_doc_non_vers,
 case
	when trim(TRANSLATE(ud_non_vers.cd_key_unita_doc,'0123456789', ' ')) is null
      then to_number(ud_non_vers.cd_key_unita_doc)
      else null
 end pg_unita_doc
 
from SER_VER_SERIE ver_serie
join SER_SERIE serie
 on (serie.id_serie = ver_serie.id_serie)
join DEC_TIPO_SERIE ti_serie
 on (ti_serie.id_tipo_serie = serie.id_tipo_serie)
join DEC_TIPO_SERIE_UD ti_serie_ud
 on (ti_serie_ud.id_tipo_serie = ti_serie.id_tipo_serie)
join DEC_REGISTRO_UNITA_DOC reg
 on (reg.id_registro_unita_doc = ti_serie_ud.id_registro_unita_doc)

join VRS_UNITA_DOC_NON_VERS ud_non_vers
 on (ud_non_vers.id_strut = serie.id_strut
 and ud_non_vers.cd_registro_key_unita_doc = reg.cd_registro_unita_doc 
 and ud_non_vers.aa_key_unita_doc = serie.aa_serie)

where exists (select *
			  from VRS_SESSIONE_VERS ses
			  where ses.id_strut = ud_non_vers.id_strut
			  and ses.cd_registro_key_unita_doc = ud_non_vers.cd_registro_key_unita_doc
			  and ses.aa_key_unita_doc = ud_non_vers.aa_key_unita_doc
			  and ses.cd_key_unita_doc = ud_non_vers.cd_key_unita_doc
			  
			  and (ses.fl_sessione_err_verif = '0'
			  or (ses.fl_sessione_err_verif = '1'
			  and ses.fl_sessione_err_non_risolub = '0'))
			  );

-- changeset root:1751897635013-285
COMMENT ON COLUMN SER_V_SEL_UD_NOVERS_BUCO.ID_VER_SERIE IS 'PK.1';

-- changeset root:1751897635013-286
COMMENT ON COLUMN SER_V_SEL_UD_NOVERS_BUCO.ID_UNITA_DOC_NON_VERS IS 'PK.2';

-- changeset root:1751897635013-287
CREATE OR REPLACE FORCE VIEW "VRS_V_UD_NON_VERS" ("ID_STRUT", "CD_REGISTRO_KEY_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "FL_VERIF", "FL_NON_RISOLUB") AS SELECT ud_non_vers.id_strut,
           ud_non_vers.cd_registro_key_unita_doc,
           ud_non_vers.aa_key_unita_doc,
           ud_non_vers.cd_key_unita_doc,
           CASE
               WHEN NOT EXISTS
                        (SELECT 1
                           FROM VRS_SESSIONE_VERS_ko ses_err
                          WHERE ses_err.ti_sessione_vers = 'VERSAMENTO'
                            --AND ses_err.ti_stato_sessione_vers = 'CHIUSA_ERR'
                            AND ses_err.id_strut = ud_non_vers.id_strut
                            AND ses_err.cd_registro_key_unita_doc =
                                ud_non_vers.cd_registro_key_unita_doc
                            AND ses_err.aa_key_unita_doc =
                                ud_non_vers.aa_key_unita_doc
                            AND ses_err.cd_key_unita_doc =
                                ud_non_vers.cd_key_unita_doc
                            AND ses_err.fl_sessione_err_verif = '0') THEN
                   '1'
               ELSE
                   '0'
           END    fl_verif,
           CASE
               WHEN NOT EXISTS
                        (SELECT 1
                           FROM VRS_SESSIONE_VERS_ko ses_err
                          WHERE ses_err.ti_sessione_vers = 'VERSAMENTO'
                            --AND ses_err.ti_stato_sessione_vers = 'CHIUSA_ERR'
                            AND ses_err.id_strut = ud_non_vers.id_strut
                            AND ses_err.cd_registro_key_unita_doc =
                                ud_non_vers.cd_registro_key_unita_doc
                            AND ses_err.aa_key_unita_doc =
                                ud_non_vers.aa_key_unita_doc
                            AND ses_err.cd_key_unita_doc =
                                ud_non_vers.cd_key_unita_doc
                            AND ses_err.fl_sessione_err_verif = '0') THEN
                   CASE
                       WHEN NOT EXISTS
                                (SELECT 1
                                   FROM VRS_SESSIONE_VERS ses_err
                                  WHERE ses_err.ti_sessione_vers =
                                        'VERSAMENTO'
--                                    AND ses_err.ti_stato_sessione_vers =
--                                        'CHIUSA_ERR'
                                    AND ses_err.id_strut =
                                        ud_non_vers.id_strut
                                    AND ses_err.cd_registro_key_unita_doc =
                                        ud_non_vers.cd_registro_key_unita_doc
                                    AND ses_err.aa_key_unita_doc =
                                        ud_non_vers.aa_key_unita_doc
                                    AND ses_err.cd_key_unita_doc =
                                        ud_non_vers.cd_key_unita_doc
                                    AND ses_err.fl_sessione_err_non_risolub =
                                        '0') THEN
                           '1'
                       ELSE
                           '0'
                   END
               ELSE
                   NULL
           END    fl_non_risolub
      FROM VRS_UNITA_DOC_NON_VERS ud_non_vers;

-- changeset root:1751897635013-288
CREATE OR REPLACE FORCE VIEW "VRS_V_VERS_FALLITI_DA_NORISOL" ("ID_STRUT", "ID_SESSIONE_VERS", "DT_APERTURA", "CD_REGISTRO_KEY_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "CD_KEY_DOC_VERS") AS SELECT vers_da_norisol.id_strut,
           vers_da_norisol.id_sessione_vers_ko,
           vers_da_norisol.dt_apertura,
           vers_da_norisol.cd_registro_key_unita_doc,
           vers_da_norisol.aa_key_unita_doc,
           vers_da_norisol.cd_key_unita_doc,
           NULL     cd_key_doc_vers
      FROM VRS_SESSIONE_VERS_ko vers_da_norisol
     WHERE vers_da_norisol.ti_sessione_vers = 'VERSAMENTO'
       --AND vers_da_norisol.ti_stato_sessione_vers = 'CHIUSA_ERR'
       AND vers_da_norisol.fl_sessione_err_verif = '1'
       AND vers_da_norisol.fl_sessione_err_non_risolub = '0'
       AND EXISTS
               (SELECT 1
                  FROM VRS_SESSIONE_VERS_ko vers_norisol
                 WHERE vers_norisol.id_strut = vers_da_norisol.id_strut
                   AND vers_norisol.cd_registro_key_unita_doc =
                       vers_da_norisol.cd_registro_key_unita_doc
                   AND vers_norisol.aa_key_unita_doc =
                       vers_da_norisol.aa_key_unita_doc
                   AND vers_norisol.cd_key_unita_doc =
                       vers_da_norisol.cd_key_unita_doc
                   AND vers_norisol.ti_sessione_vers = 'VERSAMENTO'
                   --AND vers_norisol.ti_stato_sessione_vers = 'CHIUSA_ERR'
                   AND vers_norisol.fl_sessione_err_verif = '1'
                   AND vers_norisol.fl_sessione_err_non_risolub = '1'
                   AND vers_norisol.ds_err_princ =
                       vers_da_norisol.ds_err_princ
                   AND vers_norisol.ni_file_err = vers_da_norisol.ni_file_err)
       AND NOT EXISTS
               (SELECT 1
                  FROM ARO_UNITA_DOC ud
                 WHERE ud.id_strut = vers_da_norisol.id_strut
                   AND ud.cd_registro_key_unita_doc =
                       vers_da_norisol.cd_registro_key_unita_doc
                   AND ud.aa_key_unita_doc = vers_da_norisol.aa_key_unita_doc
                   AND ud.cd_key_unita_doc = vers_da_norisol.cd_key_unita_doc
                   AND ud.dt_annul >= TRUNC (vers_da_norisol.dt_apertura))
    UNION
    SELECT agg_da_norisol.id_strut,
           agg_da_norisol.id_sessione_vers_ko,
           agg_da_norisol.dt_apertura,
           agg_da_norisol.cd_registro_key_unita_doc,
           agg_da_norisol.aa_key_unita_doc,
           agg_da_norisol.cd_key_unita_doc,
           agg_da_norisol.cd_key_doc_vers
      FROM VRS_SESSIONE_VERS_ko agg_da_norisol
     WHERE agg_da_norisol.ti_sessione_vers = 'AGGIUNGI_DOCUMENTO'
       --AND agg_da_norisol.ti_stato_sessione_vers = 'CHIUSA_ERR'
       AND agg_da_norisol.fl_sessione_err_verif = '1'
       AND agg_da_norisol.fl_sessione_err_non_risolub = '0'
       AND EXISTS
               (SELECT 1
                  FROM VRS_SESSIONE_VERS agg_norisol
                 WHERE agg_norisol.id_strut = agg_da_norisol.id_strut
                   AND agg_norisol.cd_registro_key_unita_doc =
                       agg_da_norisol.cd_registro_key_unita_doc
                   AND agg_norisol.aa_key_unita_doc =
                       agg_da_norisol.aa_key_unita_doc
                   AND agg_norisol.cd_key_unita_doc =
                       agg_da_norisol.cd_key_unita_doc
                   AND agg_norisol.cd_key_doc_vers =
                       agg_da_norisol.cd_key_doc_vers
                   AND agg_norisol.ti_sessione_vers = 'AGGIUNGI_DOCUMENTO'
                 --  AND agg_norisol.ti_stato_sessione_vers = 'CHIUSA_ERR'
                   AND agg_norisol.fl_sessione_err_verif = '1'
                   AND agg_norisol.fl_sessione_err_non_risolub = '1'
                   AND agg_norisol.ds_err_princ = agg_da_norisol.ds_err_princ
                   AND agg_norisol.ni_file_err = agg_da_norisol.ni_file_err)
       AND (NOT EXISTS
                (SELECT 1
                   FROM ARO_UNITA_DOC ud
                  WHERE ud.id_strut = agg_da_norisol.id_strut
                    AND ud.cd_registro_key_unita_doc =
                        agg_da_norisol.cd_registro_key_unita_doc
                    AND ud.aa_key_unita_doc = agg_da_norisol.aa_key_unita_doc
                    AND ud.cd_key_unita_doc = agg_da_norisol.cd_key_unita_doc
                    AND ud.dt_annul >= TRUNC (agg_da_norisol.dt_apertura))
         OR NOT EXISTS
                (SELECT 1
                   FROM ARO_UNITA_DOC ud, ARO_DOC doc
                  WHERE ud.id_strut = agg_da_norisol.id_strut
                    AND ud.cd_registro_key_unita_doc =
                        agg_da_norisol.cd_registro_key_unita_doc
                    AND ud.aa_key_unita_doc = agg_da_norisol.aa_key_unita_doc
                    AND ud.cd_key_unita_doc = agg_da_norisol.cd_key_unita_doc
                    AND doc.id_unita_doc = ud.id_unita_doc
                    AND doc.cd_key_doc_vers = agg_da_norisol.cd_key_doc_vers
                    AND doc.dt_annul >= TRUNC (agg_da_norisol.dt_apertura)));

-- changeset root:1751897635013-289
COMMENT ON COLUMN VRS_V_VERS_FALLITI_DA_NORISOL.ID_SESSIONE_VERS IS 'PK.1';

-- changeset root:1751897635013-290
CREATE OR REPLACE FORCE VIEW "USR_V_CHK_USER_CANC_SACER" ("ID_USER_IAM", "FL_CANC_OK") AS SELECT id_user_iam,
           CASE
               WHEN NOT EXISTS
                        (SELECT *
                           FROM ARO_STATO_RICH_ANNUL_VERS rich_ann
                          WHERE rich_ann.id_user_iam = usr.id_user_iam)
                AND NOT EXISTS
                        (SELECT *
                           FROM DEC_NOTA_MODELLO_TIPO_SERIE nota
                          WHERE nota.id_user_iam = usr.id_user_iam)
                AND NOT EXISTS
                        (SELECT *
                           FROM DEC_NOTA_TIPO_SERIE nota
                          WHERE nota.id_user_iam = usr.id_user_iam)
                AND NOT EXISTS
                        (SELECT *
                           FROM MON_TIPO_UNITA_DOC_USER_VERS mon_uni_doc
                          WHERE mon_uni_doc.id_user_iam = usr.id_user_iam)
                AND NOT EXISTS
                        (SELECT *
                           FROM REC_SESSIONE_RECUP ses_recup
                          WHERE ses_recup.id_user = usr.id_user_iam)
                AND NOT EXISTS
                        (SELECT *
                           FROM HSM_SESSIONE_FIRMA ses_firma
                          WHERE ses_firma.id_user_iam = usr.id_user_iam)
                AND NOT EXISTS
                        (SELECT *
                           FROM SER_CONSIST_VER_SERIE consist_serie
                          WHERE consist_serie.id_user_iam = usr.id_user_iam)
                AND NOT EXISTS
                        (SELECT *
                           FROM SER_FILE_INPUT_VER_SERIE file_serie
                          WHERE file_serie.id_user_iam = usr.id_user_iam)
                AND NOT EXISTS
                        (SELECT *
                           FROM SER_NOTA_VER_SERIE nota_serie
                          WHERE nota_serie.id_user_iam = usr.id_user_iam)
                AND NOT EXISTS
                        (SELECT *
                           FROM SER_STATO_SERIE stato_serie
                          WHERE stato_serie.id_user_iam = usr.id_user_iam)
                AND NOT EXISTS
                        (SELECT *
                           FROM (SELECT * FROM ELV_LOG_ELENCO_VERS
                                 UNION ALL
                                 SELECT * FROM ELV_LOG_ELENCO_VERS_HISTORY)
                                log_ele -- non si controlla ELV_ELENCO_VERS perchè si controlla il log delle operazioni
                          WHERE log_ele.id_user = usr.id_user_iam)
                AND NOT EXISTS
                        (SELECT *
                           FROM LOG_OPER log_vol -- non si controlla VOL_VOLUME_CONSERV perchè si controlla il log delle operazioni
                          WHERE log_vol.id_user = usr.id_user_iam)
                AND NOT EXISTS
                        (SELECT *
                           FROM VRS_SESSIONE_VERS ses_vers
                          WHERE ses_vers.id_user = usr.id_user_iam)
                AND NOT EXISTS
                        (SELECT *
                           FROM MON_CONTA_FASCICOLI conta_fasc
                          WHERE conta_fasc.id_user_iam = usr.id_user_iam)
                AND NOT EXISTS
                        (SELECT *
                           FROM VRS_SES_FASCICOLO_KO fasc_ko
                          WHERE fasc_ko.id_user_iam = usr.id_user_iam)
                AND NOT EXISTS
                        (SELECT *
                           FROM FAS_FASCICOLO fasc -- definito per fascicoli versati in data corrente
                          WHERE fasc.id_user_iam_vers = usr.id_user_iam)
                AND NOT EXISTS
                        (SELECT *
                           FROM ELV_STATO_ELENCO_VERS_FASC stato_ele_fasc
                          WHERE stato_ele_fasc.id_user_iam = usr.id_user_iam)
                AND NOT EXISTS
                        (SELECT *
                           FROM FAS_STATO_CONSERV_FASCICOLO
                                stato_conserv_fasc
                          WHERE stato_conserv_fasc.id_user_iam =
                                usr.id_user_iam)
                AND NOT EXISTS
                        (SELECT *
                           FROM FAS_STATO_FASCICOLO_ELENCO stato_fasc_ele
                          WHERE stato_fasc_ele.id_user_iam = usr.id_user_iam) THEN
                   '1'
               ELSE
                   '0'
           END    fl_canc_ok
      FROM IAM_USER usr;

-- changeset root:1751897635013-291
CREATE OR REPLACE FORCE VIEW "MON_V_CHK_UD_ANNUL_AMB" ("ID_AMBIENTE", "ID_USER_IAM", "FL_UD_ANNUL_DAFARE_PING", "FL_UD_ANNUL_DAFARE_SACER", "FL_UD_ANNUL") AS select
 amb.id_ambiente,
 utente.id_user_iam,

--
--						ud DA_ANNULLARE_IN_PING
--
case
	when exists (select * 
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ARO_ITEM_RICH_ANNUL_VERS item_annul, ARO_RICH_ANNUL_VERS rich_annul, ARO_STATO_RICH_ANNUL_VERS stato_rich
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and item_annul.id_strut = abil.id_organiz_applic
				and item_annul.ti_stato_item = 'DA_ANNULLARE_IN_PING'
				
				and rich_annul.id_rich_annul_vers = item_annul.id_rich_annul_vers
				and stato_rich.id_stato_rich_annul_vers = rich_annul.id_stato_rich_annul_vers_cor
				and stato_rich.ti_stato_rich_annul_vers != 'RIFIUTATA'
				)
			then '1'
			else '0'
end fl_ud_annul_dafare_ping,

--
--						ud DA_ANNULLARE_IN_SACER
--
case
	when exists (select * 
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ARO_ITEM_RICH_ANNUL_VERS item_annul, ARO_RICH_ANNUL_VERS rich_annul, ARO_STATO_RICH_ANNUL_VERS stato_rich
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and item_annul.id_strut = abil.id_organiz_applic
				and item_annul.ti_stato_item = 'DA_ANNULLARE_IN_SACER'
				
				and rich_annul.id_rich_annul_vers = item_annul.id_rich_annul_vers
				and stato_rich.id_stato_rich_annul_vers = rich_annul.id_stato_rich_annul_vers_cor
				and stato_rich.ti_stato_rich_annul_vers != 'RIFIUTATA'
				)
			then '1'
			else '0'
end fl_ud_annul_dafare_sacer,

--
--						ud ANNULLATO
--
case
	when exists (select * 
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ARO_ITEM_RICH_ANNUL_VERS item_annul
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and item_annul.id_strut = abil.id_organiz_applic
				and item_annul.ti_stato_item = 'ANNULLATO'
				)
			then '1'
			else '0'
end fl_ud_annul

from ORG_AMBIENTE amb
join IAM_USER utente
 on (utente.id_user_iam > 0);

-- changeset root:1751897635013-292
COMMENT ON COLUMN MON_V_CHK_UD_ANNUL_AMB.ID_AMBIENTE IS 'PK.1 relativa a tabella ORG_AMBIENTE';

-- changeset root:1751897635013-293
COMMENT ON COLUMN MON_V_CHK_UD_ANNUL_AMB.ID_USER_IAM IS 'PK.2 relativa a tabella IAM_USER';

-- changeset root:1751897635013-294
CREATE OR REPLACE FORCE VIEW "MON_V_CHK_UD_ANNUL_ENTE" ("ID_ENTE", "ID_USER_IAM", "FL_UD_ANNUL_DAFARE_PING", "FL_UD_ANNUL_DAFARE_SACER", "FL_UD_ANNUL") AS select
 ente.id_ente,
 utente.id_user_iam,

--
--						ud DA_ANNULLARE_IN_PING
--
case
	when exists (select * 
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ARO_ITEM_RICH_ANNUL_VERS item_annul, ARO_RICH_ANNUL_VERS rich_annul, ARO_STATO_RICH_ANNUL_VERS stato_rich
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and item_annul.id_strut = abil.id_organiz_applic
				and item_annul.ti_stato_item = 'DA_ANNULLARE_IN_PING'
				
				and rich_annul.id_rich_annul_vers = item_annul.id_rich_annul_vers
				and stato_rich.id_stato_rich_annul_vers = rich_annul.id_stato_rich_annul_vers_cor
				and stato_rich.ti_stato_rich_annul_vers != 'RIFIUTATA'
				)
			then '1'
			else '0'
end fl_ud_annul_dafare_ping,

--
--						ud DA_ANNULLARE_IN_SACER
--
case
	when exists (select * 
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ARO_ITEM_RICH_ANNUL_VERS item_annul, ARO_RICH_ANNUL_VERS rich_annul, ARO_STATO_RICH_ANNUL_VERS stato_rich
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and item_annul.id_strut = abil.id_organiz_applic
				and item_annul.ti_stato_item = 'DA_ANNULLARE_IN_SACER'
				
				and rich_annul.id_rich_annul_vers = item_annul.id_rich_annul_vers
				and stato_rich.id_stato_rich_annul_vers = rich_annul.id_stato_rich_annul_vers_cor
				and stato_rich.ti_stato_rich_annul_vers != 'RIFIUTATA'
				)
			then '1'
			else '0'
end fl_ud_annul_dafare_sacer,

--
--						ud ANNULLATO
--
case
	when exists (select * 
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ARO_ITEM_RICH_ANNUL_VERS item_annul
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and item_annul.id_strut = abil.id_organiz_applic
				and item_annul.ti_stato_item = 'ANNULLATO'
				)
			then '1'
			else '0'
end fl_ud_annul

from ORG_ENTE ente
join IAM_USER utente
 on (utente.id_user_iam > 0);

-- changeset root:1751897635013-295
COMMENT ON COLUMN MON_V_CHK_UD_ANNUL_ENTE.ID_ENTE IS 'PK.1 relativa a tabella ORG_ENTE';

-- changeset root:1751897635013-296
COMMENT ON COLUMN MON_V_CHK_UD_ANNUL_ENTE.ID_USER_IAM IS 'PK.2 relativa a tabella IAM_USER';

-- changeset root:1751897635013-297
CREATE OR REPLACE FORCE VIEW "MON_V_CHK_UD_ANNUL_STRUT" ("ID_STRUT", "FL_UD_ANNUL_DAFARE_PING", "FL_UD_ANNUL_DAFARE_SACER", "FL_UD_ANNUL") AS select
 strut.id_strut,

--
--						ud DA_ANNULLARE_IN_PING
--
case
	when exists (select * 
				from ARO_ITEM_RICH_ANNUL_VERS item_annul, ARO_RICH_ANNUL_VERS rich_annul, ARO_STATO_RICH_ANNUL_VERS stato_rich
				where item_annul.id_strut = strut.id_strut 
				and item_annul.ti_stato_item = 'DA_ANNULLARE_IN_PING'
				
				and rich_annul.id_rich_annul_vers = item_annul.id_rich_annul_vers
				and stato_rich.id_stato_rich_annul_vers = rich_annul.id_stato_rich_annul_vers_cor
				and stato_rich.ti_stato_rich_annul_vers != 'RIFIUTATA'
				)
			then '1'
			else '0'
end fl_ud_annul_dafare_ping,

--
--						ud DA_ANNULLARE_IN_SACER
--
case
	when exists (select * 
				from ARO_ITEM_RICH_ANNUL_VERS item_annul, ARO_RICH_ANNUL_VERS rich_annul, ARO_STATO_RICH_ANNUL_VERS stato_rich
				where item_annul.id_strut = strut.id_strut 
				and item_annul.ti_stato_item = 'DA_ANNULLARE_IN_SACER'
				
				and rich_annul.id_rich_annul_vers = item_annul.id_rich_annul_vers
				and stato_rich.id_stato_rich_annul_vers = rich_annul.id_stato_rich_annul_vers_cor
				and stato_rich.ti_stato_rich_annul_vers != 'RIFIUTATA'
				)
			then '1'
			else '0'
end fl_ud_annul_dafare_sacer,

--
--						ud ANNULLATO
--
case
	when exists (select * 
				from ARO_ITEM_RICH_ANNUL_VERS item_annul
				where item_annul.id_strut = strut.id_strut 
				and item_annul.ti_stato_item = 'ANNULLATO'
				)
			then '1'
			else '0'
end fl_ud_annul

from ORG_STRUT strut;

-- changeset root:1751897635013-298
COMMENT ON COLUMN MON_V_CHK_UD_ANNUL_STRUT.ID_STRUT IS 'PK.1 relativa a tabella ORG_STRUT';

-- changeset root:1751897635013-299
CREATE OR REPLACE FORCE VIEW "MON_V_CHK_UD_ANNUL_TIPO_UD" ("ID_TIPO_UNITA_DOC", "FL_UD_ANNUL_DAFARE_PING", "FL_UD_ANNUL_DAFARE_SACER", "FL_UD_ANNUL") AS select
 tipo_ud.id_tipo_unita_doc,

--
--						ud DA_ANNULLARE_IN_PING
--
case
	when exists (select * 
				from ARO_ITEM_RICH_ANNUL_VERS item_annul, ARO_UNITA_DOC ud, ARO_RICH_ANNUL_VERS rich_annul, ARO_STATO_RICH_ANNUL_VERS stato_rich
				where item_annul.id_strut = tipo_ud.id_strut 
				and item_annul.ti_stato_item = 'DA_ANNULLARE_IN_PING'
				and ud.id_unita_doc = item_annul.id_unita_doc
				and ud.id_tipo_unita_doc = tipo_ud.id_tipo_unita_doc
				
				and rich_annul.id_rich_annul_vers = item_annul.id_rich_annul_vers
				and stato_rich.id_stato_rich_annul_vers = rich_annul.id_stato_rich_annul_vers_cor
				and stato_rich.ti_stato_rich_annul_vers != 'RIFIUTATA'
				)
			then '1'
			else '0'
end fl_ud_annul_dafare_ping,

--
--						ud DA_ANNULLARE_IN_SACER
--
case
	when exists (select * 
				from ARO_ITEM_RICH_ANNUL_VERS item_annul, ARO_UNITA_DOC ud, ARO_RICH_ANNUL_VERS rich_annul, ARO_STATO_RICH_ANNUL_VERS stato_rich
				where item_annul.id_strut = tipo_ud.id_strut 
				and item_annul.ti_stato_item = 'DA_ANNULLARE_IN_SACER'
				and ud.id_unita_doc = item_annul.id_unita_doc
				and ud.id_tipo_unita_doc = tipo_ud.id_tipo_unita_doc
				
				and rich_annul.id_rich_annul_vers = item_annul.id_rich_annul_vers
				and stato_rich.id_stato_rich_annul_vers = rich_annul.id_stato_rich_annul_vers_cor
				and stato_rich.ti_stato_rich_annul_vers != 'RIFIUTATA'
				)
			then '1'
			else '0'
end fl_ud_annul_dafare_sacer,

--
--						ud ANNULLATO
--
case
	when exists (select * 
				from ARO_ITEM_RICH_ANNUL_VERS item_annul, ARO_UNITA_DOC ud
				where item_annul.id_strut = tipo_ud.id_strut 
				and item_annul.ti_stato_item = 'ANNULLATO'
				and ud.id_unita_doc = item_annul.id_unita_doc
				and ud.id_tipo_unita_doc = tipo_ud.id_tipo_unita_doc
				)
			then '1'
			else '0'
end fl_ud_annul

from DEC_TIPO_UNITA_DOC tipo_ud;

-- changeset root:1751897635013-300
COMMENT ON COLUMN MON_V_CHK_UD_ANNUL_TIPO_UD.ID_TIPO_UNITA_DOC IS 'PK.1 relativa a tabella DEC_TIPO_UNITA_DOC';

-- changeset root:1751897635013-301
CREATE OR REPLACE FORCE VIEW "ARO_V_RIC_RICH_ANNVRS" ("ID_USER_IAM", "ID_AMBIENTE", "NM_AMBIENTE", "ID_ENTE", "NM_ENTE", "ID_STRUT", "NM_STRUT", "ID_RICH_ANNUL_VERS", "CD_RICH_ANNUL_VERS", "DS_RICH_ANNUL_VERS", "NT_RICH_ANNUL_VERS", "DT_CREAZIONE_RICH_ANNUL_VERS", "TI_CREAZIONE_RICH_ANNUL_VERS", "FL_IMMEDIATA", "TI_STATO_RICH_ANNUL_VERS_COR", "ID_ITEM_RICH_ANNUL_VERS", "CD_REGISTRO_KEY_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "AA_FASCICOLO", "CD_KEY_FASCICOLO", "FL_ANNUL_PING", "FL_NON_ANNUL", "NI_ITEM", "NI_ITEM_PING", "NI_ITEM_NON_ANNUL", "TI_RICH_ANNUL_VERS", "TI_ANNULLAMENTO") AS SELECT abil_org.id_user_iam,
           amb.id_ambiente,
           amb.nm_ambiente,
           ente.id_ente,
           ente.nm_ente,
           strut.id_strut,
           strut.nm_strut,
           rich.id_rich_annul_vers,
           rich.cd_rich_annul_vers,
           rich.ds_rich_annul_vers,
           rich.nt_rich_annul_vers,
           rich.dt_creazione_rich_annul_vers,
           rich.ti_creazione_rich_annul_vers,
           rich.fl_immediata,
           stato_rich.ti_stato_rich_annul_vers
               ti_stato_rich_annul_vers_cor,
           item_rich.id_item_rich_annul_vers,
           item_rich.cd_registro_key_unita_doc,
           item_rich.aa_key_unita_doc,
           item_rich.cd_key_unita_doc,
           item_rich.aa_fascicolo,
           item_rich.cd_key_fascicolo,
           CASE
               WHEN EXISTS
                        (SELECT *
                           FROM ARO_ITEM_RICH_ANNUL_VERS item_non_annul
                          WHERE item_non_annul.id_rich_annul_vers =
                                rich.id_rich_annul_vers
                            AND item_non_annul.ti_stato_item =
                                'DA_ANNULLARE_IN_PING') THEN
                   '1'
               ELSE
                   '0'
           END
               fl_annul_ping,
           CASE
               WHEN EXISTS
                        (SELECT *
                           FROM ARO_ITEM_RICH_ANNUL_VERS item_non_annul
                          WHERE item_non_annul.id_rich_annul_vers =
                                rich.id_rich_annul_vers
                            AND item_non_annul.ti_stato_item =
                                'NON_ANNULLABILE') THEN
                   '1'
               ELSE
                   '0'
           END
               fl_non_annul,
           (SELECT COUNT (*)
              FROM ARO_ITEM_RICH_ANNUL_VERS item
             WHERE item.id_rich_annul_vers = rich.id_rich_annul_vers)
               ni_item,
           (SELECT COUNT (*)
              FROM ARO_ITEM_RICH_ANNUL_VERS item
             WHERE item.id_rich_annul_vers = rich.id_rich_annul_vers
               AND item.ti_stato_item = 'DA_ANNULLARE_IN_PING')
               ni_item_ping,
           (SELECT COUNT (*)
              FROM ARO_ITEM_RICH_ANNUL_VERS item
             WHERE item.id_rich_annul_vers = rich.id_rich_annul_vers
               AND item.ti_stato_item = 'NON_ANNULLABILE')
               ni_item_non_annul,
           rich.ti_rich_annul_vers,
           RICH.TI_ANNULLAMENTO
      FROM ARO_RICH_ANNUL_VERS  rich
           JOIN ORG_STRUT strut
               ON (strut.id_strut = rich.id_strut AND strut.fl_cessato = 0)
           JOIN ORG_ENTE ente ON (ente.id_ente = strut.id_ente)
           JOIN ORG_AMBIENTE amb
               ON (amb.id_ambiente = ente.id_ambiente AND ente.fl_cessato = 0)
           JOIN IAM_ABIL_ORGANIZ abil_org
               ON (abil_org.id_organiz_applic = strut.id_strut)
           JOIN ARO_STATO_RICH_ANNUL_VERS stato_rich
               ON (stato_rich.id_stato_rich_annul_vers =
                   rich.id_stato_rich_annul_vers_cor)
           LEFT JOIN ARO_ITEM_RICH_ANNUL_VERS item_rich
               ON (item_rich.id_rich_annul_vers = rich.id_rich_annul_vers
               AND item_rich.ti_item_rich_annul_vers IN ('UNI_DOC', 'FASC'));

-- changeset root:1751897635013-302
COMMENT ON COLUMN ARO_V_RIC_RICH_ANNVRS.ID_USER_IAM IS 'PK.1';

-- changeset root:1751897635013-303
COMMENT ON COLUMN ARO_V_RIC_RICH_ANNVRS.ID_RICH_ANNUL_VERS IS 'PK.2';

-- changeset root:1751897635013-304
COMMENT ON COLUMN ARO_V_RIC_RICH_ANNVRS.ID_ITEM_RICH_ANNUL_VERS IS 'PK.3';

-- changeset root:1751897635013-305
CREATE OR REPLACE FORCE VIEW "ARO_V_VIS_RICH_ANNVRS" ("ID_AMBIENTE", "NM_AMBIENTE", "ID_ENTE", "NM_ENTE", "ID_STRUT", "NM_STRUT", "ID_RICH_ANNUL_VERS", "CD_RICH_ANNUL_VERS", "DS_RICH_ANNUL_VERS", "NT_RICH_ANNUL_VERS", "DT_CREAZIONE_RICH_ANNUL_VERS", "TI_CREAZIONE_RICH_ANNUL_VERS", "FL_IMMEDIATA", "TI_STATO_RICH_ANNUL_VERS", "DT_REG_STATO_RICH_ANNUL_VERS", "DS_NOTA_RICH_ANNUL_VERS", "NM_USERID_STATO", "NI_ITEM", "NI_ITEM_PING", "NI_ITEM_NON_ANNUL", "FL_FORZA_ANNUL", "FL_RICH_PING", "TI_RICH_ANNUL_VERS") AS select
amb.id_ambiente, amb.nm_ambiente,
ente.id_ente, ente.nm_ente,
strut.id_strut, strut.nm_strut,

rich.id_rich_annul_vers,
rich.cd_rich_annul_vers,
rich.ds_rich_annul_vers,
rich.nt_rich_annul_vers,
rich.dt_creazione_rich_annul_vers,
rich.ti_creazione_rich_annul_vers,
rich.fl_immediata,

stato_rich.ti_stato_rich_annul_vers ti_stato_rich_annul_vers_cor,
stato_rich.dt_reg_stato_rich_annul_vers,
stato_rich.ds_nota_rich_annul_vers,
usr.nm_userid nm_userid_stato,
	
(select count(*)
 from ARO_ITEM_RICH_ANNUL_VERS item
 where item.id_rich_annul_vers = rich.id_rich_annul_vers
) ni_item,

(select count(*)
 from ARO_ITEM_RICH_ANNUL_VERS item
 where item.id_rich_annul_vers = rich.id_rich_annul_vers
 and item.ti_stato_item = 'DA_ANNULLARE_IN_PING'
) ni_item_ping,

(select count(*)
 from ARO_ITEM_RICH_ANNUL_VERS item
 where item.id_rich_annul_vers = rich.id_rich_annul_vers
 and item.ti_stato_item = 'NON_ANNULLABILE'
) ni_item_non_annul,

rich.fl_forza_annul, rich.fl_rich_ping,

rich.ti_rich_annul_vers

from ARO_RICH_ANNUL_VERS rich

join ORG_STRUT strut
 on (strut.id_strut = rich.id_strut)
join ORG_ENTE ente
 on (ente.id_ente = strut.id_ente)
join ORG_AMBIENTE amb
 on (amb.id_ambiente = ente.id_ambiente)
 
join ARO_STATO_RICH_ANNUL_VERS stato_rich
 on (stato_rich.id_stato_rich_annul_vers = rich.id_stato_rich_annul_vers_cor)

join IAM_USER usr
 on (usr.id_user_iam = stato_rich.id_user_iam);

-- changeset root:1751897635013-306
COMMENT ON COLUMN ARO_V_VIS_RICH_ANNVRS.ID_RICH_ANNUL_VERS IS 'PK.1';

-- changeset root:1751897635013-307
CREATE OR REPLACE FORCE VIEW "SER_V_LIS_VERSER_BY_RICHANN" ("ID_RICH_ANNUL_VERS", "ID_VER_SERIE") AS select distinct
 rich_ann.id_rich_annul_vers,
 ver_serie.id_ver_serie

from ARO_RICH_ANNUL_VERS rich_ann
join ARO_ITEM_RICH_ANNUL_VERS item
 on (item.id_rich_annul_vers = rich_ann.id_rich_annul_vers
 and item.ti_item_rich_annul_vers = 'UNI_DOC'
 and item.ti_stato_item = 'DA_ANNULLARE_IN_SACER')
join ARO_UD_APPART_VER_SERIE ud_app_ver
 on (ud_app_ver.id_unita_doc = item.id_unita_doc)
 
join SER_CONTENUTO_VER_SERIE conten_eff
 on (conten_eff.id_contenuto_ver_serie = ud_app_ver.id_contenuto_ver_serie
 and conten_eff.ti_contenuto_ver_serie = 'EFFETTIVO')
join SER_VER_SERIE ver_serie
 on (ver_serie.id_ver_serie = conten_eff.id_ver_serie)
join SER_STATO_VER_SERIE stato_ver_serie
 on (stato_ver_serie.id_stato_ver_serie = ver_serie.id_stato_ver_serie_cor)
 
where stato_ver_serie.ti_stato_ver_serie in ('CONTROLLATA', 'DA_FIRMARE', 'FIRMATA', 'IN_CUSTODIA', 'VALIDATA', 'VALIDAZIONE_IN_CORSO')
or (stato_ver_serie.ti_stato_ver_serie = 'DA_CONTROLLARE'
and conten_eff.ti_stato_contenuto_ver_serie = 'CONTROLLO_CONSIST_IN_CORSO');

-- changeset root:1751897635013-308
COMMENT ON COLUMN SER_V_LIS_VERSER_BY_RICHANN.ID_RICH_ANNUL_VERS IS 'PK.1';

-- changeset root:1751897635013-309
COMMENT ON COLUMN SER_V_LIS_VERSER_BY_RICHANN.ID_VER_SERIE IS 'PK.1';

-- changeset root:1751897635013-310
CREATE OR REPLACE FORCE VIEW "VOL_V_LIS_VOLUME_UD_ANNUL" ("ID_RICH_ANNUL_VERS", "ID_VOLUME_CONSERV", "NT_VOLUME_CHIUSO") AS select distinct
 rich_ann.id_rich_annul_vers,
 vol.id_volume_conserv,
 vol.nt_volume_chiuso

from ARO_RICH_ANNUL_VERS rich_ann
join ARO_ITEM_RICH_ANNUL_VERS item
 on (item.id_rich_annul_vers = rich_ann.id_rich_annul_vers
 and item.ti_item_rich_annul_vers = 'UNI_DOC'
 and item.ti_stato_item = 'DA_ANNULLARE_IN_SACER')

join VOL_APPART_UNITA_DOC_VOLUME app_ud
 on (app_ud.id_unita_doc = item.id_unita_doc)
join VOL_VOLUME_CONSERV vol
 on (vol.id_volume_conserv = app_ud.id_volume_conserv);

-- changeset root:1751897635013-311
COMMENT ON COLUMN VOL_V_LIS_VOLUME_UD_ANNUL.ID_RICH_ANNUL_VERS IS 'PK.1';

-- changeset root:1751897635013-312
COMMENT ON COLUMN VOL_V_LIS_VOLUME_UD_ANNUL.ID_VOLUME_CONSERV IS 'PK.2';

-- changeset root:1751897635013-313
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_UD_ANNUL_AMB" ("ID_AMBIENTE", "ID_USER_IAM", "TI_STATO_ANNUL", "NI_ANNUL") AS select
 ente.id_ambiente, abil.id_user_iam, 
 case
	when item_annul.ti_stato_item = 'DA_ANNULLARE_IN_PING' then 'DA_FARE_PING'
	when item_annul.ti_stato_item = 'DA_ANNULLARE_IN_SACER' then 'DA_FARE_SACER'
	when item_annul.ti_stato_item = 'ANNULLATO' then 'OK'
 end ti_stato_annul, 
 count(*) ni_annul

from ORG_ENTE ente
join ORG_STRUT strut
 on (strut.id_ente = ente.id_ente)
join IAM_ABIL_ORGANIZ abil
 on (abil.id_organiz_applic = strut.id_strut)
join ARO_ITEM_RICH_ANNUL_VERS item_annul
 on (item_annul.id_strut = abil.id_organiz_applic
 and item_annul.ti_stato_item in ('DA_ANNULLARE_IN_PING', 'DA_ANNULLARE_IN_SACER', 'ANNULLATO'))

join ARO_RICH_ANNUL_VERS rich_annul
 on (rich_annul.id_rich_annul_vers = item_annul.id_rich_annul_vers)
join ARO_STATO_RICH_ANNUL_VERS stato_rich 
 on (stato_rich.id_stato_rich_annul_vers = rich_annul.id_stato_rich_annul_vers_cor
 and stato_rich.ti_stato_rich_annul_vers != 'RIFIUTATA')
 
group by ente.id_ambiente, abil.id_user_iam, 
		case
			when item_annul.ti_stato_item = 'DA_ANNULLARE_IN_PING' then 'DA_FARE_PING'
			when item_annul.ti_stato_item = 'DA_ANNULLARE_IN_SACER' then 'DA_FARE_SACER'
			when item_annul.ti_stato_item = 'ANNULLATO' then 'OK'
		 end;

-- changeset root:1751897635013-314
COMMENT ON COLUMN MON_V_CNT_UD_ANNUL_AMB.ID_AMBIENTE IS 'PK.1 relativa a tabella ORG_AMBIENTE';

-- changeset root:1751897635013-315
COMMENT ON COLUMN MON_V_CNT_UD_ANNUL_AMB.ID_USER_IAM IS 'PK.2 relativa a tabella IAM_USER';

-- changeset root:1751897635013-316
COMMENT ON COLUMN MON_V_CNT_UD_ANNUL_AMB.TI_STATO_ANNUL IS 'PK.3';

-- changeset root:1751897635013-317
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_UD_ANNUL_ENTE" ("ID_ENTE", "ID_USER_IAM", "TI_STATO_ANNUL", "NI_ANNUL") AS select
 strut.id_ente, abil.id_user_iam, 
 case
	when item_annul.ti_stato_item = 'DA_ANNULLARE_IN_PING' then 'DA_FARE_PING'
	when item_annul.ti_stato_item = 'DA_ANNULLARE_IN_SACER' then 'DA_FARE_SACER'
	when item_annul.ti_stato_item = 'ANNULLATO' then 'OK'
 end ti_stato_annul,  
 count(*) ni_annul

from ORG_STRUT strut
join IAM_ABIL_ORGANIZ abil
 on (abil.id_organiz_applic = strut.id_strut)
join ARO_ITEM_RICH_ANNUL_VERS item_annul
 on (item_annul.id_strut = abil.id_organiz_applic
 and item_annul.ti_stato_item in ('DA_ANNULLARE_IN_PING', 'DA_ANNULLARE_IN_SACER', 'ANNULLATO'))
 
join ARO_RICH_ANNUL_VERS rich_annul
 on (rich_annul.id_rich_annul_vers = item_annul.id_rich_annul_vers)
join ARO_STATO_RICH_ANNUL_VERS stato_rich 
 on (stato_rich.id_stato_rich_annul_vers = rich_annul.id_stato_rich_annul_vers_cor
 and stato_rich.ti_stato_rich_annul_vers != 'RIFIUTATA')
 
group by strut.id_ente, abil.id_user_iam, 
		case
			when item_annul.ti_stato_item = 'DA_ANNULLARE_IN_PING' then 'DA_FARE_PING'
			when item_annul.ti_stato_item = 'DA_ANNULLARE_IN_SACER' then 'DA_FARE_SACER'
			when item_annul.ti_stato_item = 'ANNULLATO' then 'OK'
		 end;

-- changeset root:1751897635013-318
COMMENT ON COLUMN MON_V_CNT_UD_ANNUL_ENTE.ID_ENTE IS 'PK.1 relativa a tabella ORG_ENTE';

-- changeset root:1751897635013-319
COMMENT ON COLUMN MON_V_CNT_UD_ANNUL_ENTE.ID_USER_IAM IS 'PK.2 relativa a tabella IAM_USER';

-- changeset root:1751897635013-320
COMMENT ON COLUMN MON_V_CNT_UD_ANNUL_ENTE.TI_STATO_ANNUL IS 'PK.3';

-- changeset root:1751897635013-321
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_UD_ANNUL_STRUT" ("ID_STRUT", "TI_STATO_ANNUL", "NI_ANNUL") AS select
 item_annul.id_strut, 
 case
	when item_annul.ti_stato_item = 'DA_ANNULLARE_IN_PING' then 'DA_FARE_PING'
	when item_annul.ti_stato_item = 'DA_ANNULLARE_IN_SACER' then 'DA_FARE_SACER'
	when item_annul.ti_stato_item = 'ANNULLATO' then 'OK'
 end ti_stato_annul,  
 count(*) ni_annul
from ARO_ITEM_RICH_ANNUL_VERS item_annul

join ARO_RICH_ANNUL_VERS rich_annul
 on (rich_annul.id_rich_annul_vers = item_annul.id_rich_annul_vers)
join ARO_STATO_RICH_ANNUL_VERS stato_rich 
 on (stato_rich.id_stato_rich_annul_vers = rich_annul.id_stato_rich_annul_vers_cor
 and stato_rich.ti_stato_rich_annul_vers != 'RIFIUTATA')
 
where item_annul.ti_stato_item in ('DA_ANNULLARE_IN_PING', 'DA_ANNULLARE_IN_SACER', 'ANNULLATO')
group by item_annul.id_strut, 
		case
			when item_annul.ti_stato_item = 'DA_ANNULLARE_IN_PING' then 'DA_FARE_PING'
			when item_annul.ti_stato_item = 'DA_ANNULLARE_IN_SACER' then 'DA_FARE_SACER'
			when item_annul.ti_stato_item = 'ANNULLATO' then 'OK'
		 end;

-- changeset root:1751897635013-322
COMMENT ON COLUMN MON_V_CNT_UD_ANNUL_STRUT.ID_STRUT IS 'PK.1 relativa a tabella ORG_STRUT';

-- changeset root:1751897635013-323
COMMENT ON COLUMN MON_V_CNT_UD_ANNUL_STRUT.TI_STATO_ANNUL IS 'PK.2';

-- changeset root:1751897635013-324
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_UD_ANNUL_TIPO_UD" ("ID_TIPO_UNITA_DOC", "TI_STATO_ANNUL", "NI_ANNUL") AS select
 ud.id_tipo_unita_doc, 
 case
	when item_annul.ti_stato_item = 'DA_ANNULLARE_IN_PING' then 'DA_FARE_PING'
	when item_annul.ti_stato_item = 'DA_ANNULLARE_IN_SACER' then 'DA_FARE_SACER'
	when item_annul.ti_stato_item = 'ANNULLATO' then 'OK'
 end ti_stato_annul,
 count(*) ni_annul
from ARO_ITEM_RICH_ANNUL_VERS item_annul
join ARO_UNITA_DOC ud
 on (ud.id_unita_doc = item_annul.id_unita_doc)

join ARO_RICH_ANNUL_VERS rich_annul
 on (rich_annul.id_rich_annul_vers = item_annul.id_rich_annul_vers)
join ARO_STATO_RICH_ANNUL_VERS stato_rich 
 on (stato_rich.id_stato_rich_annul_vers = rich_annul.id_stato_rich_annul_vers_cor
 and stato_rich.ti_stato_rich_annul_vers != 'RIFIUTATA')

where item_annul.ti_stato_item in ('DA_ANNULLARE_IN_PING', 'DA_ANNULLARE_IN_SACER', 'ANNULLATO')
group by ud.id_tipo_unita_doc, 
		case
			when item_annul.ti_stato_item = 'DA_ANNULLARE_IN_PING' then 'DA_FARE_PING'
			when item_annul.ti_stato_item = 'DA_ANNULLARE_IN_SACER' then 'DA_FARE_SACER'
			when item_annul.ti_stato_item = 'ANNULLATO' then 'OK'
		 end;

-- changeset root:1751897635013-325
COMMENT ON COLUMN MON_V_CNT_UD_ANNUL_TIPO_UD.ID_TIPO_UNITA_DOC IS 'PK.1 relativa a tabella DEC_TIPO_UNITA_DOC';

-- changeset root:1751897635013-326
COMMENT ON COLUMN MON_V_CNT_UD_ANNUL_TIPO_UD.TI_STATO_ANNUL IS 'PK.2';

-- changeset root:1751897635013-327
CREATE OR REPLACE FORCE VIEW "ARO_V_VIS_STATO_RICH_ANNVRS" ("ID_AMBIENTE", "NM_AMBIENTE", "ID_ENTE", "NM_ENTE", "ID_STRUT", "NM_STRUT", "ID_RICH_ANNUL_VERS", "CD_RICH_ANNUL_VERS", "DS_RICH_ANNUL_VERS", "TI_STATO_RICH_ANNUL_VERS_COR", "ID_STATO_RICH_ANNUL_VERS", "PG_STATO_RICH_ANNUL_VERS", "TI_STATO_RICH_ANNUL_VERS", "DT_REG_STATO_RICH_ANNUL_VERS", "DS_NOTA_RICH_ANNUL_VERS", "NM_USERID_STATO") AS select
amb.id_ambiente, amb.nm_ambiente,
ente.id_ente, ente.nm_ente,
strut.id_strut, strut.nm_strut,

rich.id_rich_annul_vers,
rich.cd_rich_annul_vers,
rich.ds_rich_annul_vers,

stato_cor.ti_stato_rich_annul_vers ti_stato_rich_annul_vers_cor,

stato_rich.id_stato_rich_annul_vers,
stato_rich.pg_stato_rich_annul_vers,
stato_rich.ti_stato_rich_annul_vers,
stato_rich.dt_reg_stato_rich_annul_vers,
stato_rich.ds_nota_rich_annul_vers,
usr.nm_userid nm_userid_stato
	
from ARO_STATO_RICH_ANNUL_VERS stato_rich

join IAM_USER usr
 on (usr.id_user_iam = stato_rich.id_user_iam)

join ARO_RICH_ANNUL_VERS rich
 on (rich.id_rich_annul_vers = stato_rich.id_rich_annul_vers)

join ORG_STRUT strut
 on (strut.id_strut = rich.id_strut)
join ORG_ENTE ente
 on (ente.id_ente = strut.id_ente)
join ORG_AMBIENTE amb
 on (amb.id_ambiente = ente.id_ambiente)
 
join ARO_STATO_RICH_ANNUL_VERS stato_cor
 on (stato_cor.id_stato_rich_annul_vers = rich.id_stato_rich_annul_vers_cor);

-- changeset root:1751897635013-328
COMMENT ON COLUMN ARO_V_VIS_STATO_RICH_ANNVRS.ID_STATO_RICH_ANNUL_VERS IS 'PK.1';

-- changeset root:1751897635013-329
CREATE OR REPLACE FORCE VIEW "ELV_V_LIS_ELENCO_FASC_ANNUL" ("ID_RICH_ANNUL_VERS", "ID_ELENCO_VERS_FASC", "NT_ELENCO_CHIUSO") AS select distinct
 rich_ann.id_rich_annul_vers,
 ele.id_elenco_vers_fasc,
 ele.nt_elenco_chiuso

from ARO_RICH_ANNUL_VERS rich_ann
join ARO_ITEM_RICH_ANNUL_VERS item
 on (item.id_rich_annul_vers = rich_ann.id_rich_annul_vers
 and item.ti_item_rich_annul_vers = 'FASC'
 and item.ti_stato_item = 'DA_ANNULLARE_IN_SACER')
join FAS_FASCICOLO fasc
 on (fasc.id_fascicolo = item.id_fascicolo
 and fasc.ti_stato_fasc_elenco_vers in ('IN_ELENCO_CHIUSO', 'IN_ELENCO_FIRMATO', 
										'IN_ELENCO_IN_CODA_CREAZIONE_AIP', 'IN_ELENCO_CON_AIP_CREATO', 'IN_ELENCO_CON_ELENCO_INDICI_AIP_CREATO',
										'IN_ELENCO_COMPLETATO'))
join ELV_ELENCO_VERS_FASC ele
 on (ele.id_elenco_vers_fasc = fasc.id_elenco_vers_fasc)
join ELV_STATO_ELENCO_VERS_FASC stato
 on (stato.id_stato_elenco_vers_fasc  = ele.id_stato_elenco_vers_fasc_cor
 and stato.ti_stato in ('CHIUSO', 'FIRMA_IN_CORSO', 'FIRMATO', 'IN_CODA_CREAZIONE_AIP', 'AIP_CREATI',
						'ELENCO_INDICI_AIP_CREATO', 'ELENCO_INDICI_AIP_FIRMA_IN_CORSO', 'COMPLETATO'));

-- changeset root:1751897635013-330
COMMENT ON COLUMN ELV_V_LIS_ELENCO_FASC_ANNUL.ID_RICH_ANNUL_VERS IS 'PK.1';

-- changeset root:1751897635013-331
COMMENT ON COLUMN ELV_V_LIS_ELENCO_FASC_ANNUL.ID_ELENCO_VERS_FASC IS 'PK.2';

-- changeset root:1751897635013-332
CREATE OR REPLACE FORCE VIEW "ELV_V_LIS_ELENCO_UD_ANNUL" ("ID_RICH_ANNUL_VERS", "ID_ELENCO_VERS", "NT_ELENCO_CHIUSO") AS select distinct
 rich_ann.id_rich_annul_vers,
 ele.id_elenco_vers,
 ele.nt_elenco_chiuso

from ARO_RICH_ANNUL_VERS rich_ann
join ARO_ITEM_RICH_ANNUL_VERS item
 on (item.id_rich_annul_vers = rich_ann.id_rich_annul_vers
 and item.ti_item_rich_annul_vers = 'UNI_DOC'
 and item.ti_stato_item = 'DA_ANNULLARE_IN_SACER')
join ARO_UNITA_DOC ud
 on (ud.id_unita_doc = item.id_unita_doc
 and ud.ti_stato_ud_elenco_vers in ('IN_ELENCO_CHIUSO', 'IN_ELENCO_FIRMATO', 'IN_ELENCO_CON_FIRME_VERIFICATE_DT_VERS', 'IN_ELENCO_IN_CODA_INDICE_AIP',
									'IN_ELENCO_CON_INDICI_AIP_GENERATI', 'IN_ELENCO_CON_ELENCO_INDICI_AIP_CREATO', 'IN_ELENCO_CON_ELENCO_INDICI_AIP_FIRMATO',
									'IN_ELENCO_CON_ELENCO_INDICI_AIP_ERR_MARCA', 'IN_ELENCO_COMPLETATO'))
join ELV_ELENCO_VERS ele
 on (ele.id_elenco_vers = ud.id_elenco_vers 
 and ele.ti_stato_elenco in ('CHIUSO', 'FIRMA_IN_CORSO', 'FIRMATO', 'FIRME_VERIFICATE_DT_VERS', 'IN_CODA_INDICE_AIP',
							 'INDICI_AIP_GENERATI', 'ELENCO_INDICI_AIP_CREATO', 'ELENCO_INDICI_AIP_FIRMA_IN_CORSO',
							 'ELENCO_INDICI_AIP_FIRMATO', 'ELENCO_INDICI_AIP_ERR_MARCA', 'COMPLETATO'))
 
UNION

select distinct
 rich_ann.id_rich_annul_vers,
 ele.id_elenco_vers,
 ele.nt_elenco_chiuso

from ARO_RICH_ANNUL_VERS rich_ann
join ARO_ITEM_RICH_ANNUL_VERS item
 on (item.id_rich_annul_vers = rich_ann.id_rich_annul_vers
 and item.ti_item_rich_annul_vers = 'UNI_DOC'
 and item.ti_stato_item = 'DA_ANNULLARE_IN_SACER')
join ARO_UNITA_DOC ud
 on (ud.id_unita_doc = item.id_unita_doc)
join ARO_DOC doc
 on (doc.id_unita_doc = ud.id_unita_doc
 and doc.ti_creazione = 'AGGIUNTA_DOCUMENTO'
 and doc.ti_stato_doc_elenco_vers in ('IN_ELENCO_CHIUSO', 'IN_ELENCO_FIRMATO', 'IN_ELENCO_CON_FIRME_VERIFICATE_DT_VERS', 'IN_ELENCO_IN_CODA_INDICE_AIP',
									'IN_ELENCO_CON_INDICI_AIP_GENERATI', 'IN_ELENCO_CON_ELENCO_INDICI_AIP_CREATO', 'IN_ELENCO_CON_ELENCO_INDICI_AIP_FIRMATO',
									'IN_ELENCO_CON_ELENCO_INDICI_AIP_ERR_MARCA', 'IN_ELENCO_COMPLETATO'))
join ELV_ELENCO_VERS ele
 on (ele.id_elenco_vers = doc.id_elenco_vers 
 and ele.ti_stato_elenco in ('CHIUSO', 'FIRMATO', 'FIRME_VERIFICATE_DT_VERS', 'IN_CODA_INDICE_AIP',
							 'INDICI_AIP_GENERATI', 'ELENCO_INDICI_AIP_CREATO', 'ELENCO_INDICI_AIP_FIRMA_IN_CORSO',
							 'ELENCO_INDICI_AIP_FIRMATO', 'ELENCO_INDICI_AIP_ERR_MARCA', 'COMPLETATO'))
 
UNION

select distinct
 rich_ann.id_rich_annul_vers,
 ele.id_elenco_vers,
 ele.nt_elenco_chiuso

from ARO_RICH_ANNUL_VERS rich_ann
join ARO_ITEM_RICH_ANNUL_VERS item
 on (item.id_rich_annul_vers = rich_ann.id_rich_annul_vers
 and item.ti_item_rich_annul_vers = 'UNI_DOC'
 and item.ti_stato_item = 'DA_ANNULLARE_IN_SACER')
join ARO_UNITA_DOC ud
 on (ud.id_unita_doc = item.id_unita_doc)
join ARO_UPD_UNITA_DOC upd
 on (upd.id_unita_doc = ud.id_unita_doc
 and upd.ti_stato_upd_elenco_vers in ('IN_ELENCO_CHIUSO', 'IN_ELENCO_FIRMATO', 'IN_ELENCO_CON_FIRME_VERIFICATE_DT_VERS', 'IN_ELENCO_IN_CODA_INDICE_AIP',
									'IN_ELENCO_CON_INDICI_AIP_GENERATI', 'IN_ELENCO_CON_ELENCO_INDICI_AIP_CREATO', 'IN_ELENCO_CON_ELENCO_INDICI_AIP_FIRMATO',
									'IN_ELENCO_CON_ELENCO_INDICI_AIP_ERR_MARCA', 'IN_ELENCO_COMPLETATO'))
join ELV_ELENCO_VERS ele
 on (ele.id_elenco_vers = upd.id_elenco_vers 
 and ele.ti_stato_elenco in ('CHIUSO', 'FIRMATO', 'FIRME_VERIFICATE_DT_VERS', 'IN_CODA_INDICE_AIP',
							 'INDICI_AIP_GENERATI', 'ELENCO_INDICI_AIP_CREATO', 'ELENCO_INDICI_AIP_FIRMA_IN_CORSO',
							 'ELENCO_INDICI_AIP_FIRMATO', 'ELENCO_INDICI_AIP_ERR_MARCA', 'COMPLETATO'));

-- changeset root:1751897635013-333
COMMENT ON COLUMN ELV_V_LIS_ELENCO_UD_ANNUL.ID_RICH_ANNUL_VERS IS 'PK.1';

-- changeset root:1751897635013-334
COMMENT ON COLUMN ELV_V_LIS_ELENCO_UD_ANNUL.ID_ELENCO_VERS IS 'PK.2';

-- changeset root:1751897635013-335
CREATE OR REPLACE FORCE VIEW "FAS_V_LIS_FASC_BY_RICHANN_UD" ("ID_RICH_ANNUL_VERS", "ID_FASCICOLO") AS select distinct
 item.id_rich_annul_vers,
 fasc.id_fascicolo 
 
from ARO_RICH_ANNUL_VERS rich_ann
join ARO_ITEM_RICH_ANNUL_VERS item
	 on (item.id_rich_annul_vers = rich_ann.id_rich_annul_vers
	 and item.ti_item_rich_annul_vers = 'UNI_DOC'
	 and item.ti_stato_item = 'DA_ANNULLARE_IN_SACER')
join FAS_UNITA_DOC_FASCICOLO ud_fasc
	on (ud_fasc.id_unita_doc = item.id_unita_doc)
join FAS_FASCICOLO fasc
	on (fasc.id_fascicolo = ud_fasc.id_fascicolo
	and fasc.ti_stato_fasc_elenco_vers in ('IN_ELENCO_IN_CODA_CREAZIONE_AIP', 'IN_ELENCO_CON_AIP_CREATO', 
										   'IN_ELENCO_CON_ELENCO_INDICI_AIP_CREATO', 'IN_ELENCO_COMPLETATO'));

-- changeset root:1751897635013-336
COMMENT ON COLUMN FAS_V_LIS_FASC_BY_RICHANN_UD.ID_RICH_ANNUL_VERS IS 'PK.1';

-- changeset root:1751897635013-337
COMMENT ON COLUMN FAS_V_LIS_FASC_BY_RICHANN_UD.ID_FASCICOLO IS 'PK.2';

-- changeset root:1751897635013-338
CREATE OR REPLACE FORCE VIEW "ARO_V_LIS_STATO_RICH_ANNVRS" ("ID_RICH_ANNUL_VERS", "ID_STATO_RICH_ANNUL_VERS", "PG_STATO_RICH_ANNUL_VERS", "TI_STATO_RICH_ANNUL_VERS", "DT_REG_STATO_RICH_ANNUL_VERS", "DS_NOTA_RICH_ANNUL_VERS", "NM_USERID") AS select
stato_rich.id_rich_annul_vers,
stato_rich.id_stato_rich_annul_vers,
stato_rich.pg_stato_rich_annul_vers,
stato_rich.ti_stato_rich_annul_vers,
stato_rich.dt_reg_stato_rich_annul_vers,
stato_rich.ds_nota_rich_annul_vers,
usr.nm_userid
	
from ARO_STATO_RICH_ANNUL_VERS stato_rich

join IAM_USER usr
 on (usr.id_user_iam = stato_rich.id_user_iam);

-- changeset root:1751897635013-339
COMMENT ON COLUMN ARO_V_LIS_STATO_RICH_ANNVRS.ID_STATO_RICH_ANNUL_VERS IS 'PK.1';

-- changeset root:1751897635013-340
CREATE OR REPLACE FORCE VIEW "FAS_V_VIS_FASCICOLO" ("NM_AMBIENTE", "NM_ENTE", "NM_STRUT", "NM_AMBIENTE_ENTE_CONVENZ", "CD_ENTE_CONVENZ", "NM_ENTE_CONVENZ", "ID_FASCICOLO", "AA_FASCICOLO", "CD_KEY_FASCICOLO", "ID_TIPO_FASCICOLO", "NM_TIPO_FASCICOLO", "DS_OGGETTO_FASCICOLO", "DT_APE_FASCICOLO", "DT_CHIU_FASCICOLO", "CD_IPA_AMMIN_TITOL", "TI_CODICE_AMMIN_TITOL", "DS_AMMIN_TITOL", "CD_PROC_AMMIN", "DS_PROC_AMMIN", "NI_AA_CONSERVAZIONE", "CD_LIVELLO_RISERV", "TS_INI_SES", "TI_STATO_CONSERVAZIONE", "TI_STATO_FASC_ELENCO_VERS", "CD_INDICE_CLASSIF", "DS_INDICE_CLASSIF", "CD_KEY_NORMALIZ_FASCICOLO", "ID_VOCE_TITOL", "CD_COMPOSITO_VOCE_TITOL", "AA_FASCICOLO_PADRE", "CD_KEY_FASCICOLO_PADRE", "DS_OGGETTO_FASCICOLO_PADRE", "CD_REG_KEY_UNITA_DOC_FIRST", "AA_KEY_UNITA_DOC_FIRST", "CD_KEY_UNITA_DOC_FIRST", "CD_REG_KEY_UNITA_DOC_LAST", "AA_KEY_UNITA_DOC_LAST", "CD_KEY_UNITA_DOC_LAST", "NI_UNITA_DOC", "FL_UPD_ANNUL_UNITA_DOC", "FL_UPD_MODIF_UNITA_DOC", "DS_NOTA", "DS_INFO_CONSERVAZIONE", "CD_VERSIONE_XML_SIP", "CD_VERSIONE_XML_RAPP", "ID_USER_IAM_VERS", "NM_USERID", "ID_SISTEMA_VERSANTE", "NM_SISTEMA_VERSANTE", "CD_IND_IP_CLIENT", "CD_IND_SERVER", "TI_CONSERVAZIONE", "FL_FORZA_CONTR_CLASSIF", "FL_FORZA_CONTR_NUMERO", "FL_FORZA_CONTR_COLLEG", "BL_XML_VERS_SIP", "DS_HASH_XML_SIP", "DS_ALGO_HASH_XML_SIP", "CD_ENCODING_HASH_XML_SIP", "DS_URN_XML_SIP", "BL_XML_VERS_RAPP", "DS_HASH_XML_RAPP", "DS_ALGO_HASH_XML_RAPP", "CD_ENCODING_HASH_XML_RAPP", "DS_URN_XML_RAPP", "BL_XML_VERS_PROFILO", "ID_MODELLO_XSD_PROFILO", "TI_MODELLO_XSD_PROFILO", "BL_XSD_VERS_PROFILO", "CD_XSD_PROFILO", "DS_XSD_PROFILO", "FL_DEFAULT_PROFILO", "BL_XML_SEGNATURA", "ID_MODELLO_XSD_SEGNATURA", "TI_MODELLO_XSD_SEGNATURA", "BL_XSD_SEGNATURA", "CD_XSD_SEGNATURA", "DS_XSD_SEGNATURA", "FL_DEFAULT_SEGNATURA", "BL_XML_NORMATIVO", "ID_MODELLO_XSD_NORMATIVO", "TI_MODELLO_XSD_NORMATIVO", "BL_XSD_NORMATIVO", "CD_XSD_NORMATIVO", "DS_XSD_NORMATIVO", "FL_DEFAULT_NORMATIVO", "BL_XML_SPECIFICO", "ID_MODELLO_XSD_SPECIFICO", "TI_MODELLO_XSD_SPECIFICO", "BL_XSD_SPECIFICO", "CD_XSD_SPECIFICO", "DS_XSD_SPECIFICO", "FL_DEFAULT_SPECIFICO") AS SELECT -- info organizzazione
        amb.nm_ambiente,
        ente.nm_ente,
        strut.nm_strut,
           -- info soggetto produttore
        ambconvenz.nm_ambiente_ente_convenz,
        convenz.cd_ente_convenz,
        convenz.nm_ente_siam,
           -- info fascicolo
        fasc.id_fascicolo,
        fasc.aa_fascicolo,
        fasc.cd_key_fascicolo,
        fasc.id_tipo_fascicolo,
        tipo_fascicolo.nm_tipo_fascicolo,
        fasc.ds_oggetto_fascicolo,
        fasc.dt_ape_fascicolo,
        fasc.dt_chiu_fascicolo,
        fasc.cd_ammin_titol,
        fasc.ti_codice_ammin_titol,
        fasc.ds_ammin_titol,
        fasc.cd_proc_ammin,
        fasc.ds_proc_ammin,
        fasc.ni_aa_conservazione,
        fasc.cd_livello_riserv,
        fasc.ts_ini_ses,
        fasc.ti_stato_conservazione,
        fasc.ti_stato_fasc_elenco_vers,
        fasc.cd_indice_classif,
        fasc.ds_indice_classif,
        fasc.cd_key_normaliz_fascicolo,
           --info segnatura archivistica
        fasc.id_voce_titol,
        titolario.cd_composito_voce_titol,
        fasc.aa_fascicolo_padre,
        fasc.cd_key_fascicolo_padre,
        fasc.ds_oggetto_fascicolo_padre,
           -- info composizione
        ud_first.cd_registro_key_unita_doc                AS cd_reg_key_unita_doc_first,
        ud_first.aa_key_unita_doc                         AS aa_key_unita_doc_first,
        ud_first.cd_key_unita_doc                         AS cd_key_unita_doc_first,
        ud_last.cd_registro_key_unita_doc                 AS cd_reg_key_unita_doc_last,
        ud_last.aa_key_unita_doc                          AS aa_key_unita_doc_last,
        ud_last.cd_key_unita_doc                          AS cd_key_unita_doc_last,
        fasc.ni_unita_doc,
        fasc.fl_upd_annul_unita_doc,
        fasc.fl_upd_modif_unita_doc,
           -- info note
        fasc.ds_nota,
        fasc.ds_info_conservazione,
           -- info versamento
        xmlfascsip.cd_versione_xml                        AS cd_versione_xml_sip,
        xmlfascrapp.cd_versione_xml                       AS cd_versione_xml_rapp,
        fasc.id_user_iam_vers,
        utenti.nm_userid,
        utenti.id_sistema_versante,
        sisvers.nm_sistema_versante,
        fasc.cd_ind_ip_client,
        fasc.cd_ind_server,
        fasc.ti_conservazione,
        fasc.fl_forza_contr_classif,
        fasc.fl_forza_contr_numero,
        fasc.fl_forza_contr_colleg,
           -- info sip
        xmlfascsip.bl_xml_vers                            AS bl_xml_vers_sip,
        xmlfascsip.ds_hash_xml_vers                       AS ds_hash_xml_sip,
        xmlfascsip.ds_algo_hash_xml_vers                  AS ds_algo_hash_xml_sip,
        xmlfascsip.cd_encoding_hash_xml_vers              AS cd_encoding_hash_xml_sip,
        xmlfascsip.ds_urn_xml_vers                        AS ds_urn_xml_sip,
           -- info rapporto vers
        xmlfascrapp.bl_xml_vers                           AS bl_xml_vers_rapp,
        xmlfascrapp.ds_hash_xml_vers                      AS ds_hash_xml_rapp,
        xmlfascrapp.ds_algo_hash_xml_vers                 AS ds_algo_hash_xml_rapp,
        xmlfascrapp.cd_encoding_hash_xml_vers             AS cd_encoding_hash_xml_rapp,
        xmlfascrapp.ds_urn_xml_vers                       AS ds_urn_xml_rapp,
			   
           -- info metadati di profilo
        xml_metadati_profilo.bl_xml                       AS bl_xml_vers_profilo,
        mod_metadati_profilo.id_modello_xsd_fascicolo     AS id_modello_xsd_profilo,
        mod_metadati_profilo.ti_modello_xsd               AS ti_modello_xsd_profilo,
        mod_metadati_profilo.bl_xsd                       AS bl_xsd_vers_profilo,
        mod_metadati_profilo.cd_xsd                       AS cd_xsd_profilo,
        mod_metadati_profilo.ds_xsd                       AS ds_xsd_profilo,
        mod_metadati_profilo.fl_default                   AS fl_default_profilo,
           
		   -- info metadati di segnatura archivistica
        xml_metadati_segnatura.bl_xml                     AS bl_xml_segnatura,
        mod_metadati_segnatura.id_modello_xsd_fascicolo   AS id_modello_xsd_segnatura,
        mod_metadati_segnatura.ti_modello_xsd             AS ti_modello_xsd_segnatura,
        mod_metadati_segnatura.bl_xsd                     AS bl_xsd_segnatura,
        mod_metadati_segnatura.cd_xsd                     AS cd_xsd_segnatura,
        mod_metadati_segnatura.ds_xsd                     AS ds_xsd_segnatura,
        mod_metadati_segnatura.fl_default                 AS fl_default_segnatura,
			   
			   -- info metadati di profilo normativo
        xml_metadati_normativo.bl_xml                     AS bl_xml_normativo,
        mod_metadati_normativo.id_modello_xsd_fascicolo   AS id_modello_xsd_normativo,
        mod_metadati_normativo.ti_modello_xsd             AS ti_modello_xsd_normativo,
        mod_metadati_normativo.bl_xsd                     AS bl_xsd_normativo,
        mod_metadati_normativo.cd_xsd                     AS cd_xsd_normativo,
        mod_metadati_normativo.ds_xsd                     AS ds_xsd_normativo,
        mod_metadati_normativo.fl_default                 AS fl_default_normativo,
			   
			   -- info metadati di profilo specifico
        xml_metadati_specifico.bl_xml                     AS bl_xml_specifico,
        mod_metadati_specifico.id_modello_xsd_fascicolo   AS id_modello_xsd_specifico,
        mod_metadati_specifico.ti_modello_xsd             AS ti_modello_xsd_specifico,
        mod_metadati_specifico.bl_xsd                     AS bl_xsd_specifico,
        mod_metadati_specifico.cd_xsd                     AS cd_xsd_specifico,
        mod_metadati_specifico.ds_xsd                     AS ds_xsd_specifico,
        mod_metadati_specifico.fl_default                 AS fl_default_specifico
    FROM
        fas_fascicolo                         fasc
        JOIN dec_tipo_fascicolo                    tipo_fascicolo ON ( tipo_fascicolo.id_tipo_fascicolo = fasc.id_tipo_fascicolo )
        JOIN sacer_iam.usr_user                    utenti ON ( fasc.id_user_iam_vers = utenti.id_user_iam )
        JOIN sacer_iam.apl_sistema_versante        sisvers ON ( utenti.id_sistema_versante = sisvers.id_sistema_versante )
        LEFT JOIN dec_voce_titol                        titolario ON ( fasc.id_voce_titol = titolario.id_voce_titol )
        JOIN fas_xml_vers_fascicolo                xmlfascsip ON ( fasc.id_fascicolo = xmlfascsip.id_fascicolo
                                                    AND xmlfascsip.ti_xml_vers = 'RICHIESTA' )
        JOIN fas_xml_vers_fascicolo                xmlfascrapp ON ( fasc.id_fascicolo = xmlfascrapp.id_fascicolo
                                                     AND xmlfascrapp.ti_xml_vers = 'RISPOSTA' )
        JOIN org_strut                             strut ON ( fasc.id_strut = strut.id_strut )
        JOIN org_ente                              ente ON ( strut.id_ente = ente.id_ente )
        JOIN org_ambiente                          amb ON ( ente.id_ambiente = amb.id_ambiente )
        JOIN sacer_iam.org_ente_siam               convenz ON ( strut.id_ente_convenz = convenz.id_ente_siam )
        JOIN sacer_iam.org_ambiente_ente_convenz   ambconvenz ON ( convenz.id_ambiente_ente_convenz = ambconvenz.id_ambiente_ente_convenz
        )
        LEFT JOIN aro_unita_doc                         ud_first ON ( ud_first.id_unita_doc = fasc.id_unita_doc_first )
        LEFT JOIN aro_unita_doc                         ud_last ON ( ud_last.id_unita_doc = fasc.id_unita_doc_last )
        LEFT JOIN fas_xml_fascicolo                     xml_metadati_profilo ON ( xml_metadati_profilo.id_fascicolo = fasc.id_fascicolo
                                                              AND xml_metadati_profilo.ti_modello_xsd = 'PROFILO_GENERALE_FASCICOLO'
                                                              )
        LEFT JOIN dec_modello_xsd_fascicolo             mod_metadati_profilo ON ( mod_metadati_profilo.id_modello_xsd_fascicolo = xml_metadati_profilo
        .id_modello_xsd_fascicolo )
        LEFT JOIN fas_xml_fascicolo                     xml_metadati_segnatura ON ( xml_metadati_segnatura.id_fascicolo = fasc.id_fascicolo
                                                                AND xml_metadati_segnatura.ti_modello_xsd = 'PROFILO_ARCHIVISTICO_FASCICOLO'
                                                                )
        LEFT JOIN dec_modello_xsd_fascicolo             mod_metadati_segnatura ON ( mod_metadati_segnatura.id_modello_xsd_fascicolo = xml_metadati_segnatura
        .id_modello_xsd_fascicolo )
		   -- aggiunta xsd normativo
        LEFT JOIN fas_xml_fascicolo                     xml_metadati_normativo ON ( xml_metadati_normativo.id_fascicolo = fasc.id_fascicolo
                                                                AND xml_metadati_normativo.ti_modello_xsd = 'PROFILO_NORMATIVO_FASCICOLO'
                                                                )
        LEFT JOIN dec_modello_xsd_fascicolo             mod_metadati_normativo ON ( mod_metadati_normativo.id_modello_xsd_fascicolo = xml_metadati_normativo
        .id_modello_xsd_fascicolo )
		   -- aggiunta xsd specifico
        LEFT JOIN fas_xml_fascicolo                     xml_metadati_specifico ON ( xml_metadati_specifico.id_fascicolo = fasc.id_fascicolo
                                                                AND xml_metadati_specifico.ti_modello_xsd = 'PROFILO_SPECIFICO_FASCICOLO'
                                                                )
        LEFT JOIN dec_modello_xsd_fascicolo             mod_metadati_specifico ON ( mod_metadati_specifico.id_modello_xsd_fascicolo = xml_metadati_specifico
        .id_modello_xsd_fascicolo );

-- changeset root:1751897635013-341
COMMENT ON COLUMN FAS_V_VIS_FASCICOLO.ID_FASCICOLO IS 'PK.1';

-- changeset root:1751897635013-342
CREATE OR REPLACE FORCE VIEW "MON_V_LIS_FASC_KO" ("ID_USER_IAM", "ID_AMBIENTE", "NM_AMBIENTE", "ID_ENTE", "NM_ENTE", "ID_STRUT", "NM_STRUT", "ID_FASCICOLO_KO", "AA_FASCICOLO", "CD_KEY_FASCICOLO", "TS_INI_FIRST_SES", "TS_INI_LAST_SES", "ID_ERR_SACER_PRINC", "CD_ERR_PRINC", "DS_ERR_PRINC", "ID_TIPO_FASCICOLO", "NM_TIPO_FASCICOLO", "TI_STATO_FASCICOLO_KO", "ID_SES_FASCICOLO_KO_FIRST", "ID_SES_FASCICOLO_KO_LAST") AS select
 utente.id_user_iam,
 amb.id_ambiente, amb.nm_ambiente,
 ente.id_ente, ente.nm_ente,
 strut.id_strut, strut.nm_strut,

 fasc_ko.id_fascicolo_ko, fasc_ko.aa_fascicolo, fasc_ko.cd_key_fascicolo,
 fasc_ko.ts_ini_first_ses, fasc_ko.ts_ini_last_ses,
 fasc_ko.id_err_sacer_princ,
 case
	when fasc_ko.id_err_sacer_princ is not null
		then (select cd_err
			  from DEC_ERR_SACER err
			  where err.id_err_sacer = fasc_ko.id_err_sacer_princ
			  )
		else null
 end cd_err_princ,
 fasc_ko.ds_err_princ,
 
 fasc_ko.id_tipo_fascicolo_last, ti_fasc.nm_tipo_fascicolo,
 fasc_ko.ti_stato_fascicolo_ko, 
 fasc_ko.id_ses_fascicolo_ko_first,  fasc_ko.id_ses_fascicolo_ko_last
 
from IAM_USER utente
join ORG_AMBIENTE amb
	on (amb.id_ambiente > 0)
join ORG_ENTE ente
	on (ente.id_ambiente = amb.id_ambiente)
join ORG_STRUT strut
	on (strut.id_ente = ente.id_ente)
join IAM_ABIL_ORGANIZ abil_org
	on (abil_org.id_user_iam = utente.id_user_iam
	and abil_org.id_organiz_applic = strut.id_strut)

join VRS_FASCICOLO_KO fasc_ko
	on (fasc_ko.id_strut = abil_org.id_organiz_applic)

join IAM_ABIL_TIPO_DATO abil_dato
 on (abil_dato.id_abil_organiz = abil_org.id_abil_organiz
 and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
 and abil_dato.id_tipo_dato_applic = fasc_ko.id_tipo_fascicolo_last)
 
join DEC_TIPO_FASCICOLO ti_fasc
	on (ti_fasc.id_tipo_fascicolo = fasc_ko.id_tipo_fascicolo_last);

-- changeset root:1751897635013-343
COMMENT ON COLUMN MON_V_LIS_FASC_KO.ID_FASCICOLO_KO IS 'PK.1';

-- changeset root:1751897635013-344
CREATE OR REPLACE FORCE VIEW "MON_V_LIS_DOC_AGG_DA_ELAB" ("ID_USER_IAM", "ID_AMBIENTE", "NM_AMBIENTE", "ID_ENTE", "NM_ENTE", "ID_STRUT", "NM_STRUT", "ID_UNITA_DOC", "ID_STRUT_UNITA_DOC", "CD_REGISTRO_KEY_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "ID_TIPO_UNITA_DOC", "NM_TIPO_UNITA_DOC", "ID_SUB_STRUT", "ID_DOC", "TI_DOC", "PG_DOC", "DT_CREAZIONE", "DS_ORD_DOC", "ID_TIPO_DOC", "NM_TIPO_DOC", "TI_CREAZIONE", "TI_STATO_DOC_ELENCO_VERS") AS select 
  
-- info su utente
 abil_org.id_user_iam,
-- info di organizzazione
 amb.id_ambiente, amb.nm_ambiente, 
 ente.id_ente, ente.nm_ente, 
 strut.id_strut, strut.nm_strut,
 
-- info unita doc 
 ud.id_unita_doc, 
 ud.id_strut id_strut_unita_doc, ud.cd_registro_key_unita_doc, ud.aa_key_unita_doc, ud.cd_key_unita_doc,
 ud.id_tipo_unita_doc, tipo_ud.nm_tipo_unita_doc, 
 ud.id_sub_strut,
  
-- info documento 
 doc.id_doc,
 doc.ti_doc, doc.pg_doc,
 doc_da_elab.dt_creazione,
 ud.ds_key_ord || '-' ||
 case
   when doc.ti_doc = 'PRINCIPALE' then 'A'
   when doc.ti_doc = 'ALLEGATO' then 'B'
   when doc.ti_doc = 'ANNESSO' then 'C'
   else 'D'
 end || '-' ||
 lpad(to_char(doc.pg_doc), 4, '0') ds_ord_doc,
 
 doc.id_tipo_doc,
 ti_doc.nm_tipo_doc,
 doc.ti_creazione,
 
 doc_da_elab.ti_stato_doc_da_elab

from IAM_ABIL_ORGANIZ abil_org
join ORG_STRUT strut
 on (strut.id_strut = abil_org.id_organiz_applic and strut.fl_cessato = 0)
join ORG_ENTE ente 
 on (ente.id_ente = strut.id_ente and ente.fl_cessato = 0)
join ORG_AMBIENTE amb
 on (amb.id_ambiente = ente.id_ambiente)

join ELV_DOC_AGG_DA_ELAB_ELENCO doc_da_elab
 on (doc_da_elab.id_strut = strut.id_strut)
join ARO_DOC doc
 on (doc.id_doc = doc_da_elab.id_doc) 

join DEC_TIPO_DOC ti_doc
 on (ti_doc.id_tipo_doc = doc.id_tipo_doc)
  
join ARO_UNITA_DOC ud
 on (ud.id_unita_doc = doc.id_unita_doc)
join DEC_TIPO_UNITA_DOC tipo_ud
 on (tipo_ud.id_tipo_unita_doc = ud.id_tipo_unita_doc);

-- changeset root:1751897635013-345
COMMENT ON COLUMN MON_V_LIS_DOC_AGG_DA_ELAB.ID_UNITA_DOC IS 'PK.1';

-- changeset root:1751897635013-346
CREATE OR REPLACE FORCE VIEW "MON_V_LIS_DOC_IAM" ("ID_USER_IAM", "ID_AMBIENTE", "NM_AMBIENTE", "ID_ENTE", "NM_ENTE", "ID_STRUT", "NM_STRUT", "ID_UNITA_DOC", "ID_STRUT_UNITA_DOC", "CD_REGISTRO_KEY_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "ID_TIPO_UNITA_DOC", "NM_TIPO_UNITA_DOC", "ID_SUB_STRUT", "ID_DOC", "TI_DOC", "PG_DOC", "DT_CREAZIONE", "DS_ORD_DOC", "ID_TIPO_DOC", "NM_TIPO_DOC", "TI_CREAZIONE", "TI_STATO_DOC_ELENCO_VERS") AS select 
  
-- info su utente
 abil_org.id_user_iam,
-- info di organizzazione
 amb.id_ambiente, amb.nm_ambiente, 
 ente.id_ente, ente.nm_ente, 
 strut.id_strut, strut.nm_strut,
 
-- info unita doc 
 ud.id_unita_doc, 
 ud.id_strut id_strut_unita_doc, ud.cd_registro_key_unita_doc, ud.aa_key_unita_doc, ud.cd_key_unita_doc,
 ud.id_tipo_unita_doc, tipo_ud.nm_tipo_unita_doc, 
 ud.id_sub_strut,
  
-- info documento 
 doc.id_doc,
 doc.ti_doc, doc.pg_doc,
 doc.dt_creazione,
 ud.ds_key_ord || '-' ||
 case
   when doc.ti_doc = 'PRINCIPALE' then 'A'
   when doc.ti_doc = 'ALLEGATO' then 'B'
   when doc.ti_doc = 'ANNESSO' then 'C'
   else 'D'
 end || '-' ||
 lpad(to_char(doc.pg_doc), 4, '0') ds_ord_doc,
 
 doc.id_tipo_doc,
 ti_doc.nm_tipo_doc,
 doc.ti_creazione,
 
 case
	when doc.ti_creazione = 'VERSAMENTO_UNITA_DOC'
		then ti_stato_ud_elenco_vers
		else ti_stato_doc_elenco_vers
 end ti_stato_doc_elenco_vers

from IAM_ABIL_ORGANIZ abil_org
join ORG_STRUT strut
 on (strut.id_strut = abil_org.id_organiz_applic and strut.fl_cessato = 0)
join ORG_ENTE ente 
 on (ente.id_ente = strut.id_ente and ente.fl_cessato = 0)
join ORG_AMBIENTE amb
 on (amb.id_ambiente = ente.id_ambiente)

join ARO_UNITA_DOC ud
 on (ud.id_strut = strut.id_strut)
join DEC_TIPO_UNITA_DOC tipo_ud
 on (tipo_ud.id_tipo_unita_doc = ud.id_tipo_unita_doc)
join ARO_DOC doc
 on (doc.id_unita_doc = ud.id_unita_doc
 and doc.dt_annul = to_date('31/12/2444', 'dd/mm/yyyy'))
join DEC_TIPO_DOC ti_doc
 on (ti_doc.id_tipo_doc = doc.id_tipo_doc);

-- changeset root:1751897635013-347
COMMENT ON COLUMN MON_V_LIS_DOC_IAM.ID_DOC IS 'PK.1';

-- changeset root:1751897635013-348
CREATE OR REPLACE FORCE VIEW "MON_V_LIS_DOC_VERS" ("ID_USER_IAM", "ID_AMBIENTE", "NM_AMBIENTE", "ID_ENTE", "NM_ENTE", "ID_STRUT", "NM_STRUT", "ID_UNITA_DOC", "ID_STRUT_UNITA_DOC", "CD_REGISTRO_KEY_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "ID_TIPO_UNITA_DOC", "NM_TIPO_UNITA_DOC", "ID_SUB_STRUT", "ID_DOC", "TI_DOC", "PG_DOC", "DT_CREAZIONE", "DS_ORD_DOC", "ID_TIPO_DOC", "NM_TIPO_DOC", "TI_CREAZIONE", "TI_STATO_DOC_ELENCO_VERS") AS select 
  
-- info su utente
 abil_org.id_user_iam,
-- info di organizzazione
 amb.id_ambiente, amb.nm_ambiente, 
 ente.id_ente, ente.nm_ente, 
 strut.id_strut, strut.nm_strut,
 
-- info unita doc 
 ud.id_unita_doc, 
 ud.id_strut id_strut_unita_doc, ud.cd_registro_key_unita_doc, ud.aa_key_unita_doc, ud.cd_key_unita_doc,
 ud.id_tipo_unita_doc, tipo_ud.nm_tipo_unita_doc, 
 ud.id_sub_strut,
  
-- info documento 
 doc.id_doc,
 doc.ti_doc, doc.pg_doc,
 doc.dt_creazione,
 ud.ds_key_ord || '-' ||
 case
   when doc.ti_doc = 'PRINCIPALE' then 'A'
   when doc.ti_doc = 'ALLEGATO' then 'B'
   when doc.ti_doc = 'ANNESSO' then 'C'
   else 'D'
 end || '-' ||
 lpad(to_char(doc.pg_doc), 4, '0') ds_ord_doc,
 
 doc.id_tipo_doc,
 ti_doc.nm_tipo_doc,
 doc.ti_creazione,
 
 doc.ti_stato_doc_elenco_vers

from IAM_ABIL_ORGANIZ abil_org
join ORG_STRUT strut
 on (strut.id_strut = abil_org.id_organiz_applic and strut.fl_cessato = 0)
join ORG_ENTE ente 
 on (ente.id_ente = strut.id_ente and ente.fl_cessato = 0)
join ORG_AMBIENTE amb
 on (amb.id_ambiente = ente.id_ambiente)

join ARO_UNITA_DOC ud
 on (ud.id_strut = strut.id_strut
 and ud.dt_annul = to_date('31/12/2444', 'dd/mm/yyyy'))
join DEC_TIPO_UNITA_DOC tipo_ud
 on (tipo_ud.id_tipo_unita_doc = ud.id_tipo_unita_doc)

join ARO_DOC doc
 on (doc.id_unita_doc = ud.id_unita_doc)
join DEC_TIPO_DOC ti_doc
 on (ti_doc.id_tipo_doc = doc.id_tipo_doc);

-- changeset root:1751897635013-349
COMMENT ON COLUMN MON_V_LIS_DOC_VERS.ID_DOC IS 'PK.1';

-- changeset root:1751897635013-350
CREATE OR REPLACE FORCE VIEW "ELV_V_RIC_ELENCO_FASC" ("ID_ELENCO_VERS_FASC", "ID_AMBIENTE", "NM_AMBIENTE", "ID_ENTE", "NM_ENTE", "ID_STRUT", "NM_STRUT", "ID_USER_IAM", "AA_FASCICOLO", "TI_STATO", "TS_CREAZIONE_ELENCO", "DT_CHIUSURA", "DL_MOTIVO_CHIUS", "DT_FIRMA", "NI_FASC_VERS_ELENCO", "NT_INDICE_ELENCO", "NT_ELENCO_CHIUSO", "ID_CRITERIO_RAGGR_FASC", "NM_CRITERIO_RAGGR", "FL_ELENCO_STANDARD", "CD_VOCE_TITOL", "NM_TIPO_FASCICOLO", "ID_STATO_ELENCO_VERS_FASC_COR") AS SELECT ele.id_elenco_vers_fasc,
           amb.id_ambiente,
           amb.nm_ambiente,
           ente.id_ente,
           ente.nm_ente,
           ele.id_strut,
           strut.nm_strut,
           abil_org.id_user_iam,
           CASE
               WHEN ele.aa_fascicolo IS NULL THEN
                   CASE
                       WHEN crit.aa_fascicolo IS NOT NULL THEN
                           crit.aa_fascicolo
                   END
               ELSE
                   ele.aa_fascicolo
           END    aa_fascicolo,
           stato_corr.ti_stato,
           ele.ts_creazione_elenco,
           stato_chiuso.ts_stato,
           ele.dl_motivo_chius,
           stato_firmato.ts_stato,
           ele.ni_fasc_vers_elenco,
           ele.nt_indice_elenco,
           ele.nt_elenco_chiuso,
           ele.id_criterio_raggr_fasc,
           crit.nm_criterio_raggr,
           ele.fl_elenco_standard,
           CASE
               WHEN crit.fl_filtro_voce_titol = 1 THEN
                   CASE
                       WHEN (SELECT COUNT (
                                        critmulti.id_sel_criterio_raggr_fasc)
                               FROM DEC_SEL_CRITERIO_RAGGR_FASC critmulti
                              WHERE critmulti.id_criterio_raggr_fasc =
                                    crit.id_criterio_raggr_fasc
                                AND critmulti.id_voce_titol IS NOT NULL) =
                            1 THEN
                           (SELECT titol.cd_composito_voce_titol
                              FROM DEC_SEL_CRITERIO_RAGGR_FASC  critmulti
                                   JOIN DEC_VOCE_TITOL titol
                                       ON (critmulti.id_voce_titol =
                                           titol.id_voce_titol)
                             WHERE critmulti.id_criterio_raggr_fasc =
                                   crit.id_criterio_raggr_fasc)
                       ELSE
                           'Diversi'
                   END
               ELSE
                   NULL
           END    cd_voce_titol,
           CASE
               WHEN crit.fl_filtro_tipo_fascicolo = 1 THEN
                   CASE
                       WHEN (SELECT COUNT (
                                        critmulti.id_sel_criterio_raggr_fasc)
                               FROM DEC_SEL_CRITERIO_RAGGR_FASC critmulti
                              WHERE critmulti.id_criterio_raggr_fasc =
                                    crit.id_criterio_raggr_fasc
                                AND critmulti.id_tipo_fascicolo IS NOT NULL) =
                            1 THEN
                           (SELECT tipofasc.nm_tipo_fascicolo
                              FROM DEC_SEL_CRITERIO_RAGGR_FASC  critmulti
                                   JOIN DEC_TIPO_FASCICOLO tipofasc
                                       ON (critmulti.id_tipo_fascicolo =
                                           tipofasc.id_tipo_fascicolo)
                             WHERE critmulti.id_criterio_raggr_fasc =
                                   crit.id_criterio_raggr_fasc)
                       ELSE
                           'Diversi'
                   END
               ELSE
                   NULL
           END    nm_tipo_fascicolo,
           ele.id_stato_elenco_vers_fasc_cor
      FROM ELV_ELENCO_VERS_FASC  ele
           JOIN ELV_STATO_ELENCO_VERS_FASC stato_corr
               ON (ele.id_stato_elenco_vers_fasc_cor =
                   stato_corr.id_stato_elenco_vers_fasc)
           JOIN ELV_STATO_ELENCO_VERS_FASC stato_chiuso
               ON (ele.id_elenco_vers_fasc = stato_chiuso.id_elenco_vers_fasc
               AND stato_chiuso.ti_stato = 'CHIUSO')
           JOIN ELV_STATO_ELENCO_VERS_FASC stato_firmato
               ON (ele.id_elenco_vers_fasc =
                   stato_firmato.id_elenco_vers_fasc
               AND stato_firmato.ti_stato in('VALIDATO', 'FIRMATO'))
           JOIN ORG_STRUT strut
               ON (strut.id_strut = ele.id_strut AND strut.fl_cessato = 0)
           JOIN ORG_ENTE ente
               ON (ente.id_ente = strut.id_ente AND ente.fl_cessato = 0)
           JOIN ORG_AMBIENTE amb ON (amb.id_ambiente = ente.id_ambiente)
           JOIN IAM_ABIL_ORGANIZ abil_org
               ON (abil_org.id_organiz_applic = strut.id_strut)
           JOIN DEC_CRITERIO_RAGGR_FASC crit
               ON (crit.id_criterio_raggr_fasc = ele.id_criterio_raggr_fasc);

-- changeset root:1751897635013-351
COMMENT ON COLUMN ELV_V_RIC_ELENCO_FASC.ID_ELENCO_VERS_FASC IS 'PK.1';

-- changeset root:1751897635013-352
CREATE OR REPLACE FORCE VIEW "IAM_V_LIS_ORGANIZ_DA_REPLIC" ("ID_ORGANIZ_DA_REPLIC", "ID_ORGANIZ_APPLIC", "NM_ORGANIZ", "TI_OPER_REPLIC", "TI_STATO_REPLIC", "DT_LOG_ORGANIZ_DA_REPLIC", "CD_ERR", "DS_MSG_ERR", "DT_ERR", "DS_ORD_ORGANIZ", "ID_AMBIENTE", "NM_AMBIENTE", "ID_ENTE", "NM_ENTE", "ID_STRUT", "NM_STRUT") AS select
-- info su replica
 da_replic.id_organiz_da_replic,
 da_replic.id_organiz_applic,
 da_replic.nm_organiz,
 da_replic.ti_oper_replic, 
 da_replic.ti_stato_replic,
 da_replic.dt_log_organiz_da_replic,
 da_replic.cd_err,
 da_replic.ds_msg_err,
 da_replic.dt_err ,

-- info di organizzazione
 case
	when da_replic.nm_tipo_organiz = 'STRUTTURA'
		then
			case
				when exists (select * from ORG_STRUT strut where strut.id_strut = da_replic.id_organiz_applic)
					then (select amb.nm_ambiente || ' / ' || ente.nm_ente 
              from ORG_STRUT strut, ORG_ENTE ente, ORG_AMBIENTE amb 
              where strut.id_strut = da_replic.id_organiz_applic 
              and ente.id_ente = strut.id_ente 
              and amb.id_ambiente = ente.id_ambiente) || ' / ' 
						|| da_replic.nm_organiz
					else '--' || ' / ' || '--' || ' / ' || da_replic.nm_organiz
			end

	when da_replic.nm_tipo_organiz = 'ENTE'
		then
			case
				when exists (select * from ORG_ENTE ente where ente.id_ente = da_replic.id_organiz_applic)
					then (select amb.nm_ambiente from ORG_ENTE ente, ORG_AMBIENTE amb where ente.id_ente = da_replic.id_organiz_applic  and amb.id_ambiente = ente.id_ambiente) || ' / ' 
						|| da_replic.nm_organiz
					else '--' || ' / ' || da_replic.nm_organiz
			end	
		else da_replic.nm_organiz
 end ds_ord_organiz ,

 
 case
	when da_replic.nm_tipo_organiz = 'STRUTTURA'
		then
			case
				when exists (select * from ORG_STRUT strut where strut.id_strut = da_replic.id_organiz_applic)
					then (select ente.id_ambiente from ORG_STRUT strut, ORG_ENTE ente where strut.id_strut = da_replic.id_organiz_applic and ente.id_ente = strut.id_ente)
					else null
			end
	when da_replic.nm_tipo_organiz = 'ENTE'	
		then
			case
				when exists (select * from ORG_ENTE ente where ente.id_ente = da_replic.id_organiz_applic)
					then (select ente.id_ambiente from ORG_ENTE ente where ente.id_ente = da_replic.id_organiz_applic )
					else null
			end
	else da_replic.id_organiz_applic
 end id_ambiente,

 case
	when da_replic.nm_tipo_organiz = 'STRUTTURA'
		then
			case
				when exists (select * from ORG_STRUT strut where strut.id_strut = da_replic.id_organiz_applic)
					then (select amb.nm_ambiente from ORG_STRUT strut, ORG_ENTE ente, ORG_AMBIENTE amb where strut.id_strut = da_replic.id_organiz_applic and ente.id_ente = strut.id_ente and amb.id_ambiente = ente.id_ambiente)
					else null
			end
	when da_replic.nm_tipo_organiz = 'ENTE'
		then
			case
				when exists (select * from ORG_ENTE ente where ente.id_ente = da_replic.id_organiz_applic)
					then (select amb.nm_ambiente from ORG_ENTE ente, ORG_AMBIENTE amb where ente.id_ente = da_replic.id_organiz_applic  and amb.id_ambiente = ente.id_ambiente)
					else null
			end	
		else da_replic.nm_organiz
 end  nm_ambiente,

 case
	when da_replic.nm_tipo_organiz = 'STRUTTURA'
		then
			case
				when exists (select * from ORG_STRUT strut where strut.id_strut = da_replic.id_organiz_applic)
					then (select ente.id_ente from ORG_STRUT strut, ORG_ENTE ente where strut.id_strut = da_replic.id_organiz_applic and ente.id_ente = strut.id_ente)
					else null
			end
	when da_replic.nm_tipo_organiz = 'ENTE'	
		then
			case
				when exists (select * from ORG_ENTE ente where ente.id_ente = da_replic.id_organiz_applic)
					then (select ente.id_ente from ORG_ENTE ente where ente.id_ente = da_replic.id_organiz_applic )
					else null
			end
	else null
 end id_ente,

 case
	when da_replic.nm_tipo_organiz = 'STRUTTURA'
		then
			case
				when exists (select * from ORG_STRUT strut where strut.id_strut = da_replic.id_organiz_applic)
					then (select ente.nm_ente from ORG_STRUT strut, ORG_ENTE ente where strut.id_strut = da_replic.id_organiz_applic and ente.id_ente = strut.id_ente)
					else null
			end
	when da_replic.nm_tipo_organiz = 'ENTE'
		then
			case
				when exists (select * from ORG_ENTE ente where ente.id_ente = da_replic.id_organiz_applic)
					then (select ente.nm_ente from ORG_ENTE ente where ente.id_ente = da_replic.id_organiz_applic)
					else null
			end	
		else null
 end nm_ente ,

 case
	when da_replic.nm_tipo_organiz = 'STRUTTURA'
		then  da_replic.id_organiz_applic
		else null
 end id_strut,
 case
	when da_replic.nm_tipo_organiz = 'STRUTTURA'
		then  da_replic.nm_organiz
		else null
 end nm_strut

 
from IAM_ORGANIZ_DA_REPLIC da_replic;

-- changeset root:1751897635013-353
COMMENT ON COLUMN IAM_V_LIS_ORGANIZ_DA_REPLIC.ID_ORGANIZ_DA_REPLIC IS 'PK.1 relativa a tabella IAM_ORGANIZ_DA_REPLIC';

-- changeset root:1751897635013-354
CREATE OR REPLACE FORCE VIEW "MON_V_ABIL_KEY_TOTAL_UD" ("ID_USER_IAM_COR", "ID_AMBIENTE", "NM_AMBIENTE", "ID_ENTE", "NM_ENTE", "ID_STRUT", "NM_STRUT", "ID_TIPO_UNITA_DOC", "ID_REGISTRO_UNITA_DOC", "ID_TIPO_DOC_PRINC", "AA_KEY_UNITA_DOC", "ID_KEY_TOTAL_UD", "DT_LAST_UPD_UD") AS select
 abil_org.id_user_iam id_user_iam_cor,
 amb.id_ambiente, amb.nm_ambiente,
 ente.id_ente, ente.nm_ente,
 strut.id_strut, strut.nm_strut,
 key_tot.id_tipo_unita_doc,
 key_tot.id_registro_unita_doc,
 key_tot.id_tipo_doc_princ,
 key_tot.aa_key_unita_doc,
 key_tot.id_key_total_ud,
 key_tot.dt_last_upd_ud

from IAM_ABIL_ORGANIZ abil_org
join ORG_STRUT strut
	on (strut.id_strut = abil_org.id_organiz_applic and strut.fl_cessato = 0)
join ORG_ENTE ente
	on (ente.id_ente = strut.id_ente and ente.fl_cessato = 0)
join ORG_AMBIENTE amb
	on (amb.id_ambiente = ente.id_ambiente)
join MON_KEY_TOTAL_UD key_tot
	on (key_tot.id_strut = strut.id_strut)

join IAM_ABIL_TIPO_DATO abil_reg
	on (abil_reg.id_abil_organiz = abil_org.id_abil_organiz
	and abil_reg.nm_classe_tipo_dato = 'REGISTRO'
	and abil_reg.id_tipo_dato_applic = key_tot.id_registro_unita_doc)
join IAM_ABIL_TIPO_DATO abil_tipo_ud
	on (abil_tipo_ud.id_abil_organiz = abil_org.id_abil_organiz
	and abil_tipo_ud.nm_classe_tipo_dato = 'TIPO_UNITA_DOC'
	and abil_tipo_ud.id_tipo_dato_applic = key_tot.id_tipo_unita_doc)
join IAM_ABIL_TIPO_DATO abil_tipo_doc
	on (abil_tipo_doc.id_abil_organiz = abil_org.id_abil_organiz
	and abil_tipo_doc.nm_classe_tipo_dato = 'TIPO_DOC'
	and abil_tipo_doc.id_tipo_dato_applic = key_tot.id_tipo_doc_princ);

-- changeset root:1751897635013-355
COMMENT ON COLUMN MON_V_ABIL_KEY_TOTAL_UD.ID_USER_IAM_COR IS 'PK.1';

-- changeset root:1751897635013-356
COMMENT ON COLUMN MON_V_ABIL_KEY_TOTAL_UD.ID_STRUT IS 'PK.2';

-- changeset root:1751897635013-357
COMMENT ON COLUMN MON_V_ABIL_KEY_TOTAL_UD.ID_TIPO_UNITA_DOC IS 'PK.3';

-- changeset root:1751897635013-358
COMMENT ON COLUMN MON_V_ABIL_KEY_TOTAL_UD.ID_REGISTRO_UNITA_DOC IS 'PK.4';

-- changeset root:1751897635013-359
COMMENT ON COLUMN MON_V_ABIL_KEY_TOTAL_UD.ID_TIPO_DOC_PRINC IS 'PK.5';

-- changeset root:1751897635013-360
COMMENT ON COLUMN MON_V_ABIL_KEY_TOTAL_UD.AA_KEY_UNITA_DOC IS 'PK.6';

-- changeset root:1751897635013-361
CREATE OR REPLACE FORCE VIEW "MON_V_ABIL_KEY_TOTAL_UD_KO" ("ID_USER_IAM_COR", "ID_AMBIENTE", "NM_AMBIENTE", "ID_ENTE", "NM_ENTE", "ID_STRUT", "NM_STRUT", "ID_TIPO_UNITA_DOC", "ID_REGISTRO_UNITA_DOC", "ID_TIPO_DOC_PRINC", "AA_KEY_UNITA_DOC", "ID_KEY_TOTAL_UD_KO", "DT_LAST_UPD_UD_KO") AS select
 abil_org.id_user_iam id_user_iam_cor,
 amb.id_ambiente, amb.nm_ambiente,
 ente.id_ente, ente.nm_ente,
 strut.id_strut, strut.nm_strut,
 key_tot_ko.id_tipo_unita_doc,
 key_tot_ko.id_registro_unita_doc,
 key_tot_ko.id_tipo_doc_princ,
 key_tot_ko.aa_key_unita_doc,
 key_tot_ko.id_key_total_ud_ko,
 key_tot_ko.dt_last_upd_ud_ko

from IAM_ABIL_ORGANIZ abil_org
join ORG_STRUT strut
	on (strut.id_strut = abil_org.id_organiz_applic and strut.fl_cessato = 0)
join ORG_ENTE ente
	on (ente.id_ente = strut.id_ente and ente.fl_cessato = 0)
join ORG_AMBIENTE amb
	on (amb.id_ambiente = ente.id_ambiente)
join MON_KEY_TOTAL_UD_KO key_tot_ko
	on (key_tot_ko.id_strut = strut.id_strut)

join IAM_ABIL_TIPO_DATO abil_reg
	on (abil_reg.id_abil_organiz = abil_org.id_abil_organiz
	and abil_reg.nm_classe_tipo_dato = 'REGISTRO'
	and abil_reg.id_tipo_dato_applic = key_tot_ko.id_registro_unita_doc)
join IAM_ABIL_TIPO_DATO abil_tipo_ud
	on (abil_tipo_ud.id_abil_organiz = abil_org.id_abil_organiz
	and abil_tipo_ud.nm_classe_tipo_dato = 'TIPO_UNITA_DOC'
	and abil_tipo_ud.id_tipo_dato_applic = key_tot_ko.id_tipo_unita_doc)
join IAM_ABIL_TIPO_DATO abil_tipo_doc
	on (abil_tipo_doc.id_abil_organiz = abil_org.id_abil_organiz
	and abil_tipo_doc.nm_classe_tipo_dato = 'TIPO_DOC'
	and abil_tipo_doc.id_tipo_dato_applic = key_tot_ko.id_tipo_doc_princ);

-- changeset root:1751897635013-362
COMMENT ON COLUMN MON_V_ABIL_KEY_TOTAL_UD_KO.ID_USER_IAM_COR IS 'PK.1';

-- changeset root:1751897635013-363
COMMENT ON COLUMN MON_V_ABIL_KEY_TOTAL_UD_KO.ID_STRUT IS 'PK.2';

-- changeset root:1751897635013-364
COMMENT ON COLUMN MON_V_ABIL_KEY_TOTAL_UD_KO.ID_TIPO_UNITA_DOC IS 'PK.3';

-- changeset root:1751897635013-365
COMMENT ON COLUMN MON_V_ABIL_KEY_TOTAL_UD_KO.ID_REGISTRO_UNITA_DOC IS 'PK.4';

-- changeset root:1751897635013-366
COMMENT ON COLUMN MON_V_ABIL_KEY_TOTAL_UD_KO.ID_TIPO_DOC_PRINC IS 'PK.5';

-- changeset root:1751897635013-367
COMMENT ON COLUMN MON_V_ABIL_KEY_TOTAL_UD_KO.AA_KEY_UNITA_DOC IS 'PK.6';

-- changeset root:1751897635013-368
CREATE OR REPLACE FORCE VIEW "SER_V_COMUNIC_CONSIST_SERIE_UD" ("ID_SERIE", "ID_STRUT", "CD_COMPOSITO_SERIE", "AA_SERIE", "DS_SERIE", "ID_TIPO_SERIE", "NM_STRUT", "ID_ENTE", "NM_ENTE", "ID_AMBIENTE", "NM_AMBIENTE", "NM_TIPO_SERIE", "ID_TIPO_UNITA_DOC", "ID_REGISTRO_UNITA_DOC", "ID_VER_SERIE", "CD_VER_SERIE", "TI_STATO_VER_SERIE", "ID_CONTENUTO_CALC", "TI_STATO_CONTENUTO_CALC", "ID_CONTENUTO_ACQ", "TI_STATO_CONTENUTO_ACQ", "ID_CONTENUTO_EFF", "TI_STATO_CONTENUTO_EFF", "NI_UNITA_DOC", "ID_CONSIST_VER_SERIE", "FL_PRESENZA_CONSIST_ATTESA", "NI_UNITA_DOC_ATTESE", "TI_MOD_CONSIST_FIRST_LAST", "NI_LACUNE_MANCANTI", "NI_LACUNE_NON_PRODOTTE", "DT_COMUNIC_CONSIST_VER_SERIE", "FL_PRESENZA_CONTEN_EFF") AS select
 serie.id_serie, serie.id_strut, serie.cd_composito_serie, serie.aa_serie, serie.ds_serie, serie.id_tipo_serie,
 
 strut.nm_strut, ente.id_ente, ente.nm_ente, amb.id_ambiente, amb.nm_ambiente,
 
 ti_serie.nm_tipo_serie,
 ti_serie_ud.id_tipo_unita_doc, ti_serie_ud.id_registro_unita_doc,
  
 ver_serie.id_ver_serie, ver_serie.cd_ver_serie, 
 stato_ver_serie.ti_stato_ver_serie,

 conten_calc.id_contenuto_ver_serie id_contenuto_calc, conten_calc.ti_stato_contenuto_ver_serie ti_stato_contenuto_calc,
 conten_acq.id_contenuto_ver_serie id_contenuto_acq, conten_acq.ti_stato_contenuto_ver_serie ti_stato_contenuto_acq,
 conten_eff.id_contenuto_ver_serie id_contenuto_eff, conten_eff.ti_stato_contenuto_ver_serie ti_stato_contenuto_eff,
 case
	when stato_ver_serie.ti_stato_ver_serie = 'APERTA'
		then
			case
				when conten_calc.id_contenuto_ver_serie is not null
					then conten_calc.ni_ud_contenuto_ver_serie
				when conten_acq.id_contenuto_ver_serie is not null
					then conten_acq.ni_ud_contenuto_ver_serie
				else null
			end
	when stato_ver_serie.ti_stato_ver_serie in ('DA_CONTROLLARE', 'CONTROLLATA', 'DA_VALIDARE')
		then conten_eff.ni_ud_contenuto_ver_serie
		else null
 end ni_unita_doc,

 consist.id_consist_ver_serie,
 case
	when consist.id_consist_ver_serie is not null
		then '1'
		else '0'
 end fl_presenza_consist_attesa,
 consist.ni_unita_doc_attese,
 consist.ti_mod_consist_first_last,
 case
	when consist.id_consist_ver_serie is not null
		then (select count(*) 
			  from SER_LACUNA_CONSIST_VER_SERIE lacuna 
			  where lacuna.id_consist_ver_serie = consist.id_consist_ver_serie
			  and lacuna.ti_lacuna = 'MANCANTI'
			  and lacuna.ti_mod_lacuna = 'DESCRIZIONE')
		else 0
 end ni_lacune_mancanti,
 case
	when consist.id_consist_ver_serie is not null
		then (select count(*) 
			  from SER_LACUNA_CONSIST_VER_SERIE lacuna 
			  where lacuna.id_consist_ver_serie = consist.id_consist_ver_serie
			  and lacuna.ti_lacuna = 'NON_PRODOTTE'
			  and lacuna.ti_mod_lacuna = 'DESCRIZIONE')
		else 0
 end ni_lacune_non_prodotte,
 consist.dt_comunic_consist_ver_serie,
 case
	when conten_eff.id_contenuto_ver_serie is not null
		then '1'
		else '0'
 end fl_presenza_conten_eff

from SER_SERIE serie

join ORG_STRUT strut
 on (strut.id_strut = serie.id_strut)
join ORG_ENTE ente
 on (ente.id_ente = strut.id_ente)
join ORG_AMBIENTE amb
 on (amb.id_ambiente = ente.id_ambiente)

join SER_VER_SERIE ver_serie
 on (ver_serie.id_serie = serie.id_serie)
join DEC_TIPO_SERIE ti_serie
 on (ti_serie.id_tipo_serie = serie.id_tipo_serie)
join DEC_TIPO_SERIE_UD ti_serie_ud
 on (ti_serie_ud.id_tipo_serie = ti_serie.id_tipo_serie)
 
join SER_STATO_VER_SERIE stato_ver_serie
 on (stato_ver_serie.id_stato_ver_serie = ver_serie.id_stato_ver_serie_cor
 and stato_ver_serie.ti_stato_ver_serie in ('APERTA', 'DA_CONTROLLARE', 'CONTROLLATA', 'DA_VALIDARE'))

left join SER_CONTENUTO_VER_SERIE conten_calc
 on (conten_calc.id_ver_serie = ver_serie.id_ver_serie
 and conten_calc.ti_contenuto_ver_serie = 'CALCOLATO')
 
left join SER_CONTENUTO_VER_SERIE conten_acq
 on (conten_acq.id_ver_serie = ver_serie.id_ver_serie
 and conten_acq.ti_contenuto_ver_serie = 'ACQUISITO')
 
left join SER_CONTENUTO_VER_SERIE conten_eff
 on (conten_eff.id_ver_serie = ver_serie.id_ver_serie
 and conten_eff.ti_contenuto_ver_serie = 'EFFETTIVO')
 
left join SER_CONSIST_VER_SERIE consist
 on (consist.id_ver_serie = ver_serie.id_ver_serie)
 
where ver_serie.pg_ver_serie = (select max(ver_serie_cor.pg_ver_serie )
								from SER_VER_SERIE ver_serie_cor
								where ver_serie_cor.id_serie = serie.id_serie
								)
and not exists (select *
				from SER_LACUNA_CONSIST_VER_SERIE lacuna_progr
				where lacuna_progr.id_consist_ver_serie = consist.id_consist_ver_serie
				and lacuna_progr.ti_mod_lacuna = 'RANGE_PROGRESSIVI'
				);

-- changeset root:1751897635013-369
CREATE OR REPLACE FORCE VIEW "ELV_V_LIS_LOG_OPER" ("ID_AMBIENTE", "ID_ENTE", "ID_STRUT", "NM_AMBIENTE", "NM_ENTE", "NM_STRUT", "ID_LOG_ELENCO_VERS", "ID_ELENCO_VERS", "TI_OPER", "TM_OPER", "NM_ELENCO", "TI_MOD_OPER", "DT_SCAD_CHIUS", "NI_MAX_COMP", "CD_DOC", "DL_MOTIVO_CHIUS", "NM_COGNOME_FIRMATARIO", "NM_NOME_FIRMATARIO", "ID_LOG_JOB") AS SELECT ente.id_ambiente,
           ente.id_ente,
           strut.id_strut,
           amb.nm_ambiente,
           ente.nm_ente,
           strut.nm_strut,
           log_ope.id_log_elenco_vers,
           log_ope.id_elenco_vers,
           log_ope.ti_oper,
           log_ope.tm_oper,
           log_ope.nm_elenco,
           CASE
               WHEN log_ope.id_log_job IS NULL THEN 'MANUALE'
               ELSE 'AUTOMATICA'
           END    ti_mod_oper,
           CASE
               WHEN log_ope.ti_oper IN ('CREA_ELENCO',
                                        'RECUPERA_ELENCO_APERTO',
                                        'SET_ELENCO_APERTO',
                                        'RECUPERA_ELENCO_SCADUTO') THEN
                   elenco.dt_scad_chius
               ELSE
                   NULL
           END    dt_scad_chius,
           CASE
               WHEN log_ope.ti_oper IN ('CREA_ELENCO',
                                        'RECUPERA_ELENCO_APERTO',
                                        'SET_ELENCO_APERTO',
                                        'RECUPERA_ELENCO_SCADUTO') THEN
                   elenco.ni_max_comp
               ELSE
                   NULL
           END    ni_max_comp,
           CASE
               WHEN log_ope.ti_oper = 'RIMUOVI_UD_ELENCO' THEN
                      log_ope.cd_registro_key_unita_doc
                   || '-'
                   || log_ope.aa_key_unita_doc
                   || '-'
                   || log_ope.cd_key_unita_doc
               WHEN log_ope.ti_oper = 'RIMUOVI_DOC_ELENCO' THEN
                      log_ope.cd_registro_key_unita_doc
                   || '-'
                   || log_ope.aa_key_unita_doc
                   || '-'
                   || log_ope.cd_key_unita_doc
                   || '-'
                   || log_ope.ti_doc
                   || '-'
                   || log_ope.pg_doc
               WHEN log_ope.ti_oper = 'RIMUOVI_UPD_UD_ELENCO' THEN
                      log_ope.cd_registro_key_unita_doc
                   || '-'
                   || log_ope.aa_key_unita_doc
                   || '-'
                   || log_ope.cd_key_unita_doc
                   || '-'
                   || log_ope.pg_upd_unita_doc
               ELSE
                   NULL
           END    cd_doc,
           CASE
               WHEN log_ope.ti_oper IN
                        ('CHIUSURA_ELENCO',
                         'CREA_INDICE_ELENCO',
                         'SET_ELENCO_DA_CHIUDERE') THEN
                   elenco.dl_motivo_chius
               ELSE
                   NULL
           END    dl_motivo_chius,
           CASE
               WHEN ti_oper IN ('VALIDAZIONE_ELENCO') THEN
                   usr.nm_cognome_user
               ELSE
                   NULL
           END    nm_cognome_firmatario,
           CASE
               WHEN ti_oper IN ('VALIDAZIONE_ELENCO') THEN usr.nm_nome_user
               ELSE NULL
           END    nm_nome_firmatario,
           log_ope.id_log_job
      FROM (SELECT * FROM ELV_LOG_ELENCO_VERS
            UNION ALL
            SELECT * FROM ELV_LOG_ELENCO_VERS_HISTORY) log_ope
           JOIN ORG_STRUT strut ON (strut.id_strut = log_ope.id_strut)
           JOIN ORG_ENTE ente ON (ente.id_ente = strut.id_ente)
           JOIN ORG_AMBIENTE amb ON (amb.id_ambiente = ente.id_ambiente)
           LEFT JOIN ELV_ELENCO_VERS elenco
               ON (elenco.id_elenco_vers = log_ope.id_elenco_vers)
           LEFT JOIN IAM_USER usr ON (usr.id_user_iam = log_ope.id_user);

-- changeset root:1751897635013-370
COMMENT ON COLUMN ELV_V_LIS_LOG_OPER.ID_LOG_ELENCO_VERS IS 'PK.1';

-- changeset root:1751897635013-371
CREATE OR REPLACE FORCE VIEW "APL_V_GETVAL_PARAM_BY_AMB" ("TI_APPART", "ID_PARAM_APPLIC", "NM_PARAM_APPLIC", "ID_VALORE_PARAM_APPLIC", "DS_VALORE_PARAM_APPLIC", "ID_AMBIENTE", "NM_AMBIENTE") AS select
 'AMBIENTE' ti_appart,
 par.id_param_applic, par.nm_param_applic,
 val.id_valore_param_applic, val.ds_valore_param_applic,
 amb.id_ambiente, amb.nm_ambiente
 
from APL_PARAM_APPLIC par
join APL_VALORE_PARAM_APPLIC val
	on (val.id_param_applic = par.id_param_applic)
join ORG_AMBIENTE amb
	on (amb.id_ambiente = val.id_ambiente)
where par.fl_appart_applic in ('1', '0')
and par.fl_appart_ambiente = '1'
and par.fl_appart_strut = '0'
and fl_appart_tipo_unita_doc = '0'
and fl_appart_aa_tipo_fascicolo = '0'

and val.ti_appart = 'AMBIENTE'

UNION

select
 'APPLIC' ti_appart,
 par.id_param_applic, par.nm_param_applic,
 val.id_valore_param_applic, val.ds_valore_param_applic,
 amb.id_ambiente, amb.nm_ambiente
 
from APL_PARAM_APPLIC par
join APL_VALORE_PARAM_APPLIC val
	on (val.id_param_applic = par.id_param_applic)
join ORG_AMBIENTE amb
	on (amb.nm_ambiente like '%')
	
where par.fl_appart_applic = '1'
and par.fl_appart_ambiente = '1'
and par.fl_appart_strut = '0'
and fl_appart_tipo_unita_doc = '0'
and fl_appart_aa_tipo_fascicolo = '0'

and val.ti_appart = 'APPLIC'

and not exists (select *
				from APL_VALORE_PARAM_APPLIC val_amb
				where val_amb.id_param_applic = par.id_param_applic
				and val_amb.id_ambiente = amb.id_ambiente
				and val_amb.ti_appart = 'AMBIENTE'
				);

-- changeset root:1751897635013-372
COMMENT ON COLUMN APL_V_GETVAL_PARAM_BY_AMB.ID_VALORE_PARAM_APPLIC IS 'PK.1';

-- changeset root:1751897635013-373
CREATE OR REPLACE FORCE VIEW "SER_V_VIS_ERR_FILE_SERIE_UD" ("ID_SERIE", "ID_STRUT", "CD_COMPOSITO_SERIE", "AA_SERIE", "DS_SERIE", "ID_TIPO_SERIE", "NM_STRUT", "ID_ENTE", "NM_ENTE", "ID_AMBIENTE", "NM_AMBIENTE", "NM_TIPO_SERIE", "ID_VER_SERIE", "CD_VER_SERIE", "ID_STATO_VER_SERIE_COR", "TI_STATO_VER_SERIE_COR", "ID_STATO_SERIE_COR", "TI_STATO_SERIE_COR", "ID_CONTENUTO_VER_SERIE", "TI_STATO_CONTENUTO_VER_SERIE", "DT_STATO_CONTENUTO_VER_SERIE", "FL_ERR_CONTENUTO", "NI_UNITA_DOC", "CD_FIRST_UNITA_DOC", "CD_LAST_UNITA_DOC", "TI_SCOPO_FILE_INPUT_VER_SERIE", "ID_FILE_INPUT_VER_SERIE", "ID_ERR_FILE_INPUT", "NI_REC_ERR", "TI_ERR_REC", "DS_REC_ERR") AS select
 serie.id_serie, serie.id_strut, serie.cd_composito_serie, serie.aa_serie, serie.ds_serie, serie.id_tipo_serie,
 
 strut.nm_strut, ente.id_ente, ente.nm_ente, amb.id_ambiente, amb.nm_ambiente,

 ti_serie.nm_tipo_serie,
 
 ver_serie.id_ver_serie, ver_serie.cd_ver_serie, 
 
 ver_serie.id_stato_ver_serie_cor, stato_ver_serie.ti_stato_ver_serie, 

 ver_serie.id_stato_ver_serie_cor, stato_serie.ti_stato_serie, 
  
 conten.id_contenuto_ver_serie,
 conten.ti_stato_contenuto_ver_serie,
 conten.dt_stato_contenuto_ver_serie,
 case
	when exists (select * 
				from SER_ERR_CONTENUTO_VER_SERIE err_conten
				where err_conten.id_contenuto_ver_serie = conten.id_contenuto_ver_serie)
		then '1'
		else '0'
 end fl_err_contenuto,
 conten.ni_ud_contenuto_ver_serie ni_unita_doc, ud_conten_first.cd_ud_serie cd_first_unita_doc, ud_conten_last.cd_ud_serie cd_last_unita_doc,
 
 file_inp.ti_scopo_file_input_ver_serie,
 file_inp.id_file_input_ver_serie, 
 
 err.id_err_file_input,
 err.ni_rec_err, 
 err.ti_err_rec, 
 err.ds_rec_err
 

from SER_ERR_FILE_INPUT err
join SER_FILE_INPUT_VER_SERIE file_inp
 on (file_inp.id_file_input_ver_serie = err.id_file_input_ver_serie)
 
join SER_VER_SERIE ver_serie
 on (ver_serie.id_ver_serie = file_inp.id_ver_serie)
join SER_STATO_VER_SERIE stato_ver_serie
 on (stato_ver_serie.id_stato_ver_serie = ver_serie.id_stato_ver_serie_cor)

join SER_SERIE serie
 on (serie.id_serie = ver_serie.id_serie)
join DEC_TIPO_SERIE ti_serie
 on (ti_serie.id_tipo_serie = serie.id_tipo_serie)
 
join ORG_STRUT strut
 on (strut.id_strut = serie.id_strut)
join ORG_ENTE ente
 on (ente.id_ente = strut.id_ente)
join ORG_AMBIENTE amb
 on (amb.id_ambiente = ente.id_ambiente)

left join SER_STATO_SERIE stato_serie
 on (stato_serie.id_stato_serie = serie.id_stato_serie_cor)

join SER_CONTENUTO_VER_SERIE conten
 on (conten.id_ver_serie = ver_serie.id_ver_serie
 and conten.ti_contenuto_ver_serie = 'ACQUISITO')
left join ARO_UD_APPART_VER_SERIE ud_conten_first
 on (ud_conten_first.id_ud_appart_ver_serie = conten.id_first_ud_appart_ver_serie)
left join ARO_UD_APPART_VER_SERIE ud_conten_last
 on (ud_conten_last.id_ud_appart_ver_serie = conten.id_last_ud_appart_ver_serie);

-- changeset root:1751897635013-374
COMMENT ON COLUMN SER_V_VIS_ERR_FILE_SERIE_UD.ID_ERR_FILE_INPUT IS 'PK.1';

-- changeset root:1751897635013-375
CREATE OR REPLACE FORCE VIEW "MON_V_CHK_FASC_BY_AMB" ("ID_AMBIENTE", "ID_USER_IAM", "FL_FASC_CORR", "FL_FASC_30GG", "FL_FASC_B30GG", "FL_FASC_ATTESA_SCHED_CORR", "FL_FASC_ATTESA_SCHED_30GG", "FL_FASC_ATTESA_SCHED_B30GG", "FL_FASC_NOSEL_SCHED_CORR", "FL_FASC_NOSEL_SCHED_30GG", "FL_FASC_NOSEL_SCHED_B30GG") AS select
 amb.id_ambiente,
 utente.id_user_iam,
 
--
--					fascicoli TOTALE
--
case
	when exists (select * 
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil_org, FAS_FASCICOLO fasc, IAM_ABIL_TIPO_DATO abil_dato
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil_org.id_organiz_applic = strut.id_strut
				and abil_org.id_user_iam = utente.id_user_iam
				and fasc.id_strut = abil_org.id_organiz_applic
				and trunc(fasc.ts_ini_ses) = trunc(sysdate)
				
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = fasc.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_corr,
case
	when exists (select *
				  from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil_org, MON_CONTA_FASCICOLI conta_fasc, IAM_ABIL_TIPO_DATO abil_dato
				  where ente.id_ambiente = amb.id_ambiente
				  and strut.id_ente = ente.id_ente
				  and abil_org.id_organiz_applic = strut.id_strut
				  and abil_org.id_user_iam = utente.id_user_iam
				  and conta_fasc.id_strut = abil_org.id_organiz_applic
				  and conta_fasc.dt_rif_conta between trunc(sysdate - 30) and trunc(sysdate - 1)
				 
				  and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				  and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				  and abil_dato.id_tipo_dato_applic = conta_fasc.id_tipo_fascicolo
				  )
			then '1'
			else '0'
end fl_fasc_30gg,
case
	when exists (select *
				  from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil_org, MON_CONTA_FASCICOLI conta_fasc, IAM_ABIL_TIPO_DATO abil_dato
				  where ente.id_ambiente = amb.id_ambiente
				  and strut.id_ente = ente.id_ente
				  and abil_org.id_organiz_applic = strut.id_strut
				  and abil_org.id_user_iam = utente.id_user_iam
				  and conta_fasc.id_strut = abil_org.id_organiz_applic
				  and conta_fasc.dt_rif_conta < trunc(sysdate - 30)
				  				 
				  and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				  and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				  and abil_dato.id_tipo_dato_applic = conta_fasc.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_b30gg,

--
--						fascicoli IN_ATTESA_SCHED
--
case
	when exists (select * 
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil_org, ELV_FASC_DA_ELAB_ELENCO fasc_da_elab, IAM_ABIL_TIPO_DATO abil_dato
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil_org.id_organiz_applic = strut.id_strut
				and abil_org.id_user_iam = utente.id_user_iam
				and fasc_da_elab.id_strut = abil_org.id_organiz_applic 
				and fasc_da_elab.ti_stato_fasc_da_elab = 'IN_ATTESA_SCHED'
				and trunc(fasc_da_elab.ts_vers_fascicolo) = trunc(sysdate)
				
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = fasc_da_elab.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_attesa_sched_corr,
case
	when exists (select * 
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil_org, ELV_FASC_DA_ELAB_ELENCO fasc_da_elab, IAM_ABIL_TIPO_DATO abil_dato
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil_org.id_organiz_applic = strut.id_strut
				and abil_org.id_user_iam = utente.id_user_iam
				and fasc_da_elab.id_strut = abil_org.id_organiz_applic 
				and fasc_da_elab.ti_stato_fasc_da_elab = 'IN_ATTESA_SCHED'
				and trunc(fasc_da_elab.ts_vers_fascicolo) between trunc(sysdate - 30) and trunc(sysdate - 1)
				
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = fasc_da_elab.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_attesa_sched_30gg,
case
	when exists (select * 
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil_org, ELV_FASC_DA_ELAB_ELENCO fasc_da_elab, IAM_ABIL_TIPO_DATO abil_dato
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil_org.id_organiz_applic = strut.id_strut
				and abil_org.id_user_iam = utente.id_user_iam
				and fasc_da_elab.id_strut = abil_org.id_organiz_applic 
				and fasc_da_elab.ti_stato_fasc_da_elab = 'IN_ATTESA_SCHED'
				and trunc(fasc_da_elab.ts_vers_fascicolo) < trunc(sysdate - 30)
				
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = fasc_da_elab.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_attesa_sched_b30gg,

--
--						fascicoli NON_SELEZ_SCHED
--
case
	when exists (select * 
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil_org, ELV_FASC_DA_ELAB_ELENCO fasc_da_elab, IAM_ABIL_TIPO_DATO abil_dato
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil_org.id_organiz_applic = strut.id_strut
				and abil_org.id_user_iam = utente.id_user_iam
				and fasc_da_elab.id_strut = abil_org.id_organiz_applic 
				and fasc_da_elab.ti_stato_fasc_da_elab = 'NON_SELEZ_SCHED'
				and trunc(fasc_da_elab.ts_vers_fascicolo) = trunc(sysdate)
				
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = fasc_da_elab.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_nosel_sched_corr,
case
	when exists (select * 
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil_org, ELV_FASC_DA_ELAB_ELENCO fasc_da_elab, IAM_ABIL_TIPO_DATO abil_dato
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil_org.id_organiz_applic = strut.id_strut
				and abil_org.id_user_iam = utente.id_user_iam
				and fasc_da_elab.id_strut = abil_org.id_organiz_applic 
				and fasc_da_elab.ti_stato_fasc_da_elab = 'NON_SELEZ_SCHED'
				and trunc(fasc_da_elab.ts_vers_fascicolo) between trunc(sysdate - 30) and trunc(sysdate - 1)
				
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = fasc_da_elab.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_nosel_sched_30gg,
case
	when exists (select * 
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil_org, ELV_FASC_DA_ELAB_ELENCO fasc_da_elab, IAM_ABIL_TIPO_DATO abil_dato
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil_org.id_organiz_applic = strut.id_strut
				and abil_org.id_user_iam = utente.id_user_iam
				and fasc_da_elab.id_strut = abil_org.id_organiz_applic 
				and fasc_da_elab.ti_stato_fasc_da_elab = 'NON_SELEZ_SCHED'
				and trunc(fasc_da_elab.ts_vers_fascicolo) < trunc(sysdate - 30)
				
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = fasc_da_elab.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_nosel_sched_b30gg

from ORG_AMBIENTE amb
join IAM_USER utente
 on (utente.id_user_iam > 0);

-- changeset root:1751897635013-376
COMMENT ON COLUMN MON_V_CHK_FASC_BY_AMB.ID_AMBIENTE IS 'PK.1';

-- changeset root:1751897635013-377
COMMENT ON COLUMN MON_V_CHK_FASC_BY_AMB.ID_USER_IAM IS 'PK.2';

-- changeset root:1751897635013-378
CREATE OR REPLACE FORCE VIEW "MON_V_CHK_FASC_KO_BY_AMB" ("ID_AMBIENTE", "ID_USER_IAM", "FL_FASC_KO_NON_RISOLUB_CORR", "FL_FASC_KO_NON_RISOLUB_30GG", "FL_FASC_KO_NON_RISOLUB_B30GG", "FL_FASC_KO_VERIF_CORR", "FL_FASC_KO_VERIF_30GG", "FL_FASC_KO_VERIF_B30GG", "FL_FASC_KO_NON_VERIF_CORR", "FL_FASC_KO_NON_VERIF_30GG", "FL_FASC_KO_NON_VERIF_B30GG") AS select
 amb.id_ambiente,
 utente.id_user_iam,

--
--						fascicoli KO non risolubili
--
case
	when exists (select * 
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil_org, VRS_FASCICOLO_KO fasc_ko, IAM_ABIL_TIPO_DATO abil_dato
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil_org.id_organiz_applic = strut.id_strut
				and abil_org.id_user_iam = utente.id_user_iam
				and fasc_ko.id_strut = abil_org.id_organiz_applic 
				and fasc_ko.ti_stato_fascicolo_ko = 'NON_RISOLUBILE'
				and trunc(fasc_ko.ts_ini_last_ses) = trunc(sysdate)
				
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = fasc_ko.id_tipo_fascicolo_last
				)
			then '1'
			else '0'
end fl_fasc_ko_non_risolub_corr,
case
	when exists (select * 
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil_org, MON_CONTA_FASCICOLI_KO conta_fasc_ko, IAM_ABIL_TIPO_DATO abil_dato
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil_org.id_organiz_applic = strut.id_strut
				and abil_org.id_user_iam = utente.id_user_iam
				and conta_fasc_ko.id_strut = abil_org.id_organiz_applic 
				and conta_fasc_ko.ti_stato_fascicolo_ko = 'NON_RISOLUBILE'
				and conta_fasc_ko.dt_rif_conta between trunc(sysdate - 30) and trunc(sysdate - 1)
				
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = conta_fasc_ko.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_ko_non_risolub_30gg,
case
	when exists (select * 
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil_org, MON_CONTA_FASCICOLI_KO conta_fasc_ko, IAM_ABIL_TIPO_DATO abil_dato
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil_org.id_organiz_applic = strut.id_strut
				and abil_org.id_user_iam = utente.id_user_iam
				and conta_fasc_ko.id_strut = abil_org.id_organiz_applic 
				and conta_fasc_ko.ti_stato_fascicolo_ko = 'NON_RISOLUBILE'
				and conta_fasc_ko.dt_rif_conta < trunc(sysdate - 30)
								
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = conta_fasc_ko.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_ko_non_risolub_b30gg,


--
--						fascicoli KO verificati
--
case
	when exists (select * 
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil_org, VRS_FASCICOLO_KO fasc_ko, IAM_ABIL_TIPO_DATO abil_dato
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil_org.id_organiz_applic = strut.id_strut
				and abil_org.id_user_iam = utente.id_user_iam
				and fasc_ko.id_strut = abil_org.id_organiz_applic 
				and fasc_ko.ti_stato_fascicolo_ko = 'VERIFICATO'
				and trunc(fasc_ko.ts_ini_last_ses) = trunc(sysdate)
							
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = fasc_ko.id_tipo_fascicolo_last
				)
			then '1'
			else '0'
end fl_fasc_ko_verif_corr,
case
	when exists (select * 
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil_org, MON_CONTA_FASCICOLI_KO conta_fasc_ko, IAM_ABIL_TIPO_DATO abil_dato
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil_org.id_organiz_applic = strut.id_strut
				and abil_org.id_user_iam = utente.id_user_iam
				and conta_fasc_ko.id_strut = abil_org.id_organiz_applic 
				and conta_fasc_ko.ti_stato_fascicolo_ko = 'VERIFICATO'
				and conta_fasc_ko.dt_rif_conta between trunc(sysdate - 30) and trunc(sysdate - 1)
								
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = conta_fasc_ko.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_ko_verif_30gg,
case
	when exists (select * 
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil_org, MON_CONTA_FASCICOLI_KO conta_fasc_ko, IAM_ABIL_TIPO_DATO abil_dato
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil_org.id_organiz_applic = strut.id_strut
				and abil_org.id_user_iam = utente.id_user_iam
				and conta_fasc_ko.id_strut = abil_org.id_organiz_applic 
				and conta_fasc_ko.ti_stato_fascicolo_ko = 'VERIFICATO'
				and conta_fasc_ko.dt_rif_conta < trunc(sysdate - 30)
								
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = conta_fasc_ko.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_ko_verif_b30gg,

--
--						fascicoli KO non verificati
--
case
	when exists (select * 
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil_org, VRS_FASCICOLO_KO fasc_ko, IAM_ABIL_TIPO_DATO abil_dato
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil_org.id_organiz_applic = strut.id_strut
				and abil_org.id_user_iam = utente.id_user_iam
				and fasc_ko.id_strut = abil_org.id_organiz_applic 
				and fasc_ko.ti_stato_fascicolo_ko = 'NON_VERIFICATO'
				and trunc(fasc_ko.ts_ini_last_ses) = trunc(sysdate)
								
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = fasc_ko.id_tipo_fascicolo_last
				)
			then '1'
			else '0'
end fl_fasc_ko_non_verif_corr,
case
	when exists (select * 
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil_org, MON_CONTA_FASCICOLI_KO conta_fasc_ko, IAM_ABIL_TIPO_DATO abil_dato
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil_org.id_organiz_applic = strut.id_strut
				and abil_org.id_user_iam = utente.id_user_iam
				and conta_fasc_ko.id_strut = abil_org.id_organiz_applic 
				and conta_fasc_ko.ti_stato_fascicolo_ko = 'NON_VERIFICATO'
				and conta_fasc_ko.dt_rif_conta between trunc(sysdate - 30) and trunc(sysdate - 1)
								
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = conta_fasc_ko.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_ko_non_verif_30gg,
case
	when exists (select * 
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil_org, MON_CONTA_FASCICOLI_KO conta_fasc_ko, IAM_ABIL_TIPO_DATO abil_dato
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil_org.id_organiz_applic = strut.id_strut
				and abil_org.id_user_iam = utente.id_user_iam
				and conta_fasc_ko.id_strut = abil_org.id_organiz_applic 
				and conta_fasc_ko.ti_stato_fascicolo_ko = 'NON_VERIFICATO'
				and conta_fasc_ko.dt_rif_conta < trunc(sysdate - 30)
								
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = conta_fasc_ko.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_ko_non_verif_b30gg

from ORG_AMBIENTE amb
join IAM_USER utente
 on (utente.id_user_iam > 0);

-- changeset root:1751897635013-379
COMMENT ON COLUMN MON_V_CHK_FASC_KO_BY_AMB.ID_AMBIENTE IS 'PK.1';

-- changeset root:1751897635013-380
COMMENT ON COLUMN MON_V_CHK_FASC_KO_BY_AMB.ID_USER_IAM IS 'PK.2';

-- changeset root:1751897635013-381
CREATE OR REPLACE FORCE VIEW "MON_V_CHK_UD_AMB" ("ID_AMBIENTE", "ID_USER_IAM", "FL_UD_CORR", "FL_UD_30GG", "FL_UD_ATTESA_MEM_CORR", "FL_UD_ATTESA_MEM_30GG", "FL_UD_ATTESA_SCHED_CORR", "FL_UD_ATTESA_SCHED_30GG", "FL_UD_NOSEL_SCHED_CORR", "FL_UD_NOSEL_SCHED_30GG") AS select
 amb.id_ambiente,
 utente.id_user_iam,
 
--
--					ud TOTALE
--
case
	when exists (select * 
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ARO_DOC doc
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and doc.id_strut = abil.id_organiz_applic
				and doc.ti_doc = 'PRINCIPALE'
				and doc.dt_creazione between trunc(sysdate) and sysdate + 1/24
				and doc.dt_annul = to_date('31/12/2444', 'dd/mm/yyyy')
				and doc.ti_creazione = 'VERSAMENTO_UNITA_DOC'
				)
			then '1'
			else '0'
end fl_ud_corr,
case
	when(select nvl(sum(ni_unita_doc_vers), 0)
		  from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, MON_CONTA_UD_DOC_COMP conta_ud
		  where ente.id_ambiente = amb.id_ambiente
		  and strut.id_ente = ente.id_ente
		  and abil.id_organiz_applic = strut.id_strut
		  and abil.id_user_iam = utente.id_user_iam
		  and conta_ud.id_strut = abil.id_organiz_applic
		  and conta_ud.dt_rif_conta between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
		  ) -
		 (select nvl(count(*), 0)
		  from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ARO_ITEM_RICH_ANNUL_VERS item_annul, ARO_UNITA_DOC ud
		  where ente.id_ambiente = amb.id_ambiente
		  and strut.id_ente = ente.id_ente
		  and abil.id_organiz_applic = strut.id_strut
		  and abil.id_user_iam = utente.id_user_iam
		  
		  and item_annul.id_strut = abil.id_organiz_applic
		  and item_annul.ti_item_rich_annul_vers = 'UNI_DOC'
		  and item_annul.ti_stato_item = 'ANNULLATO'
		  and ud.id_unita_doc = item_annul.id_unita_doc
		  and ud.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
		 ) != 0
			then '1'
			else '0'
end fl_ud_30gg,

--
--						ud IN_ATTESA_MEMORIZZAZIONE
--
case
	when exists (select * 
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ELV_UD_VERS_DA_ELAB_ELENCO ud_da_elab
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ud_da_elab.id_strut = abil.id_organiz_applic 
				and ud_da_elab.ti_stato_ud_da_elab = 'IN_ATTESA_MEMORIZZAZIONE'
				and ud_da_elab.dt_creazione between trunc(sysdate) and sysdate + 1/24
				)
			then '1'
			else '0'
end fl_ud_attesa_mem_corr,
case
	when exists (select * 
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ELV_UD_VERS_DA_ELAB_ELENCO ud_da_elab
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ud_da_elab.id_strut = abil.id_organiz_applic 
				and ud_da_elab.ti_stato_ud_da_elab = 'IN_ATTESA_MEMORIZZAZIONE'
				and ud_da_elab.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
				)
			then '1'
			else '0'
end fl_ud_attesa_mem_30gg,

--
--						ud IN_ATTESA_SCHED
--
case
	when exists (select * 
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ELV_UD_VERS_DA_ELAB_ELENCO ud_da_elab
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ud_da_elab.id_strut = abil.id_organiz_applic 
				and ud_da_elab.ti_stato_ud_da_elab = 'IN_ATTESA_SCHED'
				and ud_da_elab.dt_creazione between trunc(sysdate) and sysdate + 1/24
				)
			then '1'
			else '0'
end fl_ud_attesa_sched_corr,
case
	when exists (select * 
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ELV_UD_VERS_DA_ELAB_ELENCO ud_da_elab
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ud_da_elab.id_strut = abil.id_organiz_applic 
				and ud_da_elab.ti_stato_ud_da_elab = 'IN_ATTESA_SCHED'
				and ud_da_elab.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
				)
			then '1'
			else '0'
end fl_ud_attesa_sched_30gg,

--
--						ud NON_SELEZ_SCHED
--
case
	when exists (select * 
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ELV_UD_VERS_DA_ELAB_ELENCO ud_da_elab
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ud_da_elab.id_strut = abil.id_organiz_applic 
				and ud_da_elab.ti_stato_ud_da_elab = 'NON_SELEZ_SCHED'
				and ud_da_elab.dt_creazione between trunc(sysdate) and sysdate + 1/24
				)
			then '1'
end fl_ud_nosel_sched_corr,
case
	when exists (select * 
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ELV_UD_VERS_DA_ELAB_ELENCO ud_da_elab
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ud_da_elab.id_strut = abil.id_organiz_applic 
				and ud_da_elab.ti_stato_ud_da_elab = 'NON_SELEZ_SCHED'
				and ud_da_elab.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
				)
			then '1'
			else '0'
end fl_ud_nosel_sched_30gg

from ORG_AMBIENTE amb
join IAM_USER utente
 on (utente.id_user_iam > 0);

-- changeset root:1751897635013-382
COMMENT ON COLUMN MON_V_CHK_UD_AMB.ID_AMBIENTE IS 'PK.1 relativa a tabella ORG_AMBIENTE';

-- changeset root:1751897635013-383
COMMENT ON COLUMN MON_V_CHK_UD_AMB.ID_USER_IAM IS 'PK.2 relativa a tabella IAM_USER';

-- changeset root:1751897635013-384
CREATE OR REPLACE FORCE VIEW "SER_V_VIS_VOL_VER_SERIE_UD" ("ID_SERIE", "ID_STRUT", "CD_COMPOSITO_SERIE", "AA_SERIE", "DS_SERIE", "ID_TIPO_SERIE", "NM_STRUT", "ID_ENTE", "NM_ENTE", "ID_AMBIENTE", "NM_AMBIENTE", "NM_TIPO_SERIE", "ID_VER_SERIE", "CD_VER_SERIE", "DT_INIZIO_SEL_SERIE", "DT_FINE_SEL_SERIE", "ID_STATO_VER_SERIE_COR", "TI_STATO_VER_SERIE", "ID_VOL_VER_SERIE", "NI_UNITA_DOC_VOL", "CD_FIRST_UNITA_DOC_VOL", "DT_FIRST_UNITA_DOC_VOL", "CD_LAST_UNITA_DOC_VOL", "DT_LAST_UNITA_DOC_VOL", "BL_IX_VOL", "CD_VER_XSD_IX_VOL", "DS_HASH_IX_VOL", "DS_ALGO_HASH_IX_VOL", "CD_ENCODING_HASH_IX_VOL", "DT_CREAZIONE", "CRITERIO_ORD") AS select
 serie.id_serie, serie.id_strut, serie.cd_composito_serie, serie.aa_serie, serie.ds_serie, serie.id_tipo_serie,
 
 strut.nm_strut, ente.id_ente, ente.nm_ente, amb.id_ambiente, amb.nm_ambiente,

 ti_serie.nm_tipo_serie,
 
 ver_serie.id_ver_serie, ver_serie.cd_ver_serie, ver_serie.dt_inizio_sel_serie, ver_serie.dt_fine_sel_serie,
 ver_serie.id_stato_ver_serie_cor,
 stato_ver_serie.ti_stato_ver_serie, 
 
 vol_serie.id_vol_ver_serie,
 vol_serie.ni_unita_doc_vol ni_unita_doc_vol, 
 ud_conten_first.cd_ud_serie cd_first_unita_doc_vol, ud_conten_first.dt_ud_serie dt_first_unita_doc_vol, 
 ud_conten_last.cd_ud_serie cd_last_unita_doc_vol, ud_conten_last.dt_ud_serie dt_last_unita_doc_vol,
 
 ix_vol.bl_ix_vol, ix_vol.cd_ver_xsd_ix_vol, ix_vol.ds_hash_ix_vol, ix_vol.ds_algo_hash_ix_vol, ix_vol.cd_encoding_hash_ix_vol, 

 ix_vol.dt_creazione,
 nota_ver_serie.ds_nota_ver_serie

from SER_VOL_VER_SERIE vol_serie
join SER_VER_SERIE ver_serie
 on (ver_serie.id_ver_serie = vol_serie.id_ver_serie)
join SER_STATO_VER_SERIE stato_ver_serie
 on (stato_ver_serie.id_stato_ver_serie = ver_serie.id_stato_ver_serie_cor)
join IAM_USER usr_stato
 on (usr_stato.id_user_iam = stato_ver_serie.id_user_iam)
join SER_SERIE serie
 on (serie.id_serie = ver_serie.id_serie)
join DEC_TIPO_SERIE ti_serie
 on (ti_serie.id_tipo_serie = serie.id_tipo_serie)

join ORG_STRUT strut
 on (strut.id_strut = serie.id_strut)
join ORG_ENTE ente
 on (ente.id_ente = strut.id_ente)
join ORG_AMBIENTE amb
 on (amb.id_ambiente = ente.id_ambiente)
 
left join SER_NOTA_VER_SERIE nota_ver_serie
 on (nota_ver_serie.id_ver_serie = ver_serie.id_ver_serie)
left join DEC_TIPO_NOTA_SERIE tipo_nota
 on (tipo_nota.id_tipo_nota_serie = nota_ver_serie.id_tipo_nota_serie
 and tipo_nota.cd_tipo_nota_serie = 'CRITERI_ORDINAMENTO')

join ARO_UD_APPART_VER_SERIE ud_conten_first
 on (ud_conten_first.id_ud_appart_ver_serie = vol_serie.id_first_ud_appart_vol)
join ARO_UD_APPART_VER_SERIE ud_conten_last
 on (ud_conten_last.id_ud_appart_ver_serie = vol_serie.id_last_ud_appart_vol)
 
join SER_IX_VOL_VER_SERIE ix_vol
 on (ix_vol.id_vol_ver_serie = vol_serie.id_vol_ver_serie);

-- changeset root:1751897635013-385
COMMENT ON COLUMN SER_V_VIS_VOL_VER_SERIE_UD.ID_VOL_VER_SERIE IS 'PK.1';

-- changeset root:1751897635013-386
CREATE OR REPLACE FORCE VIEW "USR_V_ABIL_AMB_XENTE" ("ID_USER_IAM", "NM_APPLIC", "ID_ORGANIZ_APPLIC", "NM_ORGANIZ", "DS_ORGANIZ", "DT_INI_VAL", "DT_FIN_VAL") AS select
 abiliam.id_user_iam,
 abiliam.nm_applic,
 amb.id_ambiente,
 amb.nm_ambiente,
 amb.ds_ambiente,
 amb.dt_ini_val,
 amb.dt_fin_val
 
from SACER_IAM.USR_V_ABIL_AMB_SACER_XENTE abiliam
join ORG_AMBIENTE amb on (amb.id_ambiente = abiliam.id_organiz_applic)
join SACER_IAM.USR_V_ABIL_ENTE_CONVENZ abilente 
	on (abilente.id_ente_convenz = amb.id_ente_gestore
	and abilente.id_user_iam = abiliam.id_user_iam);

-- changeset root:1751897635013-387
COMMENT ON COLUMN USR_V_ABIL_AMB_XENTE.ID_USER_IAM IS 'PK.1';

-- changeset root:1751897635013-388
COMMENT ON COLUMN USR_V_ABIL_AMB_XENTE.ID_ORGANIZ_APPLIC IS 'PK.2';

-- changeset root:1751897635013-389
CREATE OR REPLACE FORCE VIEW "ARO_V_VIS_MARCA_COMP" ("NM_AMBIENTE", "NM_ENTE", "NM_STRUT", "ID_UNITA_DOC", "CD_REGISTRO_KEY_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "NM_TIPO_UNITA_DOC", "DT_ANNUL_UNITA_DOC", "TI_ANNUL_UNITA_DOC", "NT_ANNUL_UNITA_DOC", "ID_DOC", "TI_DOC", "PG_DOC", "NM_TIPO_DOC", "CD_KEY_DOC_VERS", "DT_ANNUL_DOC", "TI_ANNUL_DOC", "NT_ANNUL_DOC", "ID_COMP_DOC", "NI_ORD_COMP_DOC", "NM_TIPO_COMP_DOC", "DS_URN_COMP_CALC", "NM_FORMATO_CALC", "ID_MARCA_COMP", "PG_MARCA", "TM_MARCA_TEMP", "TI_FORMATO_MARCA", "TI_ESITO_CONTR_CONFORME", "DS_MSG_ESITO_CONTR_CONFORME", "TI_ESITO_VERIF_MARCA", "DS_MSG_ESITO_VERIF_MARCA", "TI_MARCA_TEMP", "DS_MARCA_BASE64", "DS_ALGO_MARCA", "DT_SCAD_MARCA", "PG_BUSTA", "ISSUER_CERTIF_TSA", "SERIAL_TSA", "DT_INI_VAL_CERTIF_TSA", "DT_FIN_VAL_CERTIF_TSA", "ESITO_CRITTOGRAFICO", "MSG_ESITO_CRITTOGRAFICO", "ID_CONTR_MARCA_CATENA", "ESITO_CATENA", "MSG_ESITO_CATENA", "ESITO_CERTIFICATO", "MSG_ESITO_CERTIFICATO", "ESITO_CRL", "MSG_ESITO_CRL", "ESITO_OCSP", "MSG_ESITO_OCSP", "ISSUER_CRL", "SERIAL_CA_CRL", "SERIAL_CRL", "DT_SCAD_CRL", "IDENTIFIER_OCSP", "ISSUER_CERTIF_OCSP", "SERIAL_CERTIF_OCSP", "DS_NOTE") AS SELECT amb.nm_ambiente,
           ente.nm_ente,
           strut.nm_strut,
           -- info unità documentaria
           ud.id_unita_doc,
           ud.cd_registro_key_unita_doc,
           ud.aa_key_unita_doc,
           ud.cd_key_unita_doc,
           tipo_ud.nm_tipo_unita_doc,
           ud.dt_annul                               dt_annul_unita_doc,
           ud.ti_annul                               ti_annul_unita_doc,
           ud.nt_annul                               nt_annul_unita_doc,
           -- info documento
           doc.id_doc,
           doc.ti_doc,
           doc.pg_doc,
           tipo_doc.nm_tipo_doc,
           doc.cd_key_doc_vers,
           doc.dt_annul                              dt_annul_doc,
           doc.ti_annul                              ti_annul_doc,
           doc.nt_annul                              nt_annul_doc,
           -- info componente
           comp_doc.id_comp_doc,
           comp_doc.ni_ord_comp_doc,
           tipo_comp.nm_tipo_comp_doc,
           CASE
               WHEN EXISTS
                        (SELECT *
                           FROM ARO_COMP_URN_CALC urn
                          WHERE urn.id_comp_doc = comp_doc.id_comp_doc) THEN
                   (SELECT ds_urn
                      FROM ARO_COMP_URN_CALC urn
                     WHERE urn.id_comp_doc = comp_doc.id_comp_doc
                       AND ti_urn = 'ORIGINALE')
               ELSE
                   comp_doc.ds_urn_comp_calc
           END                                       ds_urn_comp_calc,
           fmt_file_calc.nm_formato_file_standard    nm_formato_calc,
           -- info marca
           marca.id_marca_comp,
           marca.pg_marca,
           marca.tm_marca_temp,
           marca.ti_formato_marca,
           marca.ti_esito_contr_conforme,
           marca.ds_msg_esito_contr_conforme,
           marca.ti_esito_verif_marca,
           marca.ds_msg_esito_verif_marca,
           marca.ti_marca_temp,
           marca.ds_marca_base64,
           marca.ds_algo_marca,
           marca.dt_scad_marca,
           marca.pg_busta,
           -- dati certificato TSA
           -- eliminazione issuer (CRL)
           -- issuer_certif_tsa.dl_dn_issuer_certif_ca issuer_certif_tsa,
           certif_tsa.dl_dn_issuer_certif_ca         issuer_certif_tsa,
           certif_tsa.ni_serial_certif_ca            serial_tsa,
           certif_tsa.dt_ini_val_certif_ca           dt_ini_val_certif_tsa,
           certif_tsa.dt_fin_val_certif_ca           dt_fin_val_certif_tsa,
           -- info controlli su marca
           contr_crittog.ti_esito_contr_marca        esito_crittografico,
           contr_crittog.ds_msg_esito_contr_marca    msg_esito_crittografico,
           contr_catena.id_contr_marca_comp          id_contr_marca_catena,
           contr_catena.ti_esito_contr_marca         esito_catena,
           contr_catena.ds_msg_esito_contr_marca     msg_esito_catena,
           contr_certif.ti_esito_contr_marca         esito_certificato,
           contr_certif.ds_msg_esito_contr_marca     msg_esito_certificato,
           contr_crl.ti_esito_contr_marca            esito_crl,
           contr_crl.ds_msg_esito_contr_marca        msg_esito_crl,
           contr_ocsp.ti_esito_contr_marca           esito_ocsp,
           contr_ocsp.ds_msg_esito_contr_marca       msg_esito_ocsp,
           -- eliminazione issuer (CRL)
           --issuer_crl.dl_dn_issuer_certif_ca issuer_crl,
           certif_ca_crl.dl_dn_issuer_certif_ca      issuer_crl,
           certif_ca_crl.ni_serial_certif_ca         serial_ca_crl,
           crl.ni_serial_crl                         serial_crl,
           crl.dt_scad_crl,
           CASE
               WHEN ocsp.ds_certif_issuername IS NULL
                AND ocsp.ds_certif_serial_base64 IS NULL THEN
                   ocsp.ds_certif_ski_base64
               WHEN ocsp.ds_certif_ski_base64 IS NULL
                AND ocsp.ds_certif_serial_base64 IS NULL THEN
                   ocsp.ds_certif_issuername
               WHEN ocsp.ds_certif_issuername IS NULL
                AND ocsp.ds_certif_ski_base64 IS NULL THEN
                   ocsp.ds_certif_serial_base64
           END                                       identifier_ocsp,
           certif_ocsp.dl_dn_subject_certif_ocsp     issuer_certif_ocsp,
           certif_ocsp.ni_serial_certif_ocsp         serial_certif_ocsp,
           marca.ds_note
      FROM ARO_MARCA_COMP  marca
           JOIN ARO_COMP_DOC comp_doc
               ON (comp_doc.id_comp_doc = marca.id_comp_doc)
           JOIN DEC_TIPO_COMP_DOC tipo_comp
               ON (tipo_comp.id_tipo_comp_doc = comp_doc.id_tipo_comp_doc)
           LEFT JOIN DEC_FORMATO_FILE_STANDARD fmt_file_calc
               ON (fmt_file_calc.id_formato_file_standard =
                   comp_doc.id_formato_file_calc)
           JOIN ARO_STRUT_DOC strut_doc
               ON (strut_doc.id_strut_doc = comp_doc.id_strut_doc
               AND strut_doc.fl_strut_orig = '1')
           JOIN ARO_DOC doc ON (doc.id_doc = strut_doc.id_doc)
           JOIN DEC_TIPO_DOC tipo_doc
               ON (tipo_doc.id_tipo_doc = doc.id_tipo_doc)
           JOIN ARO_UNITA_DOC ud ON (ud.id_unita_doc = doc.id_unita_doc)
           JOIN ORG_STRUT strut ON (strut.id_strut = ud.id_strut)
           JOIN ORG_ENTE ente ON (ente.id_ente = strut.id_ente)
           JOIN ORG_AMBIENTE amb ON (amb.id_ambiente = ente.id_ambiente)
           JOIN DEC_TIPO_UNITA_DOC tipo_ud
               ON (tipo_ud.id_tipo_unita_doc = ud.id_tipo_unita_doc)
           LEFT JOIN FIR_CERTIF_CA certif_tsa
               ON (certif_tsa.id_certif_ca = marca.id_certif_ca)
           -- FIR_ISSUER rimosso, è attributo di FIR_CERTIF_CA
           -- left join FIR_ISSUER issuer_certif_tsa
           -- on (issuer_certif_tsa.id_issuer = certif_tsa.id_issuer)

           LEFT JOIN ARO_CONTR_MARCA_COMP contr_crittog
               ON (contr_crittog.id_marca_comp = marca.id_marca_comp
               AND contr_crittog.ti_contr = 'CRITTOGRAFICO')
           LEFT JOIN ARO_CONTR_MARCA_COMP contr_catena
               ON (contr_catena.id_marca_comp = marca.id_marca_comp
               AND contr_catena.ti_contr = 'CATENA_TRUSTED')
           LEFT JOIN ARO_CONTR_MARCA_COMP contr_certif
               ON (contr_certif.id_marca_comp = marca.id_marca_comp
               AND contr_certif.ti_contr = 'CERTIFICATO')
           LEFT JOIN ARO_CONTR_MARCA_COMP contr_crl
               ON (contr_crl.id_marca_comp = marca.id_marca_comp
               AND contr_crl.ti_contr = 'CRL')
           LEFT JOIN ARO_CONTR_MARCA_COMP contr_ocsp
               ON (contr_ocsp.id_marca_comp = marca.id_marca_comp
               AND contr_ocsp.ti_contr = 'OCSP')
           LEFT JOIN FIR_CRL crl ON (crl.id_crl = contr_crl.id_crl_usata)
           LEFT JOIN FIR_CERTIF_CA certif_ca_crl
               ON (certif_ca_crl.id_certif_ca = crl.id_certif_ca)
           -- FIR_ISSUER rimosso, è attributo di FIR_CERTIF_CA
           -- left join FIR_ISSUER issuer_crl
           -- on (issuer_crl.id_issuer = certif_ca_crl.id_issuer)

           LEFT JOIN FIR_OCSP ocsp
               ON (ocsp.id_ocsp = contr_ocsp.id_ocsp_usata)
           LEFT JOIN FIR_CERTIF_OCSP certif_ocsp
               ON (ocsp.id_certif_ocsp = certif_ocsp.id_certif_ocsp);

-- changeset root:1751897635013-390
COMMENT ON COLUMN ARO_V_VIS_MARCA_COMP.ID_MARCA_COMP IS 'PK.1 relativa a tabella ARO_MARCA_COMP';

-- changeset root:1751897635013-391
CREATE OR REPLACE FORCE VIEW "ARO_V_VIS_FIRMA_COMP" ("NM_AMBIENTE", "NM_ENTE", "NM_STRUT", "ID_UNITA_DOC", "CD_REGISTRO_KEY_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "NM_TIPO_UNITA_DOC", "DT_ANNUL_UNITA_DOC", "TI_ANNUL_UNITA_DOC", "NT_ANNUL_UNITA_DOC", "ID_DOC", "CD_KEY_DOC_VERS", "TI_DOC", "PG_DOC", "NM_TIPO_DOC", "DT_ANNUL_DOC", "TI_ANNUL_DOC", "NT_ANNUL_DOC", "ID_COMP_DOC", "NI_ORD_COMP_DOC", "NM_TIPO_COMP_DOC", "DS_URN_COMP_CALC", "NM_FORMATO_CALC", "ID_FIRMA_COMP", "PG_FIRMA", "CD_FIRMATARIO", "NM_COGNOME_FIRMATARIO", "NM_FIRMATARIO", "TI_FIRMA", "TI_ESITO_CONTR_CONFORME", "DS_MSG_ESITO_CONTR_CONFORME", "DS_FIRMA_BASE64", "DS_ALGO_FIRMA", "TI_FORMATO_FIRMA", "PG_BUSTA", "ISSUER_CERTIF_FIRMATARIO", "DS_SERIAL_CERTIF_CA", "DS_SERIAL_CERTIF_FIRMATARIO", "DT_INI_VAL_CERTIF_FIRMATARIO", "DT_FIN_VAL_CERTIF_FIRMATARIO", "DT_FIRMA", "TM_MARCA_TEMP_RIFERITA", "TM_RIF_TEMP_USATO", "TI_RIF_TEMP_USATO", "TI_ESITO_VERIF_FIRMA", "DS_MSG_ESITO_VERIF_FIRMA", "TI_ESITO_VERIF_FIRMA_CHIUS", "DS_MSG_ESITO_VERIF_FIRMA_CHIUS", "NM_COGNOME_FIRMATARIO_PADRE", "NM_FIRMATARIO_PADRE", "ESITO_CRITTOGRAFICO", "MSG_ESITO_CRITTOGRAFICO", "ID_CONTR_FIRMA_CATENA", "ESITO_CATENA", "MSG_ESITO_CATENA", "ESITO_CERTIFICATO", "MSG_ESITO_CERTIFICATO", "ESITO_CRL", "MSG_ESITO_CRL", "ESITO_OCSP", "MSG_ESITO_OCSP", "ISSUER_CRL", "SERIAL_CA_CRL", "SERIAL_CRL", "DT_SCAD_CRL", "IDENTIFIER_OCSP", "ISSUER_CERTIF_OCSP", "SERIAL_CERTIF_OCSP", "NM_VOLUME_CONSERV", "DS_VOLUME_CONSERV", "TI_STATO_VOLUME_CONSERV", "DT_CREAZIONE", "DT_CHIUS_VOLUME", "ESITO_CRITTOGRAFICO_VOL", "MSG_ESITO_CRITTOGRAFICO_VOL", "ESITO_CATENA_VOL", "MSG_ESITO_CATENA_VOL", "ESITO_CERTIFICATO_VOL", "MSG_ESITO_CERTIFICATO_VOL", "ESITO_CRL_VOL", "MSG_ESITO_CRL_VOL", "SERIAL_CRL_VOL", "DT_SCAD_CRL_VOL", "TI_ESITO_VERIF_FIRMA_DT_VERS", "DS_MSG_VERIF_FIRMA_DT_VERS", "ESITO_CRITTOG_DT_VERS", "MSG_ESITO_CRITTOG_DT_VERS", "ESITO_CATENA_DT_VERS", "MSG_ESITO_CATENA_DT_VERS", "ESITO_CERTIFICATO_DT_VERS", "MSG_ESITO_CERTIFICATO_DT_VERS", "ESITO_CRL_DT_VERS", "MSG_ESITO_CRL_DT_VERS", "ESITO_OCSP_DT_VERS", "MSG_ESITO_OCSP_DT_VERS", "SERIAL_CRL_DT_VERS", "DT_SCAD_CRL_DT_VERS", "IDENTIFIER_OCSP_DT_VERS", "ISSUER_CERTIF_OCSP_DT_VERS", "SERIAL_CERTIF_OCSP_DT_VERS", "BL_FIRMA_BASE64", "DS_NOTE") AS select
 amb.nm_ambiente,
 ente.nm_ente,
 strut.nm_strut,

 -- info unità documentaria
 ud.id_unita_doc, 
 ud.cd_registro_key_unita_doc, ud.aa_key_unita_doc, ud.cd_key_unita_doc, 
 tipo_ud.nm_tipo_unita_doc, 
 ud.dt_annul dt_annul_unita_doc,
 ud.ti_annul ti_annul_unita_doc,
 ud.nt_annul nt_annul_unita_doc,

-- info documento 
 doc.id_doc,
 doc.cd_key_doc_vers,
 doc.ti_doc,
 doc.pg_doc,
 tipo_doc.nm_tipo_doc,
 doc.dt_annul dt_annul_doc,
 doc.ti_annul ti_annul_doc,
 doc.nt_annul  nt_annul_doc,
 
-- info componente
 comp_doc.id_comp_doc,
 comp_doc.ni_ord_comp_doc,
 tipo_comp.nm_tipo_comp_doc,
 case
	when exists (select *
				 from ARO_COMP_URN_CALC urn
				 where urn.id_comp_doc = comp_doc.id_comp_doc
				 )
		then (select ds_urn
			 from ARO_COMP_URN_CALC urn
			 where urn.id_comp_doc = comp_doc.id_comp_doc
			 and ti_urn = 'ORIGINALE'
			 )
		else comp_doc.ds_urn_comp_calc
 end ds_urn_comp_calc, 
 fmt_file_calc.nm_formato_file_standard nm_formato_calc, 

-- info firma
 firma.id_firma_comp,
 firma.pg_firma, 
 firma.cd_firmatario, 
 case
	when firma.nm_cognome_firmatario is null and firma.dl_dn_firmatario is not null
		then firma.dl_dn_firmatario
		else firma.nm_cognome_firmatario
 end nm_cognome_firmatario,
 firma.nm_firmatario,
 firma.ti_firma, 
 firma.ti_esito_contr_conforme, firma.ds_msg_esito_contr_conforme,
 firma.ds_firma_base64,
 firma.ds_algo_firma,
 firma.ti_formato_firma, 
 firma.pg_busta,

-- info certificato firmatario
 certif_ca_firmatario.dl_dn_issuer_certif_ca issuer_certif_firmatario,  
 certif_ca_firmatario.ds_serial_certif_ca,
 certif_firmatario.ds_serial_certif_firmatario, certif_firmatario.dt_ini_val_certif_firmatario, certif_firmatario.dt_fin_val_certif_firmatario,

-- info su verifica firma al versamento
 firma.dt_firma, 
 (select marca.tm_marca_temp from ARO_MARCA_COMP marca where marca.id_marca_comp = firma.id_marca_comp) tm_marca_temp_riferita,
 firma.tm_rif_temp_usato, firma.ti_rif_temp_usato, firma.ti_esito_verif_firma, firma.ds_msg_esito_verif_firma,

-- info verifica chiusura volume valido 
 verif_vol.ti_esito_verif_firma ti_esito_verif_firma_chius, verif_vol.ds_msg_esito_verif_firma ds_msg_esito_verif_firma_chius,
 
-- info firma padre
 case
	when 1 = (select count(*) from ARO_CONTROFIRMA_FIRMA contr_firma where contr_firma.id_firma_figlio = firma.id_firma_comp)
		then (select firma_padre.nm_cognome_firmatario from ARO_CONTROFIRMA_FIRMA contr_firma, ARO_FIRMA_COMP firma_padre 
			where contr_firma.id_firma_figlio = firma.id_firma_comp
			and firma_padre.id_firma_comp = contr_firma.id_firma_padre)
	when 0 = (select count(*) from ARO_CONTROFIRMA_FIRMA contr_firma where contr_firma.id_firma_figlio = firma.id_firma_comp)
		then null
	when 1 < (select count(*) from ARO_CONTROFIRMA_FIRMA contr_firma where contr_firma.id_firma_figlio = firma.id_firma_comp)
		then 'Controfirme multiple'
 end nm_cognome_firmatario_padre,
 case
	when 1 = (select count(*) from ARO_CONTROFIRMA_FIRMA contr_firma where contr_firma.id_firma_figlio = firma.id_firma_comp)
		then (select firma_padre.nm_firmatario from ARO_CONTROFIRMA_FIRMA contr_firma, ARO_FIRMA_COMP firma_padre 
			where contr_firma.id_firma_figlio = firma.id_firma_comp
			and firma_padre.id_firma_comp = contr_firma.id_firma_padre)
	else null
 end nm_firmatario_padre,
 
-- info controlli su firma al versamento
 contr_crittog.ti_esito_contr_firma esito_crittografico,
 contr_crittog.ds_msg_esito_contr_firma msg_esito_crittografico,
 contr_catena.id_contr_firma_comp id_contr_firma_catena,
 contr_catena.ti_esito_contr_firma esito_catena,
 contr_catena.ds_msg_esito_contr_firma msg_esito_catena,
 contr_certif.ti_esito_contr_firma esito_certificato,
 contr_certif.ds_msg_esito_contr_firma msg_esito_certificato,
 contr_crl.ti_esito_contr_firma esito_crl,
 contr_crl.ds_msg_esito_contr_firma msg_esito_crl,
 contr_ocsp.ti_esito_contr_firma esito_ocsp,
 contr_ocsp.ds_msg_esito_contr_firma msg_esito_ocsp,
 certif_ca_crl.dl_dn_issuer_certif_ca issuer_crl, certif_ca_crl.ds_serial_certif_ca serial_ca_crl, crl.ds_serial_crl serial_crl, crl.dt_scad_crl,
 case
	when ocsp.ds_certif_issuername is null and ocsp.ds_certif_serial_base64 is null
		then ocsp.ds_certif_ski_base64
	when ocsp.ds_certif_ski_base64 is null and ocsp.ds_certif_serial_base64 is null
        then ocsp.ds_certif_issuername
   	when ocsp.ds_certif_issuername is null and ocsp.ds_certif_ski_base64 is null
        then ocsp.ds_certif_serial_base64
 end identifier_ocsp, 
 certif_ocsp.dl_dn_subject_certif_ocsp issuer_certif_ocsp, certif_ocsp.ds_serial_certif_ocsp serial_certif_ocsp,

 
-- info volume valido
 vol.nm_volume_conserv, vol.ds_volume_conserv, vol.ti_stato_volume_conserv, vol.dt_creazione, vol.dt_chius dt_chius_volume,
 
-- info controlli su firma a chiusura volume valido
 contr_crittog_vol.ti_esito_contr_verif esito_crittografico_vol,
 contr_crittog_vol.ds_msg_contr_verif msg_esito_crittografico_vol,
 contr_catena_vol.ti_esito_contr_verif esito_catena_vol,
 contr_catena_vol.ds_msg_contr_verif msg_esito_catena_vol,
 contr_certif_vol.ti_esito_contr_verif esito_certificato_vol,
 contr_certif_vol.ds_msg_contr_verif msg_esito_certificato_vol,
 contr_crl_vol.ti_esito_contr_verif esito_crl_vol,
 contr_crl_vol.ds_msg_contr_verif msg_esito_crl_vol,
 crl_vol.ds_serial_crl serial_crl_vol, crl_vol.dt_scad_crl dt_scad_crl_vol,
 
-- info controlli su firma a data versamento
 ver_firma_dt_vers.ti_esito_verif_firma ti_esito_verif_firma_dt_vers, 
 ver_firma_dt_vers.ds_msg_esito_verif_firma ds_msg_verif_firma_dt_vers, 
 
 contr_crittog_dt_vers.ti_esito_contr_verif esito_crittog_dt_vers,
 contr_crittog_dt_vers.ds_msg_contr_verif msg_esito_crittog_dt_vers,
 contr_catena_dt_vers.ti_esito_contr_verif esito_catena_dt_vers,
 contr_catena_dt_vers.ds_msg_contr_verif msg_esito_catena_dt_vers,
 contr_certif_dt_vers.ti_esito_contr_verif esito_certificato_dt_vers,
 contr_certif_dt_vers.ds_msg_contr_verif msg_esito_certificato_dt_vers,
 contr_crl_dt_vers.ti_esito_contr_verif esito_crl_dt_vers,
 contr_crl_dt_vers.ds_msg_contr_verif msg_esito_crl_dt_vers,
 contr_ocsp_dt_vers.ti_esito_contr_verif esito_ocsp_dt_vers,
 contr_ocsp_dt_vers.ds_msg_contr_verif msg_esito_ocsp_dt_vers,
 crl_dt_vers.ds_serial_crl serial_crl_dt_vers, crl_dt_vers.dt_scad_crl dt_scad_crl_dt_vers,
case
	when ocsp_dt_vers.ds_certif_issuername is null and ocsp_dt_vers.ds_certif_serial_base64 is null
		then ocsp_dt_vers.ds_certif_ski_base64
	when ocsp_dt_vers.ds_certif_ski_base64 is null and ocsp_dt_vers.ds_certif_serial_base64 is null
        then ocsp_dt_vers.ds_certif_issuername
   	when ocsp_dt_vers.ds_certif_issuername is null and ocsp_dt_vers.ds_certif_ski_base64 is null
        then ocsp_dt_vers.ds_certif_serial_base64
 end identifier_ocsp_dt_vers, 
 certif_ocsp_dt_vers.dl_dn_subject_certif_ocsp issuer_certif_ocsp_dt_vers, certif_ocsp_dt_vers.ds_serial_certif_ocsp serial_certif_ocsp_dt_vers,
 firma.bl_firma_base64, firma.ds_note
 
from ARO_FIRMA_COMP firma

join ARO_COMP_DOC comp_doc
 on (comp_doc.id_comp_doc = firma.id_comp_doc)
join DEC_TIPO_COMP_DOC tipo_comp
 on (tipo_comp.id_tipo_comp_doc = comp_doc.id_tipo_comp_doc)
left join DEC_FORMATO_FILE_STANDARD fmt_file_calc
 on (fmt_file_calc.id_formato_file_standard = comp_doc.id_formato_file_calc)

join ARO_STRUT_DOC strut_doc
 on (strut_doc.id_strut_doc = comp_doc.id_strut_doc
 and strut_doc.fl_strut_orig = '1')

join ARO_DOC doc
 on (doc.id_doc = strut_doc.id_doc)
join DEC_TIPO_DOC tipo_doc
 on (tipo_doc.id_tipo_doc = doc.id_tipo_doc)

join ARO_UNITA_DOC ud
 on (ud.id_unita_doc = doc.id_unita_doc)
join ORG_STRUT strut
 on (strut.id_strut = ud.id_strut)
join ORG_ENTE ente
 on (ente.id_ente = strut.id_ente)
join ORG_AMBIENTE amb
 on (amb.id_ambiente = ente.id_ambiente)
join DEC_TIPO_UNITA_DOC tipo_ud
 on (tipo_ud.id_tipo_unita_doc = ud.id_tipo_unita_doc)

left join FIR_CERTIF_FIRMATARIO certif_firmatario
 on (certif_firmatario.id_certif_firmatario = firma.id_certif_firmatario)
left join FIR_CERTIF_CA certif_ca_firmatario
 on (certif_ca_firmatario.id_certif_ca = certif_firmatario.id_certif_ca)
 
 -- FIR_ISSUER rimosso, è attributo di FIR_CERTIF_CA
--left join FIR_ISSUER issuer_certif_firmatario
 --on (issuer_certif_firmatario.id_issuer = certif_ca_firmatario.id_issuer)

left join ARO_CONTR_FIRMA_COMP contr_crittog
 on (contr_crittog.id_firma_comp = firma.id_firma_comp
 and contr_crittog.ti_contr = 'CRITTOGRAFICO')
left join ARO_CONTR_FIRMA_COMP contr_catena
 on (contr_catena.id_firma_comp = firma.id_firma_comp
 and contr_catena.ti_contr = 'CATENA_TRUSTED')
left join ARO_CONTR_FIRMA_COMP contr_certif
 on (contr_certif.id_firma_comp = firma.id_firma_comp
 and contr_certif.ti_contr = 'CERTIFICATO')
left join ARO_CONTR_FIRMA_COMP contr_crl
 on (contr_crl.id_firma_comp = firma.id_firma_comp
 and contr_crl.ti_contr = 'CRL')
left join ARO_CONTR_FIRMA_COMP contr_ocsp
 on (contr_ocsp.id_firma_comp = firma.id_firma_comp
 and contr_ocsp.ti_contr = 'OCSP')

left join FIR_CRL crl
 on (crl.id_crl = contr_crl.id_crl_usata)
left join FIR_CERTIF_CA certif_ca_crl
 on (certif_ca_crl.id_certif_ca = crl.id_certif_ca)

-- FIR_ISSUER rimosso, è attributo di FIR_CERTIF_CA
--left join FIR_ISSUER issuer_crl
-- on (issuer_crl.id_issuer = certif_ca_crl.id_issuer)

left join FIR_OCSP ocsp
 on (ocsp.id_ocsp = contr_ocsp.id_ocsp_usata)
left join FIR_CERTIF_OCSP certif_ocsp
 on (ocsp.id_certif_ocsp = certif_ocsp.id_certif_ocsp)


left join VOL_APPART_DOC_VOLUME app_doc_vol
 on (app_doc_vol.id_doc = doc.id_doc
 and app_doc_vol.fl_valida = '1')
left join VOL_APPART_UNITA_DOC_VOLUME app_ud_vol
 on (app_ud_vol.id_appart_unita_doc_volume = app_doc_vol.id_appart_unita_doc_volume)
left join VOL_VOLUME_CONSERV vol
 on (vol.id_volume_conserv = app_ud_vol.id_volume_conserv)

left join VOL_APPART_COMP_VOLUME app_comp_vol
 on (app_comp_vol.id_appart_doc_volume = app_doc_vol.id_appart_doc_volume
 and app_comp_vol.id_comp_doc = comp_doc.id_comp_doc)
left join VOL_APPART_FIRMA_VOLUME app_firma_vol
 on (app_firma_vol.id_appart_comp_volume = app_comp_vol.id_appart_comp_volume
 and app_firma_vol.id_firma_comp = firma.id_firma_comp)
left join VOL_VERIF_FIRMA_VOLUME verif_vol
 on (verif_vol.id_appart_firma_volume = app_firma_vol.id_appart_firma_volume
 and verif_vol.ti_verif = 'CHIUSURA')

--		info su verifica firma a chiusura volume
  
left join VOL_CONTR_VERIF_FIRMA_VOLUME contr_crittog_vol
 on (contr_crittog_vol.id_verif_firma_volume = verif_vol.id_verif_firma_volume
 and contr_crittog_vol.ti_contr = 'CRITTOGRAFICO')
left join VOL_CONTR_VERIF_FIRMA_VOLUME contr_catena_vol
 on (contr_catena_vol.id_verif_firma_volume = verif_vol.id_verif_firma_volume
 and contr_catena_vol.ti_contr = 'CATENA_TRUSTED')
left join VOL_CONTR_VERIF_FIRMA_VOLUME contr_certif_vol
 on (contr_certif_vol.id_verif_firma_volume = verif_vol.id_verif_firma_volume
 and contr_certif_vol.ti_contr = 'CERTIFICATO')
left join VOL_CONTR_VERIF_FIRMA_VOLUME contr_crl_vol
 on (contr_crl_vol.id_verif_firma_volume = verif_vol.id_verif_firma_volume
 and contr_crl_vol.ti_contr = 'CRL')

left join FIR_CRL crl_vol
 on (crl_vol.id_crl = contr_crl_vol.id_crl_usata)

--		info su verifica firma a data versamento
 
left join ARO_VERIF_FIRMA_DT_VERS ver_firma_dt_vers
 on (ver_firma_dt_vers.id_firma_comp = firma.id_firma_comp)
 
left join ARO_CONTR_VERIF_FIRMA_DT_VERS contr_crittog_dt_vers
 on (contr_crittog_dt_vers.id_verif_firma_dt_vers = ver_firma_dt_vers.id_verif_firma_dt_vers
 and contr_crittog_dt_vers.ti_contr = 'CRITTOGRAFICO')
left join ARO_CONTR_VERIF_FIRMA_DT_VERS contr_catena_dt_vers
 on (contr_catena_dt_vers.id_verif_firma_dt_vers = ver_firma_dt_vers.id_verif_firma_dt_vers
 and contr_catena_dt_vers.ti_contr = 'CATENA_TRUSTED')
left join ARO_CONTR_VERIF_FIRMA_DT_VERS contr_certif_dt_vers
 on (contr_certif_dt_vers.id_verif_firma_dt_vers = ver_firma_dt_vers.id_verif_firma_dt_vers
 and contr_certif_dt_vers.ti_contr = 'CERTIFICATO')
left join ARO_CONTR_VERIF_FIRMA_DT_VERS contr_crl_dt_vers
 on (contr_crl_dt_vers.id_verif_firma_dt_vers = ver_firma_dt_vers.id_verif_firma_dt_vers
 and contr_crl_dt_vers.ti_contr = 'CRL')
left join ARO_CONTR_VERIF_FIRMA_DT_VERS contr_ocsp_dt_vers
 on (contr_ocsp_dt_vers.id_verif_firma_dt_vers = ver_firma_dt_vers.id_verif_firma_dt_vers
 and contr_ocsp_dt_vers.ti_contr = 'OCSP')
 
left join FIR_CRL crl_dt_vers
 on (crl_dt_vers.id_crl = contr_crl_dt_vers.id_crl_usata)
left join FIR_OCSP ocsp_dt_vers
 on (ocsp_dt_vers.id_ocsp = contr_ocsp_dt_vers.id_ocsp_usata)
left join FIR_CERTIF_OCSP certif_ocsp_dt_vers
 on (ocsp_dt_vers.id_certif_ocsp = certif_ocsp_dt_vers.id_certif_ocsp);

-- changeset root:1751897635013-392
CREATE OR REPLACE FORCE VIEW "MON_V_LIS_OPER_VOL_IAM" ("ID_AMBIENTE", "ID_ENTE", "ID_STRUT", "ID_LOG_OPER", "NM_AMBIENTE", "NM_ENTE", "NM_STRUT", "TI_OPER", "DT_OPER", "NM_VOLUME_CONSERV", "TI_MOD_OPER", "DT_SCAD_CHIUS", "NI_MAX_UNITA_DOC", "NI_MAX_COMP", "CD_DOC", "DL_MOTIVO_CHIUS", "NM_COGNOME_FIRMATARIO", "NM_NOME_FIRMATARIO", "ID_LOG_JOB", "ID_VOLUME_CONSERV", "ID_DOC", "ID_UNITA_DOC") AS select
 ente.id_ambiente,
 ente.id_ente,
 strut.id_strut,
 log_ope.id_log_oper,
 amb.nm_ambiente,
 ente.nm_ente,
 strut.nm_strut,
 
 log_ope.ti_oper,
 log_ope.dt_oper,
 log_ope.nm_volume_conserv,
 case
	when log_ope.id_log_job is null then 'MANUALE'
	else 'AUTOMATICA'
 end ti_mod_oper,
 
 case
	when log_ope.ti_oper in ('CREA_VOLUME', 'RECUPERA_VOLUME_APERTO', 'RECUPERA_VOLUME_SCADUTO', 'SET_VOLUME_APERTO') then vol.dt_scad_chius
	else null
 end dt_scad_chius,
 case
	when log_ope.ti_oper in ('CREA_VOLUME', 'RECUPERA_VOLUME_APERTO','SET_VOLUME_APERTO') then vol.ni_max_unita_doc
	else null
 end ni_max_unita_doc,
 case
	when log_ope.ti_oper in ('CREA_VOLUME', 'RECUPERA_VOLUME_APERTO', 'SET_VOLUME_APERTO') then vol.ni_max_comp
	else null
 end ni_max_comp,
 
 case
	when log_ope.ti_oper in ('AGGIUNGI_DOC_VOLUME', 'RIMUOVI_DOC_VOLUME') then log_ope.cd_registro_key_unita_doc || '-' ||
																				log_ope.aa_key_unita_doc || '-' ||
																				log_ope.cd_key_unita_doc || '-' ||
																				log_ope.ti_doc || '-' ||
																				log_ope.pg_doc
	else null
 end cd_doc,
 
 case
	when log_ope.ti_oper in ('INIZIO_CREA_INDICE', 'RECUPERA_VOLUME_IN_ERRORE', 'CREA_INDICE_VOLUME', 'MARCA_INDICE_VOLUME', 'SET_VOLUME_IN_ERRORE',
							'INIZIO_VERIF_FIRME', 'CHIUSURA_VOLUME', 'CHIUSURA_VOLUME_ERR', 'ERR_VERIF_FIRME',
							'SET_VOLUME_DA_CHIUDERE') then vol.dl_motivo_chius
	else null
 end dl_motivo_chius,

 case
	when ti_oper in ('FIRMA_NO_MARCA_VOLUME', 'FIRMA_VOLUME') then usr.nm_cognome_user
	else null
 end nm_cognome_firmatario,
 case
	when ti_oper in ('FIRMA_NO_MARCA_VOLUME', 'FIRMA_VOLUME') then usr.nm_nome_user
	else null
 end nm_nome_firmatario,
 log_ope.id_log_job,
 log_ope.id_volume_conserv,
 log_ope.id_doc,
 doc.id_unita_doc
 
from LOG_OPER log_ope
join ORG_STRUT strut
 on (strut.id_strut = log_ope.id_strut)
join ORG_ENTE ente
 on (ente.id_ente = strut.id_ente)
join ORG_AMBIENTE amb
 on (amb.id_ambiente = ente.id_ambiente)
left join VOL_VOLUME_CONSERV vol
 on (vol.id_volume_conserv = log_ope.id_volume_conserv)
join IAM_USER usr
 on (usr.id_user_iam = log_ope.id_user)
left join ARO_DOC doc
 on (doc.id_doc = log_ope.id_doc);

-- changeset root:1751897635013-393
COMMENT ON COLUMN MON_V_LIS_OPER_VOL_IAM.ID_LOG_OPER IS 'PK.1 relativa a tabella LOG_OPER';

-- changeset root:1751897635013-394
CREATE OR REPLACE FORCE VIEW "MON_V_LIS_UD_VERS_DA_ELAB" ("ID_USER_IAM", "ID_AMBIENTE", "NM_AMBIENTE", "ID_ENTE", "NM_ENTE", "ID_STRUT", "NM_STRUT", "ID_UNITA_DOC", "ID_STRUT_UNITA_DOC", "CD_REGISTRO_KEY_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "ID_TIPO_UNITA_DOC", "NM_TIPO_UNITA_DOC", "ID_SUB_STRUT", "ID_DOC", "TI_DOC", "PG_DOC", "DT_CREAZIONE", "DS_ORD_DOC", "ID_TIPO_DOC", "NM_TIPO_DOC", "TI_CREAZIONE", "TI_STATO_DOC_ELENCO_VERS") AS select 
  
-- info su utente
 abil_org.id_user_iam,
-- info di organizzazione
 amb.id_ambiente, amb.nm_ambiente, 
 ente.id_ente, ente.nm_ente, 
 strut.id_strut, strut.nm_strut,
 
-- info unita doc 
 ud.id_unita_doc, 
 ud.id_strut id_strut_unita_doc, ud.cd_registro_key_unita_doc, ud.aa_key_unita_doc, ud.cd_key_unita_doc,
 ud.id_tipo_unita_doc, tipo_ud.nm_tipo_unita_doc, 
 ud.id_sub_strut,
  
-- info documento 
 doc.id_doc,
 doc.ti_doc, doc.pg_doc,
 ud_da_elab.dt_creazione,
 ud.ds_key_ord || '-' ||
 case
   when doc.ti_doc = 'PRINCIPALE' then 'A'
   when doc.ti_doc = 'ALLEGATO' then 'B'
   when doc.ti_doc = 'ANNESSO' then 'C'
   else 'D'
 end || '-' ||
 lpad(to_char(doc.pg_doc), 4, '0') ds_ord_doc,
 
 doc.id_tipo_doc,
 ti_doc.nm_tipo_doc,
 doc.ti_creazione,
 
 ud_da_elab.ti_stato_ud_da_elab

from IAM_ABIL_ORGANIZ abil_org
join ORG_STRUT strut
 on (strut.id_strut = abil_org.id_organiz_applic and strut.fl_cessato = 0)
join ORG_ENTE ente 
 on (ente.id_ente = strut.id_ente and ente.fl_cessato = 0)
join ORG_AMBIENTE amb
 on (amb.id_ambiente = ente.id_ambiente)

join ELV_UD_VERS_DA_ELAB_ELENCO ud_da_elab
 on (ud_da_elab.id_strut = strut.id_strut)
join ARO_UNITA_DOC ud
 on (ud.id_unita_doc = ud_da_elab.id_unita_doc)
join DEC_TIPO_UNITA_DOC tipo_ud
 on (tipo_ud.id_tipo_unita_doc = ud.id_tipo_unita_doc)

join ARO_DOC doc
 on (doc.id_unita_doc = ud.id_unita_doc
 and doc.ti_doc = 'PRINCIPALE')
join DEC_TIPO_DOC ti_doc
 on (ti_doc.id_tipo_doc = doc.id_tipo_doc);

-- changeset root:1751897635013-395
COMMENT ON COLUMN MON_V_LIS_UD_VERS_DA_ELAB.ID_UNITA_DOC IS 'PK.1';

-- changeset root:1751897635013-396
CREATE OR REPLACE FORCE VIEW "ARO_V_RIC_RICH_RA" ("ID_ENTE_CONVENZ", "NM_ENTE_CONVENZ", "NM_ENTE_STRUT", "ID_RICHIESTA_RA", "ID_AMBIENTE", "ID_ENTE", "ID_STRUT", "TOTALI", "ESTRATTI", "ERRORI", "SUM_DIM", "MAX_DT_ESTRAZIONE", "TI_STATO", "ESTRATTI_TOTALI", "CD_ERRORE", "TS_INIZIO") AS SELECT /*+ parallel 16 */
           ensia.id_ente_siam,
           ensia.nm_ente_siam,
           en.nm_ente || ' - ' || stru.nm_strut,
           aips."ID_RICHIESTA_RA",
           amb."ID_AMBIENTE",
           en."ID_ENTE",
           aips."ID_STRUT",
           aips."TOTALI",
           aips."ESTRATTI",
           aips."ERRORI",
           aips."dime",
           aips."MAX(REQS.DT_ESTRAZIONE)",
           ra."TI_STATO",
           CAST (estratti * 100 / totali AS NUMBER (10, 2)),
           --ra.priorita,
           ra.cd_errore,
           ra.ts_inizio
      FROM (  SELECT reqs.id_richiesta_ra,
                     udoc.id_strut,
                     COUNT (1)
                         totali,
                     SUM (CASE ti_stato WHEN 'ESTRATTO' THEN 1 ELSE 0 END)
                         estratti,
                     SUM (CASE ti_stato WHEN 'ERRORE' THEN 1 ELSE 0 END)
                         errori,
                     CAST (SUM (dim) / 1048576 AS NUMBER (20, 2))
                         "dime",
                     MAX (reqs.dt_estrazione)
                FROM aro_aip_restituzione_archivio reqs
                     JOIN aro_indice_aip_ud aip
                         ON reqs.id_indice_aip = aip.id_indice_aip
                     JOIN aro_unita_doc udoc
                         ON udoc.id_unita_doc = aip.id_unita_doc
            GROUP BY id_richiesta_ra, udoc.id_strut) aips
           RIGHT JOIN aro_richiesta_ra ra
               ON ra.id_richiesta_ra = aips.id_richiesta_ra
           JOIN org_strut stru ON stru.id_strut = aips.id_strut
           JOIN org_ente en ON en.id_ente = stru.id_ente
           JOIN org_ambiente amb ON amb.id_ambiente = en.id_ambiente
           JOIN sacer_iam.org_ente_siam ensia
               ON ensia.id_ente_siam = stru.id_ente_convenz
     WHERE aips.id_richiesta_ra IS NOT NULL;

-- changeset root:1751897635013-397
CREATE OR REPLACE FORCE VIEW "SER_V_RIC_SERIE_UD_USR" ("ID_SERIE", "ID_STRUT", "CD_COMPOSITO_SERIE", "AA_SERIE", "DS_SERIE", "NM_STRUT", "ID_ENTE", "NM_ENTE", "ID_AMBIENTE", "NM_AMBIENTE", "ID_VER_SERIE", "CD_VER_SERIE", "TI_STATO_VER_SERIE", "TI_STATO_SERIE", "ID_TIPO_UNITA_DOC", "ID_REGISTRO_UNITA_DOC", "NI_UD_CONTENUTO", "ID_FIRST_UNITA_DOC", "DS_CHIAVE_FIRST", "DT_REG_UNITA_DOC_FIRST", "ID_LAST_UNITA_DOC", "DS_CHIAVE_LAST", "DT_REG_UNITA_DOC_LAST") AS select
 serie.id_serie, serie.id_strut, serie.cd_composito_serie, serie.aa_serie, serie.ds_serie, 
 
 strut.nm_strut, ente.id_ente, ente.nm_ente, amb.id_ambiente, amb.nm_ambiente,
 
 ver_serie.id_ver_serie, ver_serie.cd_ver_serie,
 stato_ver_serie.ti_stato_ver_serie,
 stato_serie.ti_stato_serie,
 
 ti_serie_ud.id_tipo_unita_doc,
 ti_serie_ud.id_registro_unita_doc,
 
 conten_eff.ni_ud_contenuto_ver_serie ni_ud_contenuto,
 
 app_first.id_unita_doc id_first_unita_doc, 
 app_first.cd_ud_serie ds_chiave_first,
 app_first.dt_ud_serie dt_reg_unita_doc_first,
 
 app_last.id_unita_doc id_last_unita_doc, 
 app_last.cd_ud_serie ds_chiave_last,
 app_last.dt_ud_serie dt_reg_unita_doc_last
 
/* 
 ud_first.id_unita_doc id_first_unita_doc, 
 ud_first.cd_registro_key_unita_doc || '-' || ud_first.aa_key_unita_doc || '-' || ud_first.cd_key_unita_doc ds_chiave_first, 
 ud_first.dt_reg_unita_doc dt_reg_unita_doc_first,
 
 ud_last.id_unita_doc id_last_unita_doc, 
 ud_last.cd_registro_key_unita_doc || '-' || ud_last.aa_key_unita_doc || '-' || ud_last.cd_key_unita_doc ds_chiave_last, 
 ud_last.dt_reg_unita_doc dt_reg_unita_doc_last
*/

from SER_SERIE serie

join ORG_STRUT strut
 on (strut.id_strut = serie.id_strut)
join ORG_ENTE ente
 on (ente.id_ente = strut.id_ente)
join ORG_AMBIENTE amb
 on (amb.id_ambiente = ente.id_ambiente)

join SER_VER_SERIE ver_serie
 on (ver_serie.id_serie = serie.id_serie)
join DEC_TIPO_SERIE ti_serie
 on (ti_serie.id_tipo_serie = serie.id_tipo_serie)
join dec_tipo_serie_ud ti_serie_ud
 on (ti_serie_ud.id_tipo_serie = ti_serie.id_tipo_serie)

join SER_STATO_VER_SERIE stato_ver_serie
 on (stato_ver_serie.id_stato_ver_serie = ver_serie.id_stato_ver_serie_cor)

join SER_STATO_SERIE stato_serie
 on (stato_serie.id_stato_serie = serie.id_stato_serie_cor
 and stato_serie.ti_stato_serie in ('IN_ARCHIVIO', 'IN_CUSTODIA'))
 
join SER_CONTENUTO_VER_SERIE conten_eff
 on (conten_eff.id_ver_serie = ver_serie.id_ver_serie
 and conten_eff.ti_contenuto_ver_serie = 'EFFETTIVO')
 
join ARO_UD_APPART_VER_SERIE app_first
 on (app_first.id_ud_appart_ver_serie = conten_eff.id_first_ud_appart_ver_serie)
/*
join ARO_UNITA_DOC ud_first
 on (ud_first.id_unita_doc = app_first.id_unita_doc)
*/
 
join ARO_UD_APPART_VER_SERIE app_last
 on (app_last.id_ud_appart_ver_serie = conten_eff.id_last_ud_appart_ver_serie)
/*
join ARO_UNITA_DOC ud_last
 on (ud_last.id_unita_doc = app_last.id_unita_doc)
*/
 
where ver_serie.pg_ver_serie = (select max(ver_serie_cor.pg_ver_serie )
								from SER_VER_SERIE ver_serie_cor
								where ver_serie_cor.id_serie = serie.id_serie
								);

-- changeset root:1751897635013-398
COMMENT ON COLUMN SER_V_RIC_SERIE_UD_USR.ID_VER_SERIE IS 'PK.1';

-- changeset root:1751897635013-399
CREATE OR REPLACE FORCE VIEW "SER_V_VIS_ERR_CONTEN_SERIE_UD" ("ID_SERIE", "ID_STRUT", "CD_COMPOSITO_SERIE", "AA_SERIE", "DS_SERIE", "ID_TIPO_SERIE", "NM_STRUT", "ID_ENTE", "NM_ENTE", "ID_AMBIENTE", "NM_AMBIENTE", "NM_TIPO_SERIE", "ID_VER_SERIE", "CD_VER_SERIE", "ID_STATO_VER_SERIE_COR", "TI_STATO_VER_SERIE_COR", "ID_STATO_SERIE_COR", "TI_STATO_SERIE_COR", "ID_CONTENUTO_VER_SERIE", "TI_CONTENUTO_VER_SERIE", "TI_STATO_CONTENUTO_VER_SERIE", "DT_STATO_CONTENUTO_VER_SERIE", "NI_UNITA_DOC", "CD_FIRST_UNITA_DOC", "DT_FIRST_UNITA_DOC", "CD_LAST_UNITA_DOC", "DT_LAST_UNITA_DOC", "ID_ERR_CONTENUTO_VER_SERIE", "PG_ERR", "TI_GRAVITA_ERR", "TI_ERR", "DL_ERR") AS select
 serie.id_serie, serie.id_strut, serie.cd_composito_serie, serie.aa_serie, serie.ds_serie, serie.id_tipo_serie,
 
 strut.nm_strut, ente.id_ente, ente.nm_ente, amb.id_ambiente, amb.nm_ambiente,

 ti_serie.nm_tipo_serie,
 
 ver_serie.id_ver_serie, ver_serie.cd_ver_serie, 
 
 ver_serie.id_stato_ver_serie_cor, stato_ver_serie.ti_stato_ver_serie, 

 ver_serie.id_stato_ver_serie_cor, stato_ver_serie.ti_stato_ver_serie, 
 
 conten.id_contenuto_ver_serie,
 conten.ti_contenuto_ver_serie, 
 conten.ti_stato_contenuto_ver_serie,
 conten.dt_stato_contenuto_ver_serie,
 conten.ni_ud_contenuto_ver_serie ni_unita_doc, 
 ud_conten_first.cd_ud_serie cd_first_unita_doc, ud_conten_first.dt_ud_serie dt_first_unita_doc, ud_conten_last.cd_ud_serie cd_last_unita_doc, ud_conten_last.dt_ud_serie dt_last_unita_doc,
 
 err.id_err_contenuto_ver_serie, 
 err.pg_err, 
 err.ti_gravita_err, 
 err.ti_err, 
 err.dl_err

from SER_ERR_CONTENUTO_VER_SERIE err
 
join SER_CONTENUTO_VER_SERIE conten
 on (conten.id_contenuto_ver_serie = err.id_contenuto_ver_serie)

join SER_VER_SERIE ver_serie
 on (ver_serie.id_ver_serie = conten.id_ver_serie)
join SER_STATO_VER_SERIE stato_ver_serie
 on (stato_ver_serie.id_stato_ver_serie = ver_serie.id_stato_ver_serie_cor)

join SER_SERIE serie
 on (serie.id_serie = ver_serie.id_serie)
join DEC_TIPO_SERIE ti_serie
 on (ti_serie.id_tipo_serie = serie.id_tipo_serie)

join ORG_STRUT strut
 on (strut.id_strut = serie.id_strut)
join ORG_ENTE ente
 on (ente.id_ente = strut.id_ente)
join ORG_AMBIENTE amb
 on (amb.id_ambiente = ente.id_ambiente)
 
left join SER_STATO_SERIE stato_serie
 on (stato_serie.id_stato_serie = serie.id_stato_serie_cor)
 
left join ARO_UD_APPART_VER_SERIE ud_conten_first
 on (ud_conten_first.id_ud_appart_ver_serie = conten.id_first_ud_appart_ver_serie)
left join ARO_UD_APPART_VER_SERIE ud_conten_last
 on (ud_conten_last.id_ud_appart_ver_serie = conten.id_last_ud_appart_ver_serie);

-- changeset root:1751897635013-400
COMMENT ON COLUMN SER_V_VIS_ERR_CONTEN_SERIE_UD.ID_ERR_CONTENUTO_VER_SERIE IS 'PK.1';

-- changeset root:1751897635013-401
CREATE OR REPLACE FORCE VIEW "SER_V_VIS_NOTA_SERIE" ("ID_SERIE", "ID_STRUT", "CD_COMPOSITO_SERIE", "AA_SERIE", "DS_SERIE", "ID_TIPO_SERIE", "NM_STRUT", "ID_ENTE", "NM_ENTE", "ID_AMBIENTE", "NM_AMBIENTE", "NM_TIPO_SERIE", "ID_VER_SERIE", "CD_VER_SERIE", "ID_STATO_VER_SERIE_COR", "TI_STATO_VER_SERIE_COR", "ID_STATO_SERIE_COR", "TI_STATO_SERIE_COR", "ID_NOTA_VER_SERIE", "ID_TIPO_NOTA_SERIE", "DS_TIPO_NOTA_SERIE", "NI_ORD", "PG_NOTA_VER_SERIE", "DT_NOTA_VER_SERIE", "DS_NOTA_VER_SERIE", "ID_USER_IAM_NOTA", "NM_USERID_NOTA") AS select
 serie.id_serie, serie.id_strut, serie.cd_composito_serie, serie.aa_serie, serie.ds_serie, serie.id_tipo_serie,
 
 strut.nm_strut, ente.id_ente, ente.nm_ente, amb.id_ambiente, amb.nm_ambiente,
 
 ti_serie.nm_tipo_serie,
 
 ver_serie.id_ver_serie, ver_serie.cd_ver_serie, 

 ver_serie.id_stato_ver_serie_cor, stato_ver_serie.ti_stato_ver_serie, 

 serie.id_stato_serie_cor, stato_serie.ti_stato_serie, 
 
 nota.id_nota_ver_serie, 
 ti_nota.id_tipo_nota_serie,
 ti_nota.ds_tipo_nota_serie || 
 case
	when ti_nota.fl_obblig = '1' 
		then ' (' || 'OBBLIGATORIO' || ')'
		else null
 end ds_tipo_nota_serie,
 ti_nota.ni_ord,
 nota.pg_nota_ver_serie,
 nota.dt_nota_ver_serie, 
 nota.ds_nota_ver_serie, 
 nota.id_user_iam id_user_iam_nota, usr_nota.nm_userid nm_userid_nota

from SER_NOTA_VER_SERIE nota

join SER_VER_SERIE ver_serie
 on (ver_serie.id_ver_serie = nota.id_ver_serie)
join SER_STATO_VER_SERIE stato_ver_serie
 on (stato_ver_serie.id_stato_ver_serie = ver_serie.id_stato_ver_serie_cor)
join SER_SERIE serie
 on (serie.id_serie = ver_serie.id_serie)
join DEC_TIPO_SERIE ti_serie
 on (ti_serie.id_tipo_serie = serie.id_tipo_serie)

join ORG_STRUT strut
 on (strut.id_strut = serie.id_strut)
join ORG_ENTE ente
 on (ente.id_ente = strut.id_ente)
join ORG_AMBIENTE amb
 on (amb.id_ambiente = ente.id_ambiente)
 
left join SER_STATO_SERIE stato_serie
 on (stato_serie.id_stato_serie = serie.id_stato_serie_cor)

join IAM_USER usr_nota
 on (usr_nota.id_user_iam = nota.id_user_iam)
join DEC_TIPO_NOTA_SERIE ti_nota
 on (ti_nota.id_tipo_nota_serie = nota.id_tipo_nota_serie);

-- changeset root:1751897635013-402
COMMENT ON COLUMN SER_V_VIS_NOTA_SERIE.ID_NOTA_VER_SERIE IS 'PK.1';

-- changeset root:1751897635013-403
CREATE OR REPLACE FORCE VIEW "SER_V_VIS_STATO_SERIE" ("ID_SERIE", "ID_STRUT", "CD_COMPOSITO_SERIE", "AA_SERIE", "DS_SERIE", "ID_TIPO_SERIE", "NM_STRUT", "ID_ENTE", "NM_ENTE", "ID_AMBIENTE", "NM_AMBIENTE", "NM_TIPO_SERIE", "ID_VER_SERIE", "CD_VER_SERIE", "ID_STATO_VER_SERIE_COR", "TI_STATO_VER_SERIE_COR", "ID_STATO_SERIE_COR", "TI_STATO_SERIE_COR", "ID_STATO_VER_SERIE", "PG_STATO_VER_SERIE", "TI_STATO_VER_SERIE", "DT_REG_STATO_VER_SERIE", "DS_AZIONE", "DS_NOTA_AZIONE", "ID_USER_IAM_STATO", "NM_USERID_STATO") AS select
 serie.id_serie, serie.id_strut, serie.cd_composito_serie, serie.aa_serie, serie.ds_serie, serie.id_tipo_serie,
 
 strut.nm_strut, ente.id_ente, ente.nm_ente, amb.id_ambiente, amb.nm_ambiente,
 
 ti_serie.nm_tipo_serie,
 
 ver_serie.id_ver_serie, ver_serie.cd_ver_serie, 

 ver_serie.id_stato_ver_serie_cor, stato_ver_serie.ti_stato_ver_serie, 
 
 serie.id_stato_serie_cor, stato_serie.ti_stato_serie, 

 stato.id_stato_ver_serie, 
 stato.pg_stato_ver_serie, 
 stato.ti_stato_ver_serie, 
 stato.dt_reg_stato_ver_serie, 
 stato.ds_azione, 
 stato.ds_nota_azione,
 stato.id_user_iam id_user_iam_stato, usr_stato.nm_userid nm_userid_stato

from SER_STATO_VER_SERIE stato

join SER_VER_SERIE ver_serie
 on (ver_serie.id_ver_serie = stato.id_ver_serie)
join SER_STATO_VER_SERIE stato_ver_serie
 on (stato_ver_serie.id_stato_ver_serie = ver_serie.id_stato_ver_serie_cor)
join SER_SERIE serie
 on (serie.id_serie = ver_serie.id_serie)
join DEC_TIPO_SERIE ti_serie
 on (ti_serie.id_tipo_serie = serie.id_tipo_serie)

join ORG_STRUT strut
 on (strut.id_strut = serie.id_strut)
join ORG_ENTE ente
 on (ente.id_ente = strut.id_ente)
join ORG_AMBIENTE amb
 on (amb.id_ambiente = ente.id_ambiente)
 
left join SER_STATO_SERIE stato_serie
 on (stato_serie.id_stato_serie = serie.id_stato_serie_cor)

join IAM_USER usr_stato
 on (usr_stato.id_user_iam = stato.id_user_iam);

-- changeset root:1751897635013-404
COMMENT ON COLUMN SER_V_VIS_STATO_SERIE.ID_STATO_VER_SERIE IS 'PK.1';

-- changeset root:1751897635013-405
CREATE OR REPLACE FORCE VIEW "MON_V_LIS_SES_RECUP" ("ID_SESSIONE_RECUP", "TI_SESSIONE", "TI_OUTPUT_RECUP", "DT_APERTURA", "DT_CHIUSURA", "TI_STATO", "DS_MSG_ERR", "ID_USER_CORR", "ID_STRUT", "CD_REGISTRO_KEY_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "DS_URN_RICH", "ID_UNITA_DOC", "ID_DOC", "ID_COMP_DOC", "ID_ENTE", "ID_AMBIENTE", "NM_AMBIENTE", "NM_ENTE", "NM_STRUT", "NM_USERID") AS SELECT recup.id_sessione_recup,
           recup.ti_sessione_recup          ti_sessione,
           recup.ti_output_recup            ti_output_recup,
           recup.dt_apertura,
           recup.dt_chiusura,
           recup.ti_stato_sessione_recup    ti_stato,
           CASE
               WHEN recup.cd_err IS NULL AND recup.dl_err IS NULL
               THEN
                   NULL
               WHEN recup.cd_err IS NOT NULL AND recup.dl_err IS NOT NULL
               THEN
                   recup.cd_err || ' - ' || recup.dl_err
               WHEN recup.cd_err IS NULL AND recup.dl_err IS NOT NULL
               THEN
                   recup.dl_err
               WHEN recup.cd_err IS NOT NULL AND recup.dl_err IS NULL
               THEN
                   recup.cd_err
               ELSE
                   '???'
           END                              ds_msg_err,
           recup.id_user,
           ud.id_strut,
           ud.cd_registro_key_unita_doc,
           ud.aa_key_unita_doc,
           ud.cd_key_unita_doc,
           CASE
               WHEN recup.id_doc IS NOT NULL       -- si recupera un documento
               THEN
                   CASE
                       WHEN doc.ni_ord_doc IS NOT NULL
                       THEN
                           'DOC' || LPAD (doc.ni_ord_doc, 5, '0')
                       ELSE
                           doc.ti_doc || '-' || doc.pg_doc
                   END
               WHEN recup.id_comp_doc IS NOT NULL -- si recupera un componente
               THEN
                   CASE
                       WHEN doc_comp.ni_ord_doc IS NOT NULL
                       THEN
                              'DOC'
                           || LPAD (doc_comp.ni_ord_doc, 5, '0')
                           || ':'
                           || CASE
                                  WHEN comp.id_comp_doc_padre IS NULL
                                  THEN
                                      LPAD (comp.ni_ord_comp_doc, 5, '0')
                                  ELSE
                                      (SELECT LPAD (
                                                  comp_padre.ni_ord_comp_doc,
                                                  5,
                                                  '0')
                                         FROM ARO_COMP_DOC comp_padre
                                        WHERE comp_padre.id_comp_doc =
                                              id_comp_doc_padre)
                              END
                           || CASE
                                  WHEN comp.id_comp_doc_padre IS NULL
                                  THEN
                                      ''
                                  ELSE
                                         ':'
                                      || LPAD (comp.ni_ord_comp_doc, 2, '0')
                              END
                       ELSE
                              doc_comp.ti_doc
                           || '-'
                           || doc_comp.pg_doc
                           || '-'
                           || strut_doc_comp.ni_ord_strut_doc
                           || '-'
                           || comp.ni_ord_comp_doc
                   END
               ELSE
                   NULL
           END                              ds_urn_rich,
           ud_recup.id_unita_doc,
           recup.id_doc,
           recup.id_comp_doc,
           ente.ID_ENTE,
           amb.ID_AMBIENTE,
           amb.nm_ambiente,
           ente.nm_ente,
           strut.nm_strut,
           usr.nm_userid
      FROM REC_SESSIONE_RECUP  recup
           JOIN REC_UNITA_DOC_RECUP ud_recup
               ON (ud_recup.id_unita_doc_recup = recup.id_unita_doc_recup)
           JOIN IAM_USER usr on (recup.id_user = usr.id_user_iam)
           JOIN ARO_UNITA_DOC ud ON (ud.id_unita_doc = ud_recup.id_unita_doc)
           JOIN org_Strut strut ON ud.ID_STRUT = strut.ID_STRUT
           JOIN org_ente ente ON strut.ID_ENTE = ente.ID_ENTE
           JOIN org_Ambiente amb ON ente.ID_AMBIENTE = amb.ID_AMBIENTE
           LEFT JOIN ARO_DOC doc ON (doc.id_doc = recup.id_doc)
           LEFT JOIN ARO_COMP_DOC comp
               ON (comp.id_comp_doc = recup.id_comp_doc)
           LEFT JOIN ARO_STRUT_DOC strut_doc_comp
               ON (strut_doc_comp.id_strut_doc = comp.id_strut_doc)
           LEFT JOIN ARO_DOC doc_comp
               ON (doc_comp.id_doc = strut_doc_comp.id_doc);

-- changeset root:1751897635013-406
COMMENT ON COLUMN MON_V_LIS_SES_RECUP.ID_SESSIONE_RECUP IS 'PK.1 relativa a tabella REC_SESSIONE_RECUP';

-- changeset root:1751897635013-407
CREATE OR REPLACE FORCE VIEW "ORG_V_CORR_PING" ("ID_DICH_VERS_SACER", "ID_VERS", "NM_VERS", "NM_AMBIENTE_VERS", "TI_DICH_VERS", "ID_ORGANIZ_IAM", "ID_ORGANIZ_APPLIC", "NM_ENTITA") AS SELECT p.id_dich_vers_sacer,
           v.id_vers,
           v.nm_vers,
           av.nm_ambiente_vers,
           p.ti_dich_vers,
           p.id_organiz_iam,
           u.id_organiz_applic,
           CASE
               WHEN p.ti_dich_vers = 'STRUTTURA' THEN
                   (SELECT s.nm_strut
                     FROM org_strut  s
                          JOIN sacer_iam.usr_organiz_iam u1
                              ON (s.id_strut = u1.id_organiz_applic)
                    WHERE u1.id_organiz_iam = u.id_organiz_iam)
               WHEN p.ti_dich_vers = 'ENTE' THEN
                   (SELECT e.nm_ente
                     FROM org_ente  e
                          JOIN sacer_iam.usr_organiz_iam u2
                              ON (e.id_ente = u2.id_organiz_applic)
                    WHERE u2.id_organiz_iam = u.id_organiz_iam)
               WHEN p.ti_dich_vers = 'AMBIENTE' THEN
                   (SELECT a.nm_ambiente
                     FROM org_ambiente  a
                          JOIN sacer_iam.usr_organiz_iam u2
                              ON (a.id_ambiente = u2.id_organiz_applic)
                    WHERE u2.id_organiz_iam = u.id_organiz_iam)
           END    AS nm_entita
      FROM sacer_ping.pig_dich_vers_sacer  p
           JOIN sacer_ping.pig_vers v ON (v.id_vers = p.id_vers)
           JOIN sacer_ping.pig_ambiente_vers av
               ON (av.id_ambiente_vers = v.id_ambiente_vers)
           JOIN sacer_iam.usr_organiz_iam u
               ON (p.id_organiz_iam = u.id_organiz_iam);

-- changeset root:1751897635013-408
COMMENT ON COLUMN ORG_V_CORR_PING.ID_DICH_VERS_SACER IS 'PK.1';

-- changeset root:1751897635013-409
CREATE OR REPLACE FORCE VIEW "MON_V_LIS_UNI_DOC_DA_ANNUL" ("ID_USER_IAM", "ID_AMBIENTE", "NM_AMBIENTE", "ID_ENTE", "NM_ENTE", "ID_STRUT", "NM_STRUT", "ID_UNITA_DOC", "CD_REGISTRO_KEY_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "ID_TIPO_UNITA_DOC", "NM_TIPO_UNITA_DOC", "DS_ORD_DOC", "ID_DOC", "TI_DOC", "PG_DOC", "ID_TIPO_DOC", "NM_TIPO_DOC", "DT_CREAZIONE", "TI_STATO_ANNUL", "DT_ANNUL", "FL_VERS_NUOVO", "ID_SUB_STRUT") AS select
-- info su utente
 abil_org.id_user_iam,
-- info di organizzazione
 amb.id_ambiente, amb.nm_ambiente, 
 ente.id_ente, ente.nm_ente,
 strut.id_strut, strut.nm_strut,
 
-- info unita doc 
 ud.id_unita_doc, 
 ud.cd_registro_key_unita_doc, ud.aa_key_unita_doc, ud.cd_key_unita_doc,
 ud.id_tipo_unita_doc, tipo_ud.nm_tipo_unita_doc,
 ud.ds_key_ord ds_ord_doc,
  
-- info documento
 doc.id_doc,
 doc.ti_doc, doc.pg_doc,
 doc.id_tipo_doc, ti_doc.nm_tipo_doc,

-- info ud annull 
 ud.dt_creazione, 
 case
	when item_annul.ti_stato_item = 'DA_ANNULLARE_IN_PING' then 'DA_FARE_PING'
	when item_annul.ti_stato_item = 'DA_ANNULLARE_IN_SACER' then 'DA_FARE_SACER'
	when item_annul.ti_stato_item = 'ANNULLATO' then 'OK'
 end ti_stato_annul,
 ud.dt_annul,
 
-- indicatore se esiste ud versata dopo annul 
 case
	when exists (select *
				from ARO_UNITA_DOC ud_new
				where ud_new.id_strut = ud.id_strut
				and ud_new.cd_registro_key_unita_doc = ud.cd_registro_key_unita_doc
				and ud_new.aa_key_unita_doc = ud.aa_key_unita_doc
				and ud_new.cd_key_unita_doc = ud.cd_key_unita_doc
				and ud_new.dt_annul = to_date('31/12/2444', 'dd/mm/yyyy')
				and ud_new.id_unita_doc != ud.id_unita_doc
				)
		then '1'
		else '0'
 end fl_vers_nuovo,
 
 ud.id_sub_strut

from IAM_ABIL_ORGANIZ abil_org
join ORG_STRUT strut
 on (strut.id_strut = abil_org.id_organiz_applic)
join ORG_ENTE ente 
 on (ente.id_ente = strut.id_ente)
join ORG_AMBIENTE amb
 on (amb.id_ambiente = ente.id_ambiente)

join ARO_ITEM_RICH_ANNUL_VERS item_annul
 on (item_annul.id_strut = strut.id_strut
 and item_annul.ti_stato_item in ('DA_ANNULLARE_IN_PING', 'DA_ANNULLARE_IN_SACER', 'ANNULLATO'))
 
join ARO_UNITA_DOC ud
 on (ud.id_unita_doc = item_annul.id_unita_doc)
join DEC_TIPO_UNITA_DOC tipo_ud
 on (tipo_ud.id_tipo_unita_doc = ud.id_tipo_unita_doc)
join ARO_DOC doc
 on (doc.id_unita_doc = ud.id_unita_doc
 and doc.ti_doc = 'PRINCIPALE')
join DEC_TIPO_DOC ti_doc
 on (ti_doc.id_tipo_doc = doc.id_tipo_doc);

-- changeset root:1751897635013-410
COMMENT ON COLUMN MON_V_LIS_UNI_DOC_DA_ANNUL.ID_DOC IS 'PK.1 relativa a tabella ARO_DOC';

-- changeset root:1751897635013-411
CREATE OR REPLACE FORCE VIEW "MON_V_LIS_FASC" ("ID_USER_IAM", "ID_AMBIENTE", "NM_AMBIENTE", "ID_ENTE", "NM_ENTE", "ID_STRUT", "NM_STRUT", "ID_FASCICOLO", "AA_FASCICOLO", "CD_KEY_FASCICOLO", "TI_STATO_FASC_ELENCO_VERS", "TS_VERS_FASCICOLO", "FL_SES_FASCICOLO_KO", "TI_STATO_CONSERVAZIONE", "ID_TIPO_FASCICOLO", "NM_TIPO_FASCICOLO", "CD_KEY_ORD") AS select 
utente.id_user_iam,
amb.id_ambiente, amb.nm_ambiente,
ente.id_ente, ente.nm_ente,
strut.id_strut, strut.nm_strut,

fasc.id_fascicolo, fasc.aa_fascicolo, fasc.cd_key_fascicolo,

fasc.ti_stato_fasc_elenco_vers, fasc.ts_ini_ses, 
fasc.fl_ses_fascicolo_ko, fasc.ti_stato_conservazione,

fasc.id_tipo_fascicolo, ti_fasc.nm_tipo_fascicolo,
fasc.cd_key_ord

from IAM_USER utente
join ORG_AMBIENTE amb
	on (amb.id_ambiente > 0)
join ORG_ENTE ente
	on (ente.id_ambiente = amb.id_ambiente)
join ORG_STRUT strut
	on (strut.id_ente = ente.id_ente)
join IAM_ABIL_ORGANIZ abil_org
	on (abil_org.id_user_iam = utente.id_user_iam
	and abil_org.id_organiz_applic = strut.id_strut)

join FAS_FASCICOLO fasc
	on (fasc.id_strut = abil_org.id_organiz_applic)

join IAM_ABIL_TIPO_DATO abil_dato
 on (abil_dato.id_abil_organiz = abil_org.id_abil_organiz
 and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
 and abil_dato.id_tipo_dato_applic = fasc.id_tipo_fascicolo)

join DEC_TIPO_FASCICOLO ti_fasc
	on (ti_fasc.id_tipo_fascicolo = fasc.id_tipo_fascicolo);

-- changeset root:1751897635013-412
COMMENT ON COLUMN MON_V_LIS_FASC.ID_FASCICOLO IS 'PK.1';

-- changeset root:1751897635013-413
CREATE OR REPLACE FORCE VIEW "MON_V_LIS_FASC_DA_ELAB" ("ID_USER_IAM", "ID_AMBIENTE", "NM_AMBIENTE", "ID_ENTE", "NM_ENTE", "ID_STRUT", "NM_STRUT", "ID_FASCICOLO", "AA_FASCICOLO", "CD_KEY_FASCICOLO", "TI_STATO_FASC_ELENCO_VERS", "TS_VERS_FASCICOLO", "FL_SES_FASCICOLO_KO", "TI_STATO_CONSERVAZIONE", "ID_TIPO_FASCICOLO", "NM_TIPO_FASCICOLO", "CD_KEY_ORD") AS select 
utente.id_user_iam,
amb.id_ambiente, amb.nm_ambiente,
ente.id_ente, ente.nm_ente,
strut.id_strut, strut.nm_strut,

fasc_daelab.id_fascicolo, fasc_daelab.aa_fascicolo, fasc.cd_key_fascicolo, 
fasc_daelab.ti_stato_fasc_da_elab, fasc_daelab.ts_vers_fascicolo, 

fasc.fl_ses_fascicolo_ko, fasc.ti_stato_conservazione,
fasc_daelab.id_tipo_fascicolo, ti_fasc.nm_tipo_fascicolo,
fasc.cd_key_ord

from IAM_USER utente
join ORG_AMBIENTE amb
	on (amb.id_ambiente > 0)
join ORG_ENTE ente
	on (ente.id_ambiente = amb.id_ambiente)
join ORG_STRUT strut
	on (strut.id_ente = ente.id_ente)
join IAM_ABIL_ORGANIZ abil_org
	on (abil_org.id_user_iam = utente.id_user_iam
	and abil_org.id_organiz_applic = strut.id_strut)

join ELV_FASC_DA_ELAB_ELENCO fasc_daelab
	on (fasc_daelab.id_strut = abil_org.id_organiz_applic)
join DEC_TIPO_FASCICOLO ti_fasc
	on (ti_fasc.id_tipo_fascicolo = fasc_daelab.id_tipo_fascicolo)

join IAM_ABIL_TIPO_DATO abil_dato
 on (abil_dato.id_abil_organiz = abil_org.id_abil_organiz
 and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
 and abil_dato.id_tipo_dato_applic = fasc_daelab.id_tipo_fascicolo)
	
join FAS_FASCICOLO fasc
	on (fasc.id_fascicolo = fasc_daelab.id_fascicolo);

-- changeset root:1751897635013-414
COMMENT ON COLUMN MON_V_LIS_FASC_DA_ELAB.ID_FASCICOLO IS 'PK.1';

-- changeset root:1751897635013-415
CREATE OR REPLACE FORCE VIEW "MON_V_LIS_FASC_KO_BY_ERR" ("ID_USER_IAM", "ID_AMBIENTE", "NM_AMBIENTE", "ID_ENTE", "NM_ENTE", "ID_STRUT", "NM_STRUT", "ID_FASCICOLO_KO", "AA_FASCICOLO", "CD_KEY_FASCICOLO", "TS_INI_FIRST_SES", "TS_INI_LAST_SES", "ID_ERR_SACER_PRINC", "CD_ERR_PRINC", "DS_ERR_PRINC", "ID_TIPO_FASCICOLO", "NM_TIPO_FASCICOLO", "TI_STATO_FASCICOLO_KO", "ID_SES_FASCICOLO_KO_FIRST", "ID_SES_FASCICOLO_KO_LAST", "ID_CLASSE_ERR_SACER", "CD_CLASSE_ERR_SACER", "ID_ERR_SACER", "CD_ERR_SACER") AS select
 utente.id_user_iam,
 amb.id_ambiente, amb.nm_ambiente,
 ente.id_ente, ente.nm_ente,
 strut.id_strut, strut.nm_strut,

 fasc_ko.id_fascicolo_ko, fasc_ko.aa_fascicolo, fasc_ko.cd_key_fascicolo,
 fasc_ko.ts_ini_first_ses, fasc_ko.ts_ini_last_ses,
 fasc_ko.id_err_sacer_princ,
 case
	when fasc_ko.id_err_sacer_princ is not null
		then (select cd_err
			  from DEC_ERR_SACER err
			  where err.id_err_sacer = fasc_ko.id_err_sacer_princ
			  )
		else null
 end cd_err_princ,
 fasc_ko.ds_err_princ,
 
 fasc_ko.id_tipo_fascicolo_last, ti_fasc.nm_tipo_fascicolo,
 fasc_ko.ti_stato_fascicolo_ko, 
 fasc_ko.id_ses_fascicolo_ko_first, fasc_ko.id_ses_fascicolo_ko_last,
 
 classe_err.id_classe_err_sacer id_classe_err_sacer,
 classe_err.cd_classe_err 		cd_classe_err_sacer,
 err_ses_ko.id_err_sacer	 	id_err_sacer,
 err.cd_err 					cd_err_sacer
 
 
from IAM_USER utente
join ORG_AMBIENTE amb
	on (amb.id_ambiente > 0)
join ORG_ENTE ente
	on (ente.id_ambiente = amb.id_ambiente)
join ORG_STRUT strut
	on (strut.id_ente = ente.id_ente)
join IAM_ABIL_ORGANIZ abil_org
	on (abil_org.id_user_iam = utente.id_user_iam
	and abil_org.id_organiz_applic = strut.id_strut)

join VRS_FASCICOLO_KO fasc_ko
	on (fasc_ko.id_strut = abil_org.id_organiz_applic)

join IAM_ABIL_TIPO_DATO abil_dato
 on (abil_dato.id_abil_organiz = abil_org.id_abil_organiz
 and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
 and abil_dato.id_tipo_dato_applic = fasc_ko.id_tipo_fascicolo_last)
 
join DEC_TIPO_FASCICOLO ti_fasc
	on (ti_fasc.id_tipo_fascicolo = fasc_ko.id_tipo_fascicolo_last)
	
join VRS_SES_FASCICOLO_KO ses_ko
	on (ses_ko.id_fascicolo_ko = fasc_ko.id_fascicolo_ko)
join VRS_ERR_SES_FASCICOLO_KO err_ses_ko
	on (err_ses_ko.id_ses_fascicolo_ko = ses_ko.id_ses_fascicolo_ko)
join DEC_ERR_SACER err
	on (err.id_err_sacer = err_ses_ko.id_err_sacer)
join DEC_CLASSE_ERR_SACER classe_err
	on (classe_err.id_classe_err_sacer = err.id_classe_err_sacer);

-- changeset root:1751897635013-416
COMMENT ON COLUMN MON_V_LIS_FASC_KO_BY_ERR.ID_FASCICOLO_KO IS 'PK.1';

-- changeset root:1751897635013-417
COMMENT ON COLUMN MON_V_LIS_FASC_KO_BY_ERR.ID_ERR_SACER_PRINC IS 'PK.2';

-- changeset root:1751897635013-418
CREATE OR REPLACE FORCE VIEW "ARO_V_VIS_NOTA_UNITA_DOC" ("ID_UNITA_DOC", "ID_STRUT", "CD_REGISTRO_KEY_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "DS_REGISTRO_UNITA_DOC", "ID_TIPO_UNITA_DOC", "NM_STRUT", "ID_ENTE", "NM_ENTE", "ID_AMBIENTE", "NM_AMBIENTE", "NM_TIPO_UNITA_DOC", "ID_VER_INDICE_AIP", "CD_VER_INDICE_AIP", "DT_CREAZIONE", "ID_NOTA_UNITA_DOC", "ID_TIPO_NOTA_UNITA_DOC", "DS_TIPO_NOTA_UNITA_DOC", "NI_ORD", "PG_NOTA_UNITA_DOC", "DT_NOTA_UNITA_DOC", "DS_NOTA_UNITA_DOC", "ID_USER_IAM_NOTA", "NM_USERID_NOTA") AS select
 ud.id_unita_doc, ud.id_strut, ud.cd_registro_key_unita_doc, ud.aa_key_unita_doc, ud.cd_key_unita_doc, reg_ud.ds_registro_unita_doc, ud.id_tipo_unita_doc,
 
 strut.nm_strut, ente.id_ente, ente.nm_ente, amb.id_ambiente, amb.nm_ambiente,
 
 tipo_ud.nm_tipo_unita_doc,
  
 ver_indice_aip.id_ver_indice_aip, ver_indice_aip.cd_ver_indice_aip, 

 ver_indice_aip.dt_creazione,
 
 nota.id_nota_unita_doc, 
 ti_nota.id_tipo_nota_unita_doc,
 ti_nota.ds_tipo_nota_unita_doc || 
 case
	when ti_nota.fl_obblig = '1' 
		then ' (' || 'OBBLIGATORIO' || ')'
		else null
 end ds_tipo_nota_unita_doc,
 ti_nota.ni_ord,
 nota.pg_nota_unita_doc,
 nota.dt_nota_unita_doc, 
 nota.ds_nota_unita_doc, 
 nota.id_user_iam id_user_iam_nota, usr_nota.nm_userid nm_userid_nota

from ARO_NOTA_UNITA_DOC nota

join ARO_UNITA_DOC ud
 on (ud.id_unita_doc = nota.id_unita_doc)
join DEC_REGISTRO_UNITA_DOC reg_ud
 on (reg_ud.id_registro_unita_doc = ud.id_registro_unita_doc)
join DEC_TIPO_UNITA_DOC tipo_ud
 on (tipo_ud.id_tipo_unita_doc = ud.id_tipo_unita_doc)

left join ARO_VER_INDICE_AIP_UD ver_indice_aip
 on (ver_indice_aip.id_ver_indice_aip = nota.id_ver_indice_aip)
left join ARO_INDICE_AIP_UD indice_aip
 on (indice_aip.id_indice_aip = ver_indice_aip.id_indice_aip)

join ORG_STRUT strut
 on (strut.id_strut = ud.id_strut)
join ORG_ENTE ente
 on (ente.id_ente = strut.id_ente)
join ORG_AMBIENTE amb
 on (amb.id_ambiente = ente.id_ambiente)

join IAM_USER usr_nota
 on (usr_nota.id_user_iam = nota.id_user_iam)
join DEC_TIPO_NOTA_UNITA_DOC ti_nota
 on (ti_nota.id_tipo_nota_unita_doc = nota.id_tipo_nota_unita_doc);

-- changeset root:1751897635013-419
COMMENT ON COLUMN ARO_V_VIS_NOTA_UNITA_DOC.ID_NOTA_UNITA_DOC IS 'PK.1';

-- changeset root:1751897635013-420
CREATE OR REPLACE FORCE VIEW "DEC_V_LIS_PARTE_REG" ("DL_COMPOSITO_STRUT", "ID_ENTE", "ID_STRUT", "ID_REGISTRO_UNITA_DOC", "CD_REGISTRO_UNITA_DOC", "DS_REGISTRO_UNITA_DOC", "ID_AA_REGISTRO_UNITA_DOC", "AA_MIN_REGISTRO_UNITA_DOC", "DS_INTERV_VAL", "ID_PARTE_NUMERO_REGISTRO", "NI_PARTE_NUMERO_REGISTRO", "NM_PARTE_NUMERO_REGISTRO", "TI_CHAR_PARTE", "DS_DIMENSIONE_PARTE", "DS_NOTE_VALORE_PARTE") AS select
 amb.nm_ambiente || ' / ' || ente.nm_ente || ' / ' || strut.nm_strut dl_composito_strut,
 ente.id_ente, strut.id_strut,

 reg.id_registro_unita_doc, reg.cd_registro_unita_doc, reg.ds_registro_unita_doc,
 
 aa_reg.id_aa_registro_unita_doc,
 aa_reg.aa_min_registro_unita_doc,
 case
	when aa_reg.aa_max_registro_unita_doc is not null
		then 'Da ' || to_char(aa_reg.aa_min_registro_unita_doc) || ' a ' || to_char(aa_reg.aa_max_registro_unita_doc)
		else 'Da ' || to_char(aa_reg.aa_min_registro_unita_doc) || ' in poi'
 end ds_interv_val,
 
 parte.id_parte_numero_registro,
 parte.ni_parte_numero_registro,
 parte.nm_parte_numero_registro,
 parte.ti_char_parte,
 
 case
	when parte.ni_max_char_parte is null
		then 'Minimo ' || parte.ni_min_char_parte || ' caratteri' ||
			case
				when parte.ti_char_sep is not null
					then ' con separatore "' || parte.ti_char_sep || '"'
					else null
			end
      
	when parte.ni_max_char_parte is not null
		then
			case
				when parte.ni_max_char_parte = parte.ni_max_char_parte
					then parte.ni_max_char_parte || ' caratteri'
					else 'Minimo ' || parte.ni_min_char_parte || ' e massimo ' || parte.ni_max_char_parte || ' caratteri'
			end
 end ds_dimensione_parte,

 case
	when parte.ti_parte = 'ANNO' then 'Il valore della parte coincide con l''anno dell''unità documentaria'
	when parte.ti_parte = 'PROGR' then 'Il valore della parte fornisce il progressivo dell''unità documentaria'
	when parte.ti_parte = 'REGISTRO' then 'Il valore della parte coincide con il registro dell''unità documentaria'
	else
		case
			when parte.dl_valori_parte is not null then 'I valori ammessi per la parte sono: ' || parte.dl_valori_parte
			else null
		end
 end ds_note_valore_parte

from dec_registro_unita_doc reg
join org_strut strut
 on (strut.id_strut = reg.id_strut)
join org_ente ente
 on (ente.id_ente = strut.id_ente)
join org_ambiente amb
 on (amb.id_ambiente = ente.id_ambiente)

join dec_aa_registro_unita_doc aa_reg
 on (aa_reg.id_registro_unita_doc = reg.id_registro_unita_doc)
join dec_parte_numero_registro parte
 on (parte.id_aa_registro_unita_doc = aa_reg.id_aa_registro_unita_doc)
 
where trunc(reg.dt_istituz) <= trunc (sysdate)
and trunc(reg.dt_soppres) >= trunc (sysdate) 


--order by amb.nm_ambiente || ' / ' || ente.nm_ente || ' / ' || strut.nm_strut dl_composito_strut, reg.cd_registro_unita_doc, parte.ni_parte_numero_registro,;

-- changeset root:1751897635013-421
COMMENT ON COLUMN DEC_V_LIS_PARTE_REG.ID_PARTE_NUMERO_REGISTRO IS 'PK.1';

-- changeset root:1751897635013-422
CREATE OR REPLACE FORCE VIEW "DEC_V_RIC_CRITERIO_RAGGR" ("ID_AMBIENTE", "NM_AMBIENTE", "ID_ENTE", "NM_ENTE", "ID_STRUT", "NM_STRUT", "ID_CRITERIO_RAGGR", "NM_CRITERIO_RAGGR", "ID_TIPO_UNITA_DOC", "NM_TIPO_UNITA_DOC", "ID_REGISTRO_UNITA_DOC", "CD_REGISTRO_UNITA_DOC", "ID_REGISTRO_RANGE_UNITA_DOC", "CD_REGISTRO_RANGE_UNITA_DOC", "ID_TIPO_DOC", "NM_TIPO_DOC", "AA_KEY_UNITA_DOC", "AA_KEY_UNITA_DOC_DA", "AA_KEY_UNITA_DOC_A", "NI_MAX_COMP", "DS_SCAD_CHIUS", "DT_ISTITUZ", "DT_SOPPRES", "FL_CRITERIO_RAGGR_STANDARD", "FL_CRITERIO_RAGGR_FISC", "TI_GEST_ELENCO_CRITERIO", "TI_VALID_ELENCO", "TI_MOD_VALID_ELENCO") AS select
 amb.id_ambiente, amb.nm_ambiente,
 ente.id_ente, ente.nm_ente,
 strut.id_strut, strut.nm_strut,
 crit.id_criterio_raggr,
 crit.nm_criterio_raggr, 
 
 case
	when crit.fl_filtro_tipo_unita_doc = '1'
		then filtro_mult_tipo_ud.id_tipo_unita_doc
		else 0
 end id_tipo_unita_doc,

 case
	when crit.fl_filtro_tipo_unita_doc = '1'
		then
			case
				when (select count(*) 
					  from DEC_CRITERIO_FILTRO_MULTIPLO count_filtro_mult_tipo_ud
					  where count_filtro_mult_tipo_ud.id_criterio_raggr = crit.id_criterio_raggr
					  and count_filtro_mult_tipo_ud.ti_filtro_multiplo = 'TIPO_UNI_DOC') = 1
						then tipo_ud.nm_tipo_unita_doc
						else 'Diversi'
			end
		else null
 end nm_tipo_unita_doc,
 
 case
	when crit.fl_filtro_registro_key = '1'
		then filtro_mult_reg.id_registro_unita_doc
		else 0
 end id_registro_unita_doc,
 
 case
	when crit.fl_filtro_registro_key = '1'
		then
			case
				when (select count(*) 
					  from DEC_CRITERIO_FILTRO_MULTIPLO count_filtro_mult_reg
					  where count_filtro_mult_reg.id_criterio_raggr = crit.id_criterio_raggr
					  and count_filtro_mult_reg.ti_filtro_multiplo = 'REGISTRO_UNI_DOC') = 1
						then reg.cd_registro_unita_doc
						else 'Diversi'
			end
		else null
 end cd_registro_unita_doc,
 
 case
	when crit.fl_filtro_range_registro_key = '1'
		then filtro_mult_range_reg.id_registro_unita_doc
		else 0
 end id_registro_range_unita_doc,
 
 case
	when crit.fl_filtro_range_registro_key = '1'
		then
			case
				when (select count(*) 
					  from DEC_CRITERIO_FILTRO_MULTIPLO count_filtro_mult_range_reg
					  where count_filtro_mult_range_reg.id_criterio_raggr = crit.id_criterio_raggr
					  and count_filtro_mult_range_reg.ti_filtro_multiplo = 'RANGE_REGISTRO_UNI_DOC') = 1
						then range_reg.cd_registro_unita_doc
						else 'Diversi'
			end
		else null
 end cd_registro_range_unita_doc,
 
 case
	when crit.fl_filtro_tipo_doc = '1'
		then filtro_mult_tipo_doc.id_tipo_doc
		else 0
 end id_tipo_doc,
 
 case
	when crit.fl_filtro_tipo_doc = '1'
		then
			case
				when (select count(*) 
					  from DEC_CRITERIO_FILTRO_MULTIPLO count_filtro_mult_tipo_doc
					  where count_filtro_mult_tipo_doc.id_criterio_raggr = crit.id_criterio_raggr
					  and count_filtro_mult_tipo_doc.ti_filtro_multiplo = 'TIPO_DOC') = 1
						then tipo_doc.nm_tipo_doc
						else 'Diversi'
			end
		else null
 end nm_tipo_doc,
 
 crit.aa_key_unita_doc,
 crit.aa_key_unita_doc_da,
 crit.aa_key_unita_doc_a,
 crit.ni_max_comp,
 case
	when crit.ti_scad_chius_volume is not null
		then crit.ti_scad_chius_volume
		else to_char(crit.ni_tempo_scad_chius) || ' ' || crit.ti_tempo_scad_chius
 end ds_scad_chius,
 crit.dt_istituz,
 crit.dt_soppres,
 
 crit.fl_criterio_raggr_standard,
 
 crit.fl_criterio_raggr_fisc, crit.ti_gest_elenco_criterio,
 
 crit.ti_valid_elenco, crit.ti_mod_valid_elenco
 
from DEC_CRITERIO_RAGGR crit
join ORG_STRUT strut
 on (strut.id_strut = crit.id_strut and strut.fl_cessato = 0)
join ORG_ENTE ente
 on (ente.id_ente = strut.id_ente and ente.fl_cessato = 0)
join ORG_AMBIENTE amb
 on (amb.id_ambiente = ente.id_ambiente)
 
left join DEC_CRITERIO_FILTRO_MULTIPLO filtro_mult_tipo_ud
 on (filtro_mult_tipo_ud.id_criterio_raggr = crit.id_criterio_raggr
 and filtro_mult_tipo_ud.ti_filtro_multiplo = 'TIPO_UNI_DOC')
left join DEC_TIPO_UNITA_DOC tipo_ud
 on (tipo_ud.id_tipo_unita_doc = filtro_mult_tipo_ud.id_tipo_unita_doc)

left join DEC_CRITERIO_FILTRO_MULTIPLO filtro_mult_reg
 on (filtro_mult_reg.id_criterio_raggr = crit.id_criterio_raggr
 and filtro_mult_reg.ti_filtro_multiplo = 'REGISTRO_UNI_DOC')
left join DEC_REGISTRO_UNITA_DOC reg
 on (reg.id_registro_unita_doc = filtro_mult_reg.id_registro_unita_doc)
 
left join DEC_CRITERIO_FILTRO_MULTIPLO filtro_mult_range_reg
 on (filtro_mult_range_reg.id_criterio_raggr = crit.id_criterio_raggr
 and filtro_mult_range_reg.ti_filtro_multiplo = 'RANGE_REGISTRO_UNI_DOC')
left join DEC_REGISTRO_UNITA_DOC range_reg
 on (range_reg.id_registro_unita_doc = filtro_mult_range_reg.id_registro_range_unita_doc)

left join DEC_CRITERIO_FILTRO_MULTIPLO filtro_mult_tipo_doc
 on (filtro_mult_tipo_doc.id_criterio_raggr = crit.id_criterio_raggr
 and filtro_mult_tipo_doc.ti_filtro_multiplo = 'TIPO_DOC')
left join DEC_TIPO_DOC tipo_doc
 on (tipo_doc.id_tipo_doc = filtro_mult_tipo_doc.id_tipo_doc);

-- changeset root:1751897635013-423
COMMENT ON COLUMN DEC_V_RIC_CRITERIO_RAGGR.ID_CRITERIO_RAGGR IS 'PK.1';

-- changeset root:1751897635013-424
COMMENT ON COLUMN DEC_V_RIC_CRITERIO_RAGGR.ID_TIPO_UNITA_DOC IS 'PK.2';

-- changeset root:1751897635013-425
COMMENT ON COLUMN DEC_V_RIC_CRITERIO_RAGGR.ID_REGISTRO_UNITA_DOC IS 'PK.3';

-- changeset root:1751897635013-426
COMMENT ON COLUMN DEC_V_RIC_CRITERIO_RAGGR.ID_REGISTRO_RANGE_UNITA_DOC IS 'PK.4';

-- changeset root:1751897635013-427
COMMENT ON COLUMN DEC_V_RIC_CRITERIO_RAGGR.ID_TIPO_DOC IS 'PK.5';

-- changeset root:1751897635013-428
CREATE OR REPLACE FORCE VIEW "ELV_V_LIS_IX_AIP_FASC_BY_ELE" ("ID_ELENCO_VERS_FASC", "ID_VER_AIP_FASCICOLO", "CD_VER_AIP", "NM_AMBIENTE", "NM_ENTE", "NM_STRUT", "AA_FASCICOLO", "CD_KEY_FASCICOLO", "DS_HASH_FILE", "CD_KEY_ORD") AS select
 ver_aip.id_elenco_vers_fasc,
 ver_aip.id_ver_aip_fascicolo,
 ver_aip.cd_ver_aip,
 
 amb.nm_ambiente,
 ente.nm_ente,
 strut.nm_strut,
 fasc.aa_fascicolo,
 fasc.cd_key_fascicolo,
 meta.ds_hash_file,
 
 fasc.cd_key_ord
 
from FAS_VER_AIP_FASCICOLO ver_aip
join FAS_FASCICOLO fasc
 on (fasc.id_fascicolo = ver_aip.id_fascicolo)
join FAS_META_VER_AIP_FASCICOLO meta
 on (meta.id_ver_aip_fascicolo = ver_aip.id_ver_aip_fascicolo
 and meta.ti_meta = 'INDICE')
join ORG_STRUT strut
 on (strut.id_strut = fasc.id_strut and strut.fl_cessato = 0)
join ORG_ENTE ente
 on (ente.id_ente = strut.id_ente and ente.fl_cessato = 0)
join ORG_AMBIENTE amb
 on (amb.id_ambiente = ente.id_ambiente);

-- changeset root:1751897635013-429
COMMENT ON COLUMN ELV_V_LIS_IX_AIP_FASC_BY_ELE.ID_ELENCO_VERS_FASC IS 'PK.1';

-- changeset root:1751897635013-430
COMMENT ON COLUMN ELV_V_LIS_IX_AIP_FASC_BY_ELE.ID_VER_AIP_FASCICOLO IS 'PK.2';

-- changeset root:1751897635013-431
CREATE OR REPLACE FORCE VIEW "MON_V_CHK_DOC_AMB" ("ID_AMBIENTE", "ID_USER_IAM", "FL_DOC_CORR", "FL_DOC_30GG", "FL_DOC_ATTESA_MEM_CORR", "FL_DOC_ATTESA_MEM_30GG", "FL_DOC_ATTESA_SCHED_CORR", "FL_DOC_ATTESA_SCHED_30GG", "FL_DOC_NOSEL_SCHED_CORR", "FL_DOC_NOSEL_SCHED_30GG") AS select
 amb.id_ambiente,
 utente.id_user_iam,
 
--
--					doc TOTALE
--

case
	when exists (select * 
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ARO_DOC doc
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and doc.id_strut = abil.id_organiz_applic
				and doc.dt_creazione between trunc(sysdate) and sysdate + 1/24
				and doc.dt_annul = to_date('31/12/2444', 'dd/mm/yyyy')
				and doc.ti_creazione = 'AGGIUNTA_DOCUMENTO'
				)
			then '1'
			else '0'
end fl_doc_corr,
case
	when (select nvl(sum(ni_doc_agg), 0)
		  from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, MON_CONTA_UD_DOC_COMP conta_doc
		  where ente.id_ambiente = amb.id_ambiente
		  and strut.id_ente = ente.id_ente
		  and abil.id_organiz_applic = strut.id_strut
		  and abil.id_user_iam = utente.id_user_iam
		  and conta_doc.id_strut = abil.id_organiz_applic
		  and conta_doc.dt_rif_conta between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
		  ) -
		 (select nvl(count(*), 0)
		  from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ARO_ITEM_RICH_ANNUL_VERS item_annul,  ARO_DOC doc
		  where ente.id_ambiente = amb.id_ambiente
		  and strut.id_ente = ente.id_ente
		  and abil.id_organiz_applic = strut.id_strut
		  and abil.id_user_iam = utente.id_user_iam
		  
  		  and item_annul.id_strut = abil.id_organiz_applic
		  and item_annul.ti_item_rich_annul_vers = 'UNI_DOC'
		  and item_annul.ti_stato_item = 'ANNULLATO'
		  and doc.id_unita_doc = item_annul.id_unita_doc
		  and doc.ti_creazione = 'AGGIUNTA_DOCUMENTO'
		  and doc.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
		 ) != 0
			then '1'
			else '0'
end fl_doc_30gg,



--
--						doc IN_ATTESA_MEMORIZZAZIONE
--
case
	when exists (select * 
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ELV_DOC_AGG_DA_ELAB_ELENCO doc_da_elab
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and doc_da_elab.id_strut = abil.id_organiz_applic
				and doc_da_elab.ti_stato_doc_da_elab = 'IN_ATTESA_MEMORIZZAZIONE'
				and doc_da_elab.dt_creazione between trunc(sysdate) and sysdate + 1/24
				)
			then '1'
			else '0'
end fl_doc_attesa_mem_corr,
case
	when exists (select * 
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ELV_DOC_AGG_DA_ELAB_ELENCO doc_da_elab
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and doc_da_elab.id_strut = abil.id_organiz_applic
				and doc_da_elab.ti_stato_doc_da_elab = 'IN_ATTESA_MEMORIZZAZIONE'
				and doc_da_elab.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
				)
			then '1'
			else '0'
end fl_doc_attesa_mem_30gg,


--
--						doc IN_ATTESA_SCHED
--
case
	when exists (select * 
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ELV_DOC_AGG_DA_ELAB_ELENCO doc_da_elab
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and doc_da_elab.id_strut = abil.id_organiz_applic
				and doc_da_elab.ti_stato_doc_da_elab = 'IN_ATTESA_SCHED'
				and doc_da_elab.dt_creazione between trunc(sysdate) and sysdate + 1/24
				)
			then '1'
			else '0'
end fl_doc_attesa_sched_corr,
case
	when exists (select * 
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ELV_DOC_AGG_DA_ELAB_ELENCO doc_da_elab
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and doc_da_elab.id_strut = abil.id_organiz_applic
				and doc_da_elab.ti_stato_doc_da_elab = 'IN_ATTESA_SCHED'
				and doc_da_elab.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
				)
			then '1'
			else '0'
end fl_doc_attesa_sched_30gg,


--
--						doc NON_SELEZ_SCHED
--
case
	when exists (select * 
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ELV_DOC_AGG_DA_ELAB_ELENCO doc_da_elab
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and doc_da_elab.id_strut = abil.id_organiz_applic
				and doc_da_elab.ti_stato_doc_da_elab = 'NON_SELEZ_SCHED'
				and doc_da_elab.dt_creazione between trunc(sysdate) and sysdate + 1/24
				)
			then '1'
			else '0'
end fl_doc_nosel_sched_corr,
case
	when exists (select * 
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ELV_DOC_AGG_DA_ELAB_ELENCO doc_da_elab
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and doc_da_elab.id_strut = abil.id_organiz_applic
				and doc_da_elab.ti_stato_doc_da_elab = 'NON_SELEZ_SCHED'
				and doc_da_elab.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
				)
			then '1'
			else '0'
end fl_doc_nosel_sched_30gg


from ORG_AMBIENTE amb
join IAM_USER utente
 on (utente.id_user_iam > 0);

-- changeset root:1751897635013-432
COMMENT ON COLUMN MON_V_CHK_DOC_AMB.ID_AMBIENTE IS 'PK.1 relativa a tabella ORG_AMBIENTE';

-- changeset root:1751897635013-433
COMMENT ON COLUMN MON_V_CHK_DOC_AMB.ID_USER_IAM IS 'PK.2 relativa a tabella IAM_USER';

-- changeset root:1751897635013-434
CREATE OR REPLACE FORCE VIEW "MON_V_LIS_UD_VERS" ("ID_USER_IAM", "ID_AMBIENTE", "NM_AMBIENTE", "ID_ENTE", "NM_ENTE", "ID_STRUT", "NM_STRUT", "ID_UNITA_DOC", "ID_STRUT_UNITA_DOC", "CD_REGISTRO_KEY_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "ID_TIPO_UNITA_DOC", "NM_TIPO_UNITA_DOC", "ID_SUB_STRUT", "ID_DOC", "TI_DOC", "PG_DOC", "DT_CREAZIONE", "DS_ORD_DOC", "ID_TIPO_DOC", "NM_TIPO_DOC", "TI_CREAZIONE", "TI_STATO_DOC_ELENCO_VERS") AS select 
  
-- info su utente
 abil_org.id_user_iam,
-- info di organizzazione
 amb.id_ambiente, amb.nm_ambiente, 
 ente.id_ente, ente.nm_ente, 
 strut.id_strut, strut.nm_strut,
 
-- info unita doc 
 ud.id_unita_doc, 
 ud.id_strut id_strut_unita_doc, ud.cd_registro_key_unita_doc, ud.aa_key_unita_doc, ud.cd_key_unita_doc,
 ud.id_tipo_unita_doc, tipo_ud.nm_tipo_unita_doc, 
 ud.id_sub_strut,
  
-- info documento 
 doc.id_doc,
 doc.ti_doc, doc.pg_doc,
 ud.dt_creazione,
 ud.ds_key_ord || '-' ||
 case
   when doc.ti_doc = 'PRINCIPALE' then 'A'
   when doc.ti_doc = 'ALLEGATO' then 'B'
   when doc.ti_doc = 'ANNESSO' then 'C'
   else 'D'
 end || '-' ||
 lpad(to_char(doc.pg_doc), 4, '0') ds_ord_doc,
 
 doc.id_tipo_doc,
 ti_doc.nm_tipo_doc,
 doc.ti_creazione,
 
 ud.ti_stato_ud_elenco_vers

from IAM_ABIL_ORGANIZ abil_org
join ORG_STRUT strut
 on (strut.id_strut = abil_org.id_organiz_applic and strut.fl_cessato = 0)
join ORG_ENTE ente 
 on (ente.id_ente = strut.id_ente and ente.fl_cessato = 0)
join ORG_AMBIENTE amb
 on (amb.id_ambiente = ente.id_ambiente)

join ARO_UNITA_DOC ud
 on (ud.id_strut = strut.id_strut
 and ud.dt_annul = to_date('31/12/2444', 'dd/mm/yyyy'))
join DEC_TIPO_UNITA_DOC tipo_ud
 on (tipo_ud.id_tipo_unita_doc = ud.id_tipo_unita_doc)

join ARO_DOC doc
 on (doc.id_unita_doc = ud.id_unita_doc
 and doc.ti_doc = 'PRINCIPALE')
join DEC_TIPO_DOC ti_doc
 on (ti_doc.id_tipo_doc = doc.id_tipo_doc);

-- changeset root:1751897635013-435
COMMENT ON COLUMN MON_V_LIS_UD_VERS.ID_UNITA_DOC IS 'PK.1';

-- changeset root:1751897635013-436
CREATE OR REPLACE FORCE VIEW "MON_V_VIS_VERS_ERR_IAM" ("ID_STRUT", "NM_AMBIENTE", "NM_ENTE", "NM_STRUT", "NM_USERID_WS", "NM_USERID", "NM_COGNOME_USER", "NM_NOME_USER", "ID_SESSIONE_VERS", "DT_APERTURA", "DT_CHIUSURA", "TI_SESSIONE_VERS", "CD_VERSIONE_WS", "CD_REGISTRO_KEY_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "CD_KEY_DOC_VERS", "FL_SESSIONE_ERR_VERIF", "FL_SESSIONE_ERR_NON_RISOLUB", "CD_ERR", "DS_ERR", "FL_RISOLTO", "BL_XML_RICH", "BL_XML_INDEX", "BL_XML_RISP") AS SELECT                                           -- info di organizzazione
           ses.id_strut,
           amb.nm_ambiente,
           ente.nm_ente,
           strut.nm_strut,
           -- info user
           ses.nm_userid_ws,
           ses.nm_userid,
           usr.nm_cognome_user,
           usr.nm_nome_user,
           -- info sessione
           ses.id_sessione_vers_ko,
           ses.dt_apertura,
           ses.dt_chiusura,
           ses.ti_sessione_vers,
           ses.cd_versione_ws,
           ses.cd_registro_key_unita_doc,
           ses.aa_key_unita_doc,
           ses.cd_key_unita_doc,
           ses.cd_key_doc_vers,
           ses.fl_sessione_err_verif,
           ses.fl_sessione_err_non_risolub,
           -- info errore
           ses.cd_err_princ,
           ses.ds_err_princ,
           -- info errore risolto
           CASE
               WHEN ses.ti_sessione_vers = 'VERSAMENTO' THEN
                   CASE
                       WHEN EXISTS
                                (SELECT 1
                                   FROM ARO_UNITA_DOC ud
                                  WHERE ud.id_strut = ses.id_strut
                                    AND ud.cd_registro_key_unita_doc =
                                        ses.cd_registro_key_unita_doc
                                    AND ud.aa_key_unita_doc =
                                        ses.aa_key_unita_doc
                                    AND ud.cd_key_unita_doc =
                                        ses.cd_key_unita_doc) THEN
                           '1'
                       ELSE
                           '0'
                   END
               WHEN ses.ti_sessione_vers = 'AGGIUNGI_DOCUMENTO' THEN
                   CASE
                       WHEN ((EXISTS
                                  (SELECT 1
                                     FROM VRS_DATI_SESSIONE_VERS_ko  dato_ses,
                                          VRS_ERR_SESSIONE_VERS_ko   err
                                    WHERE dato_ses.id_sessione_vers_ko =
                                          ses.id_sessione_vers_ko
                                      AND err.id_dati_sessione_vers_ko =
                                          dato_ses.id_dati_sessione_vers_ko
                                      AND err.cd_err IN
                                              ('UD-005', 'UD-005-001'))
                          AND EXISTS
                                  (SELECT 1
                                     FROM ARO_UNITA_DOC ud
                                    WHERE ud.id_strut = ses.id_strut
                                      AND ud.cd_registro_key_unita_doc =
                                          ses.cd_registro_key_unita_doc
                                      AND ud.aa_key_unita_doc =
                                          ses.aa_key_unita_doc
                                      AND ud.cd_key_unita_doc =
                                          ses.cd_key_unita_doc))
                          OR EXISTS
                                 (SELECT 1
                                    FROM ARO_UNITA_DOC ud, ARO_DOC doc
                                   WHERE ud.id_strut = ses.id_strut
                                     AND ud.cd_registro_key_unita_doc =
                                         ses.cd_registro_key_unita_doc
                                     AND ud.aa_key_unita_doc =
                                         ses.aa_key_unita_doc
                                     AND ud.cd_key_unita_doc =
                                         ses.cd_key_unita_doc
                                     AND doc.id_unita_doc = ud.id_unita_doc
                                     AND doc.cd_key_doc_vers =
                                         ses.cd_key_doc_vers)) THEN
                           '1'
                       ELSE
                           '0'
                   END
               ELSE
                   '0'
           END                  fl_risolto,
           -- info xml
           xml_rich.bl_xml      bl_xml_rich,
           xml_indice.bl_xml    bl_xml_index,
           xml_risp.bl_xml      bl_xml_risp
      FROM VRS_SESSIONE_VERS_ko  ses
           JOIN ORG_STRUT strut
               ON (strut.id_strut = ses.id_strut AND strut.fl_cessato = 0)
           JOIN ORG_ENTE ente
               ON (ente.id_ente = strut.id_ente AND ente.fl_cessato = 0)
           JOIN ORG_AMBIENTE amb ON (amb.id_ambiente = ente.id_ambiente)
           LEFT JOIN IAM_USER usr ON (usr.id_user_iam = ses.id_user)
           JOIN VRS_DATI_SESSIONE_VERS_ko dati_ses
               ON (dati_ses.id_sessione_vers_ko = ses.id_sessione_vers_ko)
           JOIN VRS_XML_DATI_SESSIONE_VERS_ko xml_rich
               ON (xml_rich.id_dati_sessione_vers_ko =
                   dati_ses.id_dati_sessione_vers_ko
               AND xml_rich.ti_xml_dati = 'RICHIESTA')
           LEFT JOIN VRS_XML_DATI_SESSIONE_VERS_ko xml_indice
               ON (xml_indice.id_dati_sessione_vers_ko =
                   dati_ses.id_dati_sessione_vers_ko
               AND xml_indice.ti_xml_dati = 'INDICE_FILE')
           JOIN VRS_XML_DATI_SESSIONE_VERS_ko xml_risp
               ON (xml_risp.id_dati_sessione_vers_ko =
                   dati_ses.id_dati_sessione_vers_ko
               AND xml_risp.ti_xml_dati = 'RISPOSTA');

-- changeset root:1751897635013-437
COMMENT ON COLUMN MON_V_VIS_VERS_ERR_IAM.ID_SESSIONE_VERS IS 'PK.1 relativa a tabella VRS_SESSIONE_VERS';

-- changeset root:1751897635013-438
CREATE OR REPLACE FORCE VIEW "MON_V_LIS_VERS_ERR_IAM" ("ID_USER_IAM", "ID_AMBIENTE", "NM_AMBIENTE", "ID_ENTE", "NM_ENTE", "ID_STRUT", "NM_STRUT", "ID_SESSIONE_VERS", "DT_APERTURA", "DT_CHIUSURA", "TI_SESSIONE_VERS", "CD_REGISTRO_KEY_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "CD_KEY_DOC_VERS", "FL_SESSIONE_ERR_VERIF", "FL_SESSIONE_ERR_NON_RISOLUB", "CD_ERR", "DS_ERR", "FL_RISOLTO") AS SELECT -- info su utente
           abil_org.id_user_iam,
           -- info di organizzazione
           amb.id_ambiente,
           amb.nm_ambiente,
           ente.id_ente,
           ente.nm_ente,
           strut.id_strut,
           strut.nm_strut,
           -- info sessione
           ses.id_sessione_vers_ko,
           ses.dt_apertura,
           ses.dt_chiusura,
           ses.ti_sessione_vers,
           ses.cd_registro_key_unita_doc,
           ses.aa_key_unita_doc,
           ses.cd_key_unita_doc,
           ses.cd_key_doc_vers,
           ses.fl_sessione_err_verif,
           ses.fl_sessione_err_non_risolub,
           -- info errore
           ses.cd_err_princ,
           ses.ds_err_princ,
           -- info errore risolto
           CASE
               WHEN ses.ti_sessione_vers = 'VERSAMENTO' THEN
                   CASE
                       WHEN EXISTS
                                (SELECT *
                                   FROM ARO_UNITA_DOC ud
                                  WHERE ud.id_strut = ses.id_strut
                                    AND ud.cd_registro_key_unita_doc =
                                        ses.cd_registro_key_unita_doc
                                    AND ud.aa_key_unita_doc =
                                        ses.aa_key_unita_doc
                                    AND ud.cd_key_unita_doc =
                                        ses.cd_key_unita_doc
                                    AND ud.dt_annul >= ses.dt_apertura) THEN
                           '1'
                       ELSE
                           '0'
                   END
               WHEN ses.ti_sessione_vers = 'AGGIUNGI_DOCUMENTO' THEN
                   CASE
                       WHEN EXISTS
                                (SELECT 1
                                   FROM VRS_DATI_SESSIONE_VERS_KO  dato_ses
                                        JOIN VRS_ERR_SESSIONE_VERS_KO err
                                            ON (err.id_dati_sessione_vers_ko =
                                                dato_ses.id_dati_sessione_vers_ko
                                            AND err.cd_err IN
                                                    ('UD-005', 'UD-005-001'))
                                  WHERE dato_ses.id_sessione_vers_ko =
                                        ses.id_sessione_vers_ko) THEN
                           CASE
                               WHEN EXISTS
                                        (SELECT 1
                                           FROM ARO_UNITA_DOC ud
                                          WHERE ud.id_strut = ses.id_strut
                                            AND ud.cd_registro_key_unita_doc =
                                                ses.cd_registro_key_unita_doc
                                            AND ud.aa_key_unita_doc =
                                                ses.aa_key_unita_doc
                                            AND ud.cd_key_unita_doc =
                                                ses.cd_key_unita_doc
                                            AND ud.dt_annul >=
                                                ses.dt_apertura) THEN
                                   '1'
                               ELSE
                                   '0'
                           END
                       ELSE
                           CASE
                               WHEN EXISTS
                                        (SELECT 1
                                           FROM ARO_UNITA_DOC ud, ARO_DOC doc
                                          WHERE ud.id_strut = ses.id_strut
                                            AND ud.cd_registro_key_unita_doc =
                                                ses.cd_registro_key_unita_doc
                                            AND ud.aa_key_unita_doc =
                                                ses.aa_key_unita_doc
                                            AND ud.cd_key_unita_doc =
                                                ses.cd_key_unita_doc
                                            AND doc.id_unita_doc =
                                                ud.id_unita_doc
                                            AND doc.cd_key_doc_vers =
                                                ses.cd_key_doc_vers
                                            AND doc.dt_annul >=
                                                ses.dt_apertura) THEN
                                   '1'
                               ELSE
                                   '0'
                           END
                   END
               ELSE
                   '0'
           END    fl_risolto
      FROM IAM_ABIL_ORGANIZ  abil_org
           JOIN ORG_STRUT strut
               ON (strut.id_strut = abil_org.id_organiz_applic
               AND strut.fl_cessato = 0)
           JOIN ORG_ENTE ente
               ON (ente.id_ente = strut.id_ente AND ente.fl_cessato = 0)
           JOIN ORG_AMBIENTE amb ON (amb.id_ambiente = ente.id_ambiente)
           JOIN VRS_SESSIONE_VERS_ko ses ON (ses.id_strut = strut.id_strut);

-- changeset root:1751897635013-439
COMMENT ON COLUMN MON_V_LIS_VERS_ERR_IAM.ID_SESSIONE_VERS IS 'PK.1 relativa a tabella VRS_SESSIONE_VERS';

-- changeset root:1751897635013-440
CREATE OR REPLACE FORCE VIEW "ARO_V_VIS_COMP" ("NM_AMBIENTE", "NM_ENTE", "NM_STRUT", "ID_UNITA_DOC", "ID_STRUT_UNITA_DOC", "CD_REGISTRO_KEY_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC_NORMALIZ", "ID_TIPO_UNITA_DOC", "NM_TIPO_UNITA_DOC", "DT_ANNUL_UNITA_DOC", "TI_ANNUL_UNITA_DOC", "DL_OGGETTO_UNITA_DOC", "DT_REG_UNITA_DOC", "DT_CREAZIONE_UD", "NT_ANNUL_UNITA_DOC", "ID_DOC", "CD_KEY_DOC_VERS", "TI_DOC", "PG_DOC", "NM_TIPO_DOC", "DL_DOC", "DS_AUTORE_DOC", "DT_ANNUL_DOC", "TI_ANNUL_DOC", "DT_CREAZIONE_DOC", "TI_STATO_DOC", "NM_TIPO_STRUT_DOC", "NT_ANNUL_DOC", "NI_ORD_DOC", "ID_COMP_DOC", "NI_ORD_COMP_DOC", "NM_TIPO_COMP_DOC", "TI_SUPPORTO_COMP", "DS_NOME_COMP_VERS", "DS_HASH_FILE_VERS", "DL_URN_COMP_VERS", "DS_ID_COMP_VERS", "NM_FORMATO_VERS", "NM_TIPO_RAPPR_COMP", "TM_RIF_TEMP_VERS", "DS_RIF_TEMP_VERS", "FL_RIF_TEMP_DATA_FIRMA_VERS", "NI_ORD_COMP_PADRE", "FL_NO_CALC_FMT_VERIF_FIRME", "FL_NO_CALC_HASH_FILE", "DS_URN_COMP_CALC", "NM_FORMATO_CALC", "NI_SIZE_FILE_CALC", "DS_HASH_FILE_CALC", "DS_ALGO_HASH_FILE_CALC", "CD_ENCODING_HASH_FILE_CALC", "DS_HASH_FILE_256", "DS_ALGO_HASH_FILE_256", "CD_ENCODING_HASH_FILE_256", "TI_ESITO_CONTR_FORMATO_FILE", "DS_MSG_ESITO_CONTR_FORMATO", "DS_FORMATO_RAPPR_CALC", "DS_FORMATO_RAPPR_ESTESO_CALC", "DS_FORMATO_RAPPR_FILE_DOC", "FL_COMP_FIRMATO", "TI_ESITO_VERIF_FIRME", "DS_MSG_ESITO_VERIF_FIRME", "NM_MIMETYPE_FILE", "DS_URN_ORIGINALE", "DS_URN_NORMALIZZATO", "ID_VOLUME_CONSERV", "NM_VOLUME_CONSERV", "TI_STATO_VOLUME_CONSERV", "DT_CHIUS_VOLUME", "TI_ESITO_VERIF_FIRME_CHIUS", "DS_ESITO_VERIF_FIRME_CHIUS", "ID_ELENCO_VERS", "NM_ELENCO_VERS", "TI_STATO_ELENCO_VERS", "DT_CHIUS_ELENCO_VERS", "TI_ESITO_VERIF_FIRME_DT_VERS", "DS_ESITO_VERIF_FIRME_DT_VERS", "CD_REGISTRO_KEY_UNITA_DOC_RIF", "AA_KEY_UNITA_DOC_RIF", "CD_KEY_UNITA_DOC_RIF", "TIPO_ARCHIVIAZIONE", "CD_SUB_PARTITION", "ID_FILE_ORACLE", "NM_TENANT", "NM_BUCKET", "CD_KEY_FILE", "DS_NOME_FILE_ARK", "TI_STATO_DT_VERS", "DS_SERVIZIO_VERIFICA_COMP_DOC") AS SELECT amb.nm_ambiente,
           ente.nm_ente,
           strut.nm_strut,
           -- info unit¿¿ documentaria
           ud.id_unita_doc,
           ud.id_strut,
           ud.cd_registro_key_unita_doc,
           ud.aa_key_unita_doc,
           ud.cd_key_unita_doc,
           ud.cd_key_unita_doc_normaliz,
           tipo_ud.id_tipo_unita_doc,
           tipo_ud.nm_tipo_unita_doc,
           ud.dt_annul
               dt_annul_unita_doc,
           ud.ti_annul
               ti_annul_unita_doc,
           ud.dl_oggetto_unita_doc,
           ud.dt_reg_unita_doc,
           ud.dt_creazione
               dt_creazione_ud,
           ud.nt_annul
               nt_annul_unita_doc,
           -- info documento
           doc.id_doc,
           doc.cd_key_doc_vers,
           doc.ti_doc,
           doc.pg_doc,
           tipo_doc.nm_tipo_doc,
           doc.dl_doc,
           doc.ds_autore_doc,
           doc.dt_annul
               dt_annul_doc,
           doc.ti_annul
               ti_annul_doc,
           doc.dt_creazione
               dt_creazione_doc,
           doc.ti_stato_doc,
           tipo_strut_doc.nm_tipo_strut_doc,
           doc.nt_annul
               nt_annul_doc,
           doc.ni_ord_doc,
           -- info componente versate
           comp_doc.id_comp_doc,
           comp_doc.ni_ord_comp_doc,
           tipo_comp.nm_tipo_comp_doc,
           comp_doc.ti_supporto_comp,
           comp_doc.ds_nome_comp_vers,
           comp_doc.ds_hash_file_vers,
           comp_doc.dl_urn_comp_vers,
           comp_doc.ds_id_comp_vers,
           fmt_file_vers.nm_formato_file_doc
               nm_formato_vers,
           tipo_rappr.nm_tipo_rappr_comp,
           comp_doc.tm_rif_temp_vers,
           comp_doc.ds_rif_temp_vers,
           comp_doc.fl_rif_temp_data_firma_vers,
           comp_padre.ni_ord_comp_doc
               ni_ord_comp_padre,
           -- info componente calcolate
           comp_doc.fl_no_calc_fmt_verif_firme,
           comp_doc.fl_no_calc_hash_file,
           comp_doc.ds_urn_comp_calc,
           fmt_file_calc.nm_formato_file_standard
               nm_formato_calc,
           comp_doc.ni_size_file_calc,
           comp_doc.ds_hash_file_calc,
           comp_doc.ds_algo_hash_file_calc,
           comp_doc.cd_encoding_hash_file_calc,
           comp_hash.ds_hash_file,
           comp_hash.ds_algo_hash_file,
           comp_hash.cd_encoding_hash_file,
           comp_doc.ti_esito_contr_formato_file,
           comp_doc.ds_msg_esito_contr_formato,
           comp_doc.ds_formato_rappr_calc,
           comp_doc.ds_formato_rappr_esteso_calc,
           CASE
               WHEN comp_doc.ds_formato_rappr_calc =
                    fmt_file_vers.nm_formato_file_doc THEN
                   fmt_file_vers.ds_formato_file_doc
               ELSE
                   NULL
           END
               ds_formato_rappr_file_doc,
           comp_doc.fl_comp_firmato,
           comp_doc.ti_esito_verif_firme,
           comp_doc.ds_msg_esito_verif_firme,
           fmt_file_calc.nm_mimetype_file,
           (SELECT ds_urn
             FROM ARO_COMP_URN_CALC
            WHERE id_comp_doc = comp_doc.id_comp_doc AND ti_urn = 'ORIGINALE')
               ds_urn_originale,
           (SELECT ds_urn
             FROM ARO_COMP_URN_CALC
            WHERE id_comp_doc = comp_doc.id_comp_doc
              AND ti_urn = 'NORMALIZZATO')
               ds_urn_normalizzato,
           -- info volume valido
           CASE
               WHEN doc.ti_stato_doc IS NOT NULL THEN
                   (SELECT app_ud.id_volume_conserv
                     FROM VOL_APPART_DOC_VOLUME        app_doc,
                          VOL_APPART_UNITA_DOC_VOLUME  app_ud
                    WHERE app_doc.id_doc = doc.id_doc
                      AND app_doc.fl_valida = '1'
                      AND app_ud.id_appart_unita_doc_volume =
                          app_doc.id_appart_unita_doc_volume)
           END
               id_volume_conserv,
           CASE
               WHEN doc.ti_stato_doc IS NOT NULL THEN
                   (SELECT vol.nm_volume_conserv
                     FROM VOL_APPART_DOC_VOLUME        app_doc,
                          VOL_APPART_UNITA_DOC_VOLUME  app_ud,
                          VOL_VOLUME_CONSERV           vol
                    WHERE app_doc.id_doc = doc.id_doc
                      AND app_doc.fl_valida = '1'
                      AND app_ud.id_appart_unita_doc_volume =
                          app_doc.id_appart_unita_doc_volume
                      AND vol.id_volume_conserv = app_ud.id_volume_conserv)
           END
               nm_volume_conserv,
           CASE
               WHEN doc.ti_stato_doc IS NOT NULL THEN
                   (SELECT vol.ti_stato_volume_conserv
                     FROM VOL_APPART_DOC_VOLUME        app_doc,
                          VOL_APPART_UNITA_DOC_VOLUME  app_ud,
                          VOL_VOLUME_CONSERV           vol
                    WHERE app_doc.id_doc = doc.id_doc
                      AND app_doc.fl_valida = '1'
                      AND app_ud.id_appart_unita_doc_volume =
                          app_doc.id_appart_unita_doc_volume
                      AND vol.id_volume_conserv = app_ud.id_volume_conserv)
           END
               ti_stato_volume_conserv,
           CASE
               WHEN doc.ti_stato_doc IS NOT NULL THEN
                   (SELECT vol.dt_chius
                     FROM VOL_APPART_DOC_VOLUME        app_doc,
                          VOL_APPART_UNITA_DOC_VOLUME  app_ud,
                          VOL_VOLUME_CONSERV           vol
                    WHERE app_doc.id_doc = doc.id_doc
                      AND app_doc.fl_valida = '1'
                      AND app_ud.id_appart_unita_doc_volume =
                          app_doc.id_appart_unita_doc_volume
                      AND vol.id_volume_conserv = app_ud.id_volume_conserv)
           END
               dt_chius_volume,
           -- info verifica firme a chiusura volume valido
           CASE
               WHEN doc.ti_stato_doc IS NOT NULL THEN
                   (SELECT app_comp.ti_esito_verif_firme_chius
                     FROM VOL_APPART_DOC_VOLUME   app_doc,
                          VOL_APPART_COMP_VOLUME  app_comp
                    WHERE app_doc.id_doc = doc.id_doc
                      AND app_doc.fl_valida = '1'
                      AND app_comp.id_appart_doc_volume =
                          app_doc.id_appart_doc_volume
                      AND app_comp.id_comp_doc = comp_doc.id_comp_doc)
           END
               ti_esito_verif_firme_chius,
           CASE
               WHEN doc.ti_stato_doc IS NOT NULL THEN
                   (SELECT app_comp.ds_esito_verif_firme_chius
                     FROM VOL_APPART_DOC_VOLUME   app_doc,
                          VOL_APPART_COMP_VOLUME  app_comp
                    WHERE app_doc.id_doc = doc.id_doc
                      AND app_doc.fl_valida = '1'
                      AND app_comp.id_appart_doc_volume =
                          app_doc.id_appart_doc_volume
                      AND app_comp.id_comp_doc = comp_doc.id_comp_doc)
           END
               ds_esito_verif_firme_chius,
           -- info elenco versamento
           CASE
               WHEN ud.id_elenco_vers IS NOT NULL THEN ud.id_elenco_vers
               WHEN doc.id_elenco_vers IS NOT NULL THEN doc.id_elenco_vers
               ELSE NULL
           END
               id_elenco_vers,
           CASE
               WHEN ud.id_elenco_vers IS NOT NULL THEN
                   (SELECT nm_elenco
                      FROM ELV_ELENCO_VERS
                     WHERE id_elenco_vers = ud.id_elenco_vers)
               WHEN doc.id_elenco_vers IS NOT NULL THEN
                   (SELECT nm_elenco
                      FROM ELV_ELENCO_VERS
                     WHERE id_elenco_vers = doc.id_elenco_vers)
               ELSE
                   NULL
           END
               nm_elenco_vers,
           CASE
               WHEN ud.id_elenco_vers IS NOT NULL THEN
                   (SELECT ti_stato_elenco
                      FROM ELV_ELENCO_VERS
                     WHERE id_elenco_vers = ud.id_elenco_vers)
               WHEN doc.id_elenco_vers IS NOT NULL THEN
                   (SELECT ti_stato_elenco
                      FROM ELV_ELENCO_VERS
                     WHERE id_elenco_vers = doc.id_elenco_vers)
               ELSE
                   NULL
           END
               ti_stato_elenco_vers,
           CASE
               WHEN ud.id_elenco_vers IS NOT NULL THEN
                   (SELECT dt_chius
                      FROM ELV_ELENCO_VERS
                     WHERE id_elenco_vers = ud.id_elenco_vers)
               WHEN doc.id_elenco_vers IS NOT NULL THEN
                   (SELECT dt_chius
                      FROM ELV_ELENCO_VERS
                     WHERE id_elenco_vers = doc.id_elenco_vers)
               ELSE
                   NULL
           END
               dt_chius_elenco_vers,
           -- info su verifica firme a data versamento
           comp_doc.ti_esito_verif_firme_dt_vers,
           comp_doc.ds_esito_verif_firme_dt_vers,
           -- info ud riferita
           ud_rif.cd_registro_key_unita_doc,
           ud_rif.aa_key_unita_doc,
           ud_rif.cd_key_unita_doc,
           -- info archiviazione
           CASE
               WHEN comp_doc.ti_supporto_comp = 'FILE' THEN
                   CASE
                       WHEN tipo_ud.ti_save_file = 'BLOB' THEN
                           CASE
                               WHEN obj_sto.nm_tenant IS NULL THEN
                                   'DATABASE'
                               ELSE
                                      backend.nm_tipo_backend
                                   || ' ('
                                   || backend.nm_backend
                                   || ')'
                           END
                       ELSE
                           'NASTRO'
                   END
               ELSE
                   'METADATI'
           END
               tipo_archiviazione,
           CASE
               WHEN comp_doc.ti_supporto_comp = 'FILE' THEN
                   CASE
                       WHEN tipo_ud.ti_save_file = 'BLOB' THEN
                           CASE
                               WHEN obj_sto.nm_tenant IS NULL THEN
                                   (SELECT subpart.cd_sub_partition
                                     FROM ORG_PARTITION_STRUT  part_strut
                                          JOIN ORG_PARTITION part
                                              ON (part.id_partition =
                                                  part_strut.id_partition)
                                          JOIN ORG_SUB_PARTITION subpart
                                              ON (subpart.id_partition =
                                                  part.id_partition)
                                          JOIN
                                          ORG_VAL_SUB_PARTITION val_subpart
                                              ON (val_subpart.id_sub_partition =
                                                  subpart.id_sub_partition
                                              AND val_subpart.cd_val_sub_partition =
                                                  TO_CHAR (doc.dt_creazione,
                                                           'yyyymm'))
                                    WHERE part_strut.id_strut = ud.id_strut
                                      AND part_strut.ti_partition = 'BLOB')
                               ELSE
                                   NULL
                           END
                       ELSE
                           NULL
                   END
               ELSE
                   NULL
           END
               cd_sub_partition,
           CASE
               WHEN comp_doc.ti_supporto_comp = 'FILE' THEN
                   CASE
                       WHEN tipo_ud.ti_save_file = 'BLOB' THEN
                           CASE
                               WHEN obj_sto.nm_tenant IS NULL THEN
                                   comp_doc.id_comp_doc
                               ELSE
                                   NULL
                           END
                       ELSE
                           NULL
                   END
               ELSE
                   NULL
           END
               id_file_oracle,
           CASE
               WHEN comp_doc.ti_supporto_comp = 'FILE' THEN
                   CASE
                       WHEN tipo_ud.ti_save_file = 'BLOB' THEN
                           CASE
                               WHEN obj_sto.nm_tenant IS NULL THEN NULL
                               ELSE obj_sto.nm_tenant
                           END
                       ELSE
                           NULL
                   END
               ELSE
                   NULL
           END
               nm_tenant,
           CASE
               WHEN comp_doc.ti_supporto_comp = 'FILE' THEN
                   CASE
                       WHEN tipo_ud.ti_save_file = 'BLOB' THEN
                           CASE
                               WHEN obj_sto.nm_tenant IS NULL THEN NULL
                               ELSE obj_sto.nm_bucket
                           END
                       ELSE
                           NULL
                   END
               ELSE
                   NULL
           END
               nm_bucket,
           CASE
               WHEN comp_doc.ti_supporto_comp = 'FILE' THEN
                   CASE
                       WHEN tipo_ud.ti_save_file = 'BLOB' THEN
                           CASE
                               WHEN obj_sto.nm_tenant IS NULL THEN NULL
                               ELSE obj_sto.cd_key_file
                           END
                       ELSE
                           NULL
                   END
               ELSE
                   NULL
           END
               cd_key_file,
           CASE
               WHEN comp_doc.ti_supporto_comp = 'FILE' THEN
                   CASE
                       WHEN tipo_ud.ti_save_file = 'BLOB' THEN NULL
                       ELSE comp_doc.ds_nome_file_ark
                   END
               ELSE
                   NULL
           END
               ds_nome_file_ark,
           CASE
               WHEN comp_doc.ti_supporto_comp = 'FILE' THEN
                   CASE
                       WHEN tipo_ud.ti_save_file = 'BLOB' THEN
                           NULL
                       ELSE
                           (SELECT data_vers.ti_stato_dt_vers
                             FROM VRS_DT_VERS data_vers
                            WHERE data_vers.dt_vers =
                                  TRUNC (doc.dt_creazione))
                   END
               ELSE
                   NULL
           END
               ti_stato_dt_vers,
           servizio_verif.ds_servizio_verifica_comp_doc
      FROM ARO_COMP_DOC  comp_doc
           LEFT JOIN dec_servizio_verifica_comp_doc servizio_verif
               ON (servizio_verif.id_servizio_verifica_comp_doc =
                   comp_doc.id_servizio_verifica_comp_doc)
           JOIN ARO_STRUT_DOC strut_doc
               ON (strut_doc.id_strut_doc = comp_doc.id_strut_doc)
           JOIN ARO_DOC doc ON (doc.id_doc = strut_doc.id_doc)
           JOIN DEC_TIPO_DOC tipo_doc
               ON (tipo_doc.id_tipo_doc = doc.id_tipo_doc)
           JOIN ARO_UNITA_DOC ud ON (ud.id_unita_doc = doc.id_unita_doc)
           JOIN DEC_TIPO_UNITA_DOC tipo_ud
               ON (tipo_ud.id_tipo_unita_doc = ud.id_tipo_unita_doc)
           JOIN ORG_STRUT strut ON (strut.id_strut = ud.id_strut)
           JOIN ORG_ENTE ente ON (ente.id_ente = strut.id_ente)
           JOIN ORG_AMBIENTE amb ON (amb.id_ambiente = ente.id_ambiente)
           JOIN DEC_TIPO_STRUT_DOC tipo_strut_doc
               ON (tipo_strut_doc.id_tipo_strut_doc =
                   strut_doc.id_tipo_strut_doc)
           JOIN DEC_TIPO_COMP_DOC tipo_comp
               ON (tipo_comp.id_tipo_comp_doc = comp_doc.id_tipo_comp_doc)
           LEFT JOIN DEC_FORMATO_FILE_DOC fmt_file_vers
               ON (fmt_file_vers.id_formato_file_doc =
                   comp_doc.id_formato_file_vers)
           LEFT JOIN DEC_FORMATO_FILE_STANDARD fmt_file_calc
               ON (fmt_file_calc.id_formato_file_standard =
                   comp_doc.id_formato_file_calc)
           LEFT JOIN DEC_TIPO_RAPPR_COMP tipo_rappr
               ON (tipo_rappr.id_tipo_rappr_comp =
                   comp_doc.id_tipo_rappr_comp)
           LEFT JOIN ARO_COMP_DOC comp_padre
               ON (comp_padre.id_comp_doc = comp_doc.id_comp_doc_padre)
           LEFT JOIN ARO_UNITA_DOC ud_rif
               ON (ud_rif.id_unita_doc = comp_doc.id_unita_doc_rif)
           LEFT JOIN ARO_COMP_OBJECT_STORAGE obj_sto
               ON (obj_sto.id_comp_doc = comp_doc.id_comp_doc)
           LEFT JOIN DEC_BACKEND backend
               ON (backend.ID_DEC_BACKEND = obj_sto.ID_DEC_BACKEND)
           LEFT JOIN ARO_COMP_HASH_CALC comp_hash
               ON (comp_hash.id_comp_doc = comp_doc.id_comp_doc
               AND comp_hash.ds_algo_hash_file = 'SHA-256');

-- changeset root:1751897635013-441
CREATE OR REPLACE FORCE VIEW "ELV_V_RIC_ELENCO_FASC_BY_STATO" ("ID_ELENCO_VERS_FASC", "ID_AMBIENTE", "NM_AMBIENTE", "ID_ENTE", "NM_ENTE", "ID_STRUT", "NM_STRUT", "ID_USER_IAM", "AA_FASCICOLO", "TI_STATO", "TS_STATO", "TS_CREAZIONE_ELENCO", "DT_CHIUSURA", "DL_MOTIVO_CHIUS", "DT_FIRMA", "NI_FASC_VERS_ELENCO", "NT_INDICE_ELENCO", "NT_ELENCO_CHIUSO", "ID_CRITERIO_RAGGR_FASC", "NM_CRITERIO_RAGGR", "FL_ELENCO_STANDARD", "CD_VOCE_TITOL", "NM_TIPO_FASCICOLO", "ID_STATO_ELENCO_VERS_FASC_COR", "NI_INDICI_AIP", "DT_CREAZIONE_ELENCO_IX_AIP", "FL_ANNULL") AS SELECT ele.id_elenco_vers_fasc,
           amb.id_ambiente,
           amb.nm_ambiente,
           ente.id_ente,
           ente.nm_ente,
           ele_da_elab.id_strut,
           strut.nm_strut,
           abil_org.id_user_iam,
           CASE
               WHEN ele.aa_fascicolo IS NULL THEN
                   CASE
                       WHEN crit.aa_fascicolo IS NOT NULL THEN
                           crit.aa_fascicolo
                   END
               ELSE
                   ele.aa_fascicolo
           END                                 aa_fascicolo,
           stato_corr.ti_stato,
           stato_corr.ts_stato,
           ele.ts_creazione_elenco,
           stato_chiuso.ts_stato,
           ele.dl_motivo_chius,
           stato_firmato.ts_stato,
           ele.ni_fasc_vers_elenco,
           ele.nt_indice_elenco,
           ele.nt_elenco_chiuso,
           ele.id_criterio_raggr_fasc,
           crit.nm_criterio_raggr,
           ele.fl_elenco_standard,
           CASE
               WHEN crit.fl_filtro_voce_titol = 1 THEN
                   CASE
                       WHEN (SELECT COUNT (
                                        critmulti.id_sel_criterio_raggr_fasc)
                               FROM DEC_SEL_CRITERIO_RAGGR_FASC critmulti
                              WHERE critmulti.id_criterio_raggr_fasc =
                                    crit.id_criterio_raggr_fasc) =
                            1 THEN
                           (SELECT titol.cd_composito_voce_titol
                              FROM DEC_SEL_CRITERIO_RAGGR_FASC  critmulti
                                   JOIN DEC_VOCE_TITOL titol
                                       ON (critmulti.id_voce_titol =
                                           titol.id_voce_titol)
                             WHERE critmulti.id_criterio_raggr_fasc =
                                   crit.id_criterio_raggr_fasc)
                       ELSE
                           'Diversi'
                   END
               ELSE
                   NULL
           END                                 cd_voce_titol,
           CASE
               WHEN crit.fl_filtro_tipo_fascicolo = 1 THEN
                   CASE
                       WHEN (SELECT COUNT (
                                        critmulti.id_sel_criterio_raggr_fasc)
                               FROM DEC_SEL_CRITERIO_RAGGR_FASC critmulti
                              WHERE critmulti.id_criterio_raggr_fasc =
                                    crit.id_criterio_raggr_fasc
                                AND critmulti.id_tipo_fascicolo IS NOT NULL) =
                            1 THEN
                           (SELECT tipofasc.nm_tipo_fascicolo
                              FROM DEC_SEL_CRITERIO_RAGGR_FASC  critmulti
                                   JOIN DEC_TIPO_FASCICOLO tipofasc
                                       ON (critmulti.id_tipo_fascicolo =
                                           tipofasc.id_tipo_fascicolo)
                             WHERE critmulti.id_criterio_raggr_fasc =
                                   crit.id_criterio_raggr_fasc)
                       ELSE
                           'Diversi'
                   END
               ELSE
                   NULL
           END                                 nm_tipo_fascicolo,
           ele.id_stato_elenco_vers_fasc_cor,
           ni_indici_aip,
           stato_ele_ix_aip_creato.ts_stato    dt_creazione_elenco_ix_aip,
           CASE
               WHEN EXISTS
                        (SELECT 1
                           FROM FAS_FASCICOLO ff
                          WHERE ff.id_elenco_vers_fasc =
                                ele_da_elab.id_elenco_vers_fasc
                            AND ff.ti_stato_conservazione = 'ANNULLATA') THEN
                   '1'
               ELSE
                   '0'
           END                                 fl_annull
      FROM ELV_ELENCO_VERS_FASC_DA_ELAB  ele_da_elab
           JOIN ELV_ELENCO_VERS_FASC ele
               ON (ele.id_elenco_vers_fasc = ele_da_elab.id_elenco_vers_fasc)
           JOIN ELV_STATO_ELENCO_VERS_FASC stato_corr
               ON (ele.id_stato_elenco_vers_fasc_cor =
                   stato_corr.id_stato_elenco_vers_fasc)
           LEFT JOIN ELV_STATO_ELENCO_VERS_FASC stato_chiuso
               ON (ele.id_elenco_vers_fasc = stato_chiuso.id_elenco_vers_fasc
               AND stato_chiuso.ti_stato = 'CHIUSO')
           LEFT JOIN ELV_STATO_ELENCO_VERS_FASC stato_firmato
               ON (ele.id_elenco_vers_fasc =
                   stato_firmato.id_elenco_vers_fasc
               AND stato_firmato.ti_stato IN ('VALIDATO','FIRMATO'))
           JOIN ORG_STRUT strut
               ON (strut.id_strut = ele.id_strut AND strut.fl_cessato = 0)
           JOIN ORG_ENTE ente
               ON (ente.id_ente = strut.id_ente AND ente.fl_cessato = 0)
           JOIN ORG_AMBIENTE amb ON (amb.id_ambiente = ente.id_ambiente)
           JOIN IAM_ABIL_ORGANIZ abil_org
               ON (abil_org.id_organiz_applic = strut.id_strut)
           JOIN DEC_CRITERIO_RAGGR_FASC crit
               ON (crit.id_criterio_raggr_fasc = ele.id_criterio_raggr_fasc)
           LEFT JOIN ELV_STATO_ELENCO_VERS_FASC stato_ele_ix_aip_creato
               ON (ele.id_elenco_vers_fasc =
                   stato_ele_ix_aip_creato.id_elenco_vers_fasc
               AND stato_ele_ix_aip_creato.ti_stato =
                   'ELENCO_INDICI_AIP_CREATO');

-- changeset root:1751897635013-442
COMMENT ON COLUMN ELV_V_RIC_ELENCO_FASC_BY_STATO.ID_ELENCO_VERS_FASC IS 'PK.1';

-- changeset root:1751897635013-443
CREATE OR REPLACE FORCE VIEW "ELV_V_RIC_ELENCO_FASC_BY_FAS" ("ID_ELENCO_VERS_FASC", "ID_AMBIENTE", "NM_AMBIENTE", "ID_ENTE", "NM_ENTE", "ID_STRUT", "NM_STRUT", "ID_USER_IAM", "AA_FASCICOLO_ELENCO", "TI_STATO", "TS_CREAZIONE_ELENCO", "DT_CHIUSURA", "DL_MOTIVO_CHIUS", "DT_FIRMA", "NI_FASC_VERS_ELENCO", "NT_INDICE_ELENCO", "NT_ELENCO_CHIUSO", "ID_CRITERIO_RAGGR_FASC", "NM_CRITERIO_RAGGR", "FL_ELENCO_STANDARD", "ID_FASCICOLO", "AA_FASCICOLO", "CD_KEY_FASCICOLO", "ID_TIPO_FASCICOLO", "ID_VOCE_TITOL", "CD_VOCE_TITOL", "NM_TIPO_FASCICOLO", "ID_STATO_ELENCO_VERS_FASC_COR") AS SELECT ele.id_elenco_vers_fasc,
           amb.id_ambiente,
           amb.nm_ambiente,
           ente.id_ente,
           ente.nm_ente,
           ele.id_strut,
           strut.nm_strut,
           abil_org.id_user_iam,
           CASE
               WHEN ele.aa_fascicolo IS NULL THEN
                   CASE
                       WHEN crit.aa_fascicolo IS NOT NULL THEN
                           crit.aa_fascicolo
                   END
               ELSE
                   ele.aa_fascicolo
           END    aa_fascicolo_elenco,
           stato_corr.ti_stato,
           ele.ts_creazione_elenco,
           stato_chiuso.ts_stato,
           ele.dl_motivo_chius,
           stato_firmato.ts_stato,
           ele.ni_fasc_vers_elenco,
           ele.nt_indice_elenco,
           ele.nt_elenco_chiuso,
           ele.id_criterio_raggr_fasc,
           crit.nm_criterio_raggr,
           ele.fl_elenco_standard,
           fasc.id_fascicolo,
           fasc.aa_fascicolo,
           fasc.cd_key_fascicolo,
           fasc.id_tipo_fascicolo,
           fasc.id_voce_titol,
           CASE
               WHEN crit.fl_filtro_voce_titol = 1 THEN
                   CASE
                       WHEN (SELECT COUNT (
                                        critmulti.id_sel_criterio_raggr_fasc)
                               FROM DEC_SEL_CRITERIO_RAGGR_FASC critmulti
                              WHERE critmulti.id_criterio_raggr_fasc =
                                    crit.id_criterio_raggr_fasc
                                AND critmulti.id_voce_titol IS NOT NULL) =
                            1 THEN
                           (SELECT titol.cd_composito_voce_titol
                              FROM DEC_SEL_CRITERIO_RAGGR_FASC  critmulti
                                   JOIN DEC_VOCE_TITOL titol
                                       ON (critmulti.id_voce_titol =
                                           titol.id_voce_titol)
                             WHERE critmulti.id_criterio_raggr_fasc =
                                   crit.id_criterio_raggr_fasc)
                       ELSE
                           'Diversi'
                   END
               ELSE
                   NULL
           END    cd_voce_titol,
           CASE
               WHEN crit.fl_filtro_tipo_fascicolo = 1 THEN
                   CASE
                       WHEN (SELECT COUNT (
                                        critmulti.id_sel_criterio_raggr_fasc)
                               FROM DEC_SEL_CRITERIO_RAGGR_FASC critmulti
                              WHERE critmulti.id_criterio_raggr_fasc =
                                    crit.id_criterio_raggr_fasc
                                AND critmulti.id_tipo_fascicolo IS NOT NULL) =
                            1 THEN
                           (SELECT tipofasc.nm_tipo_fascicolo
                              FROM DEC_SEL_CRITERIO_RAGGR_FASC  critmulti
                                   JOIN DEC_TIPO_FASCICOLO tipofasc
                                       ON (critmulti.id_tipo_fascicolo =
                                           tipofasc.id_tipo_fascicolo)
                             WHERE critmulti.id_criterio_raggr_fasc =
                                   crit.id_criterio_raggr_fasc)
                       ELSE
                           'Diversi'
                   END
               ELSE
                   NULL
           END    nm_tipo_fascicolo,
           ele.id_stato_elenco_vers_fasc_cor
      FROM ELV_ELENCO_VERS_FASC  ele
           JOIN ELV_STATO_ELENCO_VERS_FASC stato_corr
               ON (ele.id_stato_elenco_vers_fasc_cor =
                   stato_corr.id_stato_elenco_vers_fasc)
           LEFT JOIN ELV_STATO_ELENCO_VERS_FASC stato_chiuso
               ON (ele.id_elenco_vers_fasc = stato_chiuso.id_elenco_vers_fasc
               AND stato_chiuso.ti_stato = 'CHIUSO')
           LEFT JOIN ELV_STATO_ELENCO_VERS_FASC stato_firmato
               ON (ele.id_elenco_vers_fasc =
                   stato_firmato.id_elenco_vers_fasc
               AND stato_firmato.ti_stato IN ('VALIDATO','FIRMATO'))
           JOIN ORG_STRUT strut
               ON (strut.id_strut = ele.id_strut AND strut.fl_cessato = 0)
           JOIN ORG_ENTE ente
               ON (ente.id_ente = strut.id_ente AND ente.fl_cessato = 0)
           JOIN ORG_AMBIENTE amb ON (amb.id_ambiente = ente.id_ambiente)
           JOIN IAM_ABIL_ORGANIZ abil_org
               ON (abil_org.id_organiz_applic = strut.id_strut)
           JOIN DEC_CRITERIO_RAGGR_FASC crit
               ON (crit.id_criterio_raggr_fasc = ele.id_criterio_raggr_fasc)
           JOIN FAS_FASCICOLO fasc
               ON (fasc.id_elenco_vers_fasc = ele.id_elenco_vers_fasc);

-- changeset root:1751897635013-444
COMMENT ON COLUMN ELV_V_RIC_ELENCO_FASC_BY_FAS.ID_ELENCO_VERS_FASC IS 'PK.1';

-- changeset root:1751897635013-445
COMMENT ON COLUMN ELV_V_RIC_ELENCO_FASC_BY_FAS.ID_FASCICOLO IS 'PK.2';

-- changeset root:1751897635013-446
CREATE OR REPLACE FORCE VIEW "VRS_V_DOC_NON_VERS" ("ID_DOC_NON_VERS", "ID_STRUT", "CD_REGISTRO_KEY_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "CD_KEY_DOC_VERS", "FL_VERIF", "FL_NON_RISOLUB", "DT_FIRST_SES_ERR", "DT_LAST_SES_ERR", "CD_ERR_PRINC", "DS_ERR_PRINC", "CL_ERR_LAST", "CD_ERR_LAST", "DS_ERR_LAST", "FL_DIVERSI_ERR") AS SELECT id_doc_non_vers,
           id_strut,
           cd_registro_key_unita_doc,
           aa_key_unita_doc,
           cd_key_unita_doc,
           cd_key_doc_vers,
           CASE
               WHEN NOT EXISTS
                        (SELECT 1
                           FROM VRS_SESSIONE_VERS_ko ses_err
                          WHERE ses_err.ti_sessione_vers =
                                'AGGIUNGI_DOCUMENTO'
                            --AND ses_err.ti_stato_sessione_vers = 'CHIUSA_ERR'
                            AND ses_err.id_strut = doc_non_vers.id_strut
                            AND ses_err.cd_registro_key_unita_doc =
                                doc_non_vers.cd_registro_key_unita_doc
                            AND ses_err.aa_key_unita_doc =
                                doc_non_vers.aa_key_unita_doc
                            AND ses_err.cd_key_unita_doc =
                                doc_non_vers.cd_key_unita_doc
                            AND ses_err.cd_key_doc_vers =
                                doc_non_vers.cd_key_doc_vers
                            AND ses_err.fl_sessione_err_verif = '0') THEN
                   '1'
               ELSE
                   '0'
           END                            fl_verif,
           CASE
               WHEN NOT EXISTS
                        (SELECT 1
                           FROM VRS_SESSIONE_VERS_ko ses_err
                          WHERE ses_err.ti_sessione_vers =
                                'AGGIUNGI_DOCUMENTO'
                            --AND ses_err.ti_stato_sessione_vers = 'CHIUSA_ERR'
                            AND ses_err.id_strut = doc_non_vers.id_strut
                            AND ses_err.cd_registro_key_unita_doc =
                                doc_non_vers.cd_registro_key_unita_doc
                            AND ses_err.aa_key_unita_doc =
                                doc_non_vers.aa_key_unita_doc
                            AND ses_err.cd_key_unita_doc =
                                doc_non_vers.cd_key_unita_doc
                            AND ses_err.cd_key_doc_vers =
                                doc_non_vers.cd_key_doc_vers
                            AND ses_err.fl_sessione_err_verif = '0') THEN
                   CASE
                       WHEN NOT EXISTS
                                (SELECT 1
                                   FROM VRS_SESSIONE_VERS_ko ses_err
                                  WHERE ses_err.ti_sessione_vers =
                                        'AGGIUNGI_DOCUMENTO'
--                                    AND ses_err.ti_stato_sessione_vers =
--                                        'CHIUSA_ERR'
                                    AND ses_err.id_strut =
                                        doc_non_vers.id_strut
                                    AND ses_err.cd_registro_key_unita_doc =
                                        doc_non_vers.cd_registro_key_unita_doc
                                    AND ses_err.aa_key_unita_doc =
                                        doc_non_vers.aa_key_unita_doc
                                    AND ses_err.cd_key_unita_doc =
                                        doc_non_vers.cd_key_unita_doc
                                    AND ses_err.cd_key_doc_vers =
                                        doc_non_vers.cd_key_doc_vers
                                    AND ses_err.fl_sessione_err_non_risolub =
                                        '0') THEN
                           '1'
                       ELSE
                           '0'
                   END
               ELSE
                   NULL
           END                            fl_non_risolub,
           dt_first_ses_err,
           dt_last_ses_err,
           cd_err_princ,
           ds_err_princ,
           (  SELECT NVL (
                         SUBSTR (ses_err.cd_err_princ,
                                 0,
                                 INSTR (ses_err.cd_err_princ, '-0') - 1),
                         ses_err.cd_err_princ)    AS cl_err_last
               FROM VRS_SESSIONE_VERS_ko ses_err
              WHERE ses_err.ti_sessione_vers = 'AGGIUNGI_DOCUMENTO'
                --AND ses_err.ti_stato_sessione_vers = 'CHIUSA_ERR'
                AND ses_err.id_strut = doc_non_vers.id_strut
                AND ses_err.cd_registro_key_unita_doc =
                    doc_non_vers.cd_registro_key_unita_doc
                AND ses_err.aa_key_unita_doc = doc_non_vers.aa_key_unita_doc
                AND ses_err.cd_key_unita_doc = doc_non_vers.cd_key_unita_doc
                AND ses_err.cd_key_doc_vers = doc_non_vers.cd_key_doc_vers
           ORDER BY ses_err.dt_chiusura DESC
              FETCH FIRST 1 ROWS ONLY)    AS cl_err_last,
           (  SELECT ses_err.cd_err_princ
               FROM VRS_SESSIONE_VERS_ko ses_err
              WHERE ses_err.ti_sessione_vers = 'AGGIUNGI_DOCUMENTO'
                --AND ses_err.ti_stato_sessione_vers = 'CHIUSA_ERR'
                AND ses_err.id_strut = doc_non_vers.id_strut
                AND ses_err.cd_registro_key_unita_doc =
                    doc_non_vers.cd_registro_key_unita_doc
                AND ses_err.aa_key_unita_doc = doc_non_vers.aa_key_unita_doc
                AND ses_err.cd_key_unita_doc = doc_non_vers.cd_key_unita_doc
                AND ses_err.cd_key_doc_vers = doc_non_vers.cd_key_doc_vers
           ORDER BY ses_err.dt_chiusura DESC
              FETCH FIRST 1 ROWS ONLY)    AS cd_err_last,
           (  SELECT ses_err.ds_err_princ
               FROM VRS_SESSIONE_VERS_ko ses_err
              WHERE ses_err.ti_sessione_vers = 'AGGIUNGI_DOCUMENTO'
                --AND ses_err.ti_stato_sessione_vers = 'CHIUSA_ERR'
                AND ses_err.id_strut = doc_non_vers.id_strut
                AND ses_err.cd_registro_key_unita_doc =
                    doc_non_vers.cd_registro_key_unita_doc
                AND ses_err.aa_key_unita_doc = doc_non_vers.aa_key_unita_doc
                AND ses_err.cd_key_unita_doc = doc_non_vers.cd_key_unita_doc
                AND ses_err.cd_key_doc_vers = doc_non_vers.cd_key_doc_vers
           ORDER BY ses_err.dt_chiusura DESC
              FETCH FIRST 1 ROWS ONLY)    AS ds_err_last,
           CASE
               WHEN EXISTS
                        (SELECT 1
                           FROM VRS_SESSIONE_VERS_ko ses_err
                          WHERE ses_err.ti_sessione_vers =
                                'AGGIUNGI_DOCUMENTO'
                            AND ses_err.ti_stato_sessione_vers = 'CHIUSA_ERR'
                            AND ses_err.id_strut = doc_non_vers.id_strut
                            AND ses_err.cd_registro_key_unita_doc =
                                doc_non_vers.cd_registro_key_unita_doc
                            AND ses_err.aa_key_unita_doc =
                                doc_non_vers.aa_key_unita_doc
                            AND ses_err.cd_key_unita_doc =
                                doc_non_vers.cd_key_unita_doc
                            AND ses_err.cd_key_doc_vers =
                                doc_non_vers.cd_key_doc_vers
                         HAVING COUNT (1) > 1) THEN
                   'SI'
               ELSE
                   'NO'
           END                            fl_diversi_err
      FROM VRS_DOC_NON_VERS doc_non_vers;

-- changeset root:1751897635013-447
CREATE OR REPLACE FORCE VIEW "MON_V_LIS_UPD_UD_ERR" ("NM_AMBIENTE", "NM_ENTE", "NM_STRUT", "NM_TIPO_UNITA_DOC", "CD_REGISTRO_KEY_UNITA_DOC", "NM_TIPO_DOC_PRINC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "TI_STATO_SES", "TS_INI_SES", "ID_SES_UPD_UNITA_DOC_ERR", "DS_TS_INI_SES", "ID_CONTROLLO_WS_PRINC", "CD_CONTROLLO_WS_PRINC", "ID_ERR_SACER_PRINC", "CD_ERR_PRINC", "DS_ERR_PRINC", "ID_CLASSE_ERR_SACER", "ID_ERR_SACER") AS select
 ses_upd_err.nm_ambiente,
 ses_upd_err.nm_ente,
 ses_upd_err.nm_strut,
 ses_upd_err.nm_tipo_unita_doc,
 ses_upd_err.cd_registro_key_unita_doc,
 ses_upd_err.nm_tipo_doc_princ,
 ses_upd_err.aa_key_unita_doc,
 ses_upd_err.cd_key_unita_doc,
 
 ses_upd_err.ti_stato_ses,
 ses_upd_err.ts_ini_ses,
 
 ses_upd_err.id_ses_upd_unita_doc_err,
 to_char(ses_upd_err.ts_ini_ses, 'dd/mm/yyyy hh24:mi:ssxff') ds_ts_ini_ses,

 ses_upd_err.id_controllo_ws_princ, contr_princ.cd_controllo_ws cd_controllo_ws_princ,
 ses_upd_err.id_err_sacer_princ, err_princ.cd_err cd_err_princ, ses_upd_err.ds_err_princ,

 classe_err.id_classe_err_sacer, err.id_err_sacer

from VRS_SES_UPD_UNITA_DOC_ERR ses_upd_err

join DEC_CONTROLLO_WS contr_princ
	on (contr_princ.id_controllo_ws = ses_upd_err.id_controllo_ws_princ)
join DEC_ERR_SACER err_princ
	on (err_princ.id_err_sacer = ses_upd_err.id_err_sacer_princ)

join VRS_ERR_SES_UPD_UNITA_DOC_ERR err_ses
	on (err_ses.id_ses_upd_unita_doc_err = ses_upd_err.id_ses_upd_unita_doc_err)
join DEC_ERR_SACER err
	on (err.id_err_sacer = err_ses.id_err_sacer)
join DEC_CLASSE_ERR_SACER classe_err
	on (classe_err.id_classe_err_sacer = err.id_classe_err_sacer);

-- changeset root:1751897635013-448
COMMENT ON COLUMN MON_V_LIS_UPD_UD_ERR.ID_SES_UPD_UNITA_DOC_ERR IS 'PK.1';

-- changeset root:1751897635013-449
CREATE OR REPLACE FORCE VIEW "MON_V_VIS_UPD_UD_ERR" ("NM_AMBIENTE", "NM_ENTE", "NM_STRUT", "NM_TIPO_UNITA_DOC", "CD_REGISTRO_KEY_UNITA_DOC", "NM_TIPO_DOC_PRINC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "TI_STATO_SES", "ID_SES_UPD_UNITA_DOC_ERR", "DS_TS_INI_SES", "DS_TS_FINE_SES", "CD_VERSIONE_WS", "ID_CONTROLLO_WS_PRINC", "CD_CONTROLLO_WS_PRINC", "ID_ERR_SACER_PRINC", "CD_ERR_PRINC", "DS_ERR_PRINC", "FL_ESISTE_STRUT", "FL_ESISTE_REGISTRO", "FL_ESISTE_TIPO_UNITA_DOC", "FL_ESISTE_TIPO_DOC_PRINC", "NM_USERID_WS", "ID_XML_SES_UPD_ERR_RICH", "BL_XML_RICH", "ID_XML_SES_UPD_ERR_RISP", "BL_XML_RISP") AS select
 ses_upd_err.nm_ambiente,
 ses_upd_err.nm_ente,
 ses_upd_err.nm_strut,
 ses_upd_err.nm_tipo_unita_doc,
 ses_upd_err.cd_registro_key_unita_doc,
 ses_upd_err.nm_tipo_doc_princ,
 ses_upd_err.aa_key_unita_doc,
 ses_upd_err.cd_key_unita_doc,
 
 ses_upd_err.ti_stato_ses,
  
 ses_upd_err.id_ses_upd_unita_doc_err,
 to_char(ses_upd_err.ts_ini_ses, 'dd/mm/yyyy hh24:mi:ssxff') ds_ts_ini_ses,
 to_char(ses_upd_err.ts_fine_ses, 'dd/mm/yyyy hh24:mi:ssxff') ds_ts_fine_ses,
 ses_upd_err.cd_versione_ws,

 ses_upd_err.id_controllo_ws_princ, contr_princ.cd_controllo_ws cd_controllo_ws_princ,
 ses_upd_err.id_err_sacer_princ, err_princ.cd_err cd_err_princ, ses_upd_err.ds_err_princ,

 case
	when ses_upd_err.id_strut is not null
		then '1'
		else '0'
 end fl_esiste_strut,
 case
	when ses_upd_err.id_registro_unita_doc is not null
		then '1'
		else '0'
 end fl_esiste_registro,
 case
	when ses_upd_err.id_tipo_unita_doc is not null
		then '1'
		else '0'
 end fl_esiste_tipo_unita_doc,
 case
	when ses_upd_err.id_tipo_doc_princ is not null
		then '1'
		else '0'
 end fl_esiste_tipo_doc_princ,

 ses_upd_err.nm_userid_ws,

 xml_rich.id_xml_ses_upd_unita_doc_err id_xml_ses_upd_err_rich, xml_rich.bl_xml bl_xml_rich,
 xml_risp.id_xml_ses_upd_unita_doc_err id_xml_ses_upd_err_risp, xml_risp.bl_xml bl_xml_risp


from VRS_SES_UPD_UNITA_DOC_ERR ses_upd_err

join DEC_CONTROLLO_WS contr_princ
	on (contr_princ.id_controllo_ws = ses_upd_err.id_controllo_ws_princ)
join DEC_ERR_SACER err_princ
	on (err_princ.id_err_sacer = ses_upd_err.id_err_sacer_princ)

join VRS_XML_SES_UPD_UNITA_DOC_ERR xml_rich
	on (xml_rich.id_ses_upd_ud_err = ses_upd_err.id_ses_upd_unita_doc_err
	and xml_rich.ti_xml = 'RICHIESTA')

join VRS_XML_SES_UPD_UNITA_DOC_ERR xml_risp
	on (xml_risp.id_ses_upd_ud_err = ses_upd_err.id_ses_upd_unita_doc_err
	and xml_risp.ti_xml = 'RISPOSTA');

-- changeset root:1751897635013-450
COMMENT ON COLUMN MON_V_VIS_UPD_UD_ERR.ID_SES_UPD_UNITA_DOC_ERR IS 'PK.1';

-- changeset root:1751897635013-451
CREATE OR REPLACE FORCE VIEW "MON_V_LIS_DOC_NON_VERS_IAM" ("ID_USER_IAM", "ID_AMBIENTE", "NM_AMBIENTE", "ID_ENTE", "NM_ENTE", "ID_STRUT", "NM_STRUT", "ID_DOC_NON_VERS", "CD_REGISTRO_KEY_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "CD_KEY_DOC_VERS", "FL_VERIF", "FL_NON_RISOLUB", "DS_KEY_ORD", "CL_ERR_LAST", "CD_ERR_LAST", "DS_ERR_LAST", "FL_DIVERSI_ERR", "DT_FIRST_SES_ERR", "DT_LAST_SES_ERR") AS SELECT -- info su utente che usa l'applicazione
           abil_org.id_user_iam,
           -- info di organizzazione
           amb.id_ambiente,
           amb.nm_ambiente,
           ente.id_ente,
           ente.nm_ente,
           strut.id_strut,
           strut.nm_strut,
           doc_non_vers.id_doc_non_vers,
           doc_non_vers.cd_registro_key_unita_doc,
           doc_non_vers.aa_key_unita_doc,
           doc_non_vers.cd_key_unita_doc,
           doc_non_vers.cd_key_doc_vers,
           doc_non_vers.fl_verif,
           doc_non_vers.fl_non_risolub,
              doc_non_vers.cd_registro_key_unita_doc
           || TO_CHAR (doc_non_vers.aa_key_unita_doc)
           || LPAD (doc_non_vers.cd_key_unita_doc, 12, '0')
           || doc_non_vers.cd_key_doc_vers    ds_key_ord,
           doc_non_vers.cl_err_last,
           doc_non_vers.cd_err_last,
           doc_non_vers.ds_err_last,
           doc_non_vers.fl_diversi_err,
           doc_non_vers.dt_first_ses_err,
           doc_non_vers.dt_last_ses_err
      FROM IAM_ABIL_ORGANIZ  abil_org
           JOIN ORG_STRUT strut
               ON (strut.id_strut = abil_org.id_organiz_applic
               AND strut.fl_cessato = 0)
           JOIN ORG_ENTE ente
               ON (ente.id_ente = strut.id_ente AND ente.fl_cessato = 0)
           JOIN ORG_AMBIENTE amb ON (amb.id_ambiente = ente.id_ambiente)
           JOIN VRS_V_DOC_NON_VERS doc_non_vers
               ON (doc_non_vers.id_strut = strut.id_strut);

-- changeset root:1751897635013-452
CREATE OR REPLACE FORCE VIEW "MON_V_CHK_DOC_NONVERS_AMB" ("ID_AMBIENTE", "ID_USER_IAM", "FL_DOC_NONVERS_NOVERIF", "FL_DOC_NONVERS_VERIF", "FL_DOC_NONVERS_NORISOLUB") AS select
amb.id_ambiente,
utente.id_user_iam,


--
--			NON VERIFICATI
--
case
	when exists (select *
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_DOC_NON_VERS ud_nonvers
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ud_nonvers.id_strut = abil.id_organiz_applic
				and ud_nonvers.fl_verif = '0'
				)
		then '1'
		else '0'
end fl_doc_nonvers_noverif,

--
--			VERIFICATI
--

case
	when exists (select *
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_DOC_NON_VERS ud_nonvers
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ud_nonvers.id_strut = abil.id_organiz_applic
				and ud_nonvers.fl_verif = '1'
				and ud_nonvers.fl_non_risolub = '0'
				)
		then '1'
		else '0'
end fl_doc_nonvers_verif,
--
--			NON RISOLUBILI
--

case
	when exists (select *
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_DOC_NON_VERS ud_nonvers
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ud_nonvers.id_strut = abil.id_organiz_applic
				and ud_nonvers.fl_verif = '1'
				and ud_nonvers.fl_non_risolub = '1'
				)
		then '1'
		else '0'
end fl_doc_nonvers_norisolub

from ORG_AMBIENTE amb
join IAM_USER utente
 on (utente.id_user_iam > 0);

-- changeset root:1751897635013-453
COMMENT ON COLUMN MON_V_CHK_DOC_NONVERS_AMB.ID_AMBIENTE IS 'PK.1 relativa a tabella ORG_AMBIENTE';

-- changeset root:1751897635013-454
COMMENT ON COLUMN MON_V_CHK_DOC_NONVERS_AMB.ID_USER_IAM IS 'PK.2 relativa a tabella IAM_USER';

-- changeset root:1751897635013-455
CREATE OR REPLACE FORCE VIEW "MON_V_CHK_DOC_NONVERS_ENTE" ("ID_ENTE", "ID_USER_IAM", "FL_DOC_NONVERS_NOVERIF", "FL_DOC_NONVERS_VERIF", "FL_DOC_NONVERS_NORISOLUB") AS select
ente.id_ente,
utente.id_user_iam,


--
--			NON VERIFICATI
--
case
	when exists (select *
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_DOC_NON_VERS doc_nonvers
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and doc_nonvers.id_strut = abil.id_organiz_applic
				and doc_nonvers.fl_verif = '0'
				)
		then '1'
		else '0'
end fl_doc_nonvers_noverif,

--
--			VERIFICATI
--

case
	when exists (select *
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_DOC_NON_VERS doc_nonvers
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and doc_nonvers.id_strut = abil.id_organiz_applic
				and doc_nonvers.fl_verif = '1'
				and doc_nonvers.fl_non_risolub = '0'
				)
		then '1'
		else '0'
end fl_doc_nonvers_verif,
--
--			NON RISOLUBILI
--

case
	when exists (select *
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_DOC_NON_VERS doc_nonvers
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and doc_nonvers.id_strut = abil.id_organiz_applic
				and doc_nonvers.fl_verif = '1'
				and doc_nonvers.fl_non_risolub = '1'
				)
		then '1'
		else '0'
end fl_doc_nonvers_norisolub

from ORG_ENTE ente
join IAM_USER utente
 on (utente.id_user_iam > 0);

-- changeset root:1751897635013-456
COMMENT ON COLUMN MON_V_CHK_DOC_NONVERS_ENTE.ID_ENTE IS 'PK.1 relativa a tabella ORG_ENTE';

-- changeset root:1751897635013-457
COMMENT ON COLUMN MON_V_CHK_DOC_NONVERS_ENTE.ID_USER_IAM IS 'PK.2 relativa a tabella IAM_USER';

-- changeset root:1751897635013-458
CREATE OR REPLACE FORCE VIEW "MON_V_CHK_FASC_KO_BY_ENTE" ("ID_ENTE", "ID_USER_IAM", "FL_FASC_KO_NON_RISOLUB_CORR", "FL_FASC_KO_NON_RISOLUB_30GG", "FL_FASC_KO_NON_RISOLUB_B30GG", "FL_FASC_KO_VERIF_CORR", "FL_FASC_KO_VERIF_30GG", "FL_FASC_KO_VERIF_B30GG", "FL_FASC_KO_NON_VERIF_CORR", "FL_FASC_KO_NON_VERIF_30GG", "FL_FASC_KO_NON_VERIF_B30GG") AS select
 ente.id_ente,
 utente.id_user_iam,
 

--
--						fascicoli KO non risolubili
--
case
	when exists (select * 
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil_org, VRS_FASCICOLO_KO fasc_ko, IAM_ABIL_TIPO_DATO abil_dato
				where strut.id_ente = ente.id_ente
				and abil_org.id_organiz_applic = strut.id_strut
				and abil_org.id_user_iam = utente.id_user_iam
				and fasc_ko.id_strut = abil_org.id_organiz_applic 
				and fasc_ko.ti_stato_fascicolo_ko = 'NON_RISOLUBILE'
				and trunc(fasc_ko.ts_ini_last_ses) = trunc(sysdate)
				
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = fasc_ko.id_tipo_fascicolo_last
				)
			then '1'
			else '0'
end fl_fasc_ko_non_risolub_corr,
case
	when exists (select * 
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil_org, MON_CONTA_FASCICOLI_KO conta_fasc_ko, IAM_ABIL_TIPO_DATO abil_dato
				where strut.id_ente = ente.id_ente
				and abil_org.id_organiz_applic = strut.id_strut
				and abil_org.id_user_iam = utente.id_user_iam
				and conta_fasc_ko.id_strut = abil_org.id_organiz_applic 
				and conta_fasc_ko.ti_stato_fascicolo_ko = 'NON_RISOLUBILE'
				and conta_fasc_ko.dt_rif_conta between trunc(sysdate - 30) and trunc(sysdate - 1)
				
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = conta_fasc_ko.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_ko_non_risolub_30gg,
case
	when exists (select * 
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil_org, MON_CONTA_FASCICOLI_KO conta_fasc_ko, IAM_ABIL_TIPO_DATO abil_dato
				where strut.id_ente = ente.id_ente
				and abil_org.id_organiz_applic = strut.id_strut
				and abil_org.id_user_iam = utente.id_user_iam
				and conta_fasc_ko.id_strut = abil_org.id_organiz_applic 
				and conta_fasc_ko.ti_stato_fascicolo_ko = 'NON_RISOLUBILE'
				and conta_fasc_ko.dt_rif_conta < trunc(sysdate - 30)
				
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = conta_fasc_ko.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_ko_non_risolub_b30gg,


--
--						fascicoli KO verificati
--
case
	when exists (select * 
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil_org, VRS_FASCICOLO_KO fasc_ko, IAM_ABIL_TIPO_DATO abil_dato
				where strut.id_ente = ente.id_ente
				and abil_org.id_organiz_applic = strut.id_strut
				and abil_org.id_user_iam = utente.id_user_iam
				and fasc_ko.id_strut = abil_org.id_organiz_applic 
				and fasc_ko.ti_stato_fascicolo_ko = 'VERIFICATO'
				and trunc(fasc_ko.ts_ini_last_ses) = trunc(sysdate)
							
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = fasc_ko.id_tipo_fascicolo_last
				)
			then '1'
			else '0'
end fl_fasc_ko_verif_corr,
case
	when exists (select * 
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil_org, MON_CONTA_FASCICOLI_KO conta_fasc_ko, IAM_ABIL_TIPO_DATO abil_dato
				where strut.id_ente = ente.id_ente
				and abil_org.id_organiz_applic = strut.id_strut
				and abil_org.id_user_iam = utente.id_user_iam
				and conta_fasc_ko.id_strut = abil_org.id_organiz_applic 
				and conta_fasc_ko.ti_stato_fascicolo_ko = 'VERIFICATO'
				and conta_fasc_ko.dt_rif_conta between trunc(sysdate - 30) and trunc(sysdate - 1)
								
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = conta_fasc_ko.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_ko_verif_30gg,
case
	when exists (select * 
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil_org, MON_CONTA_FASCICOLI_KO conta_fasc_ko, IAM_ABIL_TIPO_DATO abil_dato
				where strut.id_ente = ente.id_ente
				and abil_org.id_organiz_applic = strut.id_strut
				and abil_org.id_user_iam = utente.id_user_iam
				and conta_fasc_ko.id_strut = abil_org.id_organiz_applic 
				and conta_fasc_ko.ti_stato_fascicolo_ko = 'VERIFICATO'
				and conta_fasc_ko.dt_rif_conta < trunc(sysdate - 30)
								
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = conta_fasc_ko.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_ko_verif_b30gg,


--
--						fascicoli KO non verificati
--
case
	when exists (select * 
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil_org, VRS_FASCICOLO_KO fasc_ko, IAM_ABIL_TIPO_DATO abil_dato
				where strut.id_ente = ente.id_ente
				and abil_org.id_organiz_applic = strut.id_strut
				and abil_org.id_user_iam = utente.id_user_iam
				and fasc_ko.id_strut = abil_org.id_organiz_applic 
				and fasc_ko.ti_stato_fascicolo_ko = 'NON_VERIFICATO'
				and trunc(fasc_ko.ts_ini_last_ses) = trunc(sysdate)
								
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = fasc_ko.id_tipo_fascicolo_last
				)
			then '1'
			else '0'
end fl_fasc_ko_non_verif_corr,
case
	when exists (select * 
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil_org, MON_CONTA_FASCICOLI_KO conta_fasc_ko, IAM_ABIL_TIPO_DATO abil_dato
				where strut.id_ente = ente.id_ente
				and abil_org.id_organiz_applic = strut.id_strut
				and abil_org.id_user_iam = utente.id_user_iam
				and conta_fasc_ko.id_strut = abil_org.id_organiz_applic 
				and conta_fasc_ko.ti_stato_fascicolo_ko = 'NON_VERIFICATO'
				and conta_fasc_ko.dt_rif_conta between trunc(sysdate - 30) and trunc(sysdate - 1)
								
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = conta_fasc_ko.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_ko_non_verif_30gg,
case
	when exists (select * 
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil_org, MON_CONTA_FASCICOLI_KO conta_fasc_ko, IAM_ABIL_TIPO_DATO abil_dato
				where strut.id_ente = ente.id_ente
				and abil_org.id_organiz_applic = strut.id_strut
				and abil_org.id_user_iam = utente.id_user_iam
				and conta_fasc_ko.id_strut = abil_org.id_organiz_applic 
				and conta_fasc_ko.ti_stato_fascicolo_ko = 'NON_VERIFICATO'
				and conta_fasc_ko.dt_rif_conta < trunc(sysdate - 30)
								
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = conta_fasc_ko.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_ko_non_verif_b30gg

from ORG_ENTE ente
join IAM_USER utente
 on (utente.id_user_iam > 0);

-- changeset root:1751897635013-459
COMMENT ON COLUMN MON_V_CHK_FASC_KO_BY_ENTE.ID_ENTE IS 'PK.1';

-- changeset root:1751897635013-460
COMMENT ON COLUMN MON_V_CHK_FASC_KO_BY_ENTE.ID_USER_IAM IS 'PK.2';

-- changeset root:1751897635013-461
CREATE OR REPLACE FORCE VIEW "TMP_MON_V_CHK_UD_ENTE" ("ID_ENTE", "ID_USER_IAM", "FL_UD_CORR", "FL_UD_30GG", "FL_UD_ATTESA_MEM_CORR", "FL_UD_ATTESA_MEM_30GG", "FL_UD_ATTESA_SCHED_CORR", "FL_UD_ATTESA_SCHED_30GG", "FL_UD_NOSEL_SCHED_CORR", "FL_UD_NOSEL_SCHED_30GG") AS select
 ente.id_ente,
 utente.id_user_iam,
 
--
--					ud TOTALE
--
case
	when exists (select * 
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ARO_DOC doc
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and doc.id_strut = abil.id_organiz_applic
				and doc.ti_doc = 'PRINCIPALE'
				and doc.dt_creazione between trunc(sysdate) and sysdate + 1/24
				and doc.dt_annul = to_date('31/12/2444', 'dd/mm/yyyy')
				and doc.ti_creazione = 'VERSAMENTO_UNITA_DOC'
				)
			then '1'
			else '0'
end fl_ud_corr,
case
	when (select nvl(sum(ni_unita_doc_vers), 0)
		  from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, MON_CONTA_UD_DOC_COMP conta_ud
		  where strut.id_ente = ente.id_ente
		  and abil.id_organiz_applic = strut.id_strut
		  and abil.id_user_iam = utente.id_user_iam
		  and conta_ud.id_strut = abil.id_organiz_applic
		  and conta_ud.dt_rif_conta between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
		  ) -
		 (select nvl(count(*), 0)
		  from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ARO_UD_ANNUL_DA_ELAB ud_annul
		  where strut.id_ente = ente.id_ente
		  and abil.id_organiz_applic = strut.id_strut
		  and abil.id_user_iam = utente.id_user_iam
		  and ud_annul.id_strut = abil.id_organiz_applic
		  and ud_annul.ti_stato_annul = 'OK'
		  and ud_annul.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
		 ) != 0
			then '1'
			else '0'
end fl_ud_30gg,

--
--						ud IN_ATTESA_MEMORIZZAZIONE
--
case
	when exists (select * 
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ELV_UD_VERS_DA_ELAB_ELENCO ud_da_elab
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ud_da_elab.id_strut = abil.id_organiz_applic 
				and ud_da_elab.ti_stato_ud_da_elab = 'IN_ATTESA_MEMORIZZAZIONE'
				and ud_da_elab.dt_creazione between trunc(sysdate) and sysdate + 1/24
				)
			then '1'
			else '0'
end fl_ud_attesa_mem_corr,
case
	when exists (select * 
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ELV_UD_VERS_DA_ELAB_ELENCO ud_da_elab
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ud_da_elab.id_strut = abil.id_organiz_applic 
				and ud_da_elab.ti_stato_ud_da_elab = 'IN_ATTESA_MEMORIZZAZIONE'
				and ud_da_elab.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
				)
			then '1'
			else '0'
end fl_ud_attesa_mem_30gg,

--
--						ud IN_ATTESA_SCHED
--
case
	when exists (select * 
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ELV_UD_VERS_DA_ELAB_ELENCO ud_da_elab
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ud_da_elab.id_strut = abil.id_organiz_applic 
				and ud_da_elab.ti_stato_ud_da_elab = 'IN_ATTESA_SCHED'
				and ud_da_elab.dt_creazione between trunc(sysdate) and sysdate + 1/24
				)
			then '1'
			else '0'
end fl_ud_attesa_sched_corr,
case
	when exists (select * 
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ELV_UD_VERS_DA_ELAB_ELENCO ud_da_elab
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ud_da_elab.id_strut = abil.id_organiz_applic 
				and ud_da_elab.ti_stato_ud_da_elab = 'IN_ATTESA_SCHED'
				and ud_da_elab.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
				)
			then '1'
			else '0'
end fl_ud_attesa_sched_30gg,

--
--						ud NON_SELEZ_SCHED
--
case
	when exists (select * 
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ELV_UD_VERS_DA_ELAB_ELENCO ud_da_elab
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ud_da_elab.id_strut = abil.id_organiz_applic 
				and ud_da_elab.ti_stato_ud_da_elab = 'NON_SELEZ_SCHED'
				and ud_da_elab.dt_creazione between trunc(sysdate) and sysdate + 1/24
				)
			then '1'
end fl_ud_nosel_sched_corr,
case
	when exists (select * 
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ELV_UD_VERS_DA_ELAB_ELENCO ud_da_elab
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ud_da_elab.id_strut = abil.id_organiz_applic 
				and ud_da_elab.ti_stato_ud_da_elab = 'NON_SELEZ_SCHED'
				and ud_da_elab.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
				)
			then '1'
			else '0'
end fl_ud_nosel_sched_30gg

from ORG_ENTE ente
join IAM_USER utente
 on (utente.id_user_iam > 0);

-- changeset root:1751897635013-462
CREATE OR REPLACE FORCE VIEW "APL_V_GETVAL_PARAM_BY_AATIFASC" ("TI_APPART", "ID_PARAM_APPLIC", "NM_PARAM_APPLIC", "ID_VALORE_PARAM_APPLIC", "DS_VALORE_PARAM_APPLIC", "ID_ENTE", "NM_ENTE", "ID_STRUT", "NM_STRUT", "ID_TIPO_FASCICOLO", "NM_TIPO_FASCICOLO", "ID_AA_TIPO_FASCICOLO", "AA_INI_TIPO_FASCICOLO") AS select
 'PERIODO_TIPO_FASC' ti_appart,
 par.id_param_applic, par.nm_param_applic,
 val.id_valore_param_applic, val.ds_valore_param_applic,
 ente.id_ente, ente.nm_ente,
 strut.id_strut, strut.nm_strut,
 tipo_fasc.id_tipo_fascicolo, tipo_fasc.nm_tipo_fascicolo,
 aa_tipo_fasc.id_aa_tipo_fascicolo, aa_tipo_fasc.aa_ini_tipo_fascicolo
 
from APL_PARAM_APPLIC par
join APL_VALORE_PARAM_APPLIC val
	on (val.id_param_applic = par.id_param_applic)
join DEC_AA_TIPO_FASCICOLO aa_tipo_fasc
	on (aa_tipo_fasc.id_aa_tipo_fascicolo = val.id_aa_tipo_fascicolo)
join DEC_TIPO_FASCICOLO tipo_fasc
	on (tipo_fasc.id_tipo_fascicolo = aa_tipo_fasc.id_tipo_fascicolo)
join ORG_STRUT strut
	on (strut.id_strut = tipo_fasc.id_strut)
join ORG_ENTE ente
	on (ente.id_ente = strut.id_ente)
where par.fl_appart_applic in ('1', '0')
and par.fl_appart_ambiente in ('1', '0')
and par.fl_appart_strut in ('1', '0')
and fl_appart_tipo_unita_doc = '0'
and fl_appart_aa_tipo_fascicolo = '1'

and val.ti_appart = 'PERIODO_TIPO_FASC'

UNION

select
 'STRUT' ti_appart,
 par.id_param_applic, par.nm_param_applic,
 val.id_valore_param_applic, val.ds_valore_param_applic,
 ente.id_ente, ente.nm_ente,
 strut.id_strut, strut.nm_strut,
 tipo_fasc.id_tipo_fascicolo, tipo_fasc.nm_tipo_fascicolo,
 aa_tipo_fasc.id_aa_tipo_fascicolo, aa_tipo_fasc.aa_ini_tipo_fascicolo
 
from APL_PARAM_APPLIC par
join APL_VALORE_PARAM_APPLIC val
	on (val.id_param_applic = par.id_param_applic)
join ORG_STRUT strut
	on (strut.id_strut = val.id_strut)
join DEC_TIPO_FASCICOLO tipo_fasc
	on (tipo_fasc.id_strut = strut.id_strut)
join DEC_AA_TIPO_FASCICOLO aa_tipo_fasc
	on (aa_tipo_fasc.id_tipo_fascicolo = tipo_fasc.id_tipo_fascicolo)
join ORG_ENTE ente
	on (ente.id_ente = strut.id_ente)
where par.fl_appart_applic in ('1', '0')
and par.fl_appart_ambiente in ('1', '0')
and par.fl_appart_strut = '1'
and fl_appart_tipo_unita_doc = '0'
and fl_appart_aa_tipo_fascicolo = '1'

and val.ti_appart = 'STRUT'

and not exists (select *
				from APL_VALORE_PARAM_APPLIC val_tipo_ud
				where val_tipo_ud.id_param_applic = par.id_param_applic
				and val_tipo_ud.id_tipo_unita_doc = aa_tipo_fasc.id_aa_tipo_fascicolo
				and val_tipo_ud.ti_appart = 'PERIODO_TIPO_FASC')


UNION

select
 'AMBIENTE' ti_appart,
 par.id_param_applic, par.nm_param_applic,
 val.id_valore_param_applic, val.ds_valore_param_applic,
 ente.id_ente, ente.nm_ente,
 strut.id_strut, strut.nm_strut,
 tipo_fasc.id_tipo_fascicolo, tipo_fasc.nm_tipo_fascicolo,
 aa_tipo_fasc.id_aa_tipo_fascicolo, aa_tipo_fasc.aa_ini_tipo_fascicolo
 
from APL_PARAM_APPLIC par
join APL_VALORE_PARAM_APPLIC val
	on (val.id_param_applic = par.id_param_applic)
join ORG_ENTE ente
	on (ente.id_ambiente = val.id_ambiente)
join ORG_STRUT strut
	on (strut.id_ente = ente.id_ente)
join DEC_TIPO_FASCICOLO tipo_fasc
	on (tipo_fasc.id_strut = strut.id_strut)
join DEC_AA_TIPO_FASCICOLO aa_tipo_fasc
	on (aa_tipo_fasc.id_tipo_fascicolo = tipo_fasc.id_tipo_fascicolo)

where par.fl_appart_applic in ('1', '0')
and par.fl_appart_ambiente = '1'
and par.fl_appart_strut in ('1', '0')
and fl_appart_tipo_unita_doc = '0'
and fl_appart_aa_tipo_fascicolo = '1'

and val.ti_appart = 'AMBIENTE'

and not exists (select *
				from APL_VALORE_PARAM_APPLIC val_tipo_ud
				where val_tipo_ud.id_param_applic = par.id_param_applic
				and val_tipo_ud.id_tipo_unita_doc = aa_tipo_fasc.id_aa_tipo_fascicolo
				and val_tipo_ud.ti_appart = 'PERIODO_TIPO_FASC')

and not exists (select *
				from APL_VALORE_PARAM_APPLIC val_strut
				where val_strut.id_param_applic = par.id_param_applic
				and val_strut.id_strut = strut.id_strut
				and val_strut.ti_appart = 'STRUT')

UNION

select
 'APPLIC' ti_appart,
 par.id_param_applic, par.nm_param_applic,
 val.id_valore_param_applic, val.ds_valore_param_applic,
 ente.id_ente, ente.nm_ente,
 strut.id_strut, strut.nm_strut,
 tipo_fasc.id_tipo_fascicolo, tipo_fasc.nm_tipo_fascicolo,
 aa_tipo_fasc.id_aa_tipo_fascicolo, aa_tipo_fasc.aa_ini_tipo_fascicolo
 
from APL_PARAM_APPLIC par
join APL_VALORE_PARAM_APPLIC val
	on (val.id_param_applic = par.id_param_applic)
join ORG_ENTE ente
	on (ente.id_ambiente like '%')
join ORG_STRUT strut
	on (strut.id_ente = ente.id_ente)
join DEC_TIPO_FASCICOLO tipo_fasc
	on (tipo_fasc.id_strut = strut.id_strut)
join DEC_AA_TIPO_FASCICOLO aa_tipo_fasc
	on (aa_tipo_fasc.id_tipo_fascicolo = tipo_fasc.id_tipo_fascicolo)

	
where par.fl_appart_applic = '1'
and par.fl_appart_ambiente in ('1', '0')
and par.fl_appart_strut in ('1', '0')
and fl_appart_tipo_unita_doc = '0'
and fl_appart_aa_tipo_fascicolo = '1'

and val.ti_appart = 'APPLIC'

and not exists (select *
				from APL_VALORE_PARAM_APPLIC val_tipo_ud
				where val_tipo_ud.id_param_applic = par.id_param_applic
				and val_tipo_ud.id_tipo_unita_doc = aa_tipo_fasc.id_aa_tipo_fascicolo
				and val_tipo_ud.ti_appart = 'PERIODO_TIPO_FASC')

and not exists (select *
				from APL_VALORE_PARAM_APPLIC val_strut
				where val_strut.id_param_applic = par.id_param_applic
				and val_strut.id_strut = strut.id_strut
				and val_strut.ti_appart = 'STRUT')

and not exists (select *
				from APL_VALORE_PARAM_APPLIC val_amb
				where val_amb.id_param_applic = par.id_param_applic
				and val_amb.id_ambiente = ente.id_ambiente
				and val_amb.ti_appart = 'AMBIENTE');

-- changeset root:1751897635013-463
COMMENT ON COLUMN APL_V_GETVAL_PARAM_BY_AATIFASC.ID_VALORE_PARAM_APPLIC IS 'PK.1';

-- changeset root:1751897635013-464
CREATE OR REPLACE FORCE VIEW "APL_V_GETVAL_PARAM_BY_STRUT" ("TI_APPART", "ID_PARAM_APPLIC", "NM_PARAM_APPLIC", "ID_VALORE_PARAM_APPLIC", "DS_VALORE_PARAM_APPLIC", "ID_ENTE", "NM_ENTE", "ID_STRUT", "NM_STRUT") AS select
 'STRUT' ti_appart,
 par.id_param_applic, par.nm_param_applic,
 val.id_valore_param_applic, val.ds_valore_param_applic,
 ente.id_ente, ente.nm_ente,
 strut.id_strut, strut.nm_strut
 
from APL_PARAM_APPLIC par
join APL_VALORE_PARAM_APPLIC val
	on (val.id_param_applic = par.id_param_applic)
join ORG_STRUT strut
	on (strut.id_strut = val.id_strut)
join ORG_ENTE ente
	on (ente.id_ente = strut.id_ente)
where par.fl_appart_applic in ('1', '0')
and par.fl_appart_ambiente in ('1', '0')
and par.fl_appart_strut = '1'
and fl_appart_tipo_unita_doc = '0'
and fl_appart_aa_tipo_fascicolo = '0'

and val.ti_appart = 'STRUT'

UNION

select
 'AMBIENTE' ti_appart,
 par.id_param_applic, par.nm_param_applic,
 val.id_valore_param_applic, val.ds_valore_param_applic,
 ente.id_ente, ente.nm_ente,
 strut.id_strut, strut.nm_strut
 
from APL_PARAM_APPLIC par
join APL_VALORE_PARAM_APPLIC val
	on (val.id_param_applic = par.id_param_applic)
join ORG_ENTE ente
	on (ente.id_ambiente = val.id_ambiente)
join ORG_STRUT strut
	on (strut.id_ente = ente.id_ente)
	
where par.fl_appart_applic in ('1', '0')
and par.fl_appart_ambiente = '1'
and par.fl_appart_strut = '1'
and fl_appart_tipo_unita_doc = '0'
and fl_appart_aa_tipo_fascicolo = '0'

and val.ti_appart = 'AMBIENTE'

and not exists (select *
				from APL_VALORE_PARAM_APPLIC val_strut
				where val_strut.id_param_applic = par.id_param_applic
				and val_strut.id_strut = strut.id_strut
				and val_strut.ti_appart = 'STRUT')

UNION

select
 'APPLIC' ti_appart,
 par.id_param_applic, par.nm_param_applic,
 val.id_valore_param_applic, val.ds_valore_param_applic,
 ente.id_ente, ente.nm_ente,
 strut.id_strut, strut.nm_strut
 
from APL_PARAM_APPLIC par
join APL_VALORE_PARAM_APPLIC val
	on (val.id_param_applic = par.id_param_applic)
join ORG_ENTE ente
	on (ente.id_ambiente like '%')
join ORG_STRUT strut
	on (strut.id_ente = ente.id_ente)
	
where par.fl_appart_applic = '1'
and par.fl_appart_ambiente in ('1', '0')
and par.fl_appart_strut = '1'
and fl_appart_tipo_unita_doc = '0'
and fl_appart_aa_tipo_fascicolo = '0'

and val.ti_appart = 'APPLIC'

and not exists (select *
				from APL_VALORE_PARAM_APPLIC val_strut
				where val_strut.id_param_applic = par.id_param_applic
				and val_strut.id_strut = strut.id_strut
				and val_strut.ti_appart = 'STRUT')
and not exists (select *
				from APL_VALORE_PARAM_APPLIC val_amb
				where val_amb.id_param_applic = par.id_param_applic
				and val.id_ambiente = ente.id_ambiente
				and val_amb.ti_appart = 'AMBIENTE');

-- changeset root:1751897635013-465
COMMENT ON COLUMN APL_V_GETVAL_PARAM_BY_STRUT.ID_VALORE_PARAM_APPLIC IS 'PK.1';

-- changeset root:1751897635013-466
CREATE OR REPLACE FORCE VIEW "APL_V_GETVAL_PARAM_BY_TIUD" ("TI_APPART", "ID_PARAM_APPLIC", "NM_PARAM_APPLIC", "ID_VALORE_PARAM_APPLIC", "DS_VALORE_PARAM_APPLIC", "ID_ENTE", "NM_ENTE", "ID_STRUT", "NM_STRUT", "ID_TIPO_UNITA_DOC", "NM_TIPO_UNITA_DOC") AS select
 'TIPO_UNITA_DOC' ti_appart,
 par.id_param_applic, par.nm_param_applic,
 val.id_valore_param_applic, val.ds_valore_param_applic,
 ente.id_ente, ente.nm_ente,
 strut.id_strut, strut.nm_strut,
 tipo_ud.id_tipo_unita_doc, tipo_ud.nm_tipo_unita_doc
 
from APL_PARAM_APPLIC par
join APL_VALORE_PARAM_APPLIC val
	on (val.id_param_applic = par.id_param_applic)
join DEC_TIPO_UNITA_DOC tipo_ud
	on (tipo_ud.id_tipo_unita_doc = val.id_tipo_unita_doc)
join ORG_STRUT strut
	on (strut.id_strut = tipo_ud.id_strut)
join ORG_ENTE ente
	on (ente.id_ente = strut.id_ente)
where par.fl_appart_applic in ('1', '0')
and par.fl_appart_ambiente in ('1', '0')
and par.fl_appart_strut in ('1', '0')
and fl_appart_tipo_unita_doc = '1'
and fl_appart_aa_tipo_fascicolo = '0'

and val.ti_appart = 'TIPO_UNITA_DOC'

UNION
select
 'STRUT' ti_appart,
 par.id_param_applic, par.nm_param_applic,
 val.id_valore_param_applic, val.ds_valore_param_applic,
 ente.id_ente, ente.nm_ente,
 strut.id_strut, strut.nm_strut,
 tipo_ud.id_tipo_unita_doc, tipo_ud.nm_tipo_unita_doc
 
from APL_PARAM_APPLIC par
join APL_VALORE_PARAM_APPLIC val
	on (val.id_param_applic = par.id_param_applic)
join ORG_STRUT strut
	on (strut.id_strut = val.id_strut)
join DEC_TIPO_UNITA_DOC tipo_ud
	on (tipo_ud.id_strut = strut.id_strut)
join ORG_ENTE ente
	on (ente.id_ente = strut.id_ente)
where par.fl_appart_applic in ('1', '0')
and par.fl_appart_ambiente in ('1', '0')
and par.fl_appart_strut = '1'
and fl_appart_tipo_unita_doc = '1'
and fl_appart_aa_tipo_fascicolo = '0'

and val.ti_appart = 'STRUT'

and not exists (select *
				from APL_VALORE_PARAM_APPLIC val_tipo_ud
				where val_tipo_ud.id_param_applic = par.id_param_applic
				and val_tipo_ud.id_tipo_unita_doc = tipo_ud.id_tipo_unita_doc
				and val_tipo_ud.ti_appart = 'TIPO_UNITA_DOC')


UNION

select
 'AMBIENTE' ti_appart,
 par.id_param_applic, par.nm_param_applic,
 val.id_valore_param_applic, val.ds_valore_param_applic,
 ente.id_ente, ente.nm_ente,
 strut.id_strut, strut.nm_strut,
 tipo_ud.id_tipo_unita_doc, tipo_ud.nm_tipo_unita_doc
 
from APL_PARAM_APPLIC par
join APL_VALORE_PARAM_APPLIC val
	on (val.id_param_applic = par.id_param_applic)
join ORG_ENTE ente
	on (ente.id_ambiente = val.id_ambiente)
join ORG_STRUT strut
	on (strut.id_ente = ente.id_ente)
join DEC_TIPO_UNITA_DOC tipo_ud
	on (tipo_ud.id_strut = strut.id_strut)
	
where par.fl_appart_applic in ('1', '0')
and par.fl_appart_ambiente = '1'
and par.fl_appart_strut in ('1', '0')
and fl_appart_tipo_unita_doc = '1'
and fl_appart_aa_tipo_fascicolo = '0'

and val.ti_appart = 'AMBIENTE'

and not exists (select *
				from APL_VALORE_PARAM_APPLIC val_tipo_ud
				where val_tipo_ud.id_param_applic = par.id_param_applic
				and val_tipo_ud.id_tipo_unita_doc = tipo_ud.id_tipo_unita_doc
				and val_tipo_ud.ti_appart = 'TIPO_UNITA_DOC')

and not exists (select *
				from APL_VALORE_PARAM_APPLIC val_strut
				where val_strut.id_param_applic = par.id_param_applic
				and val_strut.id_strut = strut.id_strut
				and val_strut.ti_appart = 'STRUT')

UNION

select
 'APPLIC' ti_appart,
 par.id_param_applic, par.nm_param_applic,
 val.id_valore_param_applic, val.ds_valore_param_applic,
 ente.id_ente, ente.nm_ente,
 strut.id_strut, strut.nm_strut,
 tipo_ud.id_tipo_unita_doc, tipo_ud.nm_tipo_unita_doc
 
from APL_PARAM_APPLIC par
join APL_VALORE_PARAM_APPLIC val
	on (val.id_param_applic = par.id_param_applic)
join ORG_ENTE ente
	on (ente.id_ambiente like '%')
join ORG_STRUT strut
	on (strut.id_ente = ente.id_ente)
join DEC_TIPO_UNITA_DOC tipo_ud
	on (tipo_ud.id_strut = strut.id_strut)
	
where par.fl_appart_applic = '1'
and par.fl_appart_ambiente in ('1', '0')
and par.fl_appart_strut in ('1', '0')
and fl_appart_tipo_unita_doc = '1'
and fl_appart_aa_tipo_fascicolo = '0'

and val.ti_appart = 'APPLIC'

and not exists (select *
				from APL_VALORE_PARAM_APPLIC val_tipo_ud
				where val_tipo_ud.id_param_applic = par.id_param_applic
				and val_tipo_ud.id_tipo_unita_doc = tipo_ud.id_tipo_unita_doc
				and val_tipo_ud.ti_appart = 'TIPO_UNITA_DOC')

and not exists (select *
				from APL_VALORE_PARAM_APPLIC val_strut
				where val_strut.id_param_applic = par.id_param_applic
				and val_strut.id_strut = strut.id_strut
				and val_strut.ti_appart = 'STRUT')

and not exists (select *
				from APL_VALORE_PARAM_APPLIC val_amb
				where val_amb.id_param_applic = par.id_param_applic
				and val_amb.id_ambiente = ente.id_ambiente
				and val_amb.ti_appart = 'AMBIENTE');

-- changeset root:1751897635013-467
COMMENT ON COLUMN APL_V_GETVAL_PARAM_BY_TIUD.ID_VALORE_PARAM_APPLIC IS 'PK.1';

-- changeset root:1751897635013-468
CREATE OR REPLACE FORCE VIEW "MON_V_CHK_FASC_BY_ENTE" ("ID_ENTE", "ID_USER_IAM", "FL_FASC_CORR", "FL_FASC_30GG", "FL_FASC_B30GG", "FL_FASC_ATTESA_SCHED_CORR", "FL_FASC_ATTESA_SCHED_30GG", "FL_FASC_ATTESA_SCHED_B30GG", "FL_FASC_NOSEL_SCHED_CORR", "FL_FASC_NOSEL_SCHED_30GG", "FL_FASC_NOSEL_SCHED_B30GG") AS select
 ente.id_ente,
 utente.id_user_iam,
 
--
--					fascicoli TOTALE
--
case
	when exists (select * 
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil_org, FAS_FASCICOLO fasc, IAM_ABIL_TIPO_DATO abil_dato
				where strut.id_ente = ente.id_ente
				and abil_org.id_organiz_applic = strut.id_strut
				and abil_org.id_user_iam = utente.id_user_iam
				and fasc.id_strut = abil_org.id_organiz_applic
				and trunc(fasc.ts_ini_ses) = trunc(sysdate)
								
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = fasc.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_corr,
case
	when exists (select *
				  from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil_org, MON_CONTA_FASCICOLI conta_fasc, IAM_ABIL_TIPO_DATO abil_dato
				  where strut.id_ente = ente.id_ente
				  and abil_org.id_organiz_applic = strut.id_strut
				  and abil_org.id_user_iam = utente.id_user_iam
				  and conta_fasc.id_strut = abil_org.id_organiz_applic
				  and conta_fasc.dt_rif_conta between trunc(sysdate - 30) and trunc(sysdate - 1)
				  				 
				  and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				  and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				  and abil_dato.id_tipo_dato_applic = conta_fasc.id_tipo_fascicolo
				) 
			then '1'
			else '0'
end fl_fasc_30gg,
case
	when exists (select *
				  from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil_org, MON_CONTA_FASCICOLI conta_fasc, IAM_ABIL_TIPO_DATO abil_dato
				  where strut.id_ente = ente.id_ente
				  and abil_org.id_organiz_applic = strut.id_strut
				  and abil_org.id_user_iam = utente.id_user_iam
				  and conta_fasc.id_strut = abil_org.id_organiz_applic
				  and conta_fasc.dt_rif_conta < trunc(sysdate - 30)
				  				 
				  and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				  and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				  and abil_dato.id_tipo_dato_applic = conta_fasc.id_tipo_fascicolo
				  ) 
			then '1'
			else '0'
end fl_fasc_b30gg,

--
--						fascicoli IN_ATTESA_SCHED
--
case
	when exists (select * 
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil_org, ELV_FASC_DA_ELAB_ELENCO fasc_da_elab, IAM_ABIL_TIPO_DATO abil_dato
				where strut.id_ente = ente.id_ente
				and abil_org.id_organiz_applic = strut.id_strut
				and abil_org.id_user_iam = utente.id_user_iam
				and fasc_da_elab.id_strut = abil_org.id_organiz_applic 
				and fasc_da_elab.ti_stato_fasc_da_elab = 'IN_ATTESA_SCHED'
				and trunc(fasc_da_elab.ts_vers_fascicolo) = trunc(sysdate)
								
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = fasc_da_elab.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_attesa_sched_corr,
case
	when exists (select * 
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil_org, ELV_FASC_DA_ELAB_ELENCO fasc_da_elab, IAM_ABIL_TIPO_DATO abil_dato
				where strut.id_ente = ente.id_ente
				and abil_org.id_organiz_applic = strut.id_strut
				and abil_org.id_user_iam = utente.id_user_iam
				and fasc_da_elab.id_strut = abil_org.id_organiz_applic 
				and fasc_da_elab.ti_stato_fasc_da_elab = 'IN_ATTESA_SCHED'
				and trunc(fasc_da_elab.ts_vers_fascicolo) between trunc(sysdate - 30) and trunc(sysdate - 1)
								
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = fasc_da_elab.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_attesa_sched_30gg,
case
	when exists (select * 
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil_org, ELV_FASC_DA_ELAB_ELENCO fasc_da_elab, IAM_ABIL_TIPO_DATO abil_dato
				where strut.id_ente = ente.id_ente
				and abil_org.id_organiz_applic = strut.id_strut
				and abil_org.id_user_iam = utente.id_user_iam
				and fasc_da_elab.id_strut = abil_org.id_organiz_applic 
				and fasc_da_elab.ti_stato_fasc_da_elab = 'IN_ATTESA_SCHED'
				and trunc(fasc_da_elab.ts_vers_fascicolo) < trunc(sysdate - 30)
								
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = fasc_da_elab.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_attesa_sched_b30gg,

--
--						fascicoli NON_SELEZ_SCHED
--
case
	when exists (select * 
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil_org, ELV_FASC_DA_ELAB_ELENCO fasc_da_elab, IAM_ABIL_TIPO_DATO abil_dato
				where strut.id_ente = ente.id_ente
				and abil_org.id_organiz_applic = strut.id_strut
				and abil_org.id_user_iam = utente.id_user_iam
				and fasc_da_elab.id_strut = abil_org.id_organiz_applic 
				and fasc_da_elab.ti_stato_fasc_da_elab = 'NON_SELEZ_SCHED'
				and trunc(fasc_da_elab.ts_vers_fascicolo) = trunc(sysdate)
								
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = fasc_da_elab.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_nosel_sched_corr,
case
	when exists (select * 
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil_org, ELV_FASC_DA_ELAB_ELENCO fasc_da_elab, IAM_ABIL_TIPO_DATO abil_dato
				where strut.id_ente = ente.id_ente
				and abil_org.id_organiz_applic = strut.id_strut
				and abil_org.id_user_iam = utente.id_user_iam
				and fasc_da_elab.id_strut = abil_org.id_organiz_applic 
				and fasc_da_elab.ti_stato_fasc_da_elab = 'NON_SELEZ_SCHED'
				and trunc(fasc_da_elab.ts_vers_fascicolo) between trunc(sysdate - 30) and trunc(sysdate - 1)
								
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = fasc_da_elab.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_nosel_sched_30gg,
case
	when exists (select * 
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil_org, ELV_FASC_DA_ELAB_ELENCO fasc_da_elab, IAM_ABIL_TIPO_DATO abil_dato
				where strut.id_ente = ente.id_ente
				and abil_org.id_organiz_applic = strut.id_strut
				and abil_org.id_user_iam = utente.id_user_iam
				and fasc_da_elab.id_strut = abil_org.id_organiz_applic 
				and fasc_da_elab.ti_stato_fasc_da_elab = 'NON_SELEZ_SCHED'
				and trunc(fasc_da_elab.ts_vers_fascicolo) < trunc(sysdate - 30)
								
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = fasc_da_elab.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_nosel_sched_b30gg

from ORG_ENTE ente
join IAM_USER utente
 on (utente.id_user_iam > 0);

-- changeset root:1751897635013-469
COMMENT ON COLUMN MON_V_CHK_FASC_BY_ENTE.ID_ENTE IS 'PK.1';

-- changeset root:1751897635013-470
COMMENT ON COLUMN MON_V_CHK_FASC_BY_ENTE.ID_USER_IAM IS 'PK.2';

-- changeset root:1751897635013-471
CREATE OR REPLACE FORCE VIEW "MON_V_CHK_UD_ENTE" ("ID_ENTE", "ID_USER_IAM", "FL_UD_CORR", "FL_UD_30GG", "FL_UD_ATTESA_MEM_CORR", "FL_UD_ATTESA_MEM_30GG", "FL_UD_ATTESA_SCHED_CORR", "FL_UD_ATTESA_SCHED_30GG", "FL_UD_NOSEL_SCHED_CORR", "FL_UD_NOSEL_SCHED_30GG") AS select
 ente.id_ente,
 utente.id_user_iam,
 
--
--					ud TOTALE
--
case
	when exists (select * 
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ARO_DOC doc
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and doc.id_strut = abil.id_organiz_applic
				and doc.ti_doc = 'PRINCIPALE'
				and doc.dt_creazione between trunc(sysdate) and sysdate + 1/24
				and doc.dt_annul = to_date('31/12/2444', 'dd/mm/yyyy')
				and doc.ti_creazione = 'VERSAMENTO_UNITA_DOC'
				)
			then '1'
			else '0'
end fl_ud_corr,
case
	when (select nvl(sum(ni_unita_doc_vers), 0)
		  from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, MON_CONTA_UD_DOC_COMP conta_ud
		  where strut.id_ente = ente.id_ente
		  and abil.id_organiz_applic = strut.id_strut
		  and abil.id_user_iam = utente.id_user_iam
		  and conta_ud.id_strut = abil.id_organiz_applic
		  and conta_ud.dt_rif_conta between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
		  ) -
		 (select nvl(count(*), 0)
		  from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ARO_ITEM_RICH_ANNUL_VERS item_annul, ARO_UNITA_DOC ud
		  where strut.id_ente = ente.id_ente
		  and abil.id_organiz_applic = strut.id_strut
		  and abil.id_user_iam = utente.id_user_iam
		  
		  and item_annul.id_strut = abil.id_organiz_applic
		  and item_annul.ti_item_rich_annul_vers = 'UNI_DOC'
		  and item_annul.ti_stato_item = 'ANNULLATO'
		  and ud.id_unita_doc = item_annul.id_unita_doc
		  and ud.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
		 ) != 0
			then '1'
			else '0'
end fl_ud_30gg,

--
--						ud IN_ATTESA_MEMORIZZAZIONE
--
case
	when exists (select * 
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ELV_UD_VERS_DA_ELAB_ELENCO ud_da_elab
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ud_da_elab.id_strut = abil.id_organiz_applic 
				and ud_da_elab.ti_stato_ud_da_elab = 'IN_ATTESA_MEMORIZZAZIONE'
				and ud_da_elab.dt_creazione between trunc(sysdate) and sysdate + 1/24
				)
			then '1'
			else '0'
end fl_ud_attesa_mem_corr,
case
	when exists (select * 
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ELV_UD_VERS_DA_ELAB_ELENCO ud_da_elab
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ud_da_elab.id_strut = abil.id_organiz_applic 
				and ud_da_elab.ti_stato_ud_da_elab = 'IN_ATTESA_MEMORIZZAZIONE'
				and ud_da_elab.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
				)
			then '1'
			else '0'
end fl_ud_attesa_mem_30gg,

--
--						ud IN_ATTESA_SCHED
--
case
	when exists (select * 
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ELV_UD_VERS_DA_ELAB_ELENCO ud_da_elab
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ud_da_elab.id_strut = abil.id_organiz_applic 
				and ud_da_elab.ti_stato_ud_da_elab = 'IN_ATTESA_SCHED'
				and ud_da_elab.dt_creazione between trunc(sysdate) and sysdate + 1/24
				)
			then '1'
			else '0'
end fl_ud_attesa_sched_corr,
case
	when exists (select * 
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ELV_UD_VERS_DA_ELAB_ELENCO ud_da_elab
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ud_da_elab.id_strut = abil.id_organiz_applic 
				and ud_da_elab.ti_stato_ud_da_elab = 'IN_ATTESA_SCHED'
				and ud_da_elab.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
				)
			then '1'
			else '0'
end fl_ud_attesa_sched_30gg,

--
--						ud NON_SELEZ_SCHED
--
case
	when exists (select * 
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ELV_UD_VERS_DA_ELAB_ELENCO ud_da_elab
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ud_da_elab.id_strut = abil.id_organiz_applic 
				and ud_da_elab.ti_stato_ud_da_elab = 'NON_SELEZ_SCHED'
				and ud_da_elab.dt_creazione between trunc(sysdate) and sysdate + 1/24
				)
			then '1'
end fl_ud_nosel_sched_corr,
case
	when exists (select * 
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ELV_UD_VERS_DA_ELAB_ELENCO ud_da_elab
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ud_da_elab.id_strut = abil.id_organiz_applic 
				and ud_da_elab.ti_stato_ud_da_elab = 'NON_SELEZ_SCHED'
				and ud_da_elab.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
				)
			then '1'
			else '0'
end fl_ud_nosel_sched_30gg

from ORG_ENTE ente
join IAM_USER utente
 on (utente.id_user_iam > 0);

-- changeset root:1751897635013-472
COMMENT ON COLUMN MON_V_CHK_UD_ENTE.ID_ENTE IS 'PK.1 relativa a tabella ORG_ENTE';

-- changeset root:1751897635013-473
COMMENT ON COLUMN MON_V_CHK_UD_ENTE.ID_USER_IAM IS 'PK.2 relativa a tabella IAM_USER';

-- changeset root:1751897635013-474
CREATE OR REPLACE FORCE VIEW "DEC_V_CREA_CRIT_RAGGR_TIPO_DOC" ("ID_TIPO_DOC", "ID_STRUT", "NM_CRITERIO_RAGGR", "DS_CRITERIO_RAGGR", "NI_MAX_COMP", "TI_TEMPO_SCAD_CHIUS", "NI_TEMPO_SCAD_CHIUS", "TI_TEMPO_SCAD_CHIUS_FIRME", "NI_TEMPO_SCAD_CHIUS_FIRME", "FL_FILTRO_TIPO_UNITA_DOC", "FL_FILTRO_REGISTRO_KEY", "FL_FILTRO_RANGE_REGISTRO_KEY", "FL_FILTRO_TI_ESITO_VERIF_FIRME", "FL_FILTRO_TIPO_DOC", "FL_FILTRO_SISTEMA_MIGRAZ", "FL_CRITERIO_RAGGR_FISC", "TI_VALID_ELENCO", "TI_MOD_VALID_ELENCO") AS select 
tipo_doc.id_tipo_doc id_tipo_doc,
strut.id_strut id_strut,

tipo_doc.nm_tipo_doc nm_criterio_raggr,

'Tipo documento ' || tipo_doc.nm_tipo_doc ds_criterio_raggr,

(select ds_valore_param_applic from APL_V_GETVAL_PARAM_BY_STRUT where NM_PARAM_APPLIC = 'NUM_MAX_COMP_CRITERIO_RAGGR' and id_strut = strut.id_strut ) ni_max_comp,
'GIORNI' ti_tempo_scad_chius, 30 ni_tempo_scad_chius,
'MINUTI' ti_tempo_scad_chius_firme, 1 ni_tempo_scad_chius_firme,
'0' fl_filtro_tipo_unita_doc,
'0' fl_filtro_registro_key,
'0' fl_filtro_range_registro_key,
'0' fl_filtro_ti_esito_verif_firme,
'1' fl_filtro_tipo_doc,
'0' fl_filtro_sistema_migraz,

'0' fl_criterio_raggr_fisc,


(select ds_valore_param_applic from APL_V_GETVAL_PARAM_BY_STRUT where NM_PARAM_APPLIC = 'TI_VALID_ELENCO' and id_strut = strut.id_strut ) ti_valid_elenco,

(select ds_valore_param_applic from APL_V_GETVAL_PARAM_BY_STRUT where NM_PARAM_APPLIC = 'TI_MOD_VALID_ELENCO' and id_strut = strut.id_strut ) ti_mod_valid_elenco


from DEC_TIPO_DOC tipo_doc
join ORG_STRUT strut
 on (strut.id_strut = tipo_doc.id_strut)

join ORG_ENTE ente
 on (ente.id_ente = strut.id_ente)
 
 join ORG_AMBIENTE ambiente
 on (ente.id_ambiente = ambiente.id_ambiente);

-- changeset root:1751897635013-475
COMMENT ON COLUMN DEC_V_CREA_CRIT_RAGGR_TIPO_DOC.ID_TIPO_DOC IS 'PK.1';

-- changeset root:1751897635013-476
CREATE OR REPLACE FORCE VIEW "DEC_V_CREA_CRIT_RAGGR_REGISTRO" ("ID_REGISTRO_UNITA_DOC", "ID_STRUT", "NM_CRITERIO_RAGGR", "DS_CRITERIO_RAGGR", "NI_MAX_COMP", "TI_TEMPO_SCAD_CHIUS", "NI_TEMPO_SCAD_CHIUS", "TI_TEMPO_SCAD_CHIUS_FIRME", "NI_TEMPO_SCAD_CHIUS_FIRME", "FL_FILTRO_TIPO_UNITA_DOC", "FL_FILTRO_REGISTRO_KEY", "FL_FILTRO_RANGE_REGISTRO_KEY", "FL_FILTRO_TI_ESITO_VERIF_FIRME", "FL_FILTRO_TIPO_DOC", "FL_FILTRO_SISTEMA_MIGRAZ", "FL_CRITERIO_RAGGR_FISC", "TI_VALID_ELENCO", "TI_MOD_VALID_ELENCO") AS select 
reg.id_registro_unita_doc id_registro_unita_doc,
strut.id_strut id_strut,

reg.cd_registro_unita_doc  nm_criterio_raggr,

'Registro ' || reg.cd_registro_unita_doc ds_criterio_raggr,


(select ds_valore_param_applic from APL_V_GETVAL_PARAM_BY_STRUT where NM_PARAM_APPLIC = 'NUM_MAX_COMP_CRITERIO_RAGGR' and id_strut = strut.id_strut ) ni_max_comp,
'GIORNI' ti_tempo_scad_chius, 30 ni_tempo_scad_chius,
'MINUTI' ti_tempo_scad_chius_firme, 1 ni_tempo_scad_chius_firme,
'0' fl_filtro_tipo_unita_doc,
'1' fl_filtro_registro_key,
'0' fl_filtro_range_registro_key,
'0' fl_filtro_ti_esito_verif_firme,
'0' fl_filtro_tipo_doc,
'0' fl_filtro_sistema_migraz,

case
	when reg.fl_registro_fisc = '1'
		then '1'
		else '0'
end fl_criterio_raggr_fisc,


(select ds_valore_param_applic from APL_V_GETVAL_PARAM_BY_STRUT where NM_PARAM_APPLIC = 'TI_VALID_ELENCO' and id_strut = strut.id_strut ) ti_valid_elenco,

(select ds_valore_param_applic from APL_V_GETVAL_PARAM_BY_STRUT where NM_PARAM_APPLIC = 'TI_MOD_VALID_ELENCO' and id_strut = strut.id_strut ) ti_mod_valid_elenco

from DEC_REGISTRO_UNITA_DOC reg
join ORG_STRUT strut
 on (strut.id_strut = reg.id_strut)

join ORG_ENTE ente
 on (ente.id_ente = strut.id_ente)
 
 join ORG_AMBIENTE ambiente
 on (ente.id_ambiente = ambiente.id_ambiente);

-- changeset root:1751897635013-477
COMMENT ON COLUMN DEC_V_CREA_CRIT_RAGGR_REGISTRO.ID_REGISTRO_UNITA_DOC IS 'PK.1';

-- changeset root:1751897635013-478
CREATE OR REPLACE FORCE VIEW "DEC_V_CREA_CRIT_RAGGR_TIPO_UD" ("ID_TIPO_UNITA_DOC", "ID_STRUT", "NM_CRITERIO_RAGGR", "DS_CRITERIO_RAGGR", "NI_MAX_COMP", "TI_TEMPO_SCAD_CHIUS", "NI_TEMPO_SCAD_CHIUS", "TI_TEMPO_SCAD_CHIUS_FIRME", "NI_TEMPO_SCAD_CHIUS_FIRME", "FL_FILTRO_TIPO_UNITA_DOC", "FL_FILTRO_REGISTRO_KEY", "FL_FILTRO_RANGE_REGISTRO_KEY", "FL_FILTRO_TI_ESITO_VERIF_FIRME", "FL_FILTRO_TIPO_DOC", "FL_FILTRO_SISTEMA_MIGRAZ", "FL_CRITERIO_RAGGR_FISC", "TI_VALID_ELENCO", "TI_MOD_VALID_ELENCO") AS select 
tipo_ud.id_tipo_unita_doc id_tipo_unita_doc,
strut.id_strut id_strut,

case
	when ente.nm_ente like 'provincia di piacenza' and tipo_ud.nm_tipo_unita_doc = 'Documenti informatici registrati al Protocollo Generale' then 'DOCUMENTO PROTOCOLLATO'
	else tipo_ud.nm_tipo_unita_doc  
end nm_criterio_raggr,

'Tipologia di unità documentaria ' || tipo_ud.nm_tipo_unita_doc ds_criterio_raggr,

(select ds_valore_param_applic from APL_V_GETVAL_PARAM_BY_STRUT where NM_PARAM_APPLIC = 'NUM_MAX_COMP_CRITERIO_RAGGR' and id_strut = strut.id_strut ) ni_max_comp,
'GIORNI' ti_tempo_scad_chius, 30 ni_tempo_scad_chius,
'MINUTI' ti_tempo_scad_chius_firme, 1 ni_tempo_scad_chius_firme,
'1' fl_filtro_tipo_unita_doc,
'0' fl_filtro_registro_key,
'0' fl_filtro_range_registro_key,
'0' fl_filtro_ti_esito_verif_firme,
'0' fl_filtro_tipo_doc,
'0' fl_filtro_sistema_migraz,

case
	when exists (select *
				 from dec_tipo_unita_doc_ammesso ti_ud_amm
				 where ti_ud_amm.id_tipo_unita_doc = tipo_ud.id_tipo_unita_doc
				 )
		then 
			case
				when not exists (select *
								 from dec_tipo_unita_doc_ammesso ti_ud_amm
								 join dec_registro_unita_doc reg
								  on (reg.id_registro_unita_doc = ti_ud_amm.id_registro_unita_doc)
								 
								 where ti_ud_amm.id_tipo_unita_doc = tipo_ud.id_tipo_unita_doc
								 and reg.fl_registro_fisc = '0'
								 )
					then '1'
					else '0'
			end
		else '0'
end fl_criterio_raggr_fisc,

(select ds_valore_param_applic from APL_V_GETVAL_PARAM_BY_STRUT where NM_PARAM_APPLIC = 'TI_VALID_ELENCO' and id_strut = strut.id_strut ) ti_valid_elenco,

(select ds_valore_param_applic from APL_V_GETVAL_PARAM_BY_STRUT where NM_PARAM_APPLIC = 'TI_MOD_VALID_ELENCO' and id_strut = strut.id_strut ) ti_mod_valid_elenco


from DEC_TIPO_UNITA_DOC tipo_ud
join ORG_STRUT strut
 on (strut.id_strut = tipo_ud.id_strut)

join ORG_ENTE ente
 on (ente.id_ente = strut.id_ente)

 join ORG_AMBIENTE ambiente
 on (ente.id_ambiente = ambiente.id_ambiente);

-- changeset root:1751897635013-479
COMMENT ON COLUMN DEC_V_CREA_CRIT_RAGGR_TIPO_UD.ID_TIPO_UNITA_DOC IS 'PK.1';

-- changeset root:1751897635013-480
CREATE OR REPLACE FORCE VIEW "MON_V_VIS_DOC_NON_VERS" ("ID_AMBIENTE", "ID_ENTE", "ID_STRUT", "NM_AMBIENTE", "NM_ENTE", "NM_STRUT", "ID_DOC_NON_VERS", "CD_REGISTRO_KEY_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "CD_KEY_DOC_VERS", "FL_VERIF", "FL_NON_RISOLUB", "DT_FIRST_SES_ERR", "DT_LAST_SES_ERR", "CD_ERR") AS select 
-- info di organizzazione
 amb.id_ambiente, ente.id_ente, doc_non_vers.id_strut, 
 amb.nm_ambiente, ente.nm_ente, strut.nm_strut,
 
-- info unita doc 
 doc_non_vers.id_doc_non_vers,
 doc_non_vers.cd_registro_key_unita_doc, doc_non_vers.aa_key_unita_doc, doc_non_vers.cd_key_unita_doc, doc_non_vers.cd_key_doc_vers,

 doc_non_vers.fl_verif,
 doc_non_vers.fl_non_risolub,
  
 doc_non_vers.dt_first_ses_err,
 doc_non_vers.dt_last_ses_err,
 doc_non_vers.ds_err_princ

from  VRS_V_DOC_NON_VERS doc_non_vers
join ORG_STRUT strut
 on (strut.id_strut = doc_non_vers.id_strut and strut.fl_cessato = 0)
join ORG_ENTE ente 
 on (ente.id_ente = strut.id_ente and ente.fl_cessato = 0)
join ORG_AMBIENTE amb
 on (amb.id_ambiente = ente.id_ambiente);

-- changeset root:1751897635013-481
COMMENT ON COLUMN MON_V_VIS_DOC_NON_VERS.ID_DOC_NON_VERS IS 'PK.1 relativa a tabella VRS_DOC_NON_VERS';

-- changeset root:1751897635013-482
CREATE OR REPLACE FORCE VIEW "VRS_V_LIS_XML_UPD_URN_DA_CALC" ("ID_UPD_UNITA_DOC", "ID_UNITA_DOC", "CD_REGISTRO_KEY_UNITA_DOC", "CD_REGISTRO_NORMALIZ", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC_NORMALIZ", "NM_STRUT", "CD_STRUT_NORMALIZ", "NM_ENTE", "CD_ENTE_NORMALIZ", "PG_UPD_UNITA_DOC", "ID_XML_UPD_UNITA_DOC", "TI_XML_UPD_UNITA_DOC") AS select 
 upd_ud.id_upd_unita_doc,
 ud.id_unita_doc,
 ud.cd_registro_key_unita_doc, reg.cd_registro_normaliz,
 ud.aa_key_unita_doc,
 ud.cd_key_unita_doc, ud.cd_key_unita_doc_normaliz,
 strut.nm_strut, strut.cd_strut_normaliz,
 ente.nm_ente, ente.cd_ente_normaliz,
 upd_ud.pg_upd_unita_doc,
 
 xml_upd.id_xml_upd_unita_doc,
 xml_upd.ti_xml_upd_unita_doc
 
from ARO_UPD_UNITA_DOC upd_ud
join ARO_UNITA_DOC ud
	on (ud.id_unita_doc = upd_ud.id_unita_doc)
join DEC_REGISTRO_UNITA_DOC reg
	on (reg.id_registro_unita_doc = ud.id_registro_unita_doc)
join ORG_STRUT strut
	on (strut.id_strut = ud.id_strut)
join ORG_ENTE ente
	on (ente.id_ente = strut.id_ente)
join ARO_XML_UPD_UNITA_DOC xml_upd
	on (xml_upd.id_upd_unita_doc = upd_ud.id_upd_unita_doc
	and xml_upd.ds_urn_normaliz_xml is null);

-- changeset root:1751897635013-483
COMMENT ON COLUMN VRS_V_LIS_XML_UPD_URN_DA_CALC.ID_XML_UPD_UNITA_DOC IS 'PK.1';

-- changeset root:1751897635013-484
CREATE OR REPLACE FORCE VIEW "MON_V_VIS_UD_UPD_KO" ("ID_ENTE", "ID_STRUT", "ID_TIPO_UNITA_DOC_LAST", "NM_TIPO_UNITA_DOC_LAST", "ID_REGISTRO_UNITA_DOC_LAST", "ID_TIPO_DOC_PRINC_LAST", "NM_TIPO_DOC_PRINC_LAST", "TI_STATO_UPD_UD_KO", "ID_SES_UPD_UD_KO_LAST", "ID_UPD_UNITA_DOC_KO", "DS_TS_INI_LAST_SES", "DS_TS_FINE_LAST_SES", "CD_VERSIONE_WS", "DS_ENTE_STRUT", "DS_UNITA_DOC", "ID_CONTROLLO_WS_PRINC", "CD_CONTROLLO_WS_PRINC", "ID_ERR_SACER_PRINC", "CD_ERR_PRINC", "DS_ERR_PRINC", "ID_USER_IAM", "NM_USERID", "ID_XML_SES_UPD_KO_RICH_LAST", "BL_XML_RICH_LAST", "ID_XML_SES_UPD_KO_RISP_LAST", "BL_XML_RISP_LAST") AS select
 ente.id_ente, 
 strut.id_strut, 
 upd_ud_ko.id_tipo_unita_doc_last, ti_ud.nm_tipo_unita_doc nm_tipo_unita_doc_last,
 upd_ud_ko.id_registro_unita_doc_last, 
 upd_ud_ko.id_tipo_doc_princ_last, ti_doc_princ.nm_tipo_doc nm_tipo_doc_princ_last,
 
 upd_ud_ko.ti_stato_udp_ud_ko ti_stato_upd_ud_ko,
 
 upd_ud_ko.id_ses_upd_ud_ko_last,
 ses_upd_ko.id_upd_unita_doc_ko,
 to_char(ses_upd_ko.ts_ini_ses, 'dd/mm/yyyy hh24:mi:ssxff') ds_ts_ini_last_ses,
 to_char(ses_upd_ko.ts_fine_ses, 'dd/mm/yyyy hh24:mi:ssxff') ds_ts_fine_last_ses,
 ses_upd_ko.cd_versione_ws,
 
 ente.nm_ente || '/' || strut.nm_strut ds_ente_strut,
 upd_ud_ko.cd_registro_key_unita_doc || '-' || upd_ud_ko.aa_key_unita_doc || '-' || upd_ud_ko.cd_key_unita_doc ds_unita_doc,
 
 ses_upd_ko.id_controllo_ws_princ id_controllo_ws_princ, contr_princ.cd_controllo_ws cd_controllo_ws_princ,
 ses_upd_ko.id_err_sacer_princ, err_princ.cd_err cd_err_princ, ses_upd_ko.ds_err_princ,
 
 usr_vers.id_user_iam, usr_vers.nm_userid,
 
 xml_rich.id_xml_ses_upd_unita_doc_ko id_xml_ses_upd_ko_rich_last, xml_rich.bl_xml bl_xml_rich_last,
 xml_risp.id_xml_ses_upd_unita_doc_ko id_xml_ses_upd_ko_risp_last, xml_risp.bl_xml bl_xml_risp_last
 
from VRS_UPD_UNITA_DOC_KO upd_ud_ko
join ORG_STRUT strut
	on (strut.id_strut = upd_ud_ko.id_strut)
join ORG_ENTE ente
	on (ente.id_ente = strut.id_ente)
join DEC_TIPO_UNITA_DOC ti_ud
	on (ti_ud.id_tipo_unita_doc = upd_ud_ko.id_tipo_unita_doc_last)
join DEC_TIPO_DOC ti_doc_princ
	on (ti_doc_princ.id_tipo_doc = upd_ud_ko.id_tipo_doc_princ_last)
left join DEC_CONTROLLO_WS contr_princ
	on (contr_princ.id_controllo_ws = upd_ud_ko.id_controllo_ws_princ)
left join DEC_ERR_SACER err_princ
	on (err_princ.id_err_sacer = upd_ud_ko.id_err_sacer_princ)

join VRS_SES_UPD_UNITA_DOC_KO ses_upd_ko
	on (ses_upd_ko.id_ses_upd_unita_doc_ko = upd_ud_ko.id_ses_upd_ud_ko_last)
left join IAM_USER usr_vers
	on (usr_vers.id_user_iam = ses_upd_ko.id_user_iam)

join VRS_XML_SES_UPD_UNITA_DOC_KO xml_rich
	on (xml_rich.id_ses_upd_ud_ko = ses_upd_ko.id_ses_upd_unita_doc_ko
	and xml_rich.ti_xml = 'RICHIESTA')

join VRS_XML_SES_UPD_UNITA_DOC_KO xml_risp
	on (xml_risp.id_ses_upd_ud_ko = ses_upd_ko.id_ses_upd_unita_doc_ko
	and xml_risp.ti_xml = 'RISPOSTA');

-- changeset root:1751897635013-485
COMMENT ON COLUMN MON_V_VIS_UD_UPD_KO.ID_UPD_UNITA_DOC_KO IS 'PK.1';

-- changeset root:1751897635013-486
CREATE OR REPLACE FORCE VIEW "MON_V_VIS_UPD_UD_KO" ("ID_ENTE", "ID_STRUT", "ID_TIPO_UNITA_DOC", "NM_TIPO_UNITA_DOC", "ID_REGISTRO_UNITA_DOC", "ID_TIPO_DOC_PRINC", "NM_TIPO_DOC_PRINC", "TI_STATO_SES_UPD_KO", "ID_SES_UPD_UNITA_DOC_KO", "ID_UPD_UNITA_DOC_KO", "DS_TS_INI_SES", "DS_TS_FINE_SES", "CD_VERSIONE_WS", "DS_ENTE_STRUT", "DS_UNITA_DOC", "ID_CONTROLLO_WS_PRINC", "CD_CONTROLLO_WS_PRINC", "ID_ERR_SACER_PRINC", "CD_ERR_PRINC", "DS_ERR_PRINC", "ID_USER_IAM", "NM_USERID", "ID_XML_SES_UPD_KO_RICH", "BL_XML_RICH", "ID_XML_SES_UPD_KO_RISP", "BL_XML_RISP") AS select
 ente.id_ente, 
 strut.id_strut, 
 ses_upd_ko.id_tipo_unita_doc, ti_ud.nm_tipo_unita_doc,
 ses_upd_ko.id_registro_unita_doc, 
 ses_upd_ko.id_tipo_doc_princ, ti_doc_princ.nm_tipo_doc nm_tipo_doc_princ,
 
 ses_upd_ko.ti_stato_ses_upd_ko,
 
 ses_upd_ko.id_ses_upd_unita_doc_ko,
 ses_upd_ko.id_upd_unita_doc_ko,
 to_char(ses_upd_ko.ts_ini_ses, 'dd/mm/yyyy hh24:mi:ssxff') ds_ts_ini_ses,
 to_char(ses_upd_ko.ts_fine_ses, 'dd/mm/yyyy hh24:mi:ssxff') ds_ts_ini_ses,
 ses_upd_ko.cd_versione_ws,

 ente.nm_ente || '/' || strut.nm_strut ds_ente_strut,
 upd_ud_ko.cd_registro_key_unita_doc || '-' || upd_ud_ko.aa_key_unita_doc || '-' || upd_ud_ko.cd_key_unita_doc ds_unita_doc,

 ses_upd_ko.id_controllo_ws_princ, contr_princ.cd_controllo_ws cd_controllo_ws_princ,
 ses_upd_ko.id_err_sacer_princ, err_princ.cd_err cd_err_princ, ses_upd_ko.ds_err_princ,

 usr_vers.id_user_iam, usr_vers.nm_userid,

 xml_rich.id_xml_ses_upd_unita_doc_ko id_xml_ses_upd_ko_rich, xml_rich.bl_xml bl_xml_rich,
 xml_risp.id_xml_ses_upd_unita_doc_ko id_xml_ses_upd_ko_risp, xml_risp.bl_xml bl_xml_risp

from VRS_SES_UPD_UNITA_DOC_KO ses_upd_ko
join ORG_STRUT strut
	on (strut.id_strut = ses_upd_ko.id_strut)
join ORG_ENTE ente
	on (ente.id_ente = strut.id_ente)
join DEC_TIPO_UNITA_DOC ti_ud
	on (ti_ud.id_tipo_unita_doc = ses_upd_ko.id_tipo_unita_doc)
join DEC_TIPO_DOC ti_doc_princ
	on (ti_doc_princ.id_tipo_doc = ses_upd_ko.id_tipo_doc_princ)
join DEC_CONTROLLO_WS contr_princ
	on (contr_princ.id_controllo_ws = ses_upd_ko.id_controllo_ws_princ)
join DEC_ERR_SACER err_princ
	on (err_princ.id_err_sacer = ses_upd_ko.id_err_sacer_princ)
left join IAM_USER usr_vers
	on (usr_vers.id_user_iam = ses_upd_ko.id_user_iam)

join VRS_UPD_UNITA_DOC_KO upd_ud_ko
	on (upd_ud_ko.id_upd_unita_doc_ko = ses_upd_ko.id_upd_unita_doc_ko)

join VRS_XML_SES_UPD_UNITA_DOC_KO xml_rich
	on (xml_rich.id_ses_upd_ud_ko = ses_upd_ko.id_ses_upd_unita_doc_ko
	and xml_rich.ti_xml = 'RICHIESTA')

join VRS_XML_SES_UPD_UNITA_DOC_KO xml_risp
	on (xml_risp.id_ses_upd_ud_ko = ses_upd_ko.id_ses_upd_unita_doc_ko
	and xml_risp.ti_xml = 'RISPOSTA');

-- changeset root:1751897635013-487
COMMENT ON COLUMN MON_V_VIS_UPD_UD_KO.ID_SES_UPD_UNITA_DOC_KO IS 'PK.1';

-- changeset root:1751897635013-488
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_UD_AMB" ("ID_AMBIENTE", "ID_USER_IAM", "TI_STATO_UD", "TI_DT_CREAZIONE", "NI_UD") AS select 
 ente.id_ambiente id_ambiente, 
 abil.id_user_iam id_user_iam,
 ud_da_elab.ti_stato_ud_da_elab ti_stato_ud,
 case
	when ud_da_elab.dt_creazione between trunc(sysdate) and sysdate + 1/24 then 'OGGI'
	else '30gg'
 end ti_dt_creazione,
 
 count(*) ni_ud

from ORG_ENTE ente
join ORG_STRUT strut
 on (strut.id_ente = ente.id_ente)
join IAM_ABIL_ORGANIZ abil
 on (abil.id_organiz_applic = strut.id_strut)
join ELV_UD_VERS_DA_ELAB_ELENCO ud_da_elab
 on (ud_da_elab.id_strut = abil.id_organiz_applic)
where ud_da_elab.dt_creazione between trunc(sysdate - 30) and sysdate + 1/24

group by ente.id_ambiente, abil.id_user_iam, ud_da_elab.ti_stato_ud_da_elab,  
		 case
			when ud_da_elab.dt_creazione between trunc(sysdate) and sysdate + 1/24 then 'OGGI'
			else '30gg'
		 end

UNION

select
 tmp.id_ambiente id_ambiente, 
 tmp.id_user_iam id_user_iam, 
 'TOTALE' ti_stato_ud, 
 'OGGI' ti_dt_creazione, 
 tmp.ni_ud
from (select 
	   ente.id_ambiente id_ambiente, 
	   abil.id_user_iam,
	   count(*) ni_ud
	  from ORG_ENTE ente
	  join ORG_STRUT strut
	   on (strut.id_ente = ente.id_ente)
	  join IAM_ABIL_ORGANIZ abil
	    on (abil.id_organiz_applic = strut.id_strut)
	  join ARO_DOC doc
	    on (doc.id_strut = abil.id_organiz_applic)
	  where doc.ti_doc = 'PRINCIPALE'
	  and doc.dt_creazione between trunc(sysdate) and sysdate + 1/24
	  and doc.dt_annul = to_date('31/12/2444', 'dd/mm/yyyy')
	  and doc.ti_creazione = 'VERSAMENTO_UNITA_DOC'
	  group by ente.id_ambiente, abil.id_user_iam
	) tmp

UNION

select 
 tmp.id_ambiente id_ambiente, 
 tmp.id_user_iam id_user_iam, 
 tmp.ti_stato_ud ti_stato_ud, 
 tmp.ti_dt_creazione ti_dt_creazione,
 sum(tmp.ni_ud) ni_ud
from (select 
	   ente.id_ambiente id_ambiente, 
	   abil.id_user_iam, 
	   'TOTALE' ti_stato_ud, 
	   '30gg' ti_dt_creazione,
		(select nvl(sum(ni_unita_doc_vers), 0)
		 from MON_CONTA_UD_DOC_COMP conta_ud
	     where conta_ud.id_strut = abil.id_organiz_applic
		 and conta_ud.dt_rif_conta between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
		) -
		(select nvl(count(*), 0)
		 from ARO_ITEM_RICH_ANNUL_VERS item_annul, ARO_UNITA_DOC ud
		 where item_annul.id_strut = abil.id_organiz_applic
		 and item_annul.ti_item_rich_annul_vers = 'UNI_DOC'
		 and item_annul.ti_stato_item = 'ANNULLATO'
		 and ud.id_unita_doc = item_annul.id_unita_doc
		 and ud.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
		) ni_ud
	  from ORG_ENTE ente
	  join ORG_STRUT strut
	   on (strut.id_ente = ente.id_ente)
	  join IAM_ABIL_ORGANIZ abil
	    on (abil.id_organiz_applic = strut.id_strut)
	) tmp

group by tmp.id_ambiente, tmp.id_user_iam, tmp.ti_stato_ud, tmp.ti_dt_creazione;

-- changeset root:1751897635013-489
COMMENT ON COLUMN MON_V_CNT_UD_AMB.ID_AMBIENTE IS 'PK.1 relativa a tabella ORG_AMBIENTE';

-- changeset root:1751897635013-490
COMMENT ON COLUMN MON_V_CNT_UD_AMB.ID_USER_IAM IS 'PK.2 relativa a tabella IAM_USER';

-- changeset root:1751897635013-491
COMMENT ON COLUMN MON_V_CNT_UD_AMB.TI_STATO_UD IS 'PK.3';

-- changeset root:1751897635013-492
COMMENT ON COLUMN MON_V_CNT_UD_AMB.TI_DT_CREAZIONE IS 'PK.4';

-- changeset root:1751897635013-493
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_UD_AMB_B30" ("ID_AMBIENTE", "ID_USER_IAM", "TI_STATO_UD", "NI_UD") AS select 
 ente.id_ambiente id_ambiente, 
 abil.id_user_iam id_user_iam,
 ud_da_elab.ti_stato_ud_da_elab ti_stato_ud,
 
 count(*) ni_ud

from ORG_ENTE ente
join ORG_STRUT strut
 on (strut.id_ente = ente.id_ente)
join IAM_ABIL_ORGANIZ abil
 on (abil.id_organiz_applic = strut.id_strut)
join ELV_UD_VERS_DA_ELAB_ELENCO ud_da_elab
 on (ud_da_elab.id_strut = abil.id_organiz_applic)
where ud_da_elab.dt_creazione between to_date('01-01-2000', 'dd-mm-yyyy') and to_date(to_char(trunc(sysdate - 31), 'dd-mm-yyyy') || '23:59:59', 'dd-mm-yyyy hh24:mi:ss')

group by ente.id_ambiente, abil.id_user_iam, ud_da_elab.ti_stato_ud_da_elab

UNION

select 
 tmp.id_ambiente id_ambiente, 
 tmp.id_user_iam id_user_iam, 
 tmp.ti_stato_ud ti_stato_ud, 
 sum(tmp.ni_ud) ni_ud
from (select 
	   ente.id_ambiente id_ambiente, 
	   abil.id_user_iam, 
	   'TOTALE' ti_stato_ud, 
	   '30gg' ti_dt_creazione,
		(select nvl(sum(ni_unita_doc_vers), 0)
		 from MON_CONTA_UD_DOC_COMP conta_ud
	     where conta_ud.id_strut = abil.id_organiz_applic
		 and conta_ud.dt_rif_conta between to_date('01-01-2000', 'dd-mm-yyyy') and to_date(to_char(trunc(sysdate - 31), 'dd-mm-yyyy') || '23:59:59', 'dd-mm-yyyy hh24:mi:ss')
		) -
		(select nvl(count(*), 0)
		 from ARO_ITEM_RICH_ANNUL_VERS item_annul, ARO_UNITA_DOC ud
		 where item_annul.id_strut = abil.id_organiz_applic
		 and item_annul.ti_item_rich_annul_vers = 'UNI_DOC'
		 and item_annul.ti_stato_item = 'ANNULLATO'
		 and ud.id_unita_doc = item_annul.id_unita_doc
		 and ud.dt_creazione between to_date('01-01-2000', 'dd-mm-yyyy') and to_date(to_char(trunc(sysdate - 31), 'dd-mm-yyyy') || '23:59:59', 'dd-mm-yyyy hh24:mi:ss')
		) ni_ud
	  from ORG_ENTE ente
	  join ORG_STRUT strut
	   on (strut.id_ente = ente.id_ente)
	  join IAM_ABIL_ORGANIZ abil
	    on (abil.id_organiz_applic = strut.id_strut)
	) tmp

group by tmp.id_ambiente, tmp.id_user_iam, tmp.ti_stato_ud;

-- changeset root:1751897635013-494
COMMENT ON COLUMN MON_V_CNT_UD_AMB_B30.ID_AMBIENTE IS 'PK.1';

-- changeset root:1751897635013-495
COMMENT ON COLUMN MON_V_CNT_UD_AMB_B30.ID_USER_IAM IS 'PK.2';

-- changeset root:1751897635013-496
COMMENT ON COLUMN MON_V_CNT_UD_AMB_B30.TI_STATO_UD IS 'PK.3';

-- changeset root:1751897635013-497
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_DOC_AMB" ("ID_AMBIENTE", "ID_USER_IAM", "TI_STATO_DOC", "TI_DT_CREAZIONE", "NI_DOC") AS select 
 ente.id_ambiente id_ambiente, 
 abil.id_user_iam id_user_iam,
 doc_da_elab.ti_stato_doc_da_elab ti_stato_ud,
 case
	when doc_da_elab.dt_creazione between trunc(sysdate) and sysdate + 1/24 then 'OGGI'
	else '30gg'
 end ti_dt_creazione,
 
 count(*) ni_doc

from ORG_ENTE ente
join ORG_STRUT strut
 on (strut.id_ente = ente.id_ente)
join IAM_ABIL_ORGANIZ abil
 on (abil.id_organiz_applic = strut.id_strut)
join ELV_DOC_AGG_DA_ELAB_ELENCO doc_da_elab
 on (doc_da_elab.id_strut = abil.id_organiz_applic)
where doc_da_elab.dt_creazione between trunc(sysdate - 30) and sysdate + 1/24

group by ente.id_ambiente, abil.id_user_iam, doc_da_elab.ti_stato_doc_da_elab,  
		 case
			when doc_da_elab.dt_creazione between trunc(sysdate) and sysdate + 1/24 then 'OGGI'
			else '30gg'
		 end

UNION

select
 tmp.id_ambiente id_ambiente, 
 tmp.id_user_iam id_user_iam, 
 'TOTALE' ti_stato_ud, 
 'OGGI' ti_dt_creazione, 
 tmp.ni_doc
from (select 
	   ente.id_ambiente id_ambiente, 
	   abil.id_user_iam,
	   count(*) ni_doc
	  from ORG_ENTE ente
	  join ORG_STRUT strut
	   on (strut.id_ente = ente.id_ente)
	  join IAM_ABIL_ORGANIZ abil
	    on (abil.id_organiz_applic = strut.id_strut)
	  join ARO_DOC doc
	    on (doc.id_strut = abil.id_organiz_applic)
	  where doc.dt_creazione between trunc(sysdate) and sysdate + 1/24
	  and doc.dt_annul = to_date('31/12/2444', 'dd/mm/yyyy')
	  and doc.ti_creazione = 'AGGIUNTA_DOCUMENTO'
	  group by ente.id_ambiente, abil.id_user_iam
	) tmp

UNION

select 
 tmp.id_ambiente id_ambiente, 
 tmp.id_user_iam id_user_iam, 
 tmp.ti_stato_doc ti_stato_doc, 
 tmp.ti_dt_creazione ti_dt_creazione,
 sum(tmp.ni_doc) ni_doc
from (select 
	   ente.id_ambiente id_ambiente, 
	   abil.id_user_iam, 
	   'TOTALE' ti_stato_doc, 
	   '30gg' ti_dt_creazione,
		(select nvl(sum(ni_doc_agg), 0)
		 from MON_CONTA_UD_DOC_COMP conta_doc
	     where conta_doc.id_strut = abil.id_organiz_applic
		 and conta_doc.dt_rif_conta between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
		) -
		(select nvl(count(*), 0)
		 from ARO_ITEM_RICH_ANNUL_VERS item_annul, ARO_DOC doc
		 where item_annul.id_strut = abil.id_organiz_applic
		 and item_annul.ti_item_rich_annul_vers = 'UNI_DOC'
		 and item_annul.ti_stato_item = 'ANNULLATO'
		 and doc.id_unita_doc = item_annul.id_unita_doc
		 and doc.ti_creazione = 'AGGIUNTA_DOCUMENTO'
		 and doc.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
		) ni_doc
	  from ORG_ENTE ente
	  join ORG_STRUT strut
	   on (strut.id_ente = ente.id_ente)
	  join IAM_ABIL_ORGANIZ abil
	    on (abil.id_organiz_applic = strut.id_strut)
	) tmp

group by tmp.id_ambiente, tmp.id_user_iam, tmp.ti_stato_doc, tmp.ti_dt_creazione;

-- changeset root:1751897635013-498
COMMENT ON COLUMN MON_V_CNT_DOC_AMB.ID_AMBIENTE IS 'PK.1 relativa a tabella ORG_AMBIENTE';

-- changeset root:1751897635013-499
COMMENT ON COLUMN MON_V_CNT_DOC_AMB.ID_USER_IAM IS 'PK.2 relativa a tabella IAM_USER';

-- changeset root:1751897635013-500
COMMENT ON COLUMN MON_V_CNT_DOC_AMB.TI_STATO_DOC IS 'PK.3';

-- changeset root:1751897635013-501
COMMENT ON COLUMN MON_V_CNT_DOC_AMB.TI_DT_CREAZIONE IS 'PK.4';

-- changeset root:1751897635013-502
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_DOC_AMB_B30" ("ID_AMBIENTE", "ID_USER_IAM", "TI_STATO_DOC", "NI_DOC") AS select 
 ente.id_ambiente id_ambiente, 
 abil.id_user_iam id_user_iam,
 doc_da_elab.ti_stato_doc_da_elab ti_stato_ud,
 
 count(*) ni_doc

from ORG_ENTE ente
join ORG_STRUT strut
 on (strut.id_ente = ente.id_ente)
join IAM_ABIL_ORGANIZ abil
 on (abil.id_organiz_applic = strut.id_strut)
join ELV_DOC_AGG_DA_ELAB_ELENCO doc_da_elab
 on (doc_da_elab.id_strut = abil.id_organiz_applic)
where doc_da_elab.dt_creazione between to_date('01-01-2000', 'dd-mm-yyyy') and to_date(to_char(trunc(sysdate - 31), 'dd-mm-yyyy') || '23:59:59', 'dd-mm-yyyy hh24:mi:ss')

group by ente.id_ambiente, abil.id_user_iam, doc_da_elab.ti_stato_doc_da_elab

UNION

select 
 tmp.id_ambiente id_ambiente, 
 tmp.id_user_iam id_user_iam, 
 tmp.ti_stato_doc ti_stato_doc, 
 sum(tmp.ni_doc) ni_doc
from (select 
	   ente.id_ambiente id_ambiente, 
	   abil.id_user_iam, 
	   'TOTALE' ti_stato_doc, 
	   '30gg' ti_dt_creazione,
		(select nvl(sum(ni_doc_agg), 0)
		 from MON_CONTA_UD_DOC_COMP conta_doc
	     where conta_doc.id_strut = abil.id_organiz_applic
		 and conta_doc.dt_rif_conta between to_date('01-01-2000', 'dd-mm-yyyy') and to_date(to_char(trunc(sysdate - 31), 'dd-mm-yyyy') || '23:59:59', 'dd-mm-yyyy hh24:mi:ss')
		) -
		(select nvl(count(*), 0)
		 from ARO_ITEM_RICH_ANNUL_VERS item_annul, ARO_DOC doc
		 where item_annul.id_strut = abil.id_organiz_applic
		 and item_annul.ti_item_rich_annul_vers = 'UNI_DOC'
		 and item_annul.ti_stato_item = 'ANNULLATO'
		 and doc.id_unita_doc = item_annul.id_unita_doc
		 and doc.ti_creazione = 'AGGIUNTA_DOCUMENTO'
		 and doc.dt_creazione between to_date('01-01-2000', 'dd-mm-yyyy') and to_date(to_char(trunc(sysdate - 31), 'dd-mm-yyyy') || '23:59:59', 'dd-mm-yyyy hh24:mi:ss')
		) ni_doc
	  from ORG_ENTE ente
	  join ORG_STRUT strut
	   on (strut.id_ente = ente.id_ente)
	  join IAM_ABIL_ORGANIZ abil
	    on (abil.id_organiz_applic = strut.id_strut)
	) tmp

group by tmp.id_ambiente, tmp.id_user_iam, tmp.ti_stato_doc;

-- changeset root:1751897635013-503
COMMENT ON COLUMN MON_V_CNT_DOC_AMB_B30.ID_AMBIENTE IS 'PK.1';

-- changeset root:1751897635013-504
COMMENT ON COLUMN MON_V_CNT_DOC_AMB_B30.ID_USER_IAM IS 'PK.2';

-- changeset root:1751897635013-505
COMMENT ON COLUMN MON_V_CNT_DOC_AMB_B30.TI_STATO_DOC IS 'PK.3';

-- changeset root:1751897635013-506
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_FASC_BY_AMB" ("ID_AMBIENTE", "ID_USER_IAM", "TI_STATO_FASC", "TI_DT_CREAZIONE", "NI_FASC") AS select 																				-- conta fasc per stato IN_ATTESA_SCHED o NON_SELEZ_SCHED per OGGI e per 30gg e per before 30gg
 ente.id_ambiente id_ambiente, 
 abil_org.id_user_iam id_user_iam,
 fasc_da_elab.ti_stato_fasc_da_elab ti_stato_fasc,
 case
	when trunc(fasc_da_elab.ts_vers_fascicolo) = trunc(sysdate) then 'OGGI'
	when trunc(fasc_da_elab.ts_vers_fascicolo) between trunc (sysdate - 30) and trunc(sysdate - 1) then '30gg'
	else 'before30gg'
 end ti_dt_creazione,
 
 count(*) ni_fasc

from ORG_ENTE ente
join ORG_STRUT strut
 on (strut.id_ente = ente.id_ente)
join IAM_ABIL_ORGANIZ abil_org
 on (abil_org.id_organiz_applic = strut.id_strut)
join ELV_FASC_DA_ELAB_ELENCO fasc_da_elab
 on (fasc_da_elab.id_strut = abil_org.id_organiz_applic)
 
join IAM_ABIL_TIPO_DATO abil_dato
 on (abil_dato.id_abil_organiz = abil_org.id_abil_organiz
 and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
 and abil_dato.id_tipo_dato_applic = fasc_da_elab.id_tipo_fascicolo)

group by ente.id_ambiente, abil_org.id_user_iam, fasc_da_elab.ti_stato_fasc_da_elab,  
		 case
			when trunc(fasc_da_elab.ts_vers_fascicolo) = trunc(sysdate) then 'OGGI'
			when trunc(fasc_da_elab.ts_vers_fascicolo) between trunc (sysdate - 30) and trunc(sysdate - 1) then '30gg'
			else 'before30gg'
		 end

UNION

select																				-- conta fasc per stato TOTALE per OGGI
 tmp.id_ambiente id_ambiente, 
 tmp.id_user_iam id_user_iam, 
 'TOTALE' ti_stato_fasc, 
 'OGGI' ti_dt_creazione, 
 tmp.ni_fasc
from (select 
	   ente.id_ambiente, 
	   abil_org.id_user_iam,
	   count(*) ni_fasc
	  from ORG_ENTE ente
	  join ORG_STRUT strut
	   on (strut.id_ente = ente.id_ente)
	  join IAM_ABIL_ORGANIZ abil_org
	    on (abil_org.id_organiz_applic = strut.id_strut)
	  join FAS_FASCICOLO fasc
	    on (fasc.id_strut = abil_org.id_organiz_applic)
	   
	  join IAM_ABIL_TIPO_DATO abil_dato
		on (abil_dato.id_abil_organiz = abil_org.id_abil_organiz
		and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
		and abil_dato.id_tipo_dato_applic = fasc.id_tipo_fascicolo)

	  where trunc(fasc.ts_ini_ses) = trunc(sysdate)
	  
	  group by ente.id_ambiente, abil_org.id_user_iam
	) tmp


UNION

select 																				-- conta fasc per stato TOTALE per 30gg e per before 30gg
 ente.id_ambiente, 
 abil_org.id_user_iam, 
 'TOTALE' ti_stato_fasc, 
 case
	when conta_fasc.dt_rif_conta between trunc (sysdate - 30) and trunc(sysdate - 1) then '30gg'
	else 'before30gg'
 end ti_dt_creazione,
 sum (ni_fascicoli_vers) ni_fasc

from ORG_ENTE ente
join ORG_STRUT strut
on (strut.id_ente = ente.id_ente)
join IAM_ABIL_ORGANIZ abil_org
on (abil_org.id_organiz_applic = strut.id_strut)
join MON_CONTA_FASCICOLI conta_fasc
on (conta_fasc.id_strut = abil_org.id_organiz_applic)
	   
join IAM_ABIL_TIPO_DATO abil_dato
 on (abil_dato.id_abil_organiz = abil_org.id_abil_organiz
 and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
 and abil_dato.id_tipo_dato_applic = conta_fasc.id_tipo_fascicolo)
 
group by  ente.id_ambiente, abil_org.id_user_iam, 
		'TOTALE', 
		case
			when conta_fasc.dt_rif_conta between trunc (sysdate - 30) and trunc(sysdate - 1) then '30gg'
			else 'before30gg'
		 end;

-- changeset root:1751897635013-507
COMMENT ON COLUMN MON_V_CNT_FASC_BY_AMB.ID_AMBIENTE IS 'PK.1';

-- changeset root:1751897635013-508
COMMENT ON COLUMN MON_V_CNT_FASC_BY_AMB.ID_USER_IAM IS 'PK.2';

-- changeset root:1751897635013-509
COMMENT ON COLUMN MON_V_CNT_FASC_BY_AMB.TI_STATO_FASC IS 'PK.3';

-- changeset root:1751897635013-510
COMMENT ON COLUMN MON_V_CNT_FASC_BY_AMB.TI_DT_CREAZIONE IS 'PK.4';

-- changeset root:1751897635013-511
CREATE OR REPLACE FORCE VIEW "ELV_V_LIS_ELENCO_DA_MARCARE" ("ID_ELENCO_VERS", "ID_AMBIENTE", "NM_AMBIENTE", "ID_ENTE", "NM_ENTE", "ID_STRUT", "NM_STRUT", "ID_USER_IAM", "NM_ELENCO", "ID_CRITERIO_RAGGR", "NM_CRITERIO_RAGGR", "TI_GEST_ELENCO") AS select
 ele_da_elab.id_elenco_vers,
 amb.id_ambiente, amb.nm_ambiente, 
 ente.id_ente, ente.nm_ente, 
 ele_da_elab.id_strut, strut.nm_strut, 
 abil_org.id_user_iam,
 
 ele.nm_elenco,
 
 ele.id_criterio_raggr, crit.nm_criterio_raggr,
 
 case
	when ele.ti_gest_elenco is not null
		then ele.ti_gest_elenco
		else
			case
				when crit.ti_gest_elenco_criterio is not null
					then crit.ti_gest_elenco_criterio
					else
						case
							when ele.fl_elenco_standard = '0'
								then  
                                (select val.ds_valore_param_applic from apl_v_getval_param_by_strut val  where val.id_strut = strut.id_strut and val.nm_param_applic = 'TI_GEST_ELENCO_NOSTD' )                               
							when ele.fl_elenco_standard = '1'
							and ele.fl_elenco_fisc = '0'
								then 
                                 (select val.ds_valore_param_applic from apl_v_getval_param_by_strut val  where val.id_strut = strut.id_strut and val.nm_param_applic = 'TI_GEST_ELENCO_STD_NOFISC' )
                             else 
                             (select val.ds_valore_param_applic from apl_v_getval_param_by_strut val  where val.id_strut = strut.id_strut and val.nm_param_applic = 'TI_GEST_ELENCO_STD_FISC' )
                             
						end
			end
 end ti_gest_elenco

from ELV_ELENCO_VERS_DA_ELAB ele_da_elab
join ORG_STRUT strut
 on (strut.id_strut = ele_da_elab.id_strut and strut.fl_cessato = 0)
join ORG_ENTE ente
on (ente.id_ente = strut.id_ente and ente.fl_cessato = 0)
join ORG_AMBIENTE amb
 on (amb.id_ambiente = ente.id_ambiente)

join IAM_ABIL_ORGANIZ abil_org
 on (abil_org.id_organiz_applic = strut.id_strut) 

join ELV_ELENCO_VERS ele
 on (ele.id_elenco_vers = ele_da_elab.id_elenco_vers)
 
join DEC_CRITERIO_RAGGR crit
 on (crit.id_criterio_raggr = ele_da_elab.id_criterio_raggr)
 


where ele_da_elab.ti_stato_elenco = 'ELENCO_INDICI_AIP_FIRMATO';

-- changeset root:1751897635013-512
COMMENT ON COLUMN ELV_V_LIS_ELENCO_DA_MARCARE.ID_ELENCO_VERS IS 'PK.1';

-- changeset root:1751897635013-513
CREATE OR REPLACE FORCE VIEW "ELV_V_LIS_ELENCO_VERS_STATO" ("ID_ELENCO_VERS", "ID_AMBIENTE", "NM_AMBIENTE", "ID_ENTE", "NM_ENTE", "ID_STRUT", "NM_STRUT", "ID_USER_IAM", "NM_ELENCO", "DS_ELENCO", "TI_STATO_ELENCO", "DT_CREAZIONE_ELENCO", "DT_CHIUS", "DT_FIRMA_INDICE", "NI_COMP_VERS_ELENCO", "NI_COMP_AGG_ELENCO", "NI_SIZE_VERS_ELENCO", "NI_SIZE_AGG_ELENCO", "NT_INDICE_ELENCO", "NT_ELENCO_CHIUSO", "NI_UNITA_DOC_VERS_ELENCO", "NI_DOC_AGG_ELENCO", "FL_NOTE_ELENCO", "ID_CRITERIO_RAGGR", "NM_CRITERIO_RAGGR", "DT_CREAZIONE_ELENCO_IX_AIP", "NI_INDICI_AIP", "TI_GEST_ELENCO", "FL_ELENCO_FISC", "TI_VALID_ELENCO", "TI_MOD_VALID_ELENCO", "NI_UPD_UNITA_DOC") AS select
 ele_da_elab.id_elenco_vers,
 amb.id_ambiente, amb.nm_ambiente, 
 ente.id_ente, ente.nm_ente, 
 ele_da_elab.id_strut, strut.nm_strut, 
 abil_org.id_user_iam,
 
 ele.nm_elenco, ele.ds_elenco, 
 ele_da_elab.ti_stato_elenco, 
 ele.dt_creazione_elenco, ele.dt_chius, ele.dt_firma_indice, 
 ele.ni_comp_vers_elenco, ele.ni_comp_agg_elenco ,
 ele.ni_size_vers_elenco, ele.ni_size_agg_elenco, 
 ele.nt_indice_elenco, ele.nt_elenco_chiuso,
 
 ele.ni_unita_doc_vers_elenco, ele.ni_doc_agg_elenco, 

 case
	when ele.nt_indice_elenco is not null or ele.nt_elenco_chiuso is not null
		then '1'
		else '0'
 end fl_note_elenco,
 
 ele.id_criterio_raggr, crit.nm_criterio_raggr,
 
 ele.dt_creazione_elenco_ix_aip, ele.ni_indici_AIP,
 
 case
	when ele.ti_gest_elenco is not null
		then ele.ti_gest_elenco
		else
			case
				when crit.ti_gest_elenco_criterio is not null
					then crit.ti_gest_elenco_criterio
					else
						case
							when ele.fl_elenco_standard = '0'
								then (select ds_valore_param_applic from APL_V_GETVAL_PARAM_BY_strut val where val.id_strut = strut.id_strut and NM_PARAM_APPLIC = 'TI_GEST_ELENCO_NOSTD')
							when ele.fl_elenco_standard = '1'
							and ele.fl_elenco_fisc = '0'
								then (select ds_valore_param_applic from APL_V_GETVAL_PARAM_BY_strut val where val.id_strut = strut.id_strut and NM_PARAM_APPLIC = 'TI_GEST_ELENCO_STD_NOFISC')
							else (select ds_valore_param_applic from APL_V_GETVAL_PARAM_BY_strut val where val.id_strut = strut.id_strut and NM_PARAM_APPLIC = 'TI_GEST_ELENCO_STD_FISC')
						end
			end
 end ti_gest_elenco,
 
 ele.fl_elenco_fisc,
 
 case
	when ele.ti_valid_elenco is not null
		then ele.ti_valid_elenco
		else crit.ti_valid_elenco
 end ti_valid_elenco,
 case
	when ele.ti_mod_valid_elenco is not null
		then ele.ti_mod_valid_elenco
		else crit.ti_mod_valid_elenco
 end ti_valid_elenco,
 ele.ni_upd_unita_doc

from ELV_ELENCO_VERS_DA_ELAB ele_da_elab
join ORG_STRUT strut
 on (strut.id_strut = ele_da_elab.id_strut and strut.fl_cessato = 0)
join ORG_ENTE ente
 on (ente.id_ente = strut.id_ente and ente.fl_cessato = 0)
join ORG_AMBIENTE amb
 on (amb.id_ambiente = ente.id_ambiente)

join IAM_ABIL_ORGANIZ abil_org
 on (abil_org.id_organiz_applic = strut.id_strut) 

join ELV_ELENCO_VERS ele
 on (ele.id_elenco_vers = ele_da_elab.id_elenco_vers)
 
join DEC_CRITERIO_RAGGR crit
 on (crit.id_criterio_raggr = ele_da_elab.id_criterio_raggr);

-- changeset root:1751897635013-514
COMMENT ON COLUMN ELV_V_LIS_ELENCO_VERS_STATO.ID_ELENCO_VERS IS 'PK.1';

-- changeset root:1751897635013-515
CREATE OR REPLACE FORCE VIEW "ELV_V_RIC_ELENCO_VERS" ("ID_ELENCO_VERS", "ID_AMBIENTE", "NM_AMBIENTE", "ID_ENTE", "NM_ENTE", "ID_STRUT", "NM_STRUT", "ID_USER_IAM", "NM_ELENCO", "DS_ELENCO", "TI_STATO_ELENCO", "DT_CREAZIONE_ELENCO", "DT_CHIUS", "DT_FIRMA_INDICE", "NI_COMP_VERS_ELENCO", "NI_COMP_AGG_ELENCO", "NI_SIZE_VERS_ELENCO", "NI_SIZE_AGG_ELENCO", "NT_INDICE_ELENCO", "NT_ELENCO_CHIUSO", "ID_CRITERIO_RAGGR", "NM_CRITERIO_RAGGR", "DT_CREAZIONE_ELENCO_IX_AIP", "DT_FIRMA_ELENCO_IX_AIP", "FL_ELENCO_FISC", "FL_ELENCO_STANDARD", "NI_INDICI_AIP", "TI_GEST_ELENCO", "TI_VALID_ELENCO", "TI_MOD_VALID_ELENCO", "FL_ELENCO_FIRMATO", "TS_STATO_ELENCO_IN_CODA_JMS") AS select
 ele.id_elenco_vers,
 amb.id_ambiente, amb.nm_ambiente, 
 ente.id_ente, ente.nm_ente, 
 strut.id_strut, strut.nm_strut, 
 abil_org.id_user_iam,
 
 ele.nm_elenco, ele.ds_elenco, 
 case
	when daelab.ti_stato_elenco in ('IN_CODA_JMS_GENERA_INDICE_AIP', 'IN_CODA_JMS_VERIFICA_FIRME_DT_VERS')
		then ele.ti_stato_elenco || ' (' || daelab.ti_stato_elenco || ')'
		else ele.ti_stato_elenco
 end ti_stato_elenco, 
 ele.dt_creazione_elenco, ele.dt_chius, ele.dt_firma_indice, 
 ele.ni_comp_vers_elenco, ele.ni_comp_agg_elenco ,
 ele.ni_size_vers_elenco, ele.ni_size_agg_elenco, 
 ele.nt_indice_elenco, ele.nt_elenco_chiuso,
 
 ele.id_criterio_raggr, crit.nm_criterio_raggr,
 
 ele.dt_creazione_elenco_ix_aip, ele.dt_firma_elenco_ix_aip, ele.fl_elenco_fisc, ele.fl_elenco_standard, ele.ni_indici_aip,
 
 case
	when ele.ti_gest_elenco is not null
		then ele.ti_gest_elenco
		else
			case
				when crit.ti_gest_elenco_criterio is not null
					then crit.ti_gest_elenco_criterio
					else
						case
							when ele.fl_elenco_standard = '0'
								then 
								(select ds_valore_param_applic from apl_v_getval_param_by_strut val where val.id_strut = strut.id_strut and NM_PARAM_APPLIC = 'TI_GEST_ELENCO_NOSTD')
							when ele.fl_elenco_standard = '1'
							and ele.fl_elenco_fisc = '0'
								then 
								(select ds_valore_param_applic from apl_v_getval_param_by_strut val where val.id_strut = strut.id_strut and NM_PARAM_APPLIC = 'TI_GEST_ELENCO_STD_NOFISC')
							else 
							(select ds_valore_param_applic from apl_v_getval_param_by_strut val where val.id_strut = strut.id_strut and NM_PARAM_APPLIC = 'TI_GEST_ELENCO_STD_FISC')
						end
			end
 end ti_gest_elenco,
 
 ele.ti_valid_elenco, ele.ti_mod_valid_elenco,
 case
	when ele.ti_stato_elenco in ('FIRMA_IN_CORSO', 'VALIDATO', 'FIRME_VERIFICATE_DT_VERS', 'IN_CODA_INDICE_AIP', 
								 'INDICI_AIP_GENERATI', 'ELENCO_INDICI_AIP_CREATO', 'ELENCO_INDICI_AIP_FIRMA_IN_CORSO', 
								 'ELENCO_INDICI_AIP_FIRMATO', 'ELENCO_INDICI_AIP_ERR_MARCA', 'COMPLETATO')
	and ele.ti_valid_elenco = 'FIRMA' or crit.ti_valid_elenco = 'FIRMA'
		then '1'
		else '0'
 end fl_elenco_firmato,
 daelab.ts_stato_elenco ts_stato_elenco_in_coda_jms

from ELV_ELENCO_VERS ele
join ORG_STRUT strut
 on (strut.id_strut = ele.id_strut and strut.fl_cessato = 0)
join ORG_ENTE ente
 on (ente.id_ente = strut.id_ente and ente.fl_cessato = 0)
join ORG_AMBIENTE amb
 on (amb.id_ambiente = ente.id_ambiente)

join IAM_ABIL_ORGANIZ abil_org
 on (abil_org.id_organiz_applic = strut.id_strut) 
 
join DEC_CRITERIO_RAGGR crit
 on (crit.id_criterio_raggr = ele.id_criterio_raggr)

 left join ELV_ELENCO_VERS_DA_ELAB daelab
 on (daelab.id_elenco_vers = ele.id_elenco_vers);

-- changeset root:1751897635013-516
COMMENT ON COLUMN ELV_V_RIC_ELENCO_VERS.ID_ELENCO_VERS IS 'PK.1';

-- changeset root:1751897635013-517
CREATE OR REPLACE FORCE VIEW "ELV_V_RIC_ELENCO_VERS_BY_STATO" ("ID_ELENCO_VERS", "ID_AMBIENTE", "NM_AMBIENTE", "ID_ENTE", "NM_ENTE", "ID_STRUT", "NM_STRUT", "ID_USER_IAM", "NM_ELENCO", "DS_ELENCO", "TI_STATO_ELENCO", "DT_CREAZIONE_ELENCO", "DT_CHIUS", "DT_FIRMA_INDICE", "NI_COMP_VERS_ELENCO", "NI_COMP_AGG_ELENCO", "NI_SIZE_VERS_ELENCO", "NI_SIZE_AGG_ELENCO", "NT_INDICE_ELENCO", "NT_ELENCO_CHIUSO", "ID_CRITERIO_RAGGR", "NM_CRITERIO_RAGGR", "DT_CREAZIONE_ELENCO_IX_AIP", "DT_FIRMA_ELENCO_IX_AIP", "FL_ELENCO_FISC", "FL_ELENCO_STANDARD", "NI_INDICI_AIP", "TI_GEST_ELENCO", "TI_VALID_ELENCO", "TI_MOD_VALID_ELENCO", "FL_ELENCO_FIRMATO", "TS_STATO_ELENCO_IN_CODA_JMS", "HH_STATO_ELENCO_IN_CODA_JMS") AS select
 ele.id_elenco_vers,
 amb.id_ambiente, amb.nm_ambiente, 
 ente.id_ente, ente.nm_ente, 
 ele_da_elab.id_strut, strut.nm_strut, 
 abil_org.id_user_iam,
 
 ele.nm_elenco, ele.ds_elenco, 
 case
	when daelab.ti_stato_elenco in ('IN_CODA_JMS_GENERA_INDICE_AIP', 'IN_CODA_JMS_VERIFICA_FIRME_DT_VERS')
		then ele.ti_stato_elenco || ' (' || daelab.ti_stato_elenco || ')'
		else ele.ti_stato_elenco
 end ti_stato_elenco, 
 ele.dt_creazione_elenco, ele.dt_chius, ele.dt_firma_indice, 
 ele.ni_comp_vers_elenco, ele.ni_comp_agg_elenco ,
 ele.ni_size_vers_elenco, ele.ni_size_agg_elenco, 
 ele.nt_indice_elenco, ele.nt_elenco_chiuso,
 
 ele.id_criterio_raggr, crit.nm_criterio_raggr,
 
 ele.dt_creazione_elenco_ix_aip, ele.dt_firma_elenco_ix_aip, ele.fl_elenco_fisc, ele.fl_elenco_standard, ele.ni_indici_aip,
 
 case
	when ele.ti_gest_elenco is not null
		then ele.ti_gest_elenco
		else
			case
				when crit.ti_gest_elenco_criterio is not null
					then crit.ti_gest_elenco_criterio
					else
						case
							when ele.fl_elenco_standard = '0'
								then (select ds_valore_param_applic from APL_V_GETVAL_PARAM_BY_strut val where val.id_strut = strut.id_strut and NM_PARAM_APPLIC = 'TI_GEST_ELENCO_NOSTD') 
							when ele.fl_elenco_standard = '1'
							and ele.fl_elenco_fisc = '0'
								then (select ds_valore_param_applic from APL_V_GETVAL_PARAM_BY_strut val where val.id_strut = strut.id_strut and NM_PARAM_APPLIC = 'TI_GEST_ELENCO_STD_NOFISC') 
							else (select ds_valore_param_applic from APL_V_GETVAL_PARAM_BY_strut val where val.id_strut = strut.id_strut and NM_PARAM_APPLIC = 'TI_GEST_ELENCO_STD_FISC') 
						end
			end
 end ti_gest_elenco,
 
 ele.ti_valid_elenco, ele.ti_mod_valid_elenco,
 case
	when ele.ti_stato_elenco in ('FIRMA_IN_CORSO', 'VALIDATO', 'FIRME_VERIFICATE_DT_VERS', 'IN_CODA_INDICE_AIP', 
								 'INDICI_AIP_GENERATI', 'ELENCO_INDICI_AIP_CREATO', 'ELENCO_INDICI_AIP_FIRMA_IN_CORSO', 
								 'ELENCO_INDICI_AIP_FIRMATO', 'ELENCO_INDICI_AIP_ERR_MARCA', 'COMPLETATO')
	and ele.ti_valid_elenco = 'FIRMA' or crit.ti_valid_elenco = 'FIRMA'
		then '1'
		else '0'
 end fl_elenco_firmato,
 
 daelab.ts_stato_elenco ts_stato_elenco_in_coda_jms,

 extract ( 
         hour from systimestamp - daelab.ts_stato_elenco 
       ) + 24 * extract ( 
         day from systimestamp - daelab.ts_stato_elenco 
       ) hh_stato_elenco_in_coda_jms

from ELV_ELENCO_VERS_DA_ELAB ele_da_elab
join ELV_ELENCO_VERS ele
 on (ele.id_elenco_vers = ele_da_elab.id_elenco_vers)
join ORG_STRUT strut
 on (strut.id_strut = ele.id_strut and strut.fl_cessato = 0)
join ORG_ENTE ente
 on (ente.id_ente = strut.id_ente and ente.fl_cessato = 0)
join ORG_AMBIENTE amb
 on (amb.id_ambiente = ente.id_ambiente)

join IAM_ABIL_ORGANIZ abil_org
 on (abil_org.id_organiz_applic = strut.id_strut) 
 
join DEC_CRITERIO_RAGGR crit
 on (crit.id_criterio_raggr = ele.id_criterio_raggr)

left join ELV_ELENCO_VERS_DA_ELAB daelab
 on (daelab.id_elenco_vers = ele.id_elenco_vers);

-- changeset root:1751897635013-518
COMMENT ON COLUMN ELV_V_RIC_ELENCO_VERS_BY_STATO.ID_ELENCO_VERS IS 'PK.1';

-- changeset root:1751897635013-519
CREATE OR REPLACE FORCE VIEW "ELV_V_RIC_ELENCO_VERS_BY_UD" ("ID_ELENCO_VERS", "ID_AMBIENTE", "NM_AMBIENTE", "ID_ENTE", "NM_ENTE", "ID_STRUT", "NM_STRUT", "ID_USER_IAM", "NM_ELENCO", "DS_ELENCO", "TI_STATO_ELENCO", "DT_CREAZIONE_ELENCO", "DT_CHIUS", "DT_FIRMA_INDICE", "NI_COMP_VERS_ELENCO", "NI_COMP_AGG_ELENCO", "NI_SIZE_VERS_ELENCO", "NI_SIZE_AGG_ELENCO", "NT_INDICE_ELENCO", "NT_ELENCO_CHIUSO", "ID_CRITERIO_RAGGR", "NM_CRITERIO_RAGGR", "ID_UNITA_DOC", "ID_STRUT_UNI_DOC", "ID_REGISTRO_UNITA_DOC", "CD_REGISTRO_KEY_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "DT_CREAZIONE_ELENCO_IX_AIP", "DT_FIRMA_ELENCO_IX_AIP", "FL_ELENCO_FISC", "FL_ELENCO_STANDARD", "NI_INDICI_AIP", "TI_GEST_ELENCO", "TI_VALID_ELENCO", "TI_MOD_VALID_ELENCO", "FL_ELENCO_FIRMATO", "TS_STATO_ELENCO_IN_CODA_JMS") AS select
 ele.id_elenco_vers,
 amb.id_ambiente, amb.nm_ambiente, 
 ente.id_ente, ente.nm_ente, 
 strut.id_strut, strut.nm_strut, 
 abil_org.id_user_iam,
 
 ele.nm_elenco, ele.ds_elenco, 
 ele.ti_stato_elenco, 
 ele.dt_creazione_elenco, ele.dt_chius, ele.dt_firma_indice, 
 ele.ni_comp_vers_elenco, ele.ni_comp_agg_elenco ,
 ele.ni_size_vers_elenco, ele.ni_size_agg_elenco, 
 ele.nt_indice_elenco, ele.nt_elenco_chiuso,
 
 ele.id_criterio_raggr, crit.nm_criterio_raggr,
 
 ud_vers.id_unita_doc, ud_vers.id_strut, ud_vers.id_registro_unita_doc, ud_vers.cd_registro_key_unita_doc, ud_vers.aa_key_unita_doc, ud_vers.cd_key_unita_doc,
 
 ele.dt_creazione_elenco_ix_aip, ele.dt_firma_elenco_ix_aip, ele.fl_elenco_fisc, ele.fl_elenco_standard, ele.ni_indici_aip,
 
 case
	when ele.ti_gest_elenco is not null
		then ele.ti_gest_elenco
		else
			case
				when crit.ti_gest_elenco_criterio is not null
					then crit.ti_gest_elenco_criterio
					else
						case
							when ele.fl_elenco_standard = '0'
								then (select ds_valore_param_applic from APL_V_GETVAL_PARAM_BY_strut val where val.id_strut = strut.id_strut and NM_PARAM_APPLIC = 'TI_GEST_ELENCO_NOSTD') 
							when ele.fl_elenco_standard = '1'
							and ele.fl_elenco_fisc = '0'
								then (select ds_valore_param_applic from APL_V_GETVAL_PARAM_BY_strut val where val.id_strut = strut.id_strut and NM_PARAM_APPLIC = 'TI_GEST_ELENCO_STD_NOFISC') 
							else (select ds_valore_param_applic from APL_V_GETVAL_PARAM_BY_strut val where val.id_strut = strut.id_strut and NM_PARAM_APPLIC = 'TI_GEST_ELENCO_STD_FISC')
						end
			end
 end ti_gest_elenco,
 
 ele.ti_valid_elenco, ele.ti_mod_valid_elenco,
 case
	when ele.ti_stato_elenco in ('FIRMA_IN_CORSO', 'VALIDATO', 'FIRME_VERIFICATE_DT_VERS', 'IN_CODA_INDICE_AIP', 
								 'INDICI_AIP_GENERATI', 'ELENCO_INDICI_AIP_CREATO', 'ELENCO_INDICI_AIP_FIRMA_IN_CORSO', 
								 'ELENCO_INDICI_AIP_FIRMATO', 'ELENCO_INDICI_AIP_ERR_MARCA', 'COMPLETATO')
	and ele.ti_valid_elenco = 'FIRMA' or crit.ti_valid_elenco = 'FIRMA'
		then '1'
		else '0'
 end fl_elenco_firmato,
 
 daelab.ts_stato_elenco ts_stato_elenco_in_coda_jms

from ELV_ELENCO_VERS ele
join ORG_STRUT strut
 on (strut.id_strut = ele.id_strut)
join ORG_ENTE ente
 on (ente.id_ente = strut.id_ente)
join ORG_AMBIENTE amb
 on (amb.id_ambiente = ente.id_ambiente)

join IAM_ABIL_ORGANIZ abil_org
 on (abil_org.id_organiz_applic = strut.id_strut) 
 
join DEC_CRITERIO_RAGGR crit
 on (crit.id_criterio_raggr = ele.id_criterio_raggr)
join ARO_UNITA_DOC ud_vers
 on (ud_vers.id_elenco_vers = ele.id_elenco_vers)
 
left join ELV_ELENCO_VERS_DA_ELAB daelab
 on (daelab.id_elenco_vers = ele.id_elenco_vers)


UNION

select 
 ele.id_elenco_vers,
 amb.id_ambiente, amb.nm_ambiente, 
 ente.id_ente, ente.nm_ente, 
 strut.id_strut, strut.nm_strut, 
 abil_org.id_user_iam,
 
 ele.nm_elenco, ele.ds_elenco, 
 ele.ti_stato_elenco, 
 ele.dt_creazione_elenco, ele.dt_chius, ele.dt_firma_indice, 
 ele.ni_comp_vers_elenco, ele.ni_comp_agg_elenco ,
 ele.ni_size_vers_elenco, ele.ni_size_agg_elenco, 
 ele.nt_indice_elenco, ele.nt_elenco_chiuso,
 
 ele.id_criterio_raggr, crit.nm_criterio_raggr,
 
 ud.id_unita_doc, ud.id_strut, ud.id_registro_unita_doc, ud.cd_registro_key_unita_doc, ud.aa_key_unita_doc, ud.cd_key_unita_doc,
 
 ele.dt_creazione_elenco_ix_aip, ele.dt_firma_elenco_ix_aip, ele.fl_elenco_fisc, ele.fl_elenco_standard, ele.ni_indici_aip,
 
 case
	when ele.ti_gest_elenco is not null
		then ele.ti_gest_elenco
		else
			case
				when crit.ti_gest_elenco_criterio is not null
					then crit.ti_gest_elenco_criterio
					else
						case
							when ele.fl_elenco_standard = '0'
								then (select ds_valore_param_applic from APL_V_GETVAL_PARAM_BY_strut val where val.id_strut = strut.id_strut and NM_PARAM_APPLIC = 'TI_GEST_ELENCO_NOSTD') 
							when ele.fl_elenco_standard = '1'
							and ele.fl_elenco_fisc = '0'
								then (select ds_valore_param_applic from APL_V_GETVAL_PARAM_BY_strut val where val.id_strut = strut.id_strut and NM_PARAM_APPLIC = 'TI_GEST_ELENCO_STD_NOFISC') 
							else (select ds_valore_param_applic from APL_V_GETVAL_PARAM_BY_strut val where val.id_strut = strut.id_strut and NM_PARAM_APPLIC = 'TI_GEST_ELENCO_STD_FISC')
						end
			end
 end ti_gest_elenco,
 
 ele.ti_valid_elenco, ele.ti_mod_valid_elenco,
  case
	when ele.ti_stato_elenco in ('FIRMA_IN_CORSO', 'VALIDATO', 'FIRME_VERIFICATE_DT_VERS', 'IN_CODA_INDICE_AIP', 
								 'INDICI_AIP_GENERATI', 'ELENCO_INDICI_AIP_CREATO', 'ELENCO_INDICI_AIP_FIRMA_IN_CORSO', 
								 'ELENCO_INDICI_AIP_FIRMATO', 'ELENCO_INDICI_AIP_ERR_MARCA', 'COMPLETATO')
	and ele.ti_valid_elenco = 'FIRMA' or crit.ti_valid_elenco = 'FIRMA'
		then '1'
		else '0'
 end fl_elenco_firmato,
 
 daelab.ts_stato_elenco ts_stato_elenco_in_coda_jms

from ELV_ELENCO_VERS ele
join ORG_STRUT strut
 on (strut.id_strut = ele.id_strut)
join ORG_ENTE ente
 on (ente.id_ente = strut.id_ente)
join ORG_AMBIENTE amb
 on (amb.id_ambiente = ente.id_ambiente)

join IAM_ABIL_ORGANIZ abil_org
 on (abil_org.id_organiz_applic = strut.id_strut) 

join DEC_CRITERIO_RAGGR crit
 on (crit.id_criterio_raggr = ele.id_criterio_raggr)
join ARO_DOC doc_agg
 on (doc_agg.id_elenco_vers = ele.id_elenco_vers)
join ARO_UNITA_DOC ud
 on (ud.id_unita_doc = doc_agg.id_unita_doc)
 
left join ELV_ELENCO_VERS_DA_ELAB daelab
 on (daelab.id_elenco_vers = ele.id_elenco_vers)

 
UNION

select 
 ele.id_elenco_vers,
 amb.id_ambiente, amb.nm_ambiente, 
 ente.id_ente, ente.nm_ente, 
 strut.id_strut, strut.nm_strut, 
 abil_org.id_user_iam,
 
 ele.nm_elenco, ele.ds_elenco, 
 ele.ti_stato_elenco, 
 ele.dt_creazione_elenco, ele.dt_chius, ele.dt_firma_indice, 
 ele.ni_comp_vers_elenco, ele.ni_comp_agg_elenco ,
 ele.ni_size_vers_elenco, ele.ni_size_agg_elenco, 
 ele.nt_indice_elenco, ele.nt_elenco_chiuso,
 
 ele.id_criterio_raggr, crit.nm_criterio_raggr,
 
 ud.id_unita_doc, ud.id_strut, ud.id_registro_unita_doc, ud.cd_registro_key_unita_doc, ud.aa_key_unita_doc, ud.cd_key_unita_doc,
 
 ele.dt_creazione_elenco_ix_aip, ele.dt_firma_elenco_ix_aip, ele.fl_elenco_fisc, ele.fl_elenco_standard, ele.ni_indici_aip,
 
 case
	when ele.ti_gest_elenco is not null
		then ele.ti_gest_elenco
		else
			case
				when crit.ti_gest_elenco_criterio is not null
					then crit.ti_gest_elenco_criterio
					else
						case
							when ele.fl_elenco_standard = '0'
								then (select ds_valore_param_applic from APL_V_GETVAL_PARAM_BY_strut val where val.id_strut = strut.id_strut and NM_PARAM_APPLIC = 'TI_GEST_ELENCO_NOSTD') 
							when ele.fl_elenco_standard = '1'
							and ele.fl_elenco_fisc = '0'
								then (select ds_valore_param_applic from APL_V_GETVAL_PARAM_BY_strut val where val.id_strut = strut.id_strut and NM_PARAM_APPLIC = 'TI_GEST_ELENCO_STD_NOFISC') 
							else (select ds_valore_param_applic from APL_V_GETVAL_PARAM_BY_strut val where val.id_strut = strut.id_strut and NM_PARAM_APPLIC = 'TI_GEST_ELENCO_STD_FISC')
						end
			end
 end ti_gest_elenco,
 
 ele.ti_valid_elenco, ele.ti_mod_valid_elenco,
  case
	when ele.ti_stato_elenco in ('FIRMA_IN_CORSO', 'VALIDATO', 'FIRME_VERIFICATE_DT_VERS', 'IN_CODA_INDICE_AIP', 
								 'INDICI_AIP_GENERATI', 'ELENCO_INDICI_AIP_CREATO', 'ELENCO_INDICI_AIP_FIRMA_IN_CORSO', 
								 'ELENCO_INDICI_AIP_FIRMATO', 'ELENCO_INDICI_AIP_ERR_MARCA', 'COMPLETATO')
	and ele.ti_valid_elenco = 'FIRMA' or crit.ti_valid_elenco = 'FIRMA'
		then '1'
		else '0'
 end fl_elenco_firmato,
 
 daelab.ts_stato_elenco ts_stato_elenco_in_coda_jms

from ELV_ELENCO_VERS ele
join ORG_STRUT strut
 on (strut.id_strut = ele.id_strut and strut.fl_cessato = 0)
join ORG_ENTE ente
 on (ente.id_ente = strut.id_ente and ente.fl_cessato = 0)
join ORG_AMBIENTE amb
 on (amb.id_ambiente = ente.id_ambiente)

join IAM_ABIL_ORGANIZ abil_org
 on (abil_org.id_organiz_applic = strut.id_strut) 

join DEC_CRITERIO_RAGGR crit
 on (crit.id_criterio_raggr = ele.id_criterio_raggr)
join ARO_UPD_UNITA_DOC upd_ud
 on (upd_ud.id_elenco_vers = ele.id_elenco_vers)
join ARO_UNITA_DOC ud
 on (ud.id_unita_doc = upd_ud.id_unita_doc)
 
left join ELV_ELENCO_VERS_DA_ELAB daelab
 on (daelab.id_elenco_vers = ele.id_elenco_vers);

-- changeset root:1751897635013-520
COMMENT ON COLUMN ELV_V_RIC_ELENCO_VERS_BY_UD.ID_ELENCO_VERS IS 'PK.1';

-- changeset root:1751897635013-521
COMMENT ON COLUMN ELV_V_RIC_ELENCO_VERS_BY_UD.ID_UNITA_DOC IS 'PK.2';

-- changeset root:1751897635013-522
CREATE OR REPLACE FORCE VIEW "MON_V_CHK_DOC_ENTE" ("ID_ENTE", "ID_USER_IAM", "FL_DOC_CORR", "FL_DOC_30GG", "FL_DOC_ATTESA_MEM_CORR", "FL_DOC_ATTESA_MEM_30GG", "FL_DOC_ATTESA_SCHED_CORR", "FL_DOC_ATTESA_SCHED_30GG", "FL_DOC_NOSEL_SCHED_CORR", "FL_DOC_NOSEL_SCHED_30GG") AS select
 ente.id_ente,
 utente.id_user_iam,
 
--
--					doc TOTALE
--
case
	when exists (select * 
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ARO_DOC doc
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and doc.id_strut = abil.id_organiz_applic
				and doc.dt_creazione between trunc(sysdate) and sysdate + 1/24
				and doc.dt_annul = to_date('31/12/2444', 'dd/mm/yyyy')
				and doc.ti_creazione = 'AGGIUNTA_DOCUMENTO'
				)
			then '1'
			else '0'
end fl_doc_corr,
case
	when (select nvl(sum(ni_doc_agg), 0)
		  from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, MON_CONTA_UD_DOC_COMP conta_doc
		  where strut.id_ente = ente.id_ente
		  and abil.id_organiz_applic = strut.id_strut
		  and abil.id_user_iam = utente.id_user_iam
		  and conta_doc.id_strut = abil.id_organiz_applic
		  and conta_doc.dt_rif_conta between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
		  ) -
		 (select nvl(count(*), 0)
		  from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ARO_ITEM_RICH_ANNUL_VERS item_annul,  ARO_DOC doc
		  where strut.id_ente = ente.id_ente
		  and abil.id_organiz_applic = strut.id_strut
		  and abil.id_user_iam = utente.id_user_iam
		  
  		  and item_annul.id_strut = abil.id_organiz_applic
		  and item_annul.ti_item_rich_annul_vers = 'UNI_DOC'
		  and item_annul.ti_stato_item = 'ANNULLATO'
		  and doc.id_unita_doc = item_annul.id_unita_doc
		  and doc.ti_creazione = 'AGGIUNTA_DOCUMENTO'
		  and doc.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
		 ) != 0
			then '1'
			else '0'
end fl_doc_30gg,


--
--						doc IN_ATTESA_MEMORIZZAZIONE
--
case
	when exists (select * 
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ELV_DOC_AGG_DA_ELAB_ELENCO doc_da_elab
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and doc_da_elab.id_strut = abil.id_organiz_applic
				and doc_da_elab.ti_stato_doc_da_elab = 'IN_ATTESA_MEMORIZZAZIONE'
				and doc_da_elab.dt_creazione between trunc(sysdate) and sysdate + 1/24
				)
			then '1'
			else '0'
end fl_doc_attesa_mem_corr,
case
	when exists (select * 
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ELV_DOC_AGG_DA_ELAB_ELENCO doc_da_elab
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and doc_da_elab.id_strut = abil.id_organiz_applic
				and doc_da_elab.ti_stato_doc_da_elab = 'IN_ATTESA_MEMORIZZAZIONE'
				and doc_da_elab.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
				)
			then '1'
			else '0'
end fl_doc_attesa_mem_30gg,


--
--						doc IN_ATTESA_SCHED
--
case
	when exists (select * 
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ELV_DOC_AGG_DA_ELAB_ELENCO doc_da_elab
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and doc_da_elab.id_strut = abil.id_organiz_applic
				and doc_da_elab.ti_stato_doc_da_elab = 'IN_ATTESA_SCHED'
				and doc_da_elab.dt_creazione between trunc(sysdate) and sysdate + 1/24
				)
			then '1'
			else '0'
end fl_doc_attesa_sched_corr,
case
	when exists (select * 
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ELV_DOC_AGG_DA_ELAB_ELENCO doc_da_elab
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and doc_da_elab.id_strut = abil.id_organiz_applic
				and doc_da_elab.ti_stato_doc_da_elab = 'IN_ATTESA_SCHED'
				and doc_da_elab.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
				)
			then '1'
			else '0'
end fl_doc_attesa_sched_30gg,


--
--						doc NON_SELEZ_SCHED
--
case
	when exists (select * 
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ELV_DOC_AGG_DA_ELAB_ELENCO doc_da_elab
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and doc_da_elab.id_strut = abil.id_organiz_applic
				and doc_da_elab.ti_stato_doc_da_elab = 'NON_SELEZ_SCHED'
				and doc_da_elab.dt_creazione between trunc(sysdate) and sysdate + 1/24
				)
			then '1'
			else '0'
end fl_doc_nosel_sched_corr,
case
	when exists (select * 
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, ELV_DOC_AGG_DA_ELAB_ELENCO doc_da_elab
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and doc_da_elab.id_strut = abil.id_organiz_applic
				and doc_da_elab.ti_stato_doc_da_elab = 'NON_SELEZ_SCHED'
				and doc_da_elab.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
				)
			then '1'
			else '0'
end fl_doc_nosel_sched_30gg

from ORG_ENTE ente
join IAM_USER utente
 on (utente.id_user_iam > 0);

-- changeset root:1751897635013-523
COMMENT ON COLUMN MON_V_CHK_DOC_ENTE.ID_ENTE IS 'PK.1 relativa a tabella ORG_ENTE';

-- changeset root:1751897635013-524
COMMENT ON COLUMN MON_V_CHK_DOC_ENTE.ID_USER_IAM IS 'PK.2 relativa a tabella IAM_USER';

-- changeset root:1751897635013-525
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_AGG_AMB" ("ID_AMBIENTE", "ID_USER_IAM", "TI_STATO_VERS", "TI_DT_CREAZIONE", "NI_AGG") AS SELECT id_ambiente,
             id_user_iam,
             ti_stato_vers,
             ti_dt_creazione,
             COUNT (1)     ni_agg
        FROM (SELECT ente.id_ambiente,
                     abil.id_user_iam,
                     CASE
                         WHEN EXISTS
                                  (SELECT 1
                                     FROM VRS_DATI_SESSIONE_VERS_ko dato_ses
                                          JOIN VRS_ERR_SESSIONE_VERS_ko err
                                              ON (err.id_dati_sessione_vers_ko =
                                                  dato_ses.id_dati_sessione_vers_ko
                                              AND err.cd_err IN
                                                      ('UD-005', 'UD-005-001'))
                                    WHERE dato_ses.id_sessione_vers_ko =
                                          ses.id_sessione_vers_ko
                                      AND EXISTS
                                              (SELECT 1
                                                 FROM ARO_UNITA_DOC ud
                                                WHERE ud.id_strut =
                                                      ses.id_strut
                                                  AND ud.cd_registro_key_unita_doc =
                                                      ses.cd_registro_key_unita_doc
                                                  AND ud.aa_key_unita_doc =
                                                      ses.aa_key_unita_doc
                                                  AND ud.cd_key_unita_doc =
                                                      ses.cd_key_unita_doc
                                                  AND ud.dt_annul >=
                                                      ses.dt_apertura)) THEN
                             'RISOLTO'
                         WHEN EXISTS
                                  (SELECT 1
                                     FROM ARO_UNITA_DOC ud, ARO_DOC doc
                                    WHERE ud.id_strut = ses.id_strut
                                      AND ud.cd_registro_key_unita_doc =
                                          ses.cd_registro_key_unita_doc
                                      AND ud.aa_key_unita_doc =
                                          ses.aa_key_unita_doc
                                      AND ud.cd_key_unita_doc =
                                          ses.cd_key_unita_doc
                                      AND ud.dt_annul =
                                          TO_DATE ('31/12/2444', 'dd/mm/yyyy')
                                      AND doc.id_unita_doc = ud.id_unita_doc
                                      AND doc.cd_key_doc_vers =
                                          ses.cd_key_doc_vers
                                      AND doc.dt_annul >= ses.dt_apertura) THEN
                             'RISOLTO'
                         ELSE
                             CASE
                                 WHEN ses.fl_sessione_err_verif = '0' THEN
                                     'NO_VERIF'
                                 WHEN ses.fl_sessione_err_verif = '1'
                                  AND ses.fl_sessione_err_non_risolub = '0' THEN
                                     'VERIF'
                                 WHEN ses.fl_sessione_err_verif = '1'
                                  AND ses.fl_sessione_err_non_risolub = '1' THEN
                                     'NO_RISOLUB'
                                 ELSE
                                     '??'
                             END
                     END    ti_stato_vers,
                     CASE
                         WHEN ses.dt_apertura BETWEEN TRUNC (SYSDATE)
                                                  AND SYSDATE + 1 / 24 THEN
                             'OGGI'
                         ELSE
                             '30gg'
                     END    ti_dt_creazione
                FROM ORG_ENTE ente
                     JOIN ORG_STRUT strut ON (strut.id_ente = ente.id_ente)
                     JOIN IAM_ABIL_ORGANIZ abil
                         ON (abil.id_organiz_applic = strut.id_strut)
                     JOIN VRS_SESSIONE_VERS_ko ses
                         ON (ses.id_strut = abil.id_organiz_applic
                         AND ses.ti_sessione_vers = 'AGGIUNGI_DOCUMENTO'
                         AND ses.ti_stato_sessione_vers = 'CHIUSA_ERR'
                         AND ses.dt_apertura BETWEEN TRUNC (SYSDATE - 30)
                                                 AND SYSDATE + 1 / 24))
    GROUP BY id_ambiente,
             id_user_iam,
             ti_stato_vers,
             ti_dt_creazione;

-- changeset root:1751897635013-526
COMMENT ON COLUMN MON_V_CNT_AGG_AMB.ID_AMBIENTE IS 'PK.1 relativa a tabella ORG_AMBIENTE';

-- changeset root:1751897635013-527
COMMENT ON COLUMN MON_V_CNT_AGG_AMB.ID_USER_IAM IS 'PK.2 relativa a tabella IAM_USER';

-- changeset root:1751897635013-528
COMMENT ON COLUMN MON_V_CNT_AGG_AMB.TI_STATO_VERS IS 'PK.3';

-- changeset root:1751897635013-529
COMMENT ON COLUMN MON_V_CNT_AGG_AMB.TI_DT_CREAZIONE IS 'PK.4';

-- changeset root:1751897635013-530
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_AGG_AMB_B30" ("ID_AMBIENTE", "ID_USER_IAM", "TI_STATO_VERS", "NI_AGG") AS SELECT id_ambiente,
             id_user_iam,
             ti_stato_vers,
             COUNT (1)     ni_agg
        FROM (SELECT ente.id_ambiente,
                     abil.id_user_iam,
                     CASE
                         WHEN EXISTS
                                  (SELECT 1
                                     FROM VRS_DATI_SESSIONE_VERS_ko dato_ses
                                          JOIN VRS_ERR_SESSIONE_VERS_ko err
                                              ON (err.id_dati_sessione_vers_ko =
                                                  dato_ses.id_dati_sessione_vers_ko
                                              AND err.cd_err IN
                                                      ('UD-005', 'UD-005-001'))
                                    WHERE dato_ses.id_sessione_vers_ko =
                                          ses.id_sessione_vers_ko
                                      AND EXISTS
                                              (SELECT 1
                                                 FROM ARO_UNITA_DOC ud
                                                WHERE ud.id_strut =
                                                      ses.id_strut
                                                  AND ud.cd_registro_key_unita_doc =
                                                      ses.cd_registro_key_unita_doc
                                                  AND ud.aa_key_unita_doc =
                                                      ses.aa_key_unita_doc
                                                  AND ud.cd_key_unita_doc =
                                                      ses.cd_key_unita_doc
                                                  AND ud.dt_annul >=
                                                      ses.dt_apertura)) THEN
                             'RISOLTO'
                         WHEN EXISTS
                                  (SELECT 1
                                     FROM ARO_UNITA_DOC ud, ARO_DOC doc
                                    WHERE ud.id_strut = ses.id_strut
                                      AND ud.cd_registro_key_unita_doc =
                                          ses.cd_registro_key_unita_doc
                                      AND ud.aa_key_unita_doc =
                                          ses.aa_key_unita_doc
                                      AND ud.cd_key_unita_doc =
                                          ses.cd_key_unita_doc
                                      AND ud.dt_annul =
                                          TO_DATE ('31/12/2444', 'dd/mm/yyyy')
                                      AND doc.id_unita_doc = ud.id_unita_doc
                                      AND doc.cd_key_doc_vers =
                                          ses.cd_key_doc_vers
                                      AND doc.dt_annul >= ses.dt_apertura) THEN
                             'RISOLTO'
                         ELSE
                             CASE
                                 WHEN ses.fl_sessione_err_verif = '0' THEN
                                     'NO_VERIF'
                                 WHEN ses.fl_sessione_err_verif = '1'
                                  AND ses.fl_sessione_err_non_risolub = '0' THEN
                                     'VERIF'
                                 WHEN ses.fl_sessione_err_verif = '1'
                                  AND ses.fl_sessione_err_non_risolub = '1' THEN
                                     'NO_RISOLUB'
                                 ELSE
                                     '??'
                             END
                     END    ti_stato_vers
                FROM ORG_ENTE ente
                     JOIN ORG_STRUT strut ON (strut.id_ente = ente.id_ente)
                     JOIN IAM_ABIL_ORGANIZ abil
                         ON (abil.id_organiz_applic = strut.id_strut)
                     JOIN VRS_SESSIONE_VERS_ko ses
                         ON (ses.id_strut = abil.id_organiz_applic
                         AND ses.ti_sessione_vers = 'AGGIUNGI_DOCUMENTO'
                         --AND ses.ti_stato_sessione_vers = 'CHIUSA_ERR'
                         AND ses.dt_apertura BETWEEN TO_DATE ('01-01-2000',
                                                              'dd-mm-yyyy')
                                                 AND TO_DATE (
                                                            TO_CHAR (
                                                                TRUNC (
                                                                      SYSDATE
                                                                    - 31),
                                                                'dd-mm-yyyy')
                                                         || '23:59:59',
                                                         'dd-mm-yyyy hh24:mi:ss')))
    GROUP BY id_ambiente, id_user_iam, ti_stato_vers;

-- changeset root:1751897635013-531
COMMENT ON COLUMN MON_V_CNT_AGG_AMB_B30.ID_AMBIENTE IS 'PK.1';

-- changeset root:1751897635013-532
COMMENT ON COLUMN MON_V_CNT_AGG_AMB_B30.ID_USER_IAM IS 'PK.2';

-- changeset root:1751897635013-533
COMMENT ON COLUMN MON_V_CNT_AGG_AMB_B30.TI_STATO_VERS IS 'PK.3';

-- changeset root:1751897635013-534
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_VERS_AMB" ("ID_AMBIENTE", "ID_USER_IAM", "TI_STATO_VERS", "TI_DT_CREAZIONE", "NI_VERS") AS SELECT id_ambiente,
             id_user_iam,
             ti_stato_vers,
             ti_dt_creazione,
             COUNT (1)     ni_vers
        FROM (SELECT ente.id_ambiente,
                     abil.id_user_iam,
                     CASE
                         WHEN EXISTS
                                  (SELECT 1
                                     FROM ARO_UNITA_DOC ud
                                    WHERE ud.id_strut = ses.id_strut
                                      AND ud.cd_registro_key_unita_doc =
                                          ses.cd_registro_key_unita_doc
                                      AND ud.aa_key_unita_doc =
                                          ses.aa_key_unita_doc
                                      AND ud.cd_key_unita_doc =
                                          ses.cd_key_unita_doc
                                      AND ud.dt_annul >= ses.dt_apertura) THEN
                             'RISOLTO'
                         ELSE
                             CASE
                                 WHEN ses.fl_sessione_err_verif = '0' THEN
                                     'NO_VERIF'
                                 WHEN ses.fl_sessione_err_verif = '1'
                                  AND ses.fl_sessione_err_non_risolub = '0' THEN
                                     'VERIF'
                                 WHEN ses.fl_sessione_err_verif = '1'
                                  AND ses.fl_sessione_err_non_risolub = '1' THEN
                                     'NO_RISOLUB'
                                 ELSE
                                     '??'
                             END
                     END    ti_stato_vers,
                     CASE
                         WHEN ses.dt_apertura BETWEEN TRUNC (SYSDATE)
                                                  AND SYSDATE + 1 / 24 THEN
                             'OGGI'
                         ELSE
                             '30gg'
                     END    ti_dt_creazione
                FROM ORG_ENTE ente
                     JOIN ORG_STRUT strut ON (strut.id_ente = ente.id_ente)
                     JOIN IAM_ABIL_ORGANIZ abil
                         ON (abil.id_organiz_applic = strut.id_strut)
                     JOIN VRS_SESSIONE_VERS_ko ses
                         ON (ses.id_strut = abil.id_organiz_applic
                         AND ses.ti_sessione_vers = 'VERSAMENTO'
                         --AND ses.ti_stato_sessione_vers = 'CHIUSA_ERR'
                         AND ses.dt_apertura BETWEEN TRUNC (SYSDATE - 30)
                                                 AND SYSDATE + 1 / 24))
    GROUP BY id_ambiente,
             id_user_iam,
             ti_stato_vers,
             ti_dt_creazione;

-- changeset root:1751897635013-535
COMMENT ON COLUMN MON_V_CNT_VERS_AMB.ID_AMBIENTE IS 'PK.1 relativa a tabella ORG_AMBIENTE';

-- changeset root:1751897635013-536
COMMENT ON COLUMN MON_V_CNT_VERS_AMB.ID_USER_IAM IS 'PK.2 relativa a tabella IAM_USER';

-- changeset root:1751897635013-537
COMMENT ON COLUMN MON_V_CNT_VERS_AMB.TI_STATO_VERS IS 'PK.3';

-- changeset root:1751897635013-538
COMMENT ON COLUMN MON_V_CNT_VERS_AMB.TI_DT_CREAZIONE IS 'PK.4';

-- changeset root:1751897635013-539
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_VERS_AMB_B30" ("ID_AMBIENTE", "ID_USER_IAM", "TI_STATO_VERS", "NI_VERS") AS SELECT id_ambiente,
             id_user_iam,
             ti_stato_vers,
             COUNT (1)     ni_vers
        FROM (SELECT ente.id_ambiente,
                     abil.id_user_iam,
                     CASE
                         WHEN EXISTS
                                  (SELECT 1
                                     FROM ARO_UNITA_DOC ud
                                    WHERE ud.id_strut = ses.id_strut
                                      AND ud.cd_registro_key_unita_doc =
                                          ses.cd_registro_key_unita_doc
                                      AND ud.aa_key_unita_doc =
                                          ses.aa_key_unita_doc
                                      AND ud.cd_key_unita_doc =
                                          ses.cd_key_unita_doc
                                      AND ud.dt_annul >= ses.dt_apertura) THEN
                             'RISOLTO'
                         ELSE
                             CASE
                                 WHEN ses.fl_sessione_err_verif = '0' THEN
                                     'NO_VERIF'
                                 WHEN ses.fl_sessione_err_verif = '1'
                                  AND ses.fl_sessione_err_non_risolub = '0' THEN
                                     'VERIF'
                                 WHEN ses.fl_sessione_err_verif = '1'
                                  AND ses.fl_sessione_err_non_risolub = '1' THEN
                                     'NO_RISOLUB'
                                 ELSE
                                     '??'
                             END
                     END    ti_stato_vers
                FROM ORG_ENTE ente
                     JOIN ORG_STRUT strut ON (strut.id_ente = ente.id_ente)
                     JOIN IAM_ABIL_ORGANIZ abil
                         ON (abil.id_organiz_applic = strut.id_strut)
                     JOIN VRS_SESSIONE_VERS_ko ses
                         ON (ses.id_strut = abil.id_organiz_applic
                         AND ses.ti_sessione_vers = 'VERSAMENTO'
                         --AND ses.ti_stato_sessione_vers = 'CHIUSA_ERR'
                         AND ses.dt_apertura BETWEEN TO_DATE ('01-01-2000',
                                                              'dd-mm-yyyy')
                                                 AND TO_DATE (
                                                            TO_CHAR (
                                                                TRUNC (
                                                                      SYSDATE
                                                                    - 31),
                                                                'dd-mm-yyyy')
                                                         || '23:59:59',
                                                         'dd-mm-yyyy hh24:mi:ss')))
    GROUP BY id_ambiente, id_user_iam, ti_stato_vers;

-- changeset root:1751897635013-540
COMMENT ON COLUMN MON_V_CNT_VERS_AMB_B30.ID_AMBIENTE IS 'PK.1';

-- changeset root:1751897635013-541
COMMENT ON COLUMN MON_V_CNT_VERS_AMB_B30.ID_USER_IAM IS 'PK.2';

-- changeset root:1751897635013-542
COMMENT ON COLUMN MON_V_CNT_VERS_AMB_B30.TI_STATO_VERS IS 'PK.3';

-- changeset root:1751897635013-543
CREATE OR REPLACE FORCE VIEW "ARO_V_SEL_UD_SER_FASC_BY_ENTE" ("TI_ELE", "ID_ROOTSTRUT", "ID_STRUT", "ID_UNITA_DOC", "ID_SERIE", "ID_FASCICOLO") AS select '01_UNI_DOC' ti_ele, rootstrut.id_strut id_rootstrut, strut.id_strut, ud.id_unita_doc , 0 id_serie, 0 id_fascicolo
from org_strut rootStrut 
join org_strut strut on 
    strut.id_ente_convenz = rootstrut.id_ente_convenz
join ARO_UNITA_DOC ud on 
    strut.id_strut = ud.id_strut
where 
--    ud.ti_stato_ud_elenco_vers = 'IN_ELENCO_COMPLETATO' rimosso per considerare anche le UD in archivio (volumi)
  (ud.ti_stato_conservazione = 'AIP_FIRMATO' or ud.ti_stato_conservazione = 'IN_ARCHIVIO')
    and ud.dt_annul = to_date('31/12/2444', 'dd/mm/yyyy')

UNION

select
 '02_SERIE' ti_ele, ente.id_ente,strut.id_ente_convenz, 0 id_unita_doc, ser.id_serie, 0 id_fascicolo

from SER_SERIE ser
join ser_stato_serie stato_ser on stato_ser.id_serie = ser.id_serie
join ORG_STRUT strut on strut.id_strut = ser.id_strut
join ORG_ENTE ente on ente.id_ente = strut.id_ente
-- and stato_ser.ti_stato_serie = 'IN_ELENCO_COMPLETATO'
-- and stato_ser.ti_stato_conservazione = 'AIP_FIRMATO'
where ser.dt_annul = to_date('31/12/2444', 'dd/mm/yyyy')

UNION

select
 '03_FASCICOLO' ti_ele, ente.id_ente,strut.id_ente_convenz, 0 id_unita_doc, 0 id_serie, fasc.id_fascicolo

from FAS_FASCICOLO fasc
join ORG_STRUT strut on strut.id_strut = fasc.id_strut
join ORG_ENTE ente on ente.id_ente = strut.id_ente
and fasc.ti_stato_fasc_elenco_vers = 'IN_ELENCO_COMPLETATO'
and fasc.ti_stato_conservazione = 'AIP_FIRMATO'
where fasc.dt_annull = to_date('31/12/2444', 'dd/mm/yyyy');

-- changeset root:1751897635013-544
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_FASC_KO_BY_AMB" ("ID_AMBIENTE", "ID_USER_IAM", "TI_STATO_FASC_KO", "TI_DT_CREAZIONE", "NI_FASC_KO") AS select 																				-- conta fasc ko per stato NON_RISOLUBILE, VERIFICATO, NON_VERIFICATO per OGGI
 ente.id_ambiente id_ambiente, 
 abil_org.id_user_iam id_user_iam,
 fasc_ko.ti_stato_fascicolo_ko ti_stato_fasc_ko,
 'OGGI' ti_dt_creazione,
 
 count(*) ni_fasc

from ORG_ENTE ente
join ORG_STRUT strut
 on (strut.id_ente = ente.id_ente)
join IAM_ABIL_ORGANIZ abil_org
 on (abil_org.id_organiz_applic = strut.id_strut)
join VRS_FASCICOLO_KO fasc_ko
 on (fasc_ko.id_strut = abil_org.id_organiz_applic)
 
join IAM_ABIL_TIPO_DATO abil_dato
 on (abil_dato.id_abil_organiz = abil_org.id_abil_organiz
 and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
 and abil_dato.id_tipo_dato_applic = fasc_ko.id_tipo_fascicolo_last)
				
where trunc(fasc_ko.ts_ini_last_ses) = trunc(sysdate)

group by ente.id_ambiente, abil_org.id_user_iam, fasc_ko.ti_stato_fascicolo_ko, 'OGGI'

UNION

select 		 																		-- conta fasc ko per stato NON_RISOLUBILE, VERIFICATO, NON_VERIFICATO per 30gg e before 30gg
 ente.id_ambiente id_ambiente, 
 abil_org.id_user_iam id_user_iam,
 conta_fasc_ko.ti_stato_fascicolo_ko ti_stato_fasc_ko,
 case
	when conta_fasc_ko.dt_rif_conta between trunc (sysdate - 30) and trunc(sysdate - 1) then '30gg'
	else 'before30gg'
 end ti_dt_creazione,
 sum (ni_fascicoli_ko) ni_fasc
 
from ORG_ENTE ente
join ORG_STRUT strut
 on (strut.id_ente = ente.id_ente)
join IAM_ABIL_ORGANIZ abil_org
 on (abil_org.id_organiz_applic = strut.id_strut)
join MON_CONTA_FASCICOLI_KO conta_fasc_ko
 on (conta_fasc_ko.id_strut = abil_org.id_organiz_applic)

join IAM_ABIL_TIPO_DATO abil_dato
 on (abil_dato.id_abil_organiz = abil_org.id_abil_organiz
 and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
 and abil_dato.id_tipo_dato_applic = conta_fasc_ko.id_tipo_fascicolo)

group by ente.id_ambiente, abil_org.id_user_iam, conta_fasc_ko.ti_stato_fascicolo_ko,
		 case
			when conta_fasc_ko.dt_rif_conta between trunc (sysdate - 30) and trunc(sysdate - 1) then '30gg'
			else 'before30gg'
		 end;

-- changeset root:1751897635013-545
COMMENT ON COLUMN MON_V_CNT_FASC_KO_BY_AMB.ID_AMBIENTE IS 'PK.1';

-- changeset root:1751897635013-546
COMMENT ON COLUMN MON_V_CNT_FASC_KO_BY_AMB.ID_USER_IAM IS 'PK.2';

-- changeset root:1751897635013-547
COMMENT ON COLUMN MON_V_CNT_FASC_KO_BY_AMB.TI_STATO_FASC_KO IS 'PK.3';

-- changeset root:1751897635013-548
COMMENT ON COLUMN MON_V_CNT_FASC_KO_BY_AMB.TI_DT_CREAZIONE IS 'PK.4';

-- changeset root:1751897635013-549
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_DOC_NONVERS_AMB" ("ID_AMBIENTE", "ID_USER_IAM", "TI_STATO_DOC_NONVERS", "NI_DOC_NONVERS") AS select 
 id_ambiente, id_user_iam, ti_stato_doc_nonvers, count(*) ni_doc_nonvers
from (select 
	 ente.id_ambiente, 
	 abil.id_user_iam,
	 case
		when doc_nonvers.fl_verif = '0' then 'NO_VERIF'
		when doc_nonvers.fl_verif = '1' and doc_nonvers.fl_non_risolub = '0' then 'VERIF'
		when doc_nonvers.fl_verif = '1' and doc_nonvers.fl_non_risolub = '1' then 'NO_RISOLUB'
		else '??'
	 end ti_stato_doc_nonvers

	from ORG_ENTE ente
	join ORG_STRUT strut
	 on (strut.id_ente = ente.id_ente)
	join IAM_ABIL_ORGANIZ abil
	 on (abil.id_organiz_applic = strut.id_strut)
	join VRS_V_DOC_NON_VERS doc_nonvers
	 on (doc_nonvers.id_strut = abil.id_organiz_applic)
	)

group by id_ambiente, id_user_iam, ti_stato_doc_nonvers;

-- changeset root:1751897635013-550
COMMENT ON COLUMN MON_V_CNT_DOC_NONVERS_AMB.ID_AMBIENTE IS 'PK.1 relativa a tabella ORG_AMBIENTE';

-- changeset root:1751897635013-551
COMMENT ON COLUMN MON_V_CNT_DOC_NONVERS_AMB.TI_STATO_DOC_NONVERS IS 'PK.2';

-- changeset root:1751897635013-552
CREATE OR REPLACE FORCE VIEW "SER_V_LIS_UD_NOVERS" ("ID_UD_NON_VERS_ERR", "ID_ERR_CONTENUTO_VER_SERIE", "ID_UNITA_DOC_NON_VERS", "CD_UNITA_DOC", "ID_STRUT", "CD_REGISTRO_KEY_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "DT_FIRST_SES_ERR", "DT_LAST_SES_ERR", "CD_ERR_PRINC", "DS_ERR_PRINC") AS select
 ud_novers_err.id_ud_non_vers_err, 
 ud_novers_err.id_err_contenuto_ver_serie, 
 ud_novers_err.id_unita_doc_non_vers,
 
 ud_novers.cd_registro_key_unita_doc || '-' || ud_novers.aa_key_unita_doc || '-' || ud_novers.cd_key_unita_doc cd_unita_doc, 
 ud_novers.id_strut, ud_novers.cd_registro_key_unita_doc, ud_novers.aa_key_unita_doc, ud_novers.cd_key_unita_doc, 
 ud_novers.dt_first_ses_err, 
 ud_novers.dt_last_ses_err, 
 ud_novers.cd_err_princ, 
 ud_novers.ds_err_princ

from SER_UD_NON_VERS_ERR ud_novers_err
join VRS_UNITA_DOC_NON_VERS ud_novers
 on (ud_novers.id_unita_doc_non_vers = ud_novers_err.id_unita_doc_non_vers);

-- changeset root:1751897635013-553
COMMENT ON COLUMN SER_V_LIS_UD_NOVERS.ID_UD_NON_VERS_ERR IS 'PK.1';

-- changeset root:1751897635013-554
CREATE OR REPLACE FORCE VIEW "VRS_V_UNITA_DOC_NON_VERS" ("ID_UNITA_DOC_NON_VERS", "ID_STRUT", "CD_REGISTRO_KEY_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "DT_FIRST_SES_ERR", "DT_LAST_SES_ERR", "CD_ERR_PRINC", "DS_ERR_PRINC", "CL_ERR_LAST", "CD_ERR_LAST", "DS_ERR_LAST", "FL_DIVERSI_ERR", "FL_VERIF", "FL_NON_RISOLUB") AS SELECT id_unita_doc_non_vers,
           id_strut,
           cd_registro_key_unita_doc,
           aa_key_unita_doc,
           cd_key_unita_doc,
           dt_first_ses_err,
           dt_last_ses_err,
           cd_err_princ,
           ds_err_princ,
           (  SELECT NVL (
                         SUBSTR (ses_err.cd_err_princ,
                                 0,
                                 INSTR (ses_err.cd_err_princ, '-0') - 1),
                         ses_err.cd_err_princ)    AS cl_err_last
               FROM VRS_SESSIONE_VERS_ko ses_err
              WHERE ses_err.ti_sessione_vers = 'VERSAMENTO' ----verificare se indicizzare
                --AND ses_err.ti_stato_sessione_vers = 'CHIUSA_ERR' ---condizione da rimuovere
                AND ses_err.id_strut = ud_non_vers.id_strut
                AND ses_err.cd_registro_key_unita_doc =
                    ud_non_vers.cd_registro_key_unita_doc
                AND ses_err.aa_key_unita_doc = ud_non_vers.aa_key_unita_doc
                AND ses_err.cd_key_unita_doc = ud_non_vers.cd_key_unita_doc
           ORDER BY ses_err.dt_chiusura DESC
              FETCH FIRST 1 ROWS ONLY)    AS cl_err_last,
           (  SELECT ses_err.cd_err_princ
               FROM VRS_SESSIONE_VERS_ko ses_err
              WHERE ses_err.ti_sessione_vers = 'VERSAMENTO'
                --AND ses_err.ti_stato_sessione_vers = 'CHIUSA_ERR'
                AND ses_err.id_strut = ud_non_vers.id_strut
                AND ses_err.cd_registro_key_unita_doc =
                    ud_non_vers.cd_registro_key_unita_doc
                AND ses_err.aa_key_unita_doc = ud_non_vers.aa_key_unita_doc
                AND ses_err.cd_key_unita_doc = ud_non_vers.cd_key_unita_doc
           --and ses_err.fl_sessione_err_verif = '0'
           ORDER BY ses_err.dt_chiusura DESC
              FETCH FIRST 1 ROWS ONLY)    AS cd_err_last,
           (  SELECT ses_err.ds_err_princ
               FROM VRS_SESSIONE_VERS_ko ses_err
              WHERE ses_err.ti_sessione_vers = 'VERSAMENTO'
                ---AND ses_err.ti_stato_sessione_vers = 'CHIUSA_ERR'
                AND ses_err.id_strut = ud_non_vers.id_strut
                AND ses_err.cd_registro_key_unita_doc =
                    ud_non_vers.cd_registro_key_unita_doc
                AND ses_err.aa_key_unita_doc = ud_non_vers.aa_key_unita_doc
                AND ses_err.cd_key_unita_doc = ud_non_vers.cd_key_unita_doc
           --and ses_err.fl_sessione_err_verif = '0'
           ORDER BY ses_err.dt_chiusura DESC
              FETCH FIRST 1 ROWS ONLY)    AS ds_err_last,
           CASE
               WHEN EXISTS
                        (SELECT 1
                           FROM VRS_SESSIONE_VERS_ko ses_err
                          WHERE ses_err.ti_sessione_vers = 'VERSAMENTO'
                           -- AND ses_err.ti_stato_sessione_vers = 'CHIUSA_ERR'
                            AND ses_err.id_strut = ud_non_vers.id_strut
                            AND ses_err.cd_registro_key_unita_doc =
                                ud_non_vers.cd_registro_key_unita_doc
                            AND ses_err.aa_key_unita_doc =
                                ud_non_vers.aa_key_unita_doc
                            AND ses_err.cd_key_unita_doc =
                                ud_non_vers.cd_key_unita_doc
                         --and ses_err.fl_sessione_err_verif = '0'
                         HAVING COUNT (1) > 1) THEN
                   '1'
               ELSE
                   '0'
           END                            fl_diversi_err,
           CASE
               WHEN NOT EXISTS
                        (SELECT 1
                           FROM VRS_SESSIONE_VERS_ko ses_err
                          WHERE ses_err.ti_sessione_vers = 'VERSAMENTO'
                            --AND ses_err.ti_stato_sessione_vers = 'CHIUSA_ERR'
                            AND ses_err.id_strut = ud_non_vers.id_strut
                            AND ses_err.cd_registro_key_unita_doc =
                                ud_non_vers.cd_registro_key_unita_doc
                            AND ses_err.aa_key_unita_doc =
                                ud_non_vers.aa_key_unita_doc
                            AND ses_err.cd_key_unita_doc =
                                ud_non_vers.cd_key_unita_doc
                            AND ses_err.fl_sessione_err_verif = '0') THEN
                   '1'
               ELSE
                   '0'
           END                            fl_verif,
           CASE
               WHEN NOT EXISTS
                        (SELECT 1
                           FROM VRS_SESSIONE_VERS_ko ses_err
                          WHERE ses_err.ti_sessione_vers = 'VERSAMENTO'
                            --AND ses_err.ti_stato_sessione_vers = 'CHIUSA_ERR'
                            AND ses_err.id_strut = ud_non_vers.id_strut
                            AND ses_err.cd_registro_key_unita_doc =
                                ud_non_vers.cd_registro_key_unita_doc
                            AND ses_err.aa_key_unita_doc =
                                ud_non_vers.aa_key_unita_doc
                            AND ses_err.cd_key_unita_doc =
                                ud_non_vers.cd_key_unita_doc
                            AND ses_err.fl_sessione_err_verif = '0') THEN
                   CASE
                       WHEN NOT EXISTS
                                (SELECT 1
                                   FROM VRS_SESSIONE_VERS_ko ses_err
                                  WHERE ses_err.ti_sessione_vers =
                                        'VERSAMENTO'
--                                    AND ses_err.ti_stato_sessione_vers =
--                                        'CHIUSA_ERR'
                                    AND ses_err.id_strut =
                                        ud_non_vers.id_strut
                                    AND ses_err.cd_registro_key_unita_doc =
                                        ud_non_vers.cd_registro_key_unita_doc
                                    AND ses_err.aa_key_unita_doc =
                                        ud_non_vers.aa_key_unita_doc
                                    AND ses_err.cd_key_unita_doc =
                                        ud_non_vers.cd_key_unita_doc
                                    AND ses_err.fl_sessione_err_non_risolub =
                                        '0') THEN
                           '1'
                       ELSE
                           '0'
                   END
               ELSE
                   NULL
           END                            fl_non_risolub
      FROM VRS_UNITA_DOC_NON_VERS ud_non_vers;

-- changeset root:1751897635013-555
CREATE OR REPLACE FORCE VIEW "ORG_V_VAL_SUB_PARTITION" ("ID_VAL_SUB_PARTITION", "ID_PARTITION", "CD_VAL_SUB_PARTITION", "ID_SUB_PARTITION") AS select
 val_subpart.id_val_sub_partition, 
 part.id_partition, 
 to_date(val_subpart.cd_val_sub_partition, 'dd/mm/yyyy'),
 val_subpart.id_sub_partition
from ORG_PARTITION part
join ORG_VAL_SUB_PARTITION val_subpart
on (val_subpart.id_partition = part.id_partition)
where part.ti_partition = 'SES';

-- changeset root:1751897635013-556
COMMENT ON COLUMN ORG_V_VAL_SUB_PARTITION.ID_VAL_SUB_PARTITION IS 'PK.1';

-- changeset root:1751897635013-557
CREATE OR REPLACE FORCE VIEW "OST_V_LIS_STRUT_MM_BLOB" ("ID_PARTITION", "CD_PARTITION", "ID_SUB_PARTITION", "CD_SUB_PARTITION", "ID_STRUT", "MM_VERS", "DT_VERS_INI", "DT_VERS_FINE", "FL_FILE_AGGIUNTI") AS select 
 part.id_partition, part.cd_partition,
 sub.id_sub_partition, sub.cd_sub_partition, 
 part_strut.id_strut,
 to_number(val.cd_val_sub_partition) mm_vers,
 
 to_date('01/' || substr(val.cd_val_sub_partition, 5, 2) || '/' || substr(val.cd_val_sub_partition, 1, 4) || '00:00:00', 'dd/mm/yyyy hh24:mi:ss') dt_vers_ini,
 LAST_DAY(to_date('01/' || substr(val.cd_val_sub_partition, 5, 2) || '/' || substr(val.cd_val_sub_partition, 1, 4) || '23:59:59', 'dd/mm/yyyy hh24:mi:ss')) dt_vers_fine, 
 
 '0' fl_file_aggiunti

from ORG_PARTITION part
join ORG_PARTITION_STRUT part_strut
	on (part_strut.id_partition = part.id_partition)
join ORG_SUB_PARTITION sub
	on (sub.id_partition = part.id_partition)
join ORG_VAL_SUB_PARTITION val
	on (val.id_sub_partition = sub.id_sub_partition)
	
where part.ti_partition = 'BLOB'

order by id_strut, to_number(val.cd_val_sub_partition);

-- changeset root:1751897635013-558
COMMENT ON COLUMN OST_V_LIS_STRUT_MM_BLOB.ID_SUB_PARTITION IS 'PK.1';

-- changeset root:1751897635013-559
COMMENT ON COLUMN OST_V_LIS_STRUT_MM_BLOB.ID_STRUT IS 'PK.2';

-- changeset root:1751897635013-560
COMMENT ON COLUMN OST_V_LIS_STRUT_MM_BLOB.MM_VERS IS 'PK.3';

-- changeset root:1751897635013-561
CREATE OR REPLACE FORCE VIEW "ORG_V_CHK_TABLE_PARTITION_UPD_DA_DROPPARE" ("ID_STRUT", "FL_PART_VERSINIDATISPEC_OK", "CD_PARTITION_VERSINIDATISPEC", "FL_PART_UPDDATISPEC_OK", "CD_PARTITION_UPDDATISPEC", "FL_PART_XMLUPD_OK", "CD_PARTITION_XMLUPD", "FL_PART_UPDKO_OK", "CD_PARTITION_UPDKO", "FL_PART_SESUPDKO_OK", "CD_PARTITION_SESUPDKO", "FL_PART_XMLSESUPDKO_OK", "CD_PARTITION_XMLSESUPDKO", "FL_PART_SESUPDERR_OK", "CD_PARTITION_SESUPDERR") AS select
  strut.id_strut,
  case															-- verifica se per la struttura la partizione per ARO_VERS_INI_DATI_SPEC e' definita 
	when (select ds_valore_param_applic
		 from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		 then '1'
		 else
			case
				when exists (select *
							 from ORG_PARTITION_STRUT part_strut
							 where part_strut.id_strut = strut.id_strut
							 and part_strut.ti_partition = 'VERS_INI_DATI_SPEC'
							)
					then '1'
					else '0'
			end
  end fl_part_versinidatispec_ok,
  case
	when (select ds_valore_param_applic
		  from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then null
		else
			(select part.cd_partition
			  from ORG_PARTITION_STRUT part_strut
			  join ORG_PARTITION part
			   on (part.id_partition = part_strut.id_partition)
			  where part_strut.id_strut = strut.id_strut
			  and part_strut.ti_partition = 'VERS_INI_DATI_SPEC'
			)
  end cd_partition_versinidatispec,
  
  case															-- verifica se per la struttura la partizione per ARO_UPD_DATI_SPEC_UNITA_DOC e' definita 
	when (select ds_valore_param_applic
		 from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		 then '1'
		 else
			case
				when exists (select *
							 from ORG_PARTITION_STRUT part_strut
							 where part_strut.id_strut = strut.id_strut
							 and part_strut.ti_partition = 'UPD_DATI_SPEC_UNITA_DOC'
							)
					then '1'
					else '0'
			end
  end fl_part_upddatispec_ok,
  case
	when (select ds_valore_param_applic
		  from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then null
		else
			(select part.cd_partition
			  from ORG_PARTITION_STRUT part_strut
			  join ORG_PARTITION part
			   on (part.id_partition = part_strut.id_partition)
			  where part_strut.id_strut = strut.id_strut
			  and part_strut.ti_partition = 'UPD_DATI_SPEC_UNITA_DOC'
			)
  end cd_partition_upddatispec,
  
  case															-- verifica se per la struttura la partizione per ARO_XML_UPD_UNITA_DOC e' definita 
	when (select ds_valore_param_applic
		 from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		 then '1'
		 else
			case
				when exists (select *
							 from ORG_PARTITION_STRUT part_strut
							 where part_strut.id_strut = strut.id_strut
							 and part_strut.ti_partition = 'XML_UPD_UNITA_DOC'
							)
					then '1'
					else '0'
			end
  end fl_part_xmlupd_ok,
  case
	when (select ds_valore_param_applic
		  from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then null
		else
			(select part.cd_partition
			  from ORG_PARTITION_STRUT part_strut
			  join ORG_PARTITION part
			   on (part.id_partition = part_strut.id_partition)
			  where part_strut.id_strut = strut.id_strut
			  and part_strut.ti_partition = 'XML_UPD_UNITA_DOC'
			)
  end cd_partition_xmlupd,
  
  case															-- verifica se per la struttura la partizione per VRS_UPD_UNITA_DOC_KO e' definita 
	when (select ds_valore_param_applic
		 from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		 then '1'
		 else
			case
				when exists (select *
							 from ORG_PARTITION_STRUT part_strut
							 where part_strut.id_strut = strut.id_strut
							 and part_strut.ti_partition = 'UPD_UNITA_DOC_KO'
							)
					then '1'
					else '0'
			end
  end fl_part_updko_ok,
  case
	when (select ds_valore_param_applic
		  from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then null
		else
			(select part.cd_partition
			  from ORG_PARTITION_STRUT part_strut
			  join ORG_PARTITION part
			   on (part.id_partition = part_strut.id_partition)
			  where part_strut.id_strut = strut.id_strut
			  and part_strut.ti_partition = 'UPD_UNITA_DOC_KO'
			)
  end cd_partition_updko,
  
  case															-- verifica se per la struttura la partizione per VRS_SES_UPD_UNITA_DOC_KO e' definita 
	when (select ds_valore_param_applic
		 from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		 then '1'
		 else
			case
				when exists (select *
							 from ORG_PARTITION_STRUT part_strut
							 where part_strut.id_strut = strut.id_strut
							 and part_strut.ti_partition = 'SES_UPD_UNITA_DOC_KO'
							)
					then '1'
					else '0'
			end
  end fl_part_sesupdko_ok,
  case
	when (select ds_valore_param_applic
		  from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then null
		else
			(select part.cd_partition
			  from ORG_PARTITION_STRUT part_strut
			  join ORG_PARTITION part
			   on (part.id_partition = part_strut.id_partition)
			  where part_strut.id_strut = strut.id_strut
			  and part_strut.ti_partition = 'SES_UPD_UNITA_DOC_KO'
			)
  end cd_partition_sesupdko,
  
  case															-- verifica se per la struttura la partizione per VRS_XML_SES_UPD_UNITA_DOC_KO e' definita 
	when (select ds_valore_param_applic
		 from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		 then '1'
		 else
			case
				when exists (select *
							 from ORG_PARTITION_STRUT part_strut
							 where part_strut.id_strut = strut.id_strut
							 and part_strut.ti_partition = 'XML_SES_UPD_UNITA_DOC_KO'
							)
					then '1'
					else '0'
			end
  end fl_part_xmlsesupdko_ok,
  case
	when (select ds_valore_param_applic
		  from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then null
		else
			(select part.cd_partition
			  from ORG_PARTITION_STRUT part_strut
			  join ORG_PARTITION part
			   on (part.id_partition = part_strut.id_partition)
			  where part_strut.id_strut = strut.id_strut
			  and part_strut.ti_partition = 'XML_SES_UPD_UNITA_DOC_KO'
			)
  end cd_partition_xmlsesupdko,
			  
  
  case															-- verifica se a data corrente la partizione per VRS_SES_UPD_UNITA_DOC_ERR e' definita 
	when (select ds_valore_param_applic
		 from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		 then '1'
		 else
			case
				when exists (select *
							 from ORG_PARTITION part
							 join ORG_VAL_SUB_PARTITION val_part
								on (val_part.id_partition = part.id_partition)
							 where part.ti_partition = 'SES_UPD_UNITA_DOC_ERR'
							 and val_part.cd_val_sub_partition like '%/%'
							 and to_date(val_part.cd_val_sub_partition, 'dd/mm/yyyy') > trunc(sysdate)
							)
					then '1'
					else '0'
			end
  end fl_part_sesupderr_ok,
  case
	when (select ds_valore_param_applic
		  from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then null
		else
			(select max(part.cd_partition)
			 from ORG_PARTITION part
			 join ORG_VAL_SUB_PARTITION val_part
				on (val_part.id_partition = part.id_partition)
			 where part.ti_partition = 'SES_UPD_UNITA_DOC_ERR'
			 and val_part.cd_val_sub_partition like '%/%'
			 and to_date(val_part.cd_val_sub_partition, 'dd/mm/yyyy') > trunc(sysdate)
			)
  end cd_partition_sesupderr

from ORG_STRUT strut;

-- changeset root:1751897635013-562
COMMENT ON COLUMN ORG_V_CHK_TABLE_PARTITION_UPD_DA_DROPPARE.ID_STRUT IS 'PK.1';

-- changeset root:1751897635013-563
CREATE OR REPLACE FORCE VIEW "ORG_V_CHK_PARTITION_UPD_BY_AA_DA_DROPPARE" ("ID_STRUT", "ANNO", "FL_PART_VERSINIDATISPEC_OK", "CD_PARTITION_VERSINIDATISPEC", "FL_PART_VERSINIDATISPEC_AA_OK", "FL_PART_UPDDATISPEC_OK", "CD_PARTITION_UPDDATISPEC", "FL_PART_UPDDATISPEC_AA_OK", "FL_PART_XMLUPD_OK", "CD_PARTITION_XMLUPD", "FL_PART_XMLUPD_AA_OK", "FL_PART_UPDKO_OK", "CD_PARTITION_UPDKO", "FL_PART_UPDKO_AA_OK", "FL_PART_SESUPDKO_OK", "CD_PARTITION_SESUPDKO", "FL_PART_SESUPDKO_AA_OK", "FL_PART_XMLSESUPDKO_OK", "CD_PARTITION_XMLSESUPDKO", "FL_PART_XMLSESUPDKP_AA_OK") AS select
 tmp.id_strut,
 aa.aa_val,

 tmp.fl_part_versinidatispec_ok,
 tmp.cd_partition_versinidatispec,
 case															-- verifica se per a data corrente la sub-partizione per ARO_VERS_INI_DATI_SPEC e' definita 
	when (select ds_valore_param_applic
		  from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then '1'
		else
			case
				when tmp.fl_part_versinidatispec_ok = '1'
					then
						case
							when tmp.cd_partition_versinidatispec is not null
								then 
									case
										when not exists (select *
														  from ORG_PARTITION part
														  join ORG_SUB_PARTITION subpart
														   on (subpart.id_partition = part.id_partition)
														  join ORG_VAL_SUB_PARTITION val_subpart
														   on (val_subpart.id_sub_partition = subpart.id_sub_partition
														   and val_subpart.id_partition = part.id_partition
														   and to_date(val_subpart.cd_val_sub_partition, 'dd/mm/yyyy') > trunc(sysdate))
														  where part.ti_partition = 'VERS_INI_DATI_SPEC'
														  and part.cd_partition = tmp.cd_partition_versinidatispec
														)
											then '0'									-- non esiste sottopartizione per anno in input
											else '1'
									end
								else '1'												-- controllo partizione per struttura fallito e partizione nulla; 
																						-- si assume sotto-partizione definita (caso in cui non si usano le partizioni)
						end
					else '0'															-- controllo partizione per struttura fallito
			end
 end fl_part_versinidatispec_aa_ok,


 tmp.fl_part_upddatispec_ok,
 tmp.cd_partition_upddatispec,
 case															-- verifica se per a data corrente la sub-partizione per ARO_UPD_DATI_SPEC_UNITA_DOC e' definita 
	when (select ds_valore_param_applic
		  from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then '1'
		else
			case
				when tmp.fl_part_upddatispec_ok = '1'
					then
						case
							when tmp.cd_partition_upddatispec is not null
								then 
									case
										when not exists (select *
														  from ORG_PARTITION part
														  join ORG_SUB_PARTITION subpart
														   on (subpart.id_partition = part.id_partition)
														  join ORG_VAL_SUB_PARTITION val_subpart
														   on (val_subpart.id_sub_partition = subpart.id_sub_partition
														   and val_subpart.id_partition = part.id_partition
														   and to_date(val_subpart.cd_val_sub_partition, 'dd/mm/yyyy') > trunc(sysdate))
														  where part.ti_partition = 'UPD_DATI_SPEC_UNITA_DOC'
														  and part.cd_partition = tmp.cd_partition_upddatispec
														)
											then '0'									-- non esiste sottopartizione per anno in input
											else '1'
									end
								else '1'												-- controllo partizione per struttura fallito e partizione nulla; 
																						-- si assume sotto-partizione definita (caso in cui non si usano le partizioni)
						end
					else '0'															-- controllo partizione per struttura fallito
			end
 end fl_part_upddatispec_aa_ok,

 tmp.fl_part_xmlupd_ok,
 tmp.cd_partition_xmlupd,
 case															-- verifica se per a data corrente la sub-partizione per ARO_XML_UPD_UNITA_DOC e' definita 
	when (select ds_valore_param_applic
		  from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then '1'
		else
			case
				when tmp.fl_part_xmlupd_ok = '1'
					then
						case
							when tmp.cd_partition_xmlupd is not null
								then 
									case
										when not exists (select *
														  from ORG_PARTITION part
														  join ORG_SUB_PARTITION subpart
														   on (subpart.id_partition = part.id_partition)
														  join ORG_VAL_SUB_PARTITION val_subpart
														   on (val_subpart.id_sub_partition = subpart.id_sub_partition
														   and val_subpart.id_partition = part.id_partition
														   and to_date(val_subpart.cd_val_sub_partition, 'dd/mm/yyyy') > trunc(sysdate))
														  where part.ti_partition = 'XML_UPD_UNITA_DOC'
														  and part.cd_partition = tmp.cd_partition_xmlupd
														)
											then '0'									-- non esiste sottopartizione per anno in input
											else '1'
									end
								else '1'												-- controllo partizione per struttura fallito e partizione nulla; 
																						-- si assume sotto-partizione definita (caso in cui non si usano le partizioni)
						end
					else '0'															-- controllo partizione per struttura fallito
			end
 end fl_part_xmlupd_aa_ok,

 tmp.fl_part_updko_ok,
 tmp.cd_partition_updko,
 case															-- verifica se per per anno in input la sub-partizione per VRS_UPD_UNITA_DOC_KO e' definita 
	when (select ds_valore_param_applic
		  from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then '1'
		else
			case
				when tmp.fl_part_updko_ok = '1'
					then
						case
							when tmp.cd_partition_updko is not null
								then 
									case
										when not exists (select *
														  from ORG_PARTITION part
														  join ORG_SUB_PARTITION subpart
														   on (subpart.id_partition = part.id_partition)
														  join ORG_VAL_SUB_PARTITION val_subpart
														   on (val_subpart.id_sub_partition = subpart.id_sub_partition
														   and val_subpart.id_partition = part.id_partition
														   and to_number(val_subpart.cd_val_sub_partition) = aa.aa_val)
														  where part.ti_partition = 'UPD_UNITA_DOC_KO'
														  and part.cd_partition = tmp.cd_partition_updko
														)
											then '0'									-- non esiste sottopartizione per anno in input
											else '1'
									end
								else '1'												-- controllo partizione per struttura fallito e partizione nulla; 
																						-- si assume sotto-partizione definita (caso in cui non si usano le partizioni)
						end
					else '0'															-- controllo partizione per struttura fallito
			end
 end fl_part_updko_aa_ok,

 tmp.fl_part_sesupdko_ok,
 tmp.cd_partition_sesupdko,
 case															-- verifica se per per anno in input la sub-partizione per VRS_SES_UPD_UNITA_DOC_KO e' definita 
	when (select ds_valore_param_applic
		  from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then '1'
		else
			case
				when tmp.fl_part_sesupdko_ok = '1'
					then
						case
							when tmp.cd_partition_sesupdko is not null
								then 
									case
										when not exists (select *
														  from ORG_PARTITION part
														  join ORG_SUB_PARTITION subpart
														   on (subpart.id_partition = part.id_partition)
														  join ORG_VAL_SUB_PARTITION val_subpart
														   on (val_subpart.id_sub_partition = subpart.id_sub_partition
														   and val_subpart.id_partition = part.id_partition
														   and to_number(val_subpart.cd_val_sub_partition) = aa.aa_val)
														  where part.ti_partition = 'SES_UPD_UNITA_DOC_KO'
														  and part.cd_partition = tmp.cd_partition_sesupdko
														)
											then '0'									-- non esiste sottopartizione per anno in input
											else '1'
									end
								else '1'												-- controllo partizione per struttura fallito e partizione nulla; 
																						-- si assume sotto-partizione definita (caso in cui non si usano le partizioni)
						end
					else '0'															-- controllo partizione per struttura fallito
			end
 end fl_part_sesupdko_aa_ok,


 tmp.fl_part_xmlsesupdko_ok,
 tmp.cd_partition_xmlsesupdko,
 case															-- verifica se per a data corrente la sub-partizione per VRS_XML_SES_UPD_UNITA_DOC_KO e' definita 
	when (select ds_valore_param_applic
		  from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then '1'
		else
			case
				when tmp.fl_part_xmlsesupdko_ok = '1'
					then
						case
							when tmp.cd_partition_xmlsesupdko is not null
								then 
									case
										when not exists (select *
														  from ORG_PARTITION part
														  join ORG_SUB_PARTITION subpart
														   on (subpart.id_partition = part.id_partition)
														  join ORG_VAL_SUB_PARTITION val_subpart
														   on (val_subpart.id_sub_partition = subpart.id_sub_partition
														   and val_subpart.id_partition = part.id_partition
														   and to_date(val_subpart.cd_val_sub_partition, 'dd/mm/yyyy') > trunc(sysdate))
														  where part.ti_partition = 'XML_SES_UPD_UNITA_DOC_KO'
														  and part.cd_partition = tmp.cd_partition_xmlsesupdko
														)
											then '0'									-- non esiste sottopartizione per anno in input
											else '1'
									end
								else '1'												-- controllo partizione per struttura fallito e partizione nulla; 
																						-- si assume sotto-partizione definita (caso in cui non si usano le partizioni)
						end
					else '0'															-- controllo partizione per struttura fallito
			end
 end fl_part_xmlsesupdkp_aa_ok 


from ORG_V_CHK_TABLE_PARTITION_UPD tmp
join DEC_AA_VAL aa
	on (aa.aa_val > 1);

-- changeset root:1751897635013-564
COMMENT ON COLUMN ORG_V_CHK_PARTITION_UPD_BY_AA_DA_DROPPARE.ID_STRUT IS 'PK.1';

-- changeset root:1751897635013-565
COMMENT ON COLUMN ORG_V_CHK_PARTITION_UPD_BY_AA_DA_DROPPARE.ANNO IS 'PK.2';

-- changeset root:1751897635013-566
CREATE OR REPLACE FORCE VIEW "ORG_V_CHK_SUB_STRUT_PARTITION" ("ID_STRUT", "ID_SUB_STRUT", "FL_PART_UNI_DOC_OK", "CD_PARTITION", "FL_PART_UNI_DOC_ANNO_OK") AS select
 tmp_1.id_strut,
 tmp_1.id_sub_strut,
 tmp_1.fl_part_uni_doc_ok,
 tmp_1.cd_partition,
 
 case
	when (select ds_valore_param_applic
		    from APL_PARAM_APPLIC par
						  join APL_VALORE_PARAM_APPLIC val
						  on (val.id_param_applic = par.id_param_applic)
						  where par.fl_appart_applic = '1' 
						  and val.ti_appart = 'APPLIC'
		 and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then '1'
		else
			case
				when tmp_1.fl_part_uni_doc_ok = '1'
					then
						case
							when tmp_1.cd_partition = 'STRUTDEF'
								then 
									case
										when exists (select *
													 from DEC_REGISTRO_UNITA_DOC reg
													 join DEC_AA_REGISTRO_UNITA_DOC aa_reg
													  on (aa_reg.id_registro_unita_doc = reg.id_registro_unita_doc)
													 join DEC_AA_VAL aa
													  on (aa.aa_val >= aa_reg.aa_min_registro_unita_doc
													  and aa.aa_val <= nvl(aa_reg.aa_max_registro_unita_doc, to_number(substr(to_char (sysdate, 'dd/mm/yyyy'), 7)))) 
													 where reg.id_strut = tmp_1.id_strut
													)
												then
													case
														when exists (select *
																	 from DEC_REGISTRO_UNITA_DOC reg
																	 join DEC_AA_REGISTRO_UNITA_DOC aa_reg
																	  on (aa_reg.id_registro_unita_doc = reg.id_registro_unita_doc)
																	 join DEC_AA_VAL aa
																	  on (aa.aa_val >= aa_reg.aa_min_registro_unita_doc
																	  and aa.aa_val <= nvl(aa_reg.aa_max_registro_unita_doc, to_number(substr(to_char (sysdate, 'dd/mm/yyyy'), 7))))
																	 where reg.id_strut = tmp_1.id_strut
																	 and not exists (select *
																					 from ORG_PARTITION part
																					 join ORG_SUB_PARTITION subpart
																					  on (subpart.id_partition = part.id_partition)
																					 join ORG_VAL_SUB_PARTITION val_subpart
																					  on (val_subpart.id_sub_partition = subpart.id_sub_partition
																					  and val_subpart.id_partition = part.id_partition
																					  and to_number(val_subpart.cd_val_sub_partition) = aa.aa_val)
																					 where part.ti_partition = 'UNI_DOC_SUB_STRUT'
																					 and part.cd_partition = tmp_1.cd_partition
																					)
																	)
															then '0'
															else '1'
													end
												else '1'		-- cd_partition = STRUTDEF e non esiste registro della struttura con anno censito in DEC_AA_VAL
									end

							when tmp_1.cd_partition != 'STRUTDEF'
								then
									case
										when exists (select *
													 from DEC_REGISTRO_UNITA_DOC reg
													 join DEC_AA_REGISTRO_UNITA_DOC aa_reg
													  on (aa_reg.id_registro_unita_doc = reg.id_registro_unita_doc)
													 join DEC_AA_VAL aa
													  on (aa.aa_val >= aa_reg.aa_min_registro_unita_doc
													  and aa.aa_val <= nvl(aa_reg.aa_max_registro_unita_doc, to_number(substr(to_char (sysdate, 'dd/mm/yyyy'), 7))))
													 where reg.id_strut = tmp_1.id_strut
													)
											then
												case
													when exists (select *
																 from DEC_REGISTRO_UNITA_DOC reg
																 join DEC_AA_REGISTRO_UNITA_DOC aa_reg
																  on (aa_reg.id_registro_unita_doc = reg.id_registro_unita_doc)
																 join DEC_AA_VAL aa
																  on (aa.aa_val >= aa_reg.aa_min_registro_unita_doc
																  and aa.aa_val <= nvl(aa_reg.aa_max_registro_unita_doc, to_number(substr(to_char (sysdate, 'dd/mm/yyyy'), 7))))
																 where reg.id_strut = tmp_1.id_strut
																 and not exists (select *
																				 from ORG_PARTITION part
																				 join ORG_SUB_PARTITION subpart
																				  on (subpart.id_partition = part.id_partition)
																				 join ORG_VAL_SUB_PARTITION val_subpart
																				  on (val_subpart.id_sub_partition = subpart.id_sub_partition
																				  and val_subpart.id_partition = part.id_partition
																				  and to_number(val_subpart.cd_val_sub_partition) = aa.aa_val)
																				 where part.ti_partition = 'UNI_DOC_SUB_STRUT'
																				 and part.cd_partition = tmp_1.cd_partition
																				)
																)
														then '0'
														else '1'
												end
											else '1'	-- cd_partition != STRUTDEF e non esiste registro della struttura con anno censito in DEC_AA_VAL
									end 
								else '0'	-- cd_partition null
						end
				else '0'		--fl_part_uni_doc_ok = '0'
		end		-- verifica partizioni 
 end fl_part_uni_doc_anno_ok

from (select 
	 tmp.id_strut,
	 tmp.id_sub_strut,
	 tmp.fl_part_uni_doc_ok,
	 case
		when (select ds_valore_param_applic
			    from APL_PARAM_APPLIC par
						  join APL_VALORE_PARAM_APPLIC val
						  on (val.id_param_applic = par.id_param_applic)
						  where par.fl_appart_applic = '1' 
						  and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
			then null
			else
				case
					when tmp.fl_part_uni_doc_ok = '1'
						then (select part.cd_partition
							  from ORG_PARTITION_SUB_STRUT part_substrut
							  join ORG_PARTITION part
							   on (part.id_partition = part_substrut.id_partition)
							  where part_substrut.id_sub_strut = tmp.id_sub_strut
							  and part_substrut.ti_partition = 'UNI_DOC_SUB_STRUT'
							  )
						else null
				end
	 end cd_partition

	from (select
			substrut.id_strut,
			substrut.id_sub_strut,
			case
				when (select ds_valore_param_applic
					   from APL_PARAM_APPLIC par
						  join APL_VALORE_PARAM_APPLIC val
						  on (val.id_param_applic = par.id_param_applic)
						  where par.fl_appart_applic = '1' 
						  and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
					 then '1'
					 else
						case
							when not exists (select *
											 from ORG_PARTITION_SUB_STRUT part_substrut
											 where part_substrut.id_sub_strut = substrut.id_sub_strut
											 and part_substrut.ti_partition = 'UNI_DOC_SUB_STRUT'
											)
								then '0'
								else '1'
						end
			end fl_part_uni_doc_ok
		  from ORG_SUB_STRUT substrut
		) tmp
	) tmp_1;

-- changeset root:1751897635013-567
CREATE OR REPLACE FORCE VIEW "ORG_V_CHK_TABLE_PARTITION_FASC_DA_DROPPARE" ("ID_STRUT", "FL_PART_FASC_OK", "CD_PARTITION_FASC", "FL_PART_FASCKO_OK", "CD_PARTITION_FASCKO", "FL_PART_SESFASCKO_OK", "CD_PARTITION_SESFASCKO", "FL_PART_XMLVERSFASC_OK", "CD_PARTITION_XMLVERSFASC", "FL_PART_XMLFASC_OK", "CD_PARTITION_XMLFASC", "FL_PART_XMLSESFASCKO_OK", "CD_PARTITION_XMLSESFASCKO", "FL_PART_FILEELEVRSFASC_OK", "CD_PARTITION_FILEELEVRSFASC", "FL_PART_SESFASCERR_OK", "CD_PARTITION_SESFASCERR") AS select
  strut.id_strut,
  case															-- verifica se per la struttura la partizione per FAS_FASCICOLO e' definita 
	when (select ds_valore_param_applic
		 from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		 then '1'
		 else
			case
				when exists (select *
							 from ORG_PARTITION_STRUT part_strut
							 where part_strut.id_strut = strut.id_strut
							 and part_strut.ti_partition = 'FASCICOLO'
							)
					then '1'
					else '0'
			end
  end fl_part_fasc_ok,
  case
	when (select ds_valore_param_applic
		  from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then null
		else
			(select part.cd_partition
			  from ORG_PARTITION_STRUT part_strut
			  join ORG_PARTITION part
			   on (part.id_partition = part_strut.id_partition)
			  where part_strut.id_strut = strut.id_strut
			  and part_strut.ti_partition = 'FASCICOLO'
			)
  end cd_partition_fasc,
  
  case															-- verifica se per la struttura la partizione per VRS_FASCICOLO_KO e' definita 
	when (select ds_valore_param_applic
		 from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		 then '1'
		 else
			case
				when exists (select *
							 from ORG_PARTITION_STRUT part_strut
							 where part_strut.id_strut = strut.id_strut
							 and part_strut.ti_partition = 'FASCICOLO_KO'
							)
					then '1'
					else '0'
			end
  end fl_part_fascko_ok,
  case
	when (select ds_valore_param_applic
		  from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then null
		else
			(select part.cd_partition
			  from ORG_PARTITION_STRUT part_strut
			  join ORG_PARTITION part
			   on (part.id_partition = part_strut.id_partition)
			  where part_strut.id_strut = strut.id_strut
			  and part_strut.ti_partition = 'FASCICOLO_KO'
			)
  end cd_partition_fascko,
  
  case															-- verifica se per la struttura la partizione per VRS_SES_FASCICOLO_KO e' definita 
	when (select ds_valore_param_applic
		 from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		 then '1'
		 else
			case
				when exists (select *
							 from ORG_PARTITION_STRUT part_strut
							 where part_strut.id_strut = strut.id_strut
							 and part_strut.ti_partition = 'SES_FASCICOLO_KO'
							)
					then '1'
					else '0'
			end
  end fl_part_sesfascko_ok,
  case
	when (select ds_valore_param_applic
		  from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then null
		else
			(select part.cd_partition
			  from ORG_PARTITION_STRUT part_strut
			  join ORG_PARTITION part
			   on (part.id_partition = part_strut.id_partition)
			  where part_strut.id_strut = strut.id_strut
			  and part_strut.ti_partition = 'SES_FASCICOLO_KO'
			)
  end cd_partition_sesfascko,
  
  case															-- verifica se per la struttura la partizione per FAS_XML_VERS_FASCICOLO e' definita 
	when (select ds_valore_param_applic
		 from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		 then '1'
		 else
			case
				when exists (select *
							 from ORG_PARTITION_STRUT part_strut
							 where part_strut.id_strut = strut.id_strut
							 and part_strut.ti_partition = 'XML_VERS_FASCICOLO'
							)
					then '1'
					else '0'
			end
  end fl_part_xmlversfasc_ok,
  case
	when (select ds_valore_param_applic
		  from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then null
		else
			(select part.cd_partition
			  from ORG_PARTITION_STRUT part_strut
			  join ORG_PARTITION part
			   on (part.id_partition = part_strut.id_partition)
			  where part_strut.id_strut = strut.id_strut
			  and part_strut.ti_partition = 'XML_VERS_FASCICOLO'
			)
  end cd_partition_xmlversfasc,
  
  case															-- verifica se per la struttura la partizione per FAS_XML_FASCICOLO e' definita 
	when (select ds_valore_param_applic
		 from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		 then '1'
		 else
			case
				when exists (select *
							 from ORG_PARTITION_STRUT part_strut
							 where part_strut.id_strut = strut.id_strut
							 and part_strut.ti_partition = 'XML_FASCICOLO'
							)
					then '1'
					else '0'
			end
  end fl_part_xmlfasc_ok,
  case
	when (select ds_valore_param_applic
		  from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then null
		else
			(select part.cd_partition
			  from ORG_PARTITION_STRUT part_strut
			  join ORG_PARTITION part
			   on (part.id_partition = part_strut.id_partition)
			  where part_strut.id_strut = strut.id_strut
			  and part_strut.ti_partition = 'XML_FASCICOLO'
			)
  end cd_partition_xmlfasc,
  
  case															-- verifica se per la struttura la partizione per VRS_XML_SES_FASCICOLO_KO e' definita 
	when (select ds_valore_param_applic
		 from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		 then '1'
		 else
			case
				when exists (select *
							 from ORG_PARTITION_STRUT part_strut
							 where part_strut.id_strut = strut.id_strut
							 and part_strut.ti_partition = 'XML_SES_FASCICOLO_KO'
							)
					then '1'
					else '0'
			end
  end fl_part_xmlsesfascko_ok,
  case
	when (select ds_valore_param_applic
		  from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then null
		else
			(select part.cd_partition
			  from ORG_PARTITION_STRUT part_strut
			  join ORG_PARTITION part
			   on (part.id_partition = part_strut.id_partition)
			  where part_strut.id_strut = strut.id_strut
			  and part_strut.ti_partition = 'XML_SES_FASCICOLO_KO'
			)
  end cd_partition_xmlsesfascko,
			  
  case															-- verifica se per la struttura la partizione per ELV_FILE_ELENCO_VERS_FASC e' definita 
	when (select ds_valore_param_applic
		 from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		 then '1'
		 else
			case
				when exists (select *
							 from ORG_PARTITION_STRUT part_strut
							 where part_strut.id_strut = strut.id_strut
							 and part_strut.ti_partition = 'FILE_ELENCO_VERS_FASC'
							)
					then '1'
					else '0'
			end
  end fl_part_fileelevrsfasc_ok,
  case
	when (select ds_valore_param_applic
		  from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then null
		else
			(select part.cd_partition
			  from ORG_PARTITION_STRUT part_strut
			  join ORG_PARTITION part
			   on (part.id_partition = part_strut.id_partition)
			  where part_strut.id_strut = strut.id_strut
			  and part_strut.ti_partition = 'FILE_ELENCO_VERS_FASC'
			)
  end cd_partition_fileelevrsfasc,
  
  case															-- verifica se a data corrente la partizione per VRS_SES_FASCICOLO_ERR e' definita 
	when (select ds_valore_param_applic
		 from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		 then '1'
		 else
			case
				when exists (select *
							 from ORG_PARTITION part
							 join ORG_VAL_SUB_PARTITION val_part
								on (val_part.id_partition = part.id_partition)
							 where part.ti_partition = 'FASCICOLO_ERR'
							 and val_part.cd_val_sub_partition like '%/%'
							 and to_date(val_part.cd_val_sub_partition, 'dd/mm/yyyy') > trunc(sysdate)
							)
					then '1'
					else '0'
			end
  end fl_part_sesfascerr_ok,
  case
	when (select ds_valore_param_applic
		  from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then null
		else
			(select max(part.cd_partition)
			 from ORG_PARTITION part
			 join ORG_VAL_SUB_PARTITION val_part
				on (val_part.id_partition = part.id_partition)
			 where part.ti_partition = 'FASCICOLO_ERR'
			 and val_part.cd_val_sub_partition like '%/%'
			 and to_date(val_part.cd_val_sub_partition, 'dd/mm/yyyy') > trunc(sysdate)
			)
  end cd_partition_sesfascerr

from ORG_STRUT strut;

-- changeset root:1751897635013-568
COMMENT ON COLUMN ORG_V_CHK_TABLE_PARTITION_FASC_DA_DROPPARE.ID_STRUT IS 'PK.1';

-- changeset root:1751897635013-569
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_UD_NONVERS_AMB" ("ID_AMBIENTE", "ID_USER_IAM", "TI_STATO_UD_NONVERS", "NI_UD_NONVERS") AS select 
 id_ambiente, id_user_iam, ti_stato_ud_nonvers, count(*) ni_ud_nonvers
from (select 
	 ente.id_ambiente, 
	 abil.id_user_iam,
	 case
		when ud_nonvers.fl_verif = '0' then 'NO_VERIF'
		when ud_nonvers.fl_verif = '1' and ud_nonvers.fl_non_risolub = '0' then 'VERIF'
		when ud_nonvers.fl_verif = '1' and ud_nonvers.fl_non_risolub = '1' then 'NO_RISOLUB'
		else '??'
	 end ti_stato_ud_nonvers

	from ORG_ENTE ente
	join ORG_STRUT strut
	 on (strut.id_ente = ente.id_ente)
	join IAM_ABIL_ORGANIZ abil
	 on (abil.id_organiz_applic = strut.id_strut)
	join VRS_V_UNITA_DOC_NON_VERS ud_nonvers
	 on (ud_nonvers.id_strut = abil.id_organiz_applic)
	)

group by id_ambiente, id_user_iam, ti_stato_ud_nonvers;

-- changeset root:1751897635013-570
COMMENT ON COLUMN MON_V_CNT_UD_NONVERS_AMB.ID_AMBIENTE IS 'PK.1 relativa a tabella ORG_AMBIENTE';

-- changeset root:1751897635013-571
COMMENT ON COLUMN MON_V_CNT_UD_NONVERS_AMB.ID_USER_IAM IS 'PK.2 relativa a tabella IAM_USER';

-- changeset root:1751897635013-572
COMMENT ON COLUMN MON_V_CNT_UD_NONVERS_AMB.TI_STATO_UD_NONVERS IS 'PK.3';

-- changeset root:1751897635013-573
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_UD_NONVERS_ENTE" ("ID_ENTE", "ID_USER_IAM", "TI_STATO_UD_NONVERS", "NI_UD_NONVERS") AS select 
 id_ente, id_user_iam, ti_stato_ud_nonvers, count(*) ni_ud_nonvers
from (select 
	 strut.id_ente, 
	 abil.id_user_iam,
	 case
		when ud_nonvers.fl_verif = '0' then 'NO_VERIF'
		when ud_nonvers.fl_verif = '1' and ud_nonvers.fl_non_risolub = '0' then 'VERIF'
		when ud_nonvers.fl_verif = '1' and ud_nonvers.fl_non_risolub = '1' then 'NO_RISOLUB'
		else '??'
	 end ti_stato_ud_nonvers

	from ORG_STRUT strut
	join IAM_ABIL_ORGANIZ abil
	 on (abil.id_organiz_applic = strut.id_strut)
	join VRS_V_UNITA_DOC_NON_VERS ud_nonvers
	 on (ud_nonvers.id_strut = abil.id_organiz_applic)
	)

group by id_ente, id_user_iam, ti_stato_ud_nonvers;

-- changeset root:1751897635013-574
COMMENT ON COLUMN MON_V_CNT_UD_NONVERS_ENTE.ID_ENTE IS 'PK.1 relativa a tabella ORG_ENTE';

-- changeset root:1751897635013-575
COMMENT ON COLUMN MON_V_CNT_UD_NONVERS_ENTE.ID_USER_IAM IS 'PK.2 relativa a tabella IAM_USER';

-- changeset root:1751897635013-576
COMMENT ON COLUMN MON_V_CNT_UD_NONVERS_ENTE.TI_STATO_UD_NONVERS IS 'PK.3';

-- changeset root:1751897635013-577
CREATE OR REPLACE FORCE VIEW "FAS_V_LIS_UD_IN_FASC" ("ID_FASCICOLO", "ID_UNITA_DOC", "CD_REGISTRO_KEY_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "NM_TIPO_UNITA_DOC", "NM_TIPO_DOC", "DT_CREAZIONE", "TI_STATO_CONSERVAZIONE", "ID_USER_IAM_CORRENTE", "NI_POSIZIONE", "DT_REG_UNITA_DOC") AS SELECT -- info fascicolo
           fasc.id_fascicolo,
           ud.id_unita_doc,
           ud.cd_registro_key_unita_doc,
           ud.aa_key_unita_doc,
           ud.cd_key_unita_doc,
           tipoud.nm_tipo_unita_doc,
           tipodoc.nm_tipo_doc,
           ud.dt_creazione,
           ud.ti_stato_conservazione,
           organiz.id_user_iam     AS id_user_iam_corrente,
           ud_in_fasc.ni_posizione,
           ud.dt_reg_unita_doc
      FROM FAS_FASCICOLO  fasc
           JOIN FAS_UNITA_DOC_FASCICOLO ud_in_fasc
               ON (fasc.id_fascicolo = ud_in_fasc.id_fascicolo)
           JOIN ARO_UNITA_DOC ud
               ON (ud_in_fasc.id_unita_doc = ud.id_unita_doc)
           JOIN DEC_TIPO_UNITA_DOC tipoud
               ON (ud.id_tipo_unita_doc = tipoud.id_tipo_unita_doc)
           JOIN ARO_DOC doc
               ON (ud.id_unita_doc = doc.id_unita_doc
               AND doc.ti_doc = 'PRINCIPALE')
           JOIN DEC_TIPO_DOC tipodoc
               ON (doc.id_tipo_doc = tipodoc.id_tipo_doc)
           JOIN IAM_ABIL_ORGANIZ organiz
               ON (organiz.id_organiz_applic = fasc.id_strut)
           JOIN IAM_ABIL_TIPO_DATO abil_tipoud
               ON (abil_tipoud.id_abil_organiz = organiz.id_abil_organiz
               AND abil_tipoud.id_tipo_dato_applic = ud.id_tipo_unita_doc
               AND abil_tipoud.nm_classe_tipo_dato = 'TIPO_UNITA_DOC')
           JOIN IAM_ABIL_TIPO_DATO abil_tipodoc
               ON (abil_tipodoc.id_abil_organiz = organiz.id_abil_organiz
               AND abil_tipodoc.id_tipo_dato_applic = doc.id_tipo_doc
               AND abil_tipodoc.nm_classe_tipo_dato = 'TIPO_DOC')
           JOIN IAM_ABIL_TIPO_DATO abil_tiporeg
               ON (abil_tiporeg.id_abil_organiz = organiz.id_abil_organiz
               AND abil_tiporeg.id_tipo_dato_applic =
                   ud.id_registro_unita_doc
               AND abil_tiporeg.nm_classe_tipo_dato = 'REGISTRO');

-- changeset root:1751897635013-578
COMMENT ON COLUMN FAS_V_LIS_UD_IN_FASC.ID_FASCICOLO IS 'PK.1';

-- changeset root:1751897635013-579
COMMENT ON COLUMN FAS_V_LIS_UD_IN_FASC.ID_UNITA_DOC IS 'PK.1';

-- changeset root:1751897635013-580
CREATE OR REPLACE FORCE VIEW "MON_V_LIS_UD_NON_VERS_IAM" ("ID_USER_IAM", "ID_AMBIENTE", "NM_AMBIENTE", "ID_ENTE", "NM_ENTE", "ID_STRUT", "NM_STRUT", "ID_UNITA_DOC_NON_VERS", "CD_REGISTRO_KEY_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "FL_VERIF", "FL_NON_RISOLUB", "DS_KEY_ORD", "CL_ERR_LAST", "CD_ERR_LAST", "DS_ERR_LAST", "FL_DIVERSI_ERR", "DT_FIRST_SES_ERR", "DT_LAST_SES_ERR") AS SELECT abil_org.id_user_iam,
           amb.id_ambiente,
           amb.nm_ambiente,
           ente.id_ente,
           ente.nm_ente,
           strut.id_strut,
           strut.nm_strut,
           ud_non_vers.id_unita_doc_non_vers,
           ud_non_vers.cd_registro_key_unita_doc,
           ud_non_vers.aa_key_unita_doc,
           ud_non_vers.cd_key_unita_doc,
           ud_non_vers.fl_verif,
           ud_non_vers.fl_non_risolub,
              ud_non_vers.cd_registro_key_unita_doc
           || TO_CHAR (ud_non_vers.aa_key_unita_doc)
           || LPAD (ud_non_vers.cd_key_unita_doc, 12, '0')    ds_key_ord,
           ud_non_vers.cl_err_last,
           ud_non_vers.cd_err_last,
           ud_non_vers.ds_err_last,
           ud_non_vers.fl_diversi_err,
           ud_non_vers.dt_first_ses_err,
           ud_non_vers.dt_last_ses_err
      FROM IAM_ABIL_ORGANIZ  abil_org
           JOIN ORG_STRUT strut
               ON (strut.id_strut = abil_org.id_organiz_applic
               AND strut.fl_cessato = 0)
           JOIN ORG_ENTE ente
               ON (ente.id_ente = strut.id_ente AND ente.fl_cessato = 0)
           JOIN ORG_AMBIENTE amb ON (amb.id_ambiente = ente.id_ambiente)
           JOIN VRS_V_UNITA_DOC_NON_VERS ud_non_vers
               ON (ud_non_vers.id_strut = strut.id_strut);

-- changeset root:1751897635013-581
CREATE OR REPLACE FORCE VIEW "MON_V_CHK_FASC_BY_STRUT" ("ID_STRUT", "ID_USER_IAM", "FL_FASC_CORR", "FL_FASC_30GG", "FL_FASC_B30GG", "FL_FASC_ATTESA_SCHED_CORR", "FL_FASC_ATTESA_SCHED_30GG", "FL_FASC_ATTESA_SCHED_B30GG", "FL_FASC_NOSEL_SCHED_CORR", "FL_FASC_NOSEL_SCHED_30GG", "FL_FASC_NOSEL_SCHED_B30GG") AS select
 abil_org.id_organiz_applic id_strut,
 abil_org.id_user_iam id_user_iam,
 
--
--					ud TOTALE
--
case
	when exists (select * 
				from FAS_FASCICOLO fasc, IAM_ABIL_TIPO_DATO abil_dato
				where fasc.id_strut = abil_org.id_organiz_applic
				and trunc(fasc.ts_ini_ses) = trunc(sysdate)
				
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = fasc.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_corr,
case
	when exists (select *
				  from MON_CONTA_FASCICOLI conta_fasc, IAM_ABIL_TIPO_DATO abil_dato
				  where conta_fasc.id_strut = abil_org.id_organiz_applic
				  and conta_fasc.dt_rif_conta between trunc(sysdate - 30) and trunc(sysdate - 1)
				  				
				  and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				  and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				  and abil_dato.id_tipo_dato_applic = conta_fasc.id_tipo_fascicolo
				) 
			then '1'
			else '0'
end fl_fasc_30gg,
case
	when exists (select *
				  from MON_CONTA_FASCICOLI conta_fasc, IAM_ABIL_TIPO_DATO abil_dato
				  where conta_fasc.id_strut = abil_org.id_organiz_applic
				  and conta_fasc.dt_rif_conta < trunc(sysdate - 30)
				  
				  and abil_dato.id_abil_organiz = abil_org.id_abil_organiz				  
				  and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				  and abil_dato.id_tipo_dato_applic = conta_fasc.id_tipo_fascicolo
				) 
			then '1'
			else '0'
end fl_fasc_b30gg,

--
--						ud IN_ATTESA_SCHED
--
case
	when exists (select * 
				from ELV_FASC_DA_ELAB_ELENCO fasc_da_elab, IAM_ABIL_TIPO_DATO abil_dato
				where fasc_da_elab.id_strut = abil_org.id_organiz_applic 
				and fasc_da_elab.ti_stato_fasc_da_elab = 'IN_ATTESA_SCHED'
				and trunc(fasc_da_elab.ts_vers_fascicolo) = trunc(sysdate)
				
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = fasc_da_elab.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_attesa_sched_corr,
case
	when exists (select * 
				from ELV_FASC_DA_ELAB_ELENCO fasc_da_elab, IAM_ABIL_TIPO_DATO abil_dato
				where fasc_da_elab.id_strut = abil_org.id_organiz_applic 
				and fasc_da_elab.ti_stato_fasc_da_elab = 'IN_ATTESA_SCHED'
				and trunc(fasc_da_elab.ts_vers_fascicolo) between trunc(sysdate - 30) and trunc(sysdate - 1)
								
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = fasc_da_elab.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_attesa_sched_30gg,
case
	when exists (select * 
				from ELV_FASC_DA_ELAB_ELENCO fasc_da_elab, IAM_ABIL_TIPO_DATO abil_dato
				where fasc_da_elab.id_strut = abil_org.id_organiz_applic 
				and fasc_da_elab.ti_stato_fasc_da_elab = 'IN_ATTESA_SCHED'
				and trunc(fasc_da_elab.ts_vers_fascicolo) < trunc(sysdate - 30)
								
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = fasc_da_elab.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_attesa_sched_3b0gg,

--
--						ud NON_SELEZ_SCHED
--
case
	when exists (select * 
				from ELV_FASC_DA_ELAB_ELENCO fasc_da_elab, IAM_ABIL_TIPO_DATO abil_dato
				where fasc_da_elab.id_strut = abil_org.id_organiz_applic 
				and fasc_da_elab.ti_stato_fasc_da_elab = 'NON_SELEZ_SCHED'
				and trunc(fasc_da_elab.ts_vers_fascicolo) = trunc(sysdate)
								
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = fasc_da_elab.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_nosel_sched_corr,
case
	when exists (select * 
				from ELV_FASC_DA_ELAB_ELENCO fasc_da_elab, IAM_ABIL_TIPO_DATO abil_dato
				where fasc_da_elab.id_strut = abil_org.id_organiz_applic 
				and fasc_da_elab.ti_stato_fasc_da_elab = 'NON_SELEZ_SCHED'
				and trunc(fasc_da_elab.ts_vers_fascicolo) between trunc(sysdate - 30) and trunc(sysdate - 1)
								
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = fasc_da_elab.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_nosel_sched_30gg,
case
	when exists (select * 
				from ELV_FASC_DA_ELAB_ELENCO fasc_da_elab, IAM_ABIL_TIPO_DATO abil_dato
				where fasc_da_elab.id_strut = abil_org.id_organiz_applic 
				and fasc_da_elab.ti_stato_fasc_da_elab = 'NON_SELEZ_SCHED'
				and trunc(fasc_da_elab.ts_vers_fascicolo) < trunc(sysdate - 30)
								
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = fasc_da_elab.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_nosel_sched_b30gg

from IAM_ABIL_ORGANIZ abil_org;

-- changeset root:1751897635013-582
COMMENT ON COLUMN MON_V_CHK_FASC_BY_STRUT.ID_STRUT IS 'PK.1';

-- changeset root:1751897635013-583
COMMENT ON COLUMN MON_V_CHK_FASC_BY_STRUT.ID_USER_IAM IS 'PK.1';

-- changeset root:1751897635013-584
CREATE OR REPLACE FORCE VIEW "MON_V_CHK_FASC_KO_BY_STRUT" ("ID_STRUT", "ID_USER_IAM", "FL_FASC_KO_NON_RISOLUB_CORR", "FL_FASC_KO_NON_RISOLUB_30GG", "FL_FASC_KO_NON_RISOLUB_B30GG", "FL_FASC_KO_VERIF_CORR", "FL_FASC_KO_VERIF_30GG", "FL_FASC_KO_VERIF_B30GG", "FL_FASC_KO_NON_VERIF_CORR", "FL_FASC_KO_NON_VERIF_30GG", "FL_FASC_KO_NON_VERIF_B30GG") AS select
 abil_org.id_organiz_applic id_strut,
 abil_org.id_user_iam id_user_iam,

--
--						fascicoli KO non risolubili
--
case
	when exists (select * 
				from VRS_FASCICOLO_KO fasc_ko, IAM_ABIL_TIPO_DATO abil_dato
				where fasc_ko.id_strut = abil_org.id_organiz_applic
				and fasc_ko.ti_stato_fascicolo_ko = 'NON_RISOLUBILE'
				and trunc(fasc_ko.ts_ini_last_ses) = trunc(sysdate)
				
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = fasc_ko.id_tipo_fascicolo_last
				)
			then '1'
			else '0'
end fl_fasc_ko_non_risolub_corr,
case
	when exists (select * 
				from MON_CONTA_FASCICOLI_KO conta_fasc_ko, IAM_ABIL_TIPO_DATO abil_dato
				where conta_fasc_ko.id_strut = abil_org.id_organiz_applic
				and conta_fasc_ko.ti_stato_fascicolo_ko = 'NON_RISOLUBILE'
				and conta_fasc_ko.dt_rif_conta between trunc(sysdate - 30) and trunc(sysdate - 1)
				
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = conta_fasc_ko.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_ko_non_risolub_30gg,
case
	when exists (select * 
				from MON_CONTA_FASCICOLI_KO conta_fasc_ko, IAM_ABIL_TIPO_DATO abil_dato
				where conta_fasc_ko.id_strut = abil_org.id_organiz_applic 
				and conta_fasc_ko.ti_stato_fascicolo_ko = 'NON_RISOLUBILE'
				and conta_fasc_ko.dt_rif_conta < trunc(sysdate - 30)
				
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = conta_fasc_ko.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_ko_non_risolub_b30gg,


--
--						fascicoli KO verificati
--
case
	when exists (select * 
				from VRS_FASCICOLO_KO fasc_ko, IAM_ABIL_TIPO_DATO abil_dato
				where fasc_ko.id_strut = abil_org.id_organiz_applic 
				and fasc_ko.ti_stato_fascicolo_ko = 'VERIFICATO'
				and trunc(fasc_ko.ts_ini_last_ses) = trunc(sysdate)
				
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = fasc_ko.id_tipo_fascicolo_last
				)
			then '1'
			else '0'
end fl_fasc_ko_verif_corr,
case
	when exists (select * 
				from MON_CONTA_FASCICOLI_KO conta_fasc_ko, IAM_ABIL_TIPO_DATO abil_dato
				where conta_fasc_ko.id_strut = abil_org.id_organiz_applic
				and conta_fasc_ko.ti_stato_fascicolo_ko = 'VERIFICATO'
				and conta_fasc_ko.dt_rif_conta between trunc(sysdate - 30) and trunc(sysdate - 1)
				
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = conta_fasc_ko.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_ko_verif_30gg,
case
	when exists (select * 
				from MON_CONTA_FASCICOLI_KO conta_fasc_ko, IAM_ABIL_TIPO_DATO abil_dato
				where conta_fasc_ko.id_strut = abil_org.id_organiz_applic
				and conta_fasc_ko.ti_stato_fascicolo_ko = 'VERIFICATO'
				and conta_fasc_ko.dt_rif_conta < trunc(sysdate - 30)
				
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = conta_fasc_ko.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_ko_verif_b30gg,


--
--						fascicoli KO non verificati
--
case
	when exists (select * 
				from VRS_FASCICOLO_KO fasc_ko, IAM_ABIL_TIPO_DATO abil_dato
				where fasc_ko.id_strut = abil_org.id_organiz_applic
				and fasc_ko.ti_stato_fascicolo_ko = 'NON_VERIFICATO'
				and trunc(fasc_ko.ts_ini_last_ses) = trunc(sysdate)
				
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = fasc_ko.id_tipo_fascicolo_last
				)
			then '1'
			else '0'
end fl_fasc_ko_non_verif_corr,
case
	when exists (select * 
				from MON_CONTA_FASCICOLI_KO conta_fasc_ko, IAM_ABIL_TIPO_DATO abil_dato
				where conta_fasc_ko.id_strut = abil_org.id_organiz_applic
				and conta_fasc_ko.ti_stato_fascicolo_ko = 'NON_VERIFICATO'
				and conta_fasc_ko.dt_rif_conta between trunc(sysdate - 30) and trunc(sysdate - 1)
				
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = conta_fasc_ko.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_ko_non_verif_30gg,
case
	when exists (select * 
				from MON_CONTA_FASCICOLI_KO conta_fasc_ko, IAM_ABIL_TIPO_DATO abil_dato
				where conta_fasc_ko.id_strut = abil_org.id_organiz_applic
				and conta_fasc_ko.ti_stato_fascicolo_ko = 'NON_VERIFICATO'
				and conta_fasc_ko.dt_rif_conta < trunc(sysdate - 30)
				
				and abil_dato.id_abil_organiz = abil_org.id_abil_organiz
				and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
				and abil_dato.id_tipo_dato_applic = conta_fasc_ko.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_ko_non_verif_b30gg

from IAM_ABIL_ORGANIZ abil_org;

-- changeset root:1751897635013-585
COMMENT ON COLUMN MON_V_CHK_FASC_KO_BY_STRUT.ID_STRUT IS 'PK.1';

-- changeset root:1751897635013-586
COMMENT ON COLUMN MON_V_CHK_FASC_KO_BY_STRUT.ID_USER_IAM IS 'PK.2';

-- changeset root:1751897635013-587
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_DOC_ENTE" ("ID_ENTE", "ID_USER_IAM", "TI_STATO_DOC", "TI_DT_CREAZIONE", "NI_DOC") AS select 
 strut.id_ente id_ente, 
 abil.id_user_iam id_user_iam,
 doc_da_elab.ti_stato_doc_da_elab ti_stato_ud,
 case
	when doc_da_elab.dt_creazione between trunc(sysdate) and sysdate + 1/24 then 'OGGI'
	else '30gg'
 end ti_dt_creazione,
 
 count(*) ni_doc

from ORG_STRUT strut
join IAM_ABIL_ORGANIZ abil
 on (abil.id_organiz_applic = strut.id_strut)
join ELV_DOC_AGG_DA_ELAB_ELENCO doc_da_elab
 on (doc_da_elab.id_strut = abil.id_organiz_applic)
where doc_da_elab.dt_creazione between trunc(sysdate - 30) and sysdate + 1/24

group by strut.id_ente, abil.id_user_iam, doc_da_elab.ti_stato_doc_da_elab,  
		 case
			when doc_da_elab.dt_creazione between trunc(sysdate) and sysdate + 1/24 then 'OGGI'
			else '30gg'
		 end

UNION

select
 tmp.id_ente id_ente, 
 tmp.id_user_iam id_user_iam, 
 'TOTALE' ti_stato_ud, 
 'OGGI' ti_dt_creazione, 
 tmp.ni_doc
from (select 
	   strut.id_ente id_ente, 
	   abil.id_user_iam,
	   count(*) ni_doc
	  from ORG_STRUT strut
	  join IAM_ABIL_ORGANIZ abil
	    on (abil.id_organiz_applic = strut.id_strut)
	  join ARO_DOC doc
	    on (doc.id_strut = abil.id_organiz_applic)
	  where doc.dt_creazione between trunc(sysdate) and sysdate + 1/24
	  and doc.dt_annul = to_date('31/12/2444', 'dd/mm/yyyy')
	  and doc.ti_creazione = 'AGGIUNTA_DOCUMENTO'
	  group by strut.id_ente, abil.id_user_iam
	) tmp

UNION

select 
 tmp.id_ente id_ente, 
 tmp.id_user_iam id_user_iam, 
 tmp.ti_stato_doc ti_stato_doc, 
 tmp.ti_dt_creazione ti_dt_creazione,
 sum(tmp.ni_doc) ni_doc
from (select 
	   strut.id_ente id_ente, 
	   abil.id_user_iam, 
	   'TOTALE' ti_stato_doc, 
	   '30gg' ti_dt_creazione,
		(select nvl(sum(ni_doc_agg), 0)
		 from MON_CONTA_UD_DOC_COMP conta_doc
	     where conta_doc.id_strut = abil.id_organiz_applic
		 and conta_doc.dt_rif_conta between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
		) -
		(select nvl(count(*), 0)
		 from ARO_ITEM_RICH_ANNUL_VERS item_annul, ARO_DOC doc
		 where item_annul.id_strut = abil.id_organiz_applic
		 and item_annul.ti_item_rich_annul_vers = 'UNI_DOC'
		 and item_annul.ti_stato_item = 'ANNULLATO'
		 and doc.id_unita_doc = item_annul.id_unita_doc
		 and doc.ti_creazione = 'AGGIUNTA_DOCUMENTO'
		 and doc.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
		) ni_doc
	  from ORG_STRUT strut
	  join IAM_ABIL_ORGANIZ abil
	    on (abil.id_organiz_applic = strut.id_strut)
	) tmp

group by tmp.id_ente, tmp.id_user_iam, tmp.ti_stato_doc, tmp.ti_dt_creazione;

-- changeset root:1751897635013-588
COMMENT ON COLUMN MON_V_CNT_DOC_ENTE.ID_ENTE IS 'PK.1 relativa a tabella ORG_ENTE';

-- changeset root:1751897635013-589
COMMENT ON COLUMN MON_V_CNT_DOC_ENTE.ID_USER_IAM IS 'PK.2 relativa a tabella IAM_USER';

-- changeset root:1751897635013-590
COMMENT ON COLUMN MON_V_CNT_DOC_ENTE.TI_STATO_DOC IS 'PK.3';

-- changeset root:1751897635013-591
COMMENT ON COLUMN MON_V_CNT_DOC_ENTE.TI_DT_CREAZIONE IS 'PK.4';

-- changeset root:1751897635013-592
CREATE OR REPLACE FORCE VIEW "MON_V_CHK_UD_NONVERS_AMB" ("ID_AMBIENTE", "ID_USER_IAM", "FL_UD_NONVERS_NOVERIF", "FL_UD_NONVERS_VERIF", "FL_UD_NONVERS_NORISOLUB") AS select
amb.id_ambiente,
utente.id_user_iam,

--
--			NON VERIFICATI
--
case
	when exists (select *
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_UNITA_DOC_NON_VERS ud_nonvers
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ud_nonvers.id_strut = abil.id_organiz_applic
				and ud_nonvers.fl_verif = '0'
				)
		then '1'
		else '0'
end fl_ud_nonvers_noverif,

--
--			VERIFICATI
--

case
	when exists (select *
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_UNITA_DOC_NON_VERS ud_nonvers
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ud_nonvers.id_strut = abil.id_organiz_applic
				and ud_nonvers.fl_verif = '1'
				and ud_nonvers.fl_non_risolub = '0'
				)
		then '1'
		else '0'
end fl_ud_nonvers_verif,
--
--			NON RISOLUBILI
--

case
	when exists (select *
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_UNITA_DOC_NON_VERS ud_nonvers
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ud_nonvers.id_strut = abil.id_organiz_applic
				and ud_nonvers.fl_verif = '1'
				and ud_nonvers.fl_non_risolub = '1'
				)
		then '1'
		else '0'
end fl_ud_nonvers_norisolub

from ORG_AMBIENTE amb
join IAM_USER utente
 on (utente.id_user_iam > 0);

-- changeset root:1751897635013-593
COMMENT ON COLUMN MON_V_CHK_UD_NONVERS_AMB.ID_AMBIENTE IS 'PK.1 relativa a tabella ORG_AMBIENTE';

-- changeset root:1751897635013-594
COMMENT ON COLUMN MON_V_CHK_UD_NONVERS_AMB.ID_USER_IAM IS 'PK.2 relativa a tabella IAM_USER';

-- changeset root:1751897635013-595
CREATE OR REPLACE FORCE VIEW "MON_V_CHK_UD_NONVERS_ENTE" ("ID_ENTE", "ID_USER_IAM", "FL_UD_NONVERS_NOVERIF", "FL_UD_NONVERS_VERIF", "FL_UD_NONVERS_NORISOLUB") AS select
ente.id_ente,
utente.id_user_iam,

--
--			NON VERIFICATI
--
case
	when exists (select *
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_UNITA_DOC_NON_VERS ud_nonvers
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ud_nonvers.id_strut = abil.id_organiz_applic
				and ud_nonvers.fl_verif = '0'
				)
		then '1'
		else '0'
end fl_ud_nonvers_noverif,

--
--			VERIFICATI
--

case
	when exists (select *
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_UNITA_DOC_NON_VERS ud_nonvers
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ud_nonvers.id_strut = abil.id_organiz_applic
				and ud_nonvers.fl_verif = '1'
				and ud_nonvers.fl_non_risolub = '0'
				)
		then '1'
		else '0'
end fl_ud_nonvers_verif,
--
--			NON RISOLUBILI
--

case
	when exists (select *
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_UNITA_DOC_NON_VERS ud_nonvers
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ud_nonvers.id_strut = abil.id_organiz_applic
				and ud_nonvers.fl_verif = '1'
				and ud_nonvers.fl_non_risolub = '1'
				)
		then '1'
		else '0'
end fl_ud_nonvers_norisolub

from ORG_ENTE ente
join IAM_USER utente
 on (utente.id_user_iam > 0);

-- changeset root:1751897635013-596
COMMENT ON COLUMN MON_V_CHK_UD_NONVERS_ENTE.ID_ENTE IS 'PK.1 relativa a tabella ORG_ENTE';

-- changeset root:1751897635013-597
COMMENT ON COLUMN MON_V_CHK_UD_NONVERS_ENTE.ID_USER_IAM IS 'PK.2 relativa a tabella IAM_USER';

-- changeset root:1751897635013-598
CREATE OR REPLACE FORCE VIEW "USR_V_LIS_REG_ABIL" ("ID_USER_IAM", "ID_ORGANIZ_APPLIC", "ID_REGISTRO_UNITA_DOC", "CD_REGISTRO_UNITA_DOC") AS select
 abil_org.id_user_iam,
 abil_org.id_organiz_applic,
 reg.id_registro_unita_doc,
 reg.cd_registro_unita_doc
from IAM_ABIL_ORGANIZ abil_org
join IAM_ABIL_TIPO_DATO abil_tipo_dato
	on (abil_tipo_dato.id_abil_organiz = abil_org.id_abil_organiz
	and abil_tipo_dato.nm_classe_tipo_dato = 'REGISTRO')
join DEC_REGISTRO_UNITA_DOC reg
 on (reg.id_registro_unita_doc = abil_tipo_dato.id_tipo_dato_applic);

-- changeset root:1751897635013-599
COMMENT ON COLUMN USR_V_LIS_REG_ABIL.ID_USER_IAM IS 'PK.1';

-- changeset root:1751897635013-600
COMMENT ON COLUMN USR_V_LIS_REG_ABIL.ID_ORGANIZ_APPLIC IS 'PK.2';

-- changeset root:1751897635013-601
COMMENT ON COLUMN USR_V_LIS_REG_ABIL.ID_REGISTRO_UNITA_DOC IS 'PK.3';

-- changeset root:1751897635013-602
CREATE OR REPLACE FORCE VIEW "USR_V_LIS_TIPO_DOC_ABIL" ("ID_USER_IAM", "ID_ORGANIZ_APPLIC", "ID_TIPO_DOC", "NM_TIPO_DOC") AS select
 abil_org.id_user_iam,
 abil_org.id_organiz_applic,
 tipo_doc.id_tipo_doc,
 tipo_doc.nm_tipo_doc
from IAM_ABIL_ORGANIZ abil_org
join IAM_ABIL_TIPO_DATO abil_tipo_dato
	on (abil_tipo_dato.id_abil_organiz = abil_org.id_abil_organiz
	and abil_tipo_dato.nm_classe_tipo_dato = 'TIPO_DOC')
join DEC_TIPO_DOC tipo_doc
 on (tipo_doc.id_tipo_doc = abil_tipo_dato.id_tipo_dato_applic);

-- changeset root:1751897635013-603
COMMENT ON COLUMN USR_V_LIS_TIPO_DOC_ABIL.ID_USER_IAM IS 'PK.1';

-- changeset root:1751897635013-604
COMMENT ON COLUMN USR_V_LIS_TIPO_DOC_ABIL.ID_ORGANIZ_APPLIC IS 'PK.2';

-- changeset root:1751897635013-605
COMMENT ON COLUMN USR_V_LIS_TIPO_DOC_ABIL.ID_TIPO_DOC IS 'PK.3';

-- changeset root:1751897635013-606
CREATE OR REPLACE FORCE VIEW "USR_V_LIS_TIPO_UD_ABIL" ("ID_USER_IAM", "ID_ORGANIZ_APPLIC", "ID_TIPO_UNITA_DOC", "NM_TIPO_UNITA_DOC") AS select
 abil_org.id_user_iam,
 abil_org.id_organiz_applic,
 tipo_ud.id_tipo_unita_doc,
 tipo_ud.nm_tipo_unita_doc
from IAM_ABIL_ORGANIZ abil_org
join IAM_ABIL_TIPO_DATO abil_tipo_dato
	on (abil_tipo_dato.id_abil_organiz = abil_org.id_abil_organiz
	and abil_tipo_dato.nm_classe_tipo_dato = 'TIPO_UNITA_DOC')
join DEC_TIPO_UNITA_DOC tipo_ud
 on (tipo_ud.id_tipo_unita_doc = abil_tipo_dato.id_tipo_dato_applic);

-- changeset root:1751897635013-607
COMMENT ON COLUMN USR_V_LIS_TIPO_UD_ABIL.ID_USER_IAM IS 'PK.1';

-- changeset root:1751897635013-608
COMMENT ON COLUMN USR_V_LIS_TIPO_UD_ABIL.ID_ORGANIZ_APPLIC IS 'PK.2';

-- changeset root:1751897635013-609
COMMENT ON COLUMN USR_V_LIS_TIPO_UD_ABIL.ID_TIPO_UNITA_DOC IS 'PK.3';

-- changeset root:1751897635013-610
CREATE OR REPLACE FORCE VIEW "FAS_V_RIC_FASCICOLI" ("ID_FASCICOLO", "ID_STRUT", "AA_FASCICOLO", "CD_KEY_FASCICOLO", "DT_APE_FASCICOLO", "DT_CHIU_FASCICOLO", "TS_VERS_FASCICOLO", "ID_TIPO_FASCICOLO", "NM_TIPO_FASCICOLO", "NI_UNITA_DOC", "NI_AA_CONSERVAZIONE", "CD_LIVELLO_RISERV", "FL_FORZA_CONTR_CLASSIF", "FL_FORZA_CONTR_NUMERO", "FL_FORZA_CONTR_COLLEG", "TI_STATO_CONSERVAZIONE", "TI_STATO_FASC_ELENCO_VERS", "DS_OGGETTO_FASCICOLO", "TI_CONSERVAZIONE", "CD_PROC_AMMIN", "DS_PROC_AMMIN", "AA_FASCICOLO_PADRE", "CD_KEY_FASCICOLO_PADRE", "DS_OGGETTO_FASCICOLO_PADRE", "ID_USER_IAM_VERS", "NM_USERID", "ID_SISTEMA_VERSANTE", "NM_SISTEMA_VERSANTE", "ID_VOCE_TITOL", "CD_COMPOSITO_VOCE_TITOL", "TI_ESITO", "ID_USER_IAM_CORRENTE", "CD_VERSIONE_XSD", "TI_MODELLO_XSD", "CD_VERSIONE_XML_SIP") AS SELECT -- ===============================================================================
           -- colonne fascicolo
           fasc.id_fascicolo,
           fasc.id_strut,
           fasc.aa_fascicolo,
           fasc.cd_key_fascicolo,
           fasc.dt_ape_fascicolo,
           fasc.dt_chiu_fascicolo,
           fasc.ts_ini_ses,
           fasc.id_tipo_fascicolo,
           tipo_fascicolo.nm_tipo_fascicolo,
           fasc.ni_unita_doc,
           fasc.ni_aa_conservazione,
           fasc.cd_livello_riserv,
           fasc.fl_forza_contr_classif,
           fasc.fl_forza_contr_numero,
           fasc.fl_forza_contr_colleg,
           fasc.ti_stato_conservazione,
           fasc.ti_stato_fasc_elenco_vers,
           fasc.ds_oggetto_fascicolo,
           fasc.ti_conservazione,
           fasc.cd_proc_ammin,
           fasc.ds_proc_ammin,
           fasc.aa_fascicolo_padre,
           fasc.cd_key_fascicolo_padre,
           fasc.ds_oggetto_fascicolo_padre,
           fasc.id_user_iam_vers,
           utenti.nm_userid,
           utenti.id_sistema_versante,
           sisvers.nm_sistema_versante,
           fasc.id_voce_titol,
           titolario.cd_composito_voce_titol,
           CASE
               WHEN EXISTS
                        (SELECT id_warn_fascicolo
                           FROM FAS_WARN_FASCICOLO warn
                          WHERE warn.id_fascicolo = fasc.id_fascicolo) THEN
                   'WARNING'
               ELSE
                   'POSITIVO'
           END                           ti_esito,
           organiz.id_user_iam           AS id_user_iam_corrente,
           modello_xsd.cd_xsd            AS cd_versione_xsd,
           modello_xsd.ti_modello_xsd    AS modello_xsd,
           xmlfascsip.cd_versione_xml    AS cd_versione_xml_sip
      FROM FAS_FASCICOLO  fasc
           JOIN DEC_TIPO_FASCICOLO tipo_fascicolo
               ON (tipo_fascicolo.id_tipo_fascicolo = fasc.id_tipo_fascicolo)
           JOIN SACER_IAM.USR_USER utenti
               ON (fasc.id_user_iam_vers = utenti.id_user_iam)
           JOIN SACER_IAM.APL_SISTEMA_VERSANTE sisvers
               ON (utenti.id_sistema_versante = sisvers.id_sistema_versante)
           LEFT JOIN DEC_VOCE_TITOL titolario
               ON (fasc.id_voce_titol = titolario.id_voce_titol)
           JOIN IAM_ABIL_ORGANIZ organiz
               ON (organiz.id_organiz_applic = fasc.id_strut)
           JOIN IAM_ABIL_TIPO_DATO abil
               ON (abil.id_abil_organiz = organiz.id_abil_organiz
               AND abil.id_tipo_dato_applic = fasc.id_tipo_fascicolo
               AND abil.nm_classe_tipo_dato = 'TIPO_FASCICOLO')
           JOIN DEC_AA_TIPO_FASCICOLO aa_tipo_fascicolo
               ON (abil.id_tipo_dato_applic =
                   aa_tipo_fascicolo.ID_TIPO_FASCICOLO
               AND (aa_tipo_fascicolo.AA_FIN_TIPO_FASCICOLO IS NULL
                 OR aa_tipo_fascicolo.AA_FIN_TIPO_FASCICOLO >=
                    fasc.aa_fascicolo))
           LEFT JOIN DEC_USO_MODELLO_XSD_FASC uso_xsd
               ON (uso_xsd.ID_AA_TIPO_FASCICOLO =
                   aa_tipo_fascicolo.ID_AA_TIPO_FASCICOLO)
           LEFT JOIN FAS_XML_FASCICOLO fas_xml
               ON (fas_xml.id_modello_xsd_fascicolo =
                   uso_xsd.id_modello_xsd_fascicolo
               AND (fas_xml.id_fascicolo = fasc.id_fascicolo))
           LEFT JOIN DEC_MODELLO_XSD_FASCICOLO modello_xsd
               ON (fas_xml.id_modello_xsd_fascicolo =
                   modello_xsd.id_modello_xsd_fascicolo)
           JOIN FAS_XML_VERS_FASCICOLO xmlfascsip
               ON (fasc.id_fascicolo = xmlfascsip.id_fascicolo
               AND xmlfascsip.ti_xml_vers = 'RICHIESTA');

-- changeset root:1751897635013-611
COMMENT ON COLUMN FAS_V_RIC_FASCICOLI.ID_FASCICOLO IS 'PK.1';

-- changeset root:1751897635013-612
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_UD_ENTE" ("ID_ENTE", "ID_USER_IAM", "TI_STATO_UD", "TI_DT_CREAZIONE", "NI_UD") AS select 
 strut.id_ente id_ente, 
 abil.id_user_iam id_user_iam,
 ud_da_elab.ti_stato_ud_da_elab ti_stato_ud,
 case
	when ud_da_elab.dt_creazione between trunc(sysdate) and sysdate + 1/24 then 'OGGI'
	else '30gg'
 end ti_dt_creazione,
 
 count(*) ni_ud

from ORG_STRUT strut
join IAM_ABIL_ORGANIZ abil
 on (abil.id_organiz_applic = strut.id_strut)
join ELV_UD_VERS_DA_ELAB_ELENCO ud_da_elab
 on (ud_da_elab.id_strut = abil.id_organiz_applic)
where ud_da_elab.dt_creazione between trunc(sysdate - 30) and sysdate + 1/24

group by strut.id_ente, abil.id_user_iam, ud_da_elab.ti_stato_ud_da_elab,  
		 case
			when ud_da_elab.dt_creazione between trunc(sysdate) and sysdate + 1/24 then 'OGGI'
			else '30gg'
		 end

UNION

select
 tmp.id_ente id_ente, 
 tmp.id_user_iam id_user_iam, 
 'TOTALE' ti_stato_ud, 
 'OGGI' ti_dt_creazione, 
 tmp.ni_ud
from (select 
	   strut.id_ente id_ente, 
	   abil.id_user_iam,
	   count(*) ni_ud
	  from ORG_STRUT strut
	  join IAM_ABIL_ORGANIZ abil
	    on (abil.id_organiz_applic = strut.id_strut)
	  join ARO_DOC doc
	    on (doc.id_strut = abil.id_organiz_applic)
	  where doc.ti_doc = 'PRINCIPALE'
	  and doc.dt_creazione between trunc(sysdate) and sysdate + 1/24
	  and doc.dt_annul = to_date('31/12/2444', 'dd/mm/yyyy')
	  and doc.ti_creazione = 'VERSAMENTO_UNITA_DOC'
	  group by strut.id_ente, abil.id_user_iam
	) tmp

UNION

select 
 tmp.id_ente id_ente, 
 tmp.id_user_iam id_user_iam, 
 tmp.ti_stato_ud ti_stato_ud, 
 tmp.ti_dt_creazione ti_dt_creazione,
 sum(tmp.ni_ud) ni_ud
from (select 
	   strut.id_ente id_ente, 
	   abil.id_user_iam, 
	   'TOTALE' ti_stato_ud, 
	   '30gg' ti_dt_creazione,
		(select nvl(sum(ni_unita_doc_vers), 0)
		 from MON_CONTA_UD_DOC_COMP conta_ud
	     where conta_ud.id_strut = abil.id_organiz_applic
		 and conta_ud.dt_rif_conta between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
		) -
		(select nvl(count(*), 0)
		 from ARO_ITEM_RICH_ANNUL_VERS item_annul, ARO_UNITA_DOC ud
		 where item_annul.id_strut = abil.id_organiz_applic
		 and item_annul.ti_item_rich_annul_vers = 'UNI_DOC'
		 and item_annul.ti_stato_item = 'ANNULLATO'
		 and ud.id_unita_doc = item_annul.id_unita_doc
		 and ud.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
		) ni_ud
	  from ORG_STRUT strut
	  join IAM_ABIL_ORGANIZ abil
	    on (abil.id_organiz_applic = strut.id_strut)
	) tmp

group by tmp.id_ente, tmp.id_user_iam, tmp.ti_stato_ud, tmp.ti_dt_creazione;

-- changeset root:1751897635013-613
COMMENT ON COLUMN MON_V_CNT_UD_ENTE.ID_ENTE IS 'PK.1 relativa a tabella ORG_ENTE';

-- changeset root:1751897635013-614
COMMENT ON COLUMN MON_V_CNT_UD_ENTE.ID_USER_IAM IS 'PK.2 relativa a tabella IAM_USER';

-- changeset root:1751897635013-615
COMMENT ON COLUMN MON_V_CNT_UD_ENTE.TI_STATO_UD IS 'PK.3';

-- changeset root:1751897635013-616
COMMENT ON COLUMN MON_V_CNT_UD_ENTE.TI_DT_CREAZIONE IS 'PK.4';

-- changeset root:1751897635013-617
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_UD_ENTE_B30" ("ID_ENTE", "ID_USER_IAM", "TI_STATO_UD", "NI_UD") AS select 
 strut.id_ente id_ente, 
 abil.id_user_iam id_user_iam,
 ud_da_elab.ti_stato_ud_da_elab ti_stato_ud,
 
 count(*) ni_ud

from ORG_STRUT strut
join IAM_ABIL_ORGANIZ abil
 on (abil.id_organiz_applic = strut.id_strut)
join ELV_UD_VERS_DA_ELAB_ELENCO ud_da_elab
 on (ud_da_elab.id_strut = abil.id_organiz_applic)
where ud_da_elab.dt_creazione between to_date('01-01-2000', 'dd-mm-yyyy') and to_date(to_char(trunc(sysdate - 31), 'dd-mm-yyyy') || '23:59:59', 'dd-mm-yyyy hh24:mi:ss')

group by strut.id_ente, abil.id_user_iam, ud_da_elab.ti_stato_ud_da_elab

UNION

select 
 tmp.id_ente id_ente, 
 tmp.id_user_iam id_user_iam, 
 tmp.ti_stato_ud ti_stato_ud, 
 sum(tmp.ni_ud) ni_ud
from (select 
	   strut.id_ente id_ente, 
	   abil.id_user_iam, 
	   'TOTALE' ti_stato_ud, 
		(select nvl(sum(ni_unita_doc_vers), 0)
		 from MON_CONTA_UD_DOC_COMP conta_ud
	     where conta_ud.id_strut = abil.id_organiz_applic
		 and conta_ud.dt_rif_conta between to_date('01-01-2000', 'dd-mm-yyyy') and to_date(to_char(trunc(sysdate - 31), 'dd-mm-yyyy') || '23:59:59', 'dd-mm-yyyy hh24:mi:ss')
		) -
		(select nvl(count(*), 0)
		 from ARO_ITEM_RICH_ANNUL_VERS item_annul, ARO_UNITA_DOC ud
		 where item_annul.id_strut = abil.id_organiz_applic
		 and item_annul.ti_item_rich_annul_vers = 'UNI_DOC'
		 and item_annul.ti_stato_item = 'ANNULLATO'
		 and ud.id_unita_doc = item_annul.id_unita_doc
		 and ud.dt_creazione between to_date('01-01-2000', 'dd-mm-yyyy') and to_date(to_char(trunc(sysdate - 31), 'dd-mm-yyyy') || '23:59:59', 'dd-mm-yyyy hh24:mi:ss')
		) ni_ud
	  from ORG_STRUT strut
	  join IAM_ABIL_ORGANIZ abil
	    on (abil.id_organiz_applic = strut.id_strut)
	) tmp

group by tmp.id_ente, tmp.id_user_iam, tmp.ti_stato_ud;

-- changeset root:1751897635013-618
COMMENT ON COLUMN MON_V_CNT_UD_ENTE_B30.ID_ENTE IS 'PK.1';

-- changeset root:1751897635013-619
COMMENT ON COLUMN MON_V_CNT_UD_ENTE_B30.ID_USER_IAM IS 'PK.2';

-- changeset root:1751897635013-620
COMMENT ON COLUMN MON_V_CNT_UD_ENTE_B30.TI_STATO_UD IS 'PK.3';

-- changeset root:1751897635013-621
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_DOC_ENTE_B30" ("ID_ENTE", "ID_USER_IAM", "TI_STATO_DOC", "NI_DOC") AS select 
 strut.id_ente id_ente, 
 abil.id_user_iam id_user_iam,
 doc_da_elab.ti_stato_doc_da_elab ti_stato_ud,
 
 count(*) ni_doc

from ORG_STRUT strut
join IAM_ABIL_ORGANIZ abil
 on (abil.id_organiz_applic = strut.id_strut)
join ELV_DOC_AGG_DA_ELAB_ELENCO doc_da_elab
 on (doc_da_elab.id_strut = abil.id_organiz_applic)
where doc_da_elab.dt_creazione between to_date('01-01-2000', 'dd-mm-yyyy') and to_date(to_char(trunc(sysdate - 31), 'dd-mm-yyyy') || '23:59:59', 'dd-mm-yyyy hh24:mi:ss')

group by strut.id_ente, abil.id_user_iam, doc_da_elab.ti_stato_doc_da_elab

UNION

select 
 tmp.id_ente id_ente, 
 tmp.id_user_iam id_user_iam, 
 tmp.ti_stato_doc ti_stato_doc, 
 sum(tmp.ni_doc) ni_doc
from (select 
	   strut.id_ente id_ente, 
	   abil.id_user_iam, 
	   'TOTALE' ti_stato_doc, 
	   '30gg' ti_dt_creazione,
		(select nvl(sum(ni_doc_agg), 0)
		 from MON_CONTA_UD_DOC_COMP conta_doc
	     where conta_doc.id_strut = abil.id_organiz_applic
		 and conta_doc.dt_rif_conta between to_date('01-01-2000', 'dd-mm-yyyy') and to_date(to_char(trunc(sysdate - 31), 'dd-mm-yyyy') || '23:59:59', 'dd-mm-yyyy hh24:mi:ss')
		) -
		(select nvl(count(*), 0)
		 from ARO_ITEM_RICH_ANNUL_VERS item_annul, ARO_DOC doc
		 where item_annul.id_strut = abil.id_organiz_applic
		 and item_annul.ti_item_rich_annul_vers = 'UNI_DOC'
		 and item_annul.ti_stato_item = 'ANNULLATO'
		 and doc.id_unita_doc = item_annul.id_unita_doc
		 and doc.ti_creazione = 'AGGIUNTA_DOCUMENTO'
		 and doc.dt_creazione between to_date('01-01-2000', 'dd-mm-yyyy') and to_date(to_char(trunc(sysdate - 31), 'dd-mm-yyyy') || '23:59:59', 'dd-mm-yyyy hh24:mi:ss')
		) ni_doc
	  from ORG_STRUT strut
	  join IAM_ABIL_ORGANIZ abil
	    on (abil.id_organiz_applic = strut.id_strut)
	) tmp

group by tmp.id_ente, tmp.id_user_iam, tmp.ti_stato_doc;

-- changeset root:1751897635013-622
COMMENT ON COLUMN MON_V_CNT_DOC_ENTE_B30.ID_ENTE IS 'PK.1';

-- changeset root:1751897635013-623
COMMENT ON COLUMN MON_V_CNT_DOC_ENTE_B30.ID_USER_IAM IS 'PK.2';

-- changeset root:1751897635013-624
COMMENT ON COLUMN MON_V_CNT_DOC_ENTE_B30.TI_STATO_DOC IS 'PK.3';

-- changeset root:1751897635013-625
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_FASC_BY_ENTE" ("ID_ENTE", "ID_USER_IAM", "TI_STATO_FASC", "TI_DT_CREAZIONE", "NI_FASC") AS select 																				-- conta fasc per stato IN_ATTESA_SCHED o NON_SELEZ_SCHED per OGGI e per 30gg e per before 30gg
 strut.id_ente id_ente, 
 abil_org.id_user_iam id_user_iam,
 fasc_da_elab.ti_stato_fasc_da_elab ti_stato_fasc,
 case
	when trunc(fasc_da_elab.ts_vers_fascicolo) = trunc(sysdate) then 'OGGI'
	when trunc(fasc_da_elab.ts_vers_fascicolo) between trunc (sysdate - 30) and trunc(sysdate - 1) then '30gg'
	else 'before30gg'
 end ti_dt_creazione,
 
 count(*) ni_fasc

from ORG_STRUT strut
join IAM_ABIL_ORGANIZ abil_org
 on (abil_org.id_organiz_applic = strut.id_strut)
join ELV_FASC_DA_ELAB_ELENCO fasc_da_elab
 on (fasc_da_elab.id_strut = abil_org.id_organiz_applic)
 
join IAM_ABIL_TIPO_DATO abil_dato
 on (abil_dato.id_abil_organiz = abil_org.id_abil_organiz
 and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
 and abil_dato.id_tipo_dato_applic = fasc_da_elab.id_tipo_fascicolo)

group by strut.id_ente, abil_org.id_user_iam, fasc_da_elab.ti_stato_fasc_da_elab,  
		 case
			when trunc(fasc_da_elab.ts_vers_fascicolo) = trunc(sysdate) then 'OGGI'
			when trunc(fasc_da_elab.ts_vers_fascicolo) between trunc (sysdate - 30) and trunc(sysdate - 1) then '30gg'
			else 'before30gg'
		 end 

UNION

select																				-- conta fasc per stato TOTALE per OGGI
 tmp.id_ente id_ente, 
 tmp.id_user_iam id_user_iam, 
 'TOTALE' ti_stato_fasc, 
 'OGGI' ti_dt_creazione, 
 tmp.ni_fasc
from (select 
	   strut.id_ente, 
	   abil_org.id_user_iam,
	   count(*) ni_fasc
	  from ORG_STRUT strut
	  join IAM_ABIL_ORGANIZ abil_org
	    on (abil_org.id_organiz_applic = strut.id_strut)
	  join FAS_FASCICOLO fasc
	    on (fasc.id_strut = abil_org.id_organiz_applic)
		   
	  join IAM_ABIL_TIPO_DATO abil_dato
		on (abil_dato.id_abil_organiz = abil_org.id_abil_organiz
		and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
		and abil_dato.id_tipo_dato_applic = fasc.id_tipo_fascicolo)
	
	  where trunc(fasc.ts_ini_ses) = trunc(sysdate)
	  
	  group by strut.id_ente, abil_org.id_user_iam
	) tmp

UNION

select 																				-- conta fasc per stato TOTALE per 30gg e per before 30gg
 strut.id_ente, 
 abil_org.id_user_iam, 
 'TOTALE' ti_stato_fasc, 
 case
	when conta_fasc.dt_rif_conta between trunc (sysdate - 30) and trunc(sysdate - 1) then '30gg'
	else 'before30gg'
 end ti_dt_creazione,
 sum (ni_fascicoli_vers) ni_fasc

from ORG_STRUT strut
join IAM_ABIL_ORGANIZ abil_org
on (abil_org.id_organiz_applic = strut.id_strut)
join MON_CONTA_FASCICOLI conta_fasc
on (conta_fasc.id_strut = abil_org.id_organiz_applic)
	   
join IAM_ABIL_TIPO_DATO abil_dato
 on (abil_dato.id_abil_organiz = abil_org.id_abil_organiz
 and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
 and abil_dato.id_tipo_dato_applic = conta_fasc.id_tipo_fascicolo)
 
group by  strut.id_ente, abil_org.id_user_iam, 
		'TOTALE', 
		case
			when conta_fasc.dt_rif_conta between trunc (sysdate - 30) and trunc(sysdate - 1) then '30gg'
			else 'before30gg'
		 end;

-- changeset root:1751897635013-626
COMMENT ON COLUMN MON_V_CNT_FASC_BY_ENTE.ID_ENTE IS 'PK.1';

-- changeset root:1751897635013-627
COMMENT ON COLUMN MON_V_CNT_FASC_BY_ENTE.ID_USER_IAM IS 'PK.2';

-- changeset root:1751897635013-628
COMMENT ON COLUMN MON_V_CNT_FASC_BY_ENTE.TI_STATO_FASC IS 'PK.3';

-- changeset root:1751897635013-629
COMMENT ON COLUMN MON_V_CNT_FASC_BY_ENTE.TI_DT_CREAZIONE IS 'PK.4';

-- changeset root:1751897635013-630
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_FASC_BY_STRUT" ("ID_STRUT", "ID_USER_IAM", "TI_STATO_FASC", "TI_DT_CREAZIONE", "NI_FASC") AS select 																				-- conta fasc per stato IN_ATTESA_SCHED o NON_SELEZ_SCHED per OGGI e per 30gg e per before 30gg
 abil_org.id_organiz_applic id_strut, 
 abil_org.id_user_iam,
 fasc_da_elab.ti_stato_fasc_da_elab ti_stato_fasc,
 case
	when trunc(fasc_da_elab.ts_vers_fascicolo) = trunc(sysdate) then 'OGGI'
	when trunc(fasc_da_elab.ts_vers_fascicolo) between trunc (sysdate - 30) and trunc(sysdate - 1) then '30gg'
	else 'before30gg'
 end ti_dt_creazione,

 count(*) ni_fasc

from IAM_ABIL_ORGANIZ abil_org
join ELV_FASC_DA_ELAB_ELENCO fasc_da_elab
 on (fasc_da_elab.id_strut = abil_org.id_organiz_applic)
 
join IAM_ABIL_TIPO_DATO abil_dato
 on (abil_dato.id_abil_organiz = abil_org.id_abil_organiz
 and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
 and abil_dato.id_tipo_dato_applic = fasc_da_elab.id_tipo_fascicolo)

group by abil_org.id_organiz_applic, abil_org.id_user_iam, fasc_da_elab.ti_stato_fasc_da_elab,  
		 case
			when trunc(fasc_da_elab.ts_vers_fascicolo) = trunc(sysdate) then 'OGGI'
			when trunc(fasc_da_elab.ts_vers_fascicolo) between trunc (sysdate - 30) and trunc(sysdate - 1) then '30gg'
			else 'before30gg'
		 end 

UNION

select 																				-- conta fasc per stato TOTALE per OGGI
 abil_org.id_organiz_applic id_strut, 
 abil_org.id_user_iam,
 'TOTALE' ti_stato_fasc, 
 'OGGI' ti_dt_creazione, 
 count(*) ni_fasc
from IAM_ABIL_ORGANIZ abil_org
join FAS_FASCICOLO fasc
on (fasc.id_strut = abil_org.id_organiz_applic)

join IAM_ABIL_TIPO_DATO abil_dato
on (abil_dato.id_abil_organiz = abil_org.id_abil_organiz
and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
and abil_dato.id_tipo_dato_applic = fasc.id_tipo_fascicolo)

where trunc(fasc.ts_ini_ses) = trunc(sysdate)

group by abil_org.id_organiz_applic, abil_org.id_user_iam, 'TOTALE', 'OGGI'


UNION

select 																				-- conta fasc per stato TOTALE per 30gg e per before 30gg
 abil_org.id_organiz_applic id_strut, 
 abil_org.id_user_iam,
 'TOTALE' ti_stato_fasc, 
 case
	when conta_fasc.dt_rif_conta between trunc (sysdate - 30) and trunc(sysdate - 1) then '30gg'
	else 'before30gg'
 end ti_dt_creazione,
 sum (ni_fascicoli_vers) ni_fasc
 
from IAM_ABIL_ORGANIZ abil_org
join MON_CONTA_FASCICOLI conta_fasc
on (conta_fasc.id_strut = abil_org.id_organiz_applic)
	   
join IAM_ABIL_TIPO_DATO abil_dato
 on (abil_dato.id_abil_organiz = abil_org.id_abil_organiz
 and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
 and abil_dato.id_tipo_dato_applic = conta_fasc.id_tipo_fascicolo)
 
group by  abil_org.id_organiz_applic, abil_org.id_user_iam,	'TOTALE', 
			case
				when conta_fasc.dt_rif_conta between trunc (sysdate - 30) and trunc(sysdate - 1) then '30gg'
				else 'before30gg'
			 end;

-- changeset root:1751897635013-631
COMMENT ON COLUMN MON_V_CNT_FASC_BY_STRUT.ID_STRUT IS 'PK.1';

-- changeset root:1751897635013-632
COMMENT ON COLUMN MON_V_CNT_FASC_BY_STRUT.ID_USER_IAM IS 'PK.2';

-- changeset root:1751897635013-633
COMMENT ON COLUMN MON_V_CNT_FASC_BY_STRUT.TI_STATO_FASC IS 'PK.3';

-- changeset root:1751897635013-634
COMMENT ON COLUMN MON_V_CNT_FASC_BY_STRUT.TI_DT_CREAZIONE IS 'PK.4';

-- changeset root:1751897635013-635
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_FASC_KO_BY_ENTE" ("ID_ENTE", "ID_USER_IAM", "TI_STATO_FASC_KO", "TI_DT_CREAZIONE", "NI_FASC_KO") AS select 																				-- conta fasc ko per stato NON_RISOLUBILE, VERIFICATO, NON_VERIFICATO per OGGI
 strut.id_ente id_ente, 
 abil_org.id_user_iam id_user_iam,
 fasc_ko.ti_stato_fascicolo_ko ti_stato_fasc_ko,
 'OGGI' ti_dt_creazione,
 
 count(*) ni_fasc

from ORG_STRUT strut
join IAM_ABIL_ORGANIZ abil_org
 on (abil_org.id_organiz_applic = strut.id_strut)
join VRS_FASCICOLO_KO fasc_ko
 on (fasc_ko.id_strut = abil_org.id_organiz_applic)

join IAM_ABIL_TIPO_DATO abil_dato
 on (abil_dato.id_abil_organiz = abil_org.id_abil_organiz
 and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
 and abil_dato.id_tipo_dato_applic = fasc_ko.id_tipo_fascicolo_last)
	
where trunc(fasc_ko.ts_ini_last_ses) = trunc(sysdate)

group by strut.id_ente, abil_org.id_user_iam, fasc_ko.ti_stato_fascicolo_ko, 'OGGI'

UNION

select 		 																		-- conta fasc ko per stato NON_RISOLUBILE, VERIFICATO, NON_VERIFICATO per 30gg e before 30gg
 strut.id_ente id_ente, 
 abil_org.id_user_iam id_user_iam,
 conta_fasc_ko.ti_stato_fascicolo_ko ti_stato_fasc_ko,
 case
	when conta_fasc_ko.dt_rif_conta between trunc (sysdate - 30) and trunc(sysdate - 1) then '30gg'
	else 'before30gg'
 end ti_dt_creazione,
 sum (ni_fascicoli_ko) ni_fasc
 
from ORG_STRUT strut
join IAM_ABIL_ORGANIZ abil_org
 on (abil_org.id_organiz_applic = strut.id_strut)
join MON_CONTA_FASCICOLI_KO conta_fasc_ko
 on (conta_fasc_ko.id_strut = abil_org.id_organiz_applic)

join IAM_ABIL_TIPO_DATO abil_dato
 on (abil_dato.id_abil_organiz = abil_org.id_abil_organiz
 and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
 and abil_dato.id_tipo_dato_applic = conta_fasc_ko.id_tipo_fascicolo)

group by strut.id_ente, abil_org.id_user_iam, conta_fasc_ko.ti_stato_fascicolo_ko,
		 case
			when conta_fasc_ko.dt_rif_conta between trunc (sysdate - 30) and trunc(sysdate - 1) then '30gg'
			else 'before30gg'
		 end;

-- changeset root:1751897635013-636
COMMENT ON COLUMN MON_V_CNT_FASC_KO_BY_ENTE.ID_ENTE IS 'PK.1';

-- changeset root:1751897635013-637
COMMENT ON COLUMN MON_V_CNT_FASC_KO_BY_ENTE.ID_USER_IAM IS 'PK.2';

-- changeset root:1751897635013-638
COMMENT ON COLUMN MON_V_CNT_FASC_KO_BY_ENTE.TI_STATO_FASC_KO IS 'PK.3';

-- changeset root:1751897635013-639
COMMENT ON COLUMN MON_V_CNT_FASC_KO_BY_ENTE.TI_DT_CREAZIONE IS 'PK.4';

-- changeset root:1751897635013-640
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_FASC_KO_BY_STRUT" ("ID_STRUT", "ID_USER_IAM", "TI_STATO_FASC_KO", "TI_DT_CREAZIONE", "NI_FASC_KO") AS select 																				-- conta fasc ko per stato NON_RISOLUBILE, VERIFICATO, NON_VERIFICATO per OGGI
 abil_org.id_organiz_applic id_strut, 
 abil_org.id_user_iam,
 fasc_ko.ti_stato_fascicolo_ko ti_stato_fasc_ko,
 'OGGI' ti_dt_creazione,
 count(*) ni_fasc

from IAM_ABIL_ORGANIZ abil_org
join VRS_FASCICOLO_KO fasc_ko
 on (fasc_ko.id_strut = abil_org.id_organiz_applic)

join IAM_ABIL_TIPO_DATO abil_dato
 on (abil_dato.id_abil_organiz = abil_org.id_abil_organiz
 and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
 and abil_dato.id_tipo_dato_applic = fasc_ko.id_tipo_fascicolo_last)

where trunc(fasc_ko.ts_ini_last_ses) = trunc(sysdate)

group by abil_org.id_organiz_applic, abil_org.id_user_iam, fasc_ko.ti_stato_fascicolo_ko, 'OGGI'

UNION

select 		 																		-- conta fasc ko per stato NON_RISOLUBILE, VERIFICATO, NON_VERIFICATO per 30gg e before 30gg
 abil_org.id_organiz_applic id_strut, 
 abil_org.id_user_iam, 
 conta_fasc_ko.ti_stato_fascicolo_ko ti_stato_fasc_ko,
 case
	when conta_fasc_ko.dt_rif_conta between trunc (sysdate - 30) and trunc(sysdate - 1) then '30gg'
	else 'before30gg'
 end ti_dt_creazione,
 sum (ni_fascicoli_ko) ni_fasc
 
from IAM_ABIL_ORGANIZ abil_org
join MON_CONTA_FASCICOLI_KO conta_fasc_ko
 on (conta_fasc_ko.id_strut = abil_org.id_organiz_applic)

join IAM_ABIL_TIPO_DATO abil_dato
 on (abil_dato.id_abil_organiz = abil_org.id_abil_organiz
 and abil_dato.nm_classe_tipo_dato = 'TIPO_FASCICOLO'
 and abil_dato.id_tipo_dato_applic = conta_fasc_ko.id_tipo_fascicolo)

group by abil_org.id_organiz_applic, abil_org.id_user_iam, conta_fasc_ko.ti_stato_fascicolo_ko,
		 case
			when conta_fasc_ko.dt_rif_conta between trunc (sysdate - 30) and trunc(sysdate - 1) then '30gg'
			else 'before30gg'
		 end;

-- changeset root:1751897635013-641
COMMENT ON COLUMN MON_V_CNT_FASC_KO_BY_STRUT.ID_STRUT IS 'PK.1';

-- changeset root:1751897635013-642
COMMENT ON COLUMN MON_V_CNT_FASC_KO_BY_STRUT.ID_USER_IAM IS 'PK.2';

-- changeset root:1751897635013-643
COMMENT ON COLUMN MON_V_CNT_FASC_KO_BY_STRUT.TI_STATO_FASC_KO IS 'PK.3';

-- changeset root:1751897635013-644
COMMENT ON COLUMN MON_V_CNT_FASC_KO_BY_STRUT.TI_DT_CREAZIONE IS 'PK.4';

-- changeset root:1751897635013-645
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_AGG_ENTE" ("ID_ENTE", "ID_USER_IAM", "TI_STATO_VERS", "TI_DT_CREAZIONE", "NI_AGG") AS SELECT id_ente,
             id_user_iam,
             ti_stato_vers,
             ti_dt_creazione,
             COUNT (1)     ni_agg
        FROM (SELECT strut.id_ente,
                     abil.id_user_iam,
                     CASE
                         WHEN EXISTS
                                  (SELECT 1
                                     FROM VRS_DATI_SESSIONE_VERS_ko dato_ses
                                          JOIN VRS_ERR_SESSIONE_VERS_ko err
                                              ON (err.id_dati_sessione_vers_ko =
                                                  dato_ses.id_dati_sessione_vers_ko
                                              AND err.cd_err IN
                                                      ('UD-005', 'UD-005-001'))
                                    WHERE dato_ses.id_sessione_vers_ko =
                                          ses.id_sessione_vers_ko
                                      AND EXISTS
                                              (SELECT 1
                                                 FROM ARO_UNITA_DOC ud
                                                WHERE ud.id_strut =
                                                      ses.id_strut
                                                  AND ud.cd_registro_key_unita_doc =
                                                      ses.cd_registro_key_unita_doc
                                                  AND ud.aa_key_unita_doc =
                                                      ses.aa_key_unita_doc
                                                  AND ud.cd_key_unita_doc =
                                                      ses.cd_key_unita_doc
                                                  AND ud.dt_annul >=
                                                      ses.dt_apertura)) THEN
                             'RISOLTO'
                         WHEN EXISTS
                                  (SELECT 1
                                     FROM ARO_UNITA_DOC ud, ARO_DOC doc
                                    WHERE ud.id_strut = ses.id_strut
                                      AND ud.cd_registro_key_unita_doc =
                                          ses.cd_registro_key_unita_doc
                                      AND ud.aa_key_unita_doc =
                                          ses.aa_key_unita_doc
                                      AND ud.cd_key_unita_doc =
                                          ses.cd_key_unita_doc
                                      AND ud.dt_annul =
                                          TO_DATE ('31/12/2444', 'dd/mm/yyyy')
                                      AND doc.id_unita_doc = ud.id_unita_doc
                                      AND doc.cd_key_doc_vers =
                                          ses.cd_key_doc_vers
                                      AND doc.dt_annul >= ses.dt_apertura) THEN
                             'RISOLTO'
                         ELSE
                             CASE
                                 WHEN ses.fl_sessione_err_verif = '0' THEN
                                     'NO_VERIF'
                                 WHEN ses.fl_sessione_err_verif = '1'
                                  AND ses.fl_sessione_err_non_risolub = '0' THEN
                                     'VERIF'
                                 WHEN ses.fl_sessione_err_verif = '1'
                                  AND ses.fl_sessione_err_non_risolub = '1' THEN
                                     'NO_RISOLUB'
                                 ELSE
                                     '??'
                             END
                     END    ti_stato_vers,
                     CASE
                         WHEN ses.dt_apertura BETWEEN TRUNC (SYSDATE)
                                                  AND SYSDATE + 1 / 24 THEN
                             'OGGI'
                         ELSE
                             '30gg'
                     END    ti_dt_creazione
                FROM ORG_STRUT strut
                     JOIN IAM_ABIL_ORGANIZ abil
                         ON (abil.id_organiz_applic = strut.id_strut)
                     JOIN VRS_SESSIONE_VERS_ko ses
                         ON (ses.id_strut = abil.id_organiz_applic
                         AND ses.ti_sessione_vers = 'AGGIUNGI_DOCUMENTO'
                         ---AND ses.ti_stato_sessione_vers = 'CHIUSA_ERR'
                         AND ses.dt_apertura BETWEEN TRUNC (SYSDATE - 30)
                                                 AND SYSDATE + 1 / 24))
    GROUP BY id_ente,
             id_user_iam,
             ti_stato_vers,
             ti_dt_creazione;

-- changeset root:1751897635013-646
COMMENT ON COLUMN MON_V_CNT_AGG_ENTE.ID_ENTE IS 'PK.1 relativa a tabella ORG_ENTE';

-- changeset root:1751897635013-647
COMMENT ON COLUMN MON_V_CNT_AGG_ENTE.ID_USER_IAM IS 'PK.2 relativa a tabella IAM_USER';

-- changeset root:1751897635013-648
COMMENT ON COLUMN MON_V_CNT_AGG_ENTE.TI_STATO_VERS IS 'PK.3';

-- changeset root:1751897635013-649
COMMENT ON COLUMN MON_V_CNT_AGG_ENTE.TI_DT_CREAZIONE IS 'PK.4';

-- changeset root:1751897635013-650
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_AGG_ENTE_B30" ("ID_ENTE", "ID_USER_IAM", "TI_STATO_VERS", "NI_AGG") AS SELECT id_ente,
             id_user_iam,
             ti_stato_vers,
             COUNT (1)     ni_agg
        FROM (SELECT strut.id_ente,
                     abil.id_user_iam,
                     CASE
                         WHEN EXISTS
                                  (SELECT 1
                                     FROM VRS_DATI_SESSIONE_VERS_ko dato_ses
                                          JOIN VRS_ERR_SESSIONE_VERS_ko err
                                              ON (err.id_dati_sessione_vers_ko =
                                                  dato_ses.id_dati_sessione_vers_ko
                                              AND err.cd_err IN
                                                      ('UD-005', 'UD-005-001'))
                                    WHERE dato_ses.id_sessione_vers_ko =
                                          ses.id_sessione_vers_ko
                                      AND EXISTS
                                              (SELECT 1
                                                 FROM ARO_UNITA_DOC ud
                                                WHERE ud.id_strut =
                                                      ses.id_strut
                                                  AND ud.cd_registro_key_unita_doc =
                                                      ses.cd_registro_key_unita_doc
                                                  AND ud.aa_key_unita_doc =
                                                      ses.aa_key_unita_doc
                                                  AND ud.cd_key_unita_doc =
                                                      ses.cd_key_unita_doc
                                                  AND ud.dt_annul >=
                                                      ses.dt_apertura)) THEN
                             'RISOLTO'
                         WHEN EXISTS
                                  (SELECT 1
                                     FROM ARO_UNITA_DOC ud, ARO_DOC doc
                                    WHERE ud.id_strut = ses.id_strut
                                      AND ud.cd_registro_key_unita_doc =
                                          ses.cd_registro_key_unita_doc
                                      AND ud.aa_key_unita_doc =
                                          ses.aa_key_unita_doc
                                      AND ud.cd_key_unita_doc =
                                          ses.cd_key_unita_doc
                                      AND ud.dt_annul =
                                          TO_DATE ('31/12/2444', 'dd/mm/yyyy')
                                      AND doc.id_unita_doc = ud.id_unita_doc
                                      AND doc.cd_key_doc_vers =
                                          ses.cd_key_doc_vers
                                      AND doc.dt_annul >= ses.dt_apertura) THEN
                             'RISOLTO'
                         ELSE
                             CASE
                                 WHEN ses.fl_sessione_err_verif = '0' THEN
                                     'NO_VERIF'
                                 WHEN ses.fl_sessione_err_verif = '1'
                                  AND ses.fl_sessione_err_non_risolub = '0' THEN
                                     'VERIF'
                                 WHEN ses.fl_sessione_err_verif = '1'
                                  AND ses.fl_sessione_err_non_risolub = '1' THEN
                                     'NO_RISOLUB'
                                 ELSE
                                     '??'
                             END
                     END    ti_stato_vers
                FROM ORG_STRUT strut
                     JOIN IAM_ABIL_ORGANIZ abil
                         ON (abil.id_organiz_applic = strut.id_strut)
                     JOIN VRS_SESSIONE_VERS_ko ses
                         ON (ses.id_strut = abil.id_organiz_applic
                         AND ses.ti_sessione_vers = 'AGGIUNGI_DOCUMENTO'
                         --AND ses.ti_stato_sessione_vers = 'CHIUSA_ERR'
                         AND ses.dt_apertura BETWEEN TO_DATE ('01-01-2000',
                                                              'dd-mm-yyyy')
                                                 AND TO_DATE (
                                                            TO_CHAR (
                                                                TRUNC (
                                                                      SYSDATE
                                                                    - 31),
                                                                'dd-mm-yyyy')
                                                         || '23:59:59',
                                                         'dd-mm-yyyy hh24:mi:ss')))
    GROUP BY id_ente, id_user_iam, ti_stato_vers;

-- changeset root:1751897635013-651
COMMENT ON COLUMN MON_V_CNT_AGG_ENTE_B30.ID_ENTE IS 'PK.1';

-- changeset root:1751897635013-652
COMMENT ON COLUMN MON_V_CNT_AGG_ENTE_B30.ID_USER_IAM IS 'PK.2';

-- changeset root:1751897635013-653
COMMENT ON COLUMN MON_V_CNT_AGG_ENTE_B30.TI_STATO_VERS IS 'PK.3';

-- changeset root:1751897635013-654
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_VERS_ENTE" ("ID_ENTE", "ID_USER_IAM", "TI_STATO_VERS", "TI_DT_CREAZIONE", "NI_VERS") AS SELECT id_ente,
             id_user_iam,
             ti_stato_vers,
             ti_dt_creazione,
             COUNT (1)     ni_vers
        FROM (SELECT strut.id_ente,
                     abil.id_user_iam,
                     CASE
                         WHEN EXISTS
                                  (SELECT 1
                                     FROM ARO_UNITA_DOC ud
                                    WHERE ud.id_strut = ses.id_strut
                                      AND ud.cd_registro_key_unita_doc =
                                          ses.cd_registro_key_unita_doc
                                      AND ud.aa_key_unita_doc =
                                          ses.aa_key_unita_doc
                                      AND ud.cd_key_unita_doc =
                                          ses.cd_key_unita_doc
                                      AND ud.dt_annul >= ses.dt_apertura) THEN
                             'RISOLTO'
                         ELSE
                             CASE
                                 WHEN ses.fl_sessione_err_verif = '0' THEN
                                     'NO_VERIF'
                                 WHEN ses.fl_sessione_err_verif = '1'
                                  AND ses.fl_sessione_err_non_risolub = '0' THEN
                                     'VERIF'
                                 WHEN ses.fl_sessione_err_verif = '1'
                                  AND ses.fl_sessione_err_non_risolub = '1' THEN
                                     'NO_RISOLUB'
                                 ELSE
                                     '??'
                             END
                     END    ti_stato_vers,
                     CASE
                         WHEN ses.dt_apertura BETWEEN TRUNC (SYSDATE)
                                                  AND SYSDATE + 1 / 24 THEN
                             'OGGI'
                         ELSE
                             '30gg'
                     END    ti_dt_creazione
                FROM ORG_STRUT strut
                     JOIN IAM_ABIL_ORGANIZ abil
                         ON (abil.id_organiz_applic = strut.id_strut)
                     JOIN VRS_SESSIONE_VERS_ko ses
                         ON (ses.id_strut = abil.id_organiz_applic
                         AND ses.ti_sessione_vers = 'VERSAMENTO'
                        -- AND ses.ti_stato_sessione_vers = 'CHIUSA_ERR'
                         AND ses.dt_apertura BETWEEN TRUNC (SYSDATE - 30)
                                                 AND SYSDATE + 1 / 24))
    GROUP BY id_ente,
             id_user_iam,
             ti_stato_vers,
             ti_dt_creazione;

-- changeset root:1751897635013-655
COMMENT ON COLUMN MON_V_CNT_VERS_ENTE.ID_ENTE IS 'PK.1 relativa a tabella ORG_ENTE';

-- changeset root:1751897635013-656
COMMENT ON COLUMN MON_V_CNT_VERS_ENTE.ID_USER_IAM IS 'PK.2 relativa a tabella IAM_USER';

-- changeset root:1751897635013-657
COMMENT ON COLUMN MON_V_CNT_VERS_ENTE.TI_STATO_VERS IS 'PK.3';

-- changeset root:1751897635013-658
COMMENT ON COLUMN MON_V_CNT_VERS_ENTE.TI_DT_CREAZIONE IS 'PK.4';

-- changeset root:1751897635013-659
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_VERS_ENTE_B30" ("ID_ENTE", "ID_USER_IAM", "TI_STATO_VERS", "NI_VERS") AS SELECT id_ente,
             id_user_iam,
             ti_stato_vers,
             COUNT (1)     ni_vers
        FROM (SELECT strut.id_ente,
                     abil.id_user_iam,
                     CASE
                         WHEN EXISTS
                                  (SELECT 1
                                     FROM ARO_UNITA_DOC ud
                                    WHERE ud.id_strut = ses.id_strut
                                      AND ud.cd_registro_key_unita_doc =
                                          ses.cd_registro_key_unita_doc
                                      AND ud.aa_key_unita_doc =
                                          ses.aa_key_unita_doc
                                      AND ud.cd_key_unita_doc =
                                          ses.cd_key_unita_doc
                                      AND ud.dt_annul >= ses.dt_apertura) THEN
                             'RISOLTO'
                         ELSE
                             CASE
                                 WHEN ses.fl_sessione_err_verif = '0' THEN
                                     'NO_VERIF'
                                 WHEN ses.fl_sessione_err_verif = '1'
                                  AND ses.fl_sessione_err_non_risolub = '0' THEN
                                     'VERIF'
                                 WHEN ses.fl_sessione_err_verif = '1'
                                  AND ses.fl_sessione_err_non_risolub = '1' THEN
                                     'NO_RISOLUB'
                                 ELSE
                                     '??'
                             END
                     END    ti_stato_vers
                FROM ORG_STRUT strut
                     JOIN IAM_ABIL_ORGANIZ abil
                         ON (abil.id_organiz_applic = strut.id_strut)
                     JOIN VRS_SESSIONE_VERS_ko ses
                         ON (ses.id_strut = abil.id_organiz_applic
                         AND ses.ti_sessione_vers = 'VERSAMENTO'
                        -- AND ses.ti_stato_sessione_vers = 'CHIUSA_ERR'
                         AND ses.dt_apertura BETWEEN TO_DATE ('01-01-2000',
                                                              'dd-mm-yyyy')
                                                 AND TO_DATE (
                                                            TO_CHAR (
                                                                TRUNC (
                                                                      SYSDATE
                                                                    - 31),
                                                                'dd-mm-yyyy')
                                                         || '23:59:59',
                                                         'dd-mm-yyyy hh24:mi:ss')))
    GROUP BY id_ente, id_user_iam, ti_stato_vers;

-- changeset root:1751897635013-660
COMMENT ON COLUMN MON_V_CNT_VERS_ENTE_B30.ID_ENTE IS 'PK.1';

-- changeset root:1751897635013-661
COMMENT ON COLUMN MON_V_CNT_VERS_ENTE_B30.ID_USER_IAM IS 'PK.2';

-- changeset root:1751897635013-662
COMMENT ON COLUMN MON_V_CNT_VERS_ENTE_B30.TI_STATO_VERS IS 'PK.3';

-- changeset root:1751897635013-663
CREATE OR REPLACE FORCE VIEW "ARO_V_LIS_FASC" ("ID_UNITA_DOC", "ID_FASCICOLO", "ID_STRUT", "AA_FASCICOLO", "CD_KEY_FASCICOLO", "DT_APE_FASCICOLO", "DT_CHIU_FASCICOLO", "TS_INI_SES", "ID_TIPO_FASCICOLO", "NM_TIPO_FASCICOLO", "NI_UNITA_DOC", "TI_STATO_CONSERVAZIONE", "TI_STATO_FASC_ELENCO_VERS", "DS_OGGETTO_FASCICOLO", "ID_VOCE_TITOL", "CD_COMPOSITO_VOCE_TITOL", "TI_ESITO", "ID_USER_IAM_CORRENTE") AS select
 -- ===============================================================================
 -- colonne fascicolo
 ud_in_fasc.id_unita_doc,
 fasc.id_fascicolo, 
 fasc.id_strut, 
 fasc.aa_fascicolo,
 fasc.cd_key_fascicolo, 
 fasc.dt_ape_fascicolo,
 fasc.dt_chiu_fascicolo,
 fasc.ts_ini_ses,
 fasc.id_tipo_fascicolo, 
 tipo_fascicolo.nm_tipo_fascicolo, 
 fasc.ni_unita_doc,
 fasc.ti_stato_conservazione,
 fasc.ti_stato_fasc_elenco_vers,
 fasc.DS_OGGETTO_FASCICOLO,
 fasc.id_voce_titol,
 titolario.cd_composito_voce_titol,
 case
	when exists  (select id_warn_fascicolo
				 from FAS_WARN_FASCICOLO warn
         where warn.id_fascicolo = fasc.id_fascicolo
				) 
		then 'WARNING'
		else 'POSITIVO'
 end ti_esito,
 organiz.id_user_iam as id_user_iam_corrente
 
 
from FAS_FASCICOLO fasc
join FAS_UNITA_DOC_FASCICOLO ud_in_fasc 
 on (fasc.id_fascicolo = ud_in_fasc.id_fascicolo)
join DEC_TIPO_FASCICOLO tipo_fascicolo
 on (tipo_fascicolo.id_tipo_fascicolo = fasc.id_tipo_fascicolo)
join SACER_IAM.USR_USER utenti
 on (fasc.id_user_iam_vers = utenti.id_user_iam)
left join DEC_VOCE_TITOL titolario
 on (fasc.id_voce_titol = titolario.id_voce_titol)
 
join IAM_ABIL_ORGANIZ organiz 
 on (organiz.id_organiz_applic = fasc.id_strut)
 
join IAM_ABIL_TIPO_DATO abil 
 on (abil.id_abil_organiz = organiz.id_abil_organiz 
 and abil.id_tipo_dato_applic = fasc.id_tipo_fascicolo 
 and abil.nm_classe_tipo_dato = 'TIPO_FASCICOLO');

-- changeset root:1751897635013-664
COMMENT ON COLUMN ARO_V_LIS_FASC.ID_UNITA_DOC IS 'PK.2';

-- changeset root:1751897635013-665
COMMENT ON COLUMN ARO_V_LIS_FASC.ID_FASCICOLO IS 'PK.1';

-- changeset root:1751897635013-666
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_DOC_NONVERS_ENTE" ("ID_ENTE", "ID_USER_IAM", "TI_STATO_DOC_NONVERS", "NI_DOC_NONVERS") AS select 
 id_ente, id_user_iam, ti_stato_doc_nonvers, count(*) ni_doc_nonvers
from (select 
	 strut.id_ente, 
	 abil.id_user_iam,
	 case
		when doc_nonvers.fl_verif = '0' then 'NO_VERIF'
		when doc_nonvers.fl_verif = '1' and doc_nonvers.fl_non_risolub = '0' then 'VERIF'
		when doc_nonvers.fl_verif = '1' and doc_nonvers.fl_non_risolub = '1' then 'NO_RISOLUB'
		else '??'
	 end ti_stato_doc_nonvers

	from ORG_STRUT strut
	join IAM_ABIL_ORGANIZ abil
	 on (abil.id_organiz_applic = strut.id_strut)
	join VRS_V_DOC_NON_VERS doc_nonvers
	 on (doc_nonvers.id_strut = abil.id_organiz_applic)
	)

group by id_ente, id_user_iam, ti_stato_doc_nonvers;

-- changeset root:1751897635013-667
COMMENT ON COLUMN MON_V_CNT_DOC_NONVERS_ENTE.ID_ENTE IS 'PK.1 relativa a tabella ORG_ENTE';

-- changeset root:1751897635013-668
COMMENT ON COLUMN MON_V_CNT_DOC_NONVERS_ENTE.TI_STATO_DOC_NONVERS IS 'PK.2';

-- changeset root:1751897635013-669
CREATE OR REPLACE FORCE VIEW "MON_V_CHK_DOC_NONVERS_STRUT" ("ID_STRUT", "FL_DOC_NONVERS_NOVERIF", "FL_DOC_NONVERS_VERIF", "FL_DOC_NONVERS_NORISOLUB") AS select
strut.id_strut,

--
--			NON VERIFICATI
--
case
	when exists (select *
				from VRS_V_DOC_NON_VERS ud_nonvers
				where ud_nonvers.id_strut = strut.id_strut
				and ud_nonvers.fl_verif = '0'
				)
		then '1'
		else '0'
end fl_doc_nonvers_noverif,

--
--			VERIFICATI
--

case
	when exists (select *
				from VRS_V_DOC_NON_VERS ud_nonvers
				where ud_nonvers.id_strut = strut.id_strut
				and ud_nonvers.fl_verif = '1'
				and ud_nonvers.fl_non_risolub = '0'
				)
		then '1'
		else '0'
end fl_doc_nonvers_verif,
--
--			NON RISOLUBILI
--

case
	when exists (select *
				from VRS_V_DOC_NON_VERS ud_nonvers
				where ud_nonvers.id_strut = strut.id_strut
				and ud_nonvers.fl_verif = '1'
				and ud_nonvers.fl_non_risolub = '1'
				)
		then '1'
		else '0'
end fl_doc_nonvers_norisolub

from ORG_STRUT strut;

-- changeset root:1751897635013-670
COMMENT ON COLUMN MON_V_CHK_DOC_NONVERS_STRUT.ID_STRUT IS 'PK.1 relativa a tabella ORG_STRUT';

-- changeset root:1751897635013-671
CREATE OR REPLACE FORCE VIEW "MON_V_CHK_DOC_STRUT" ("ID_STRUT", "FL_DOC_CORR", "FL_DOC_30GG", "FL_DOC_ATTESA_MEM_CORR", "FL_DOC_ATTESA_MEM_30GG", "FL_DOC_ATTESA_SCHED_CORR", "FL_DOC_ATTESA_SCHED_30GG", "FL_DOC_NOSEL_SCHED_CORR", "FL_DOC_NOSEL_SCHED_30GG") AS select
 strut.id_strut,

--
--					doc TOTALE
--
case
	when exists (select * 
				from ARO_DOC doc
				where doc.id_strut = strut.id_strut 
				and doc.dt_creazione between trunc(sysdate) and sysdate + 1/24
				and doc.dt_annul = to_date('31/12/2444', 'dd/mm/yyyy')
				and doc.ti_creazione = 'AGGIUNTA_DOCUMENTO'
				)
			then '1'
			else '0'
end fl_doc_corr,
case
	when (select nvl(sum(ni_doc_agg), 0)
		  from MON_CONTA_UD_DOC_COMP conta_doc
		  where conta_doc.id_strut = strut.id_strut 
		  and conta_doc.dt_rif_conta between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
		  ) -
		 (select nvl(count(*), 0)
		  from ARO_ITEM_RICH_ANNUL_VERS item_annul,  ARO_DOC doc
		  where item_annul.id_strut = strut.id_strut
		  and item_annul.ti_item_rich_annul_vers = 'UNI_DOC'
		  and item_annul.ti_stato_item = 'ANNULLATO'
		  
		  and doc.id_unita_doc = item_annul.id_unita_doc
		  and doc.ti_creazione = 'AGGIUNTA_DOCUMENTO'
		  and doc.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
		 ) != 0
			then '1'
			else '0'
end fl_doc_30gg,

--
--						doc IN_ATTESA_MEMORIZZAZIONE
--
case
	when exists (select * 
				from ELV_DOC_AGG_DA_ELAB_ELENCO doc_da_elab
				where doc_da_elab.id_strut = strut.id_strut 
				and doc_da_elab.ti_stato_doc_da_elab = 'IN_ATTESA_MEMORIZZAZIONE'
				and doc_da_elab.dt_creazione between trunc(sysdate) and sysdate + 1/24
				)
			then '1'
			else '0'
end fl_doc_attesa_mem_corr,
case
	when exists (select * 
				from ELV_DOC_AGG_DA_ELAB_ELENCO doc_da_elab
				where doc_da_elab.id_strut = strut.id_strut 
				and doc_da_elab.ti_stato_doc_da_elab = 'IN_ATTESA_MEMORIZZAZIONE'
				and doc_da_elab.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
				)
			then '1'
			else '0'
end fl_doc_attesa_mem_30gg,

--
--						doc IN_ATTESA_SCHED
--
case
	when exists (select * 
				from ELV_DOC_AGG_DA_ELAB_ELENCO doc_da_elab
				where doc_da_elab.id_strut = strut.id_strut 
				and doc_da_elab.ti_stato_doc_da_elab = 'IN_ATTESA_SCHED'
				and doc_da_elab.dt_creazione between trunc(sysdate) and sysdate + 1/24
				)
			then '1'
			else '0'
end fl_doc_attesa_sched_corr,
case
	when exists (select * 
				from ELV_DOC_AGG_DA_ELAB_ELENCO doc_da_elab
				where doc_da_elab.id_strut = strut.id_strut 
				and doc_da_elab.ti_stato_doc_da_elab = 'IN_ATTESA_SCHED'
				and doc_da_elab.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
				)
			then '1'
			else '0'
end fl_doc_attesa_sched_30gg,

--
--						doc NON_SELEZ_SCHED
--
case
	when exists (select * 
				from ELV_DOC_AGG_DA_ELAB_ELENCO doc_da_elab
				where doc_da_elab.id_strut = strut.id_strut 
				and doc_da_elab.ti_stato_doc_da_elab = 'NON_SELEZ_SCHED'
				and doc_da_elab.dt_creazione between trunc(sysdate) and sysdate + 1/24
				)
			then '1'
end fl_doc_nosel_sched_corr,
case
	when exists (select * 
				from ELV_DOC_AGG_DA_ELAB_ELENCO doc_da_elab
				where doc_da_elab.id_strut = strut.id_strut 
				and doc_da_elab.ti_stato_doc_da_elab = 'NON_SELEZ_SCHED'
				and doc_da_elab.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
				)
			then '1'
			else '0'
end fl_doc_nosel_sched_30gg

from ORG_STRUT strut;

-- changeset root:1751897635013-672
COMMENT ON COLUMN MON_V_CHK_DOC_STRUT.ID_STRUT IS 'PK.1 relativa a tabella ORG_STRUT';

-- changeset root:1751897635013-673
CREATE OR REPLACE FORCE VIEW "MON_V_CHK_UD_STRUT" ("ID_STRUT", "FL_UD_CORR", "FL_UD_30GG", "FL_UD_ATTESA_MEM_CORR", "FL_UD_ATTESA_MEM_30GG", "FL_UD_ATTESA_SCHED_CORR", "FL_UD_ATTESA_SCHED_30GG", "FL_UD_NOSEL_SCHED_CORR", "FL_UD_NOSEL_SCHED_30GG") AS select
 strut.id_strut,
 
--
--					ud TOTALE
--
case
	when exists (select * 
				from ARO_DOC doc
				where doc.id_strut = strut.id_strut 
				and doc.ti_doc = 'PRINCIPALE'
				and doc.dt_creazione between trunc(sysdate) and sysdate + 1/24
				and doc.dt_annul = to_date('31/12/2444', 'dd/mm/yyyy')
				and doc.ti_creazione = 'VERSAMENTO_UNITA_DOC'
				)
			then '1'
			else '0'
end fl_ud_corr,
case
	when (select nvl(sum(ni_unita_doc_vers), 0)
		  from MON_CONTA_UD_DOC_COMP conta_ud
		  where conta_ud.id_strut = strut.id_strut 
		  and conta_ud.dt_rif_conta between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
		  ) -
		 (select nvl(count(*), 0)
		  from ARO_ITEM_RICH_ANNUL_VERS item_annul, ARO_UNITA_DOC ud
		  where item_annul.id_strut = strut.id_strut
		  and item_annul.ti_item_rich_annul_vers = 'UNI_DOC'
		  and item_annul.ti_stato_item = 'ANNULLATO'
		  and ud.id_unita_doc = item_annul.id_unita_doc
		  and ud.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
		 ) != 0
			then '1'
			else '0'
end fl_ud_30gg,

--
--						ud IN_ATTESA_MEMORIZZAZIONE
--
case
	when exists (select * 
				from ELV_UD_VERS_DA_ELAB_ELENCO ud_da_elab
				where ud_da_elab.id_strut = strut.id_strut 
				and ud_da_elab.ti_stato_ud_da_elab = 'IN_ATTESA_MEMORIZZAZIONE'
				and ud_da_elab.dt_creazione between trunc(sysdate) and sysdate + 1/24
				)
			then '1'
			else '0'
end fl_ud_attesa_mem_corr,
case
	when exists (select * 
				from ELV_UD_VERS_DA_ELAB_ELENCO ud_da_elab
				where ud_da_elab.id_strut = strut.id_strut 
				and ud_da_elab.ti_stato_ud_da_elab = 'IN_ATTESA_MEMORIZZAZIONE'
				and ud_da_elab.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
				)
			then '1'
			else '0'
end fl_ud_attesa_mem_30gg,

--
--						ud IN_ATTESA_SCHED
--
case
	when exists (select * 
				from ELV_UD_VERS_DA_ELAB_ELENCO ud_da_elab
				where ud_da_elab.id_strut = strut.id_strut 
				and ud_da_elab.ti_stato_ud_da_elab = 'IN_ATTESA_SCHED'
				and ud_da_elab.dt_creazione between trunc(sysdate) and sysdate + 1/24
				)
			then '1'
			else '0'
end fl_ud_attesa_sched_corr,
case
	when exists (select * 
				from ELV_UD_VERS_DA_ELAB_ELENCO ud_da_elab
				where ud_da_elab.id_strut = strut.id_strut 
				and ud_da_elab.ti_stato_ud_da_elab = 'IN_ATTESA_SCHED'
				and ud_da_elab.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
				)
			then '1'
			else '0'
end fl_ud_attesa_sched_30gg,

--
--						ud NON_SELEZ_SCHED
--
case
	when exists (select * 
				from ELV_UD_VERS_DA_ELAB_ELENCO ud_da_elab
				where ud_da_elab.id_strut = strut.id_strut 
				and ud_da_elab.ti_stato_ud_da_elab = 'NON_SELEZ_SCHED'
				and ud_da_elab.dt_creazione between trunc(sysdate) and sysdate + 1/24
				)
			then '1'
end fl_ud_nosel_sched_corr,
case
	when exists (select * 
				from ELV_UD_VERS_DA_ELAB_ELENCO ud_da_elab
				where ud_da_elab.id_strut = strut.id_strut 
				and ud_da_elab.ti_stato_ud_da_elab = 'NON_SELEZ_SCHED'
				and ud_da_elab.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
				)
			then '1'
			else '0'
end fl_ud_nosel_sched_30gg

from ORG_STRUT strut;

-- changeset root:1751897635013-674
COMMENT ON COLUMN MON_V_CHK_UD_STRUT.ID_STRUT IS 'PK.1 relativa a tabella ORG_STRUT';

-- changeset root:1751897635013-675
CREATE OR REPLACE FORCE VIEW "MON_V_CHK_UD_NONVERS_STRUT" ("ID_STRUT", "FL_UD_NONVERS_NOVERIF", "FL_UD_NONVERS_VERIF", "FL_UD_NONVERS_NORISOLUB") AS select
strut.id_strut,

--
--			NON VERIFICATI
--
case
	when exists (select *
				from VRS_V_UNITA_DOC_NON_VERS ud_nonvers
				where ud_nonvers.id_strut = strut.id_strut
				and ud_nonvers.fl_verif = '0'
				)
		then '1'
		else '0'
end fl_ud_nonvers_noverif,

--
--			VERIFICATI
--

case
	when exists (select *
				from VRS_V_UNITA_DOC_NON_VERS ud_nonvers
				where ud_nonvers.id_strut = strut.id_strut
				and ud_nonvers.fl_verif = '1'
				and ud_nonvers.fl_non_risolub = '0'
				)
		then '1'
		else '0'
end fl_ud_nonvers_verif,
--
--			NON RISOLUBILI
--

case
	when exists (select *
				from VRS_V_UNITA_DOC_NON_VERS ud_nonvers
				where ud_nonvers.id_strut = strut.id_strut
				and ud_nonvers.fl_verif = '1'
				and ud_nonvers.fl_non_risolub = '1'
				)
		then '1'
		else '0'
end fl_ud_nonvers_norisolub

from ORG_STRUT strut;

-- changeset root:1751897635013-676
COMMENT ON COLUMN MON_V_CHK_UD_NONVERS_STRUT.ID_STRUT IS 'PK.1 relativa a tabella ORG_STRUT';

-- changeset root:1751897635013-677
CREATE OR REPLACE FORCE VIEW "ORG_V_CHK_STRUT_PARTITION" ("ID_STRUT", "FL_PART_OK", "ID_STRUT_CHK") AS SELECT a.id_Strut, NVL (b.fl_part_ok, 0), b.id_strut AS id_strut_chk
      FROM org_Strut  a
           LEFT JOIN ORG_CHK_STRUT_PARTITION b ON a.id_strut = b.id_strut;

-- changeset root:1751897635013-678
CREATE OR REPLACE FORCE VIEW "MON_V_VIS_UD_NON_VERS" ("ID_AMBIENTE", "NM_AMBIENTE", "ID_ENTE", "NM_ENTE", "ID_STRUT", "NM_STRUT", "ID_UNITA_DOC_NON_VERS", "CD_REGISTRO_KEY_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "FL_VERIF", "FL_NON_RISOLUB", "DT_FIRST_SES_ERR", "DT_LAST_SES_ERR", "CD_ERR") AS select 
-- info di organizzazione
 amb.id_ambiente, amb.nm_ambiente, 
 ente.id_ente, ente.nm_ente, 
 strut.id_strut, strut.nm_strut,
 
-- info unita doc 
 ud_non_vers.id_unita_doc_non_vers,
 ud_non_vers.cd_registro_key_unita_doc, ud_non_vers.aa_key_unita_doc, ud_non_vers.cd_key_unita_doc,

 ud_non_vers.fl_verif,
 ud_non_vers.fl_non_risolub,
  
 ud_non_vers.dt_first_ses_err,
 ud_non_vers.dt_last_ses_err,
 ud_non_vers.ds_err_princ

from VRS_V_UNITA_DOC_NON_VERS ud_non_vers
join ORG_STRUT strut
 on (strut.id_strut = ud_non_vers.id_strut and strut.fl_cessato = 0)
join ORG_ENTE ente 
 on (ente.id_ente = strut.id_ente and ente.fl_cessato = 0)
join ORG_AMBIENTE amb
 on (amb.id_ambiente = ente.id_ambiente);

-- changeset root:1751897635013-679
COMMENT ON COLUMN MON_V_VIS_UD_NON_VERS.ID_UNITA_DOC_NON_VERS IS 'PK.1 relativa a tabella VRS_UNITA_DOC_NON_VERS';

-- changeset root:1751897635013-680
CREATE OR REPLACE FORCE VIEW "ORG_V_LIS_STRUT_PER_ELE" ("FL_PRESENZA_ELENCO_FISC", "ID_STRUT") AS select
'1' fl_presenza_elenco_fisc, strut.id_strut
from ORG_STRUT strut
where exists (select *
			  from ELV_ELENCO_VERS_DA_ELAB ele_daelab
			  join ELV_ELENCO_VERS ele
				on (ele.id_elenco_vers = ele_daelab.id_elenco_vers)
			  where ele_daelab.id_strut = strut.id_strut
			  and ele_daelab.ti_stato_elenco in ('VALIDATO', 'FIRME_VERIFICATE_DT_VERS',
												 'IN_CODA_JMS_VERIFICA_FIRME_DT_VERS', 'IN_CODA_JMS_INDICE_AIP_DA_ELAB')
			  and ele.fl_elenco_fisc = '1'
			  )
UNION

select
'0' fl_presenza_elenco_fisc, strut.id_strut
from ORG_STRUT strut
where not exists (select *
				  from ELV_ELENCO_VERS_DA_ELAB ele_daelab
				  join ELV_ELENCO_VERS ele
					on (ele.id_elenco_vers = ele_daelab.id_elenco_vers)
				  where ele_daelab.id_strut = strut.id_strut
				  and ele_daelab.ti_stato_elenco in ('VALIDATO', 'FIRME_VERIFICATE_DT_VERS',
													 'IN_CODA_JMS_VERIFICA_FIRME_DT_VERS', 'IN_CODA_JMS_INDICE_AIP_DA_ELAB')
				  and ele.fl_elenco_fisc = '1'
				  )
and exists (select *
		  from ELV_ELENCO_VERS_DA_ELAB ele_daelab
		  where ele_daelab.id_strut = strut.id_strut
		  and ele_daelab.ti_stato_elenco in ('VALIDATO', 'FIRME_VERIFICATE_DT_VERS',
											 'IN_CODA_JMS_VERIFICA_FIRME_DT_VERS', 'IN_CODA_JMS_INDICE_AIP_DA_ELAB')
		  );

-- changeset root:1751897635013-681
COMMENT ON COLUMN ORG_V_LIS_STRUT_PER_ELE.ID_STRUT IS 'PK.1';

-- changeset root:1751897635013-682
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_UD_STRUT" ("ID_STRUT", "TI_STATO_UD", "TI_DT_CREAZIONE", "NI_UD") AS select 
 ud_da_elab.id_strut id_strut, 
 ud_da_elab.ti_stato_ud_da_elab ti_stato_ud,
 case
	when ud_da_elab.dt_creazione between trunc(sysdate) and sysdate + 1/24 then 'OGGI'
	else '30gg'
 end ti_dt_creazione,
 
 count(*) ni_ud

from ELV_UD_VERS_DA_ELAB_ELENCO ud_da_elab
where ud_da_elab.dt_creazione between trunc(sysdate - 30) and sysdate + 1/24

group by ud_da_elab.id_strut, ud_da_elab.ti_stato_ud_da_elab,  
		 case
			when ud_da_elab.dt_creazione between trunc(sysdate) and sysdate + 1/24 then 'OGGI'
			else '30gg'
		 end

UNION

select
 tmp.id_strut id_strut, 
 'TOTALE' ti_stato_ud, 
 'OGGI' ti_dt_creazione, 
 tmp.ni_ud
from (select 
	   doc.id_strut id_strut, 
	   count(*) ni_ud
	  from ARO_DOC doc
	  where doc.ti_doc = 'PRINCIPALE'
	  and doc.dt_creazione between trunc(sysdate) and sysdate + 1/24
	  and doc.dt_annul = to_date('31/12/2444', 'dd/mm/yyyy')
	  and doc.ti_creazione = 'VERSAMENTO_UNITA_DOC'
	  group by doc.id_strut
	) tmp

UNION
	  
select 
 strut.id_strut id_strut, 
'TOTALE' ti_stato_ud, 
'30gg' ti_dt_creazione,

(select nvl(sum(ni_unita_doc_vers), 0)
 from MON_CONTA_UD_DOC_COMP conta_ud
 where conta_ud.id_strut = strut.id_strut 
 and conta_ud.dt_rif_conta between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
) -
(select nvl(count(*), 0)
 from ARO_ITEM_RICH_ANNUL_VERS item_annul, ARO_UNITA_DOC ud
 where item_annul.id_strut = strut.id_strut
 and item_annul.ti_item_rich_annul_vers = 'UNI_DOC'
 and item_annul.ti_stato_item = 'ANNULLATO'
 and ud.id_unita_doc = item_annul.id_unita_doc
 and ud.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
) ni_ud

from ORG_STRUT strut;

-- changeset root:1751897635013-683
COMMENT ON COLUMN MON_V_CNT_UD_STRUT.ID_STRUT IS 'PK.1 relativa a tabella ORG_STRUT';

-- changeset root:1751897635013-684
COMMENT ON COLUMN MON_V_CNT_UD_STRUT.TI_STATO_UD IS 'PK.2';

-- changeset root:1751897635013-685
COMMENT ON COLUMN MON_V_CNT_UD_STRUT.TI_DT_CREAZIONE IS 'PK.3';

-- changeset root:1751897635013-686
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_UD_STRUT_B30" ("ID_STRUT", "TI_STATO_UD", "NI_UD") AS select 
 ud_da_elab.id_strut id_strut, 
 ud_da_elab.ti_stato_ud_da_elab ti_stato_ud,
 
 count(*) ni_ud

from ELV_UD_VERS_DA_ELAB_ELENCO ud_da_elab
where ud_da_elab.dt_creazione between to_date('01-01-2000', 'dd-mm-yyyy') and to_date(to_char(trunc(sysdate - 31), 'dd-mm-yyyy') || '23:59:59', 'dd-mm-yyyy hh24:mi:ss')

group by ud_da_elab.id_strut, ud_da_elab.ti_stato_ud_da_elab

UNION
	  
select 
 strut.id_strut id_strut, 
'TOTALE' ti_stato_ud, 

(select nvl(sum(ni_unita_doc_vers), 0)
 from MON_CONTA_UD_DOC_COMP conta_ud
 where conta_ud.id_strut = strut.id_strut 
 and conta_ud.dt_rif_conta between to_date('01-01-2000', 'dd-mm-yyyy') and to_date(to_char(trunc(sysdate - 31), 'dd-mm-yyyy') || '23:59:59', 'dd-mm-yyyy hh24:mi:ss')
) -
(select nvl(count(*), 0)
 from ARO_ITEM_RICH_ANNUL_VERS item_annul, ARO_UNITA_DOC ud
 where item_annul.id_strut = strut.id_strut
 and item_annul.ti_item_rich_annul_vers = 'UNI_DOC'
 and item_annul.ti_stato_item = 'ANNULLATO'
 and ud.id_unita_doc = item_annul.id_unita_doc
 and ud.dt_creazione between to_date('01-01-2000', 'dd-mm-yyyy') and to_date(to_char(trunc(sysdate - 31), 'dd-mm-yyyy') || '23:59:59', 'dd-mm-yyyy hh24:mi:ss')
) ni_ud

from ORG_STRUT strut;

-- changeset root:1751897635013-687
COMMENT ON COLUMN MON_V_CNT_UD_STRUT_B30.ID_STRUT IS 'PK.1';

-- changeset root:1751897635013-688
COMMENT ON COLUMN MON_V_CNT_UD_STRUT_B30.TI_STATO_UD IS 'PK.2';

-- changeset root:1751897635013-689
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_DOC_STRUT" ("ID_STRUT", "TI_STATO_DOC", "TI_DT_CREAZIONE", "NI_DOC") AS select 
 doc_da_elab.id_strut id_strut, 
 doc_da_elab.ti_stato_doc_da_elab ti_stato_doc,
 case
	when doc_da_elab.dt_creazione between trunc(sysdate) and sysdate + 1/24 then 'OGGI'
	else '30gg'
 end ti_dt_creazione,
 
 count(*) ni_doc

from ELV_DOC_AGG_DA_ELAB_ELENCO doc_da_elab
where doc_da_elab.dt_creazione between trunc(sysdate - 30) and sysdate + 1/24

group by doc_da_elab.id_strut, doc_da_elab.ti_stato_doc_da_elab,  
		 case
			when doc_da_elab.dt_creazione between trunc(sysdate) and sysdate + 1/24 then 'OGGI'
			else '30gg'
		 end

UNION

select
 tmp.id_strut id_strut, 
 'TOTALE' ti_stato_doc, 
 'OGGI' ti_dt_creazione, 
 tmp.ni_doc
from (select 
	   doc.id_strut id_strut, 
	   count(*) ni_doc
	  from ARO_DOC doc
	  where doc.dt_creazione between trunc(sysdate) and sysdate + 1/24
	  and doc.dt_annul = to_date('31/12/2444', 'dd/mm/yyyy')
	  and doc.ti_creazione = 'AGGIUNTA_DOCUMENTO'
	  group by doc.id_strut
	) tmp

UNION
  
select 
 strut.id_strut id_strut, 
'TOTALE' ti_stato_doc, 
'30gg' ti_dt_creazione,

(select nvl(sum(ni_doc_agg), 0)
 from MON_CONTA_UD_DOC_COMP conta_doc
 where conta_doc.id_strut = strut.id_strut 
 and conta_doc.dt_rif_conta between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
) -
(select nvl(count(*), 0)
 from ARO_ITEM_RICH_ANNUL_VERS item_annul, ARO_DOC doc
 where item_annul.id_strut = strut.id_strut
 and item_annul.ti_item_rich_annul_vers = 'UNI_DOC'
 and item_annul.ti_stato_item = 'ANNULLATO'
 and doc.id_unita_doc = item_annul.id_unita_doc
 and doc.ti_creazione = 'AGGIUNTA_DOCUMENTO'
 and doc.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
) ni_doc

from ORG_STRUT strut;

-- changeset root:1751897635013-690
COMMENT ON COLUMN MON_V_CNT_DOC_STRUT.ID_STRUT IS 'PK.1';

-- changeset root:1751897635013-691
COMMENT ON COLUMN MON_V_CNT_DOC_STRUT.TI_STATO_DOC IS 'PK.2';

-- changeset root:1751897635013-692
COMMENT ON COLUMN MON_V_CNT_DOC_STRUT.TI_DT_CREAZIONE IS 'PK.3';

-- changeset root:1751897635013-693
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_DOC_STRUT_B30" ("ID_STRUT", "TI_STATO_DOC", "NI_DOC") AS select 
 doc_da_elab.id_strut id_strut, 
 doc_da_elab.ti_stato_doc_da_elab ti_stato_doc,
 
 count(*) ni_doc

from ELV_DOC_AGG_DA_ELAB_ELENCO doc_da_elab
where doc_da_elab.dt_creazione between to_date('01-01-2000', 'dd-mm-yyyy') and to_date(to_char(trunc(sysdate - 31), 'dd-mm-yyyy') || '23:59:59', 'dd-mm-yyyy hh24:mi:ss')

group by doc_da_elab.id_strut, doc_da_elab.ti_stato_doc_da_elab

UNION
  
select 
 strut.id_strut id_strut, 
'TOTALE' ti_stato_doc, 

(select nvl(sum(ni_doc_agg), 0)
 from MON_CONTA_UD_DOC_COMP conta_doc
 where conta_doc.id_strut = strut.id_strut 
 and conta_doc.dt_rif_conta between to_date('01-01-2000', 'dd-mm-yyyy') and to_date(to_char(trunc(sysdate - 31), 'dd-mm-yyyy') || '23:59:59', 'dd-mm-yyyy hh24:mi:ss')
) -
(select nvl(count(*), 0)
 from ARO_ITEM_RICH_ANNUL_VERS item_annul, ARO_DOC doc
 where item_annul.id_strut = strut.id_strut
 and item_annul.ti_item_rich_annul_vers = 'UNI_DOC'
 and item_annul.ti_stato_item = 'ANNULLATO'
 and doc.id_unita_doc = item_annul.id_unita_doc
 and doc.ti_creazione = 'AGGIUNTA_DOCUMENTO'
 and doc.dt_creazione between to_date('01-01-2000', 'dd-mm-yyyy') and to_date(to_char(trunc(sysdate - 31), 'dd-mm-yyyy') || '23:59:59', 'dd-mm-yyyy hh24:mi:ss')
) ni_doc

from ORG_STRUT strut;

-- changeset root:1751897635013-694
CREATE OR REPLACE FORCE VIEW "DEC_V_CALC_TI_SERV_ON_TIPO_UD" ("ID_CATEG_TIPO_UNITA_DOC", "ID_STRUT", "CD_ALGO_TARIFFARIO", "ID_TIPO_SERVIZIO_CONSERV", "ID_TIPO_SERVIZIO_ATTIV") AS select
 sottocat.id_categ_tipo_unita_doc, 
 strut.id_strut,
 'CLASSE_ENTE' cd_algo_tariffario,
 
 case
	when cat.cd_categ_tipo_unita_doc in ('documentazione_amministrativa', 'documentazione_universitaria', 	-- tipo servizio CONSERVAZIONE e doc amministrativa 
										 'documentazione_scolastica','documenti_di_conservazione')
		then
			case
				when (select count(*)
					 from sacer_iam.ORG_V_LIS_TI_SERV_BY_ENTE lis_ti_serv
					 where lis_ti_serv.id_ente_convenz = strut.id_ente_convenz
					 and lis_ti_serv.ti_classe_tipo_servizio = 'CONSERVAZIONE'
					 and lis_ti_serv.ti_doc_tipo_servizio = 'AMMINISTRATIVA'
					 and lis_ti_serv.cd_algo_tariffario = 'CLASSE_ENTE'
					 ) = 0
					then null
				when (select count(*)
					 from sacer_iam.ORG_V_LIS_TI_SERV_BY_ENTE lis_ti_serv
					 where lis_ti_serv.id_ente_convenz = strut.id_ente_convenz
					 and lis_ti_serv.ti_classe_tipo_servizio = 'CONSERVAZIONE'
					 and lis_ti_serv.ti_doc_tipo_servizio = 'AMMINISTRATIVA'
					 and lis_ti_serv.cd_algo_tariffario = 'CLASSE_ENTE'
					 ) = 1
					then (select id_tipo_servizio
						 from sacer_iam.ORG_V_LIS_TI_SERV_BY_ENTE lis_ti_serv
						 where lis_ti_serv.id_ente_convenz = strut.id_ente_convenz
						 and lis_ti_serv.ti_classe_tipo_servizio = 'CONSERVAZIONE'
						 and lis_ti_serv.ti_doc_tipo_servizio = 'AMMINISTRATIVA'
						 and lis_ti_serv.cd_algo_tariffario = 'CLASSE_ENTE'
						 )
				else null
			end
		else																								-- tipo servizio CONSERVAZIONE e doc sanitaria 
			case
				when (select count(*)
					 from sacer_iam.ORG_V_LIS_TI_SERV_BY_ENTE lis_ti_serv
					 where lis_ti_serv.id_ente_convenz = strut.id_ente_convenz
					 and lis_ti_serv.ti_classe_tipo_servizio = 'CONSERVAZIONE'
					 and lis_ti_serv.ti_doc_tipo_servizio = 'SANITARIA'
					 and lis_ti_serv.cd_algo_tariffario = 'CLASSE_ENTE'
					 ) = 0
					then null
				when (select count(*)
					 from sacer_iam.ORG_V_LIS_TI_SERV_BY_ENTE lis_ti_serv
					 where lis_ti_serv.id_ente_convenz = strut.id_ente_convenz
					 and lis_ti_serv.ti_classe_tipo_servizio = 'CONSERVAZIONE'
					 and lis_ti_serv.ti_doc_tipo_servizio = 'SANITARIA'
					 and lis_ti_serv.cd_algo_tariffario = 'CLASSE_ENTE'
					 ) = 1
					then (select id_tipo_servizio
						 from sacer_iam.ORG_V_LIS_TI_SERV_BY_ENTE lis_ti_serv
						 where lis_ti_serv.id_ente_convenz = strut.id_ente_convenz
						 and lis_ti_serv.ti_classe_tipo_servizio = 'CONSERVAZIONE'
						 and lis_ti_serv.ti_doc_tipo_servizio = 'SANITARIA'
						 and lis_ti_serv.cd_algo_tariffario = 'CLASSE_ENTE'
						 )
				else null
			end
 end id_tipo_servizio_conserv,
 
 case
	when cat.cd_categ_tipo_unita_doc in ('documentazione_amministrativa', 'documentazione_universitaria', 	-- tipo servizio ATTIVAZIONE e doc amministrtaiva 
										 'documentazione_scolastica','documenti_di_conservazione')
		then
			case
				when (select count(*)
					 from sacer_iam.ORG_V_LIS_TI_SERV_BY_ENTE lis_ti_serv
					 where lis_ti_serv.id_ente_convenz = strut.id_ente_convenz
					 and lis_ti_serv.ti_classe_tipo_servizio = 'ATTIVAZIONE_SISTEMA_VERSANTE'
					 and lis_ti_serv.ti_doc_tipo_servizio = 'AMMINISTRATIVA'
					 and lis_ti_serv.cd_algo_tariffario = 'CLASSE_ENTE'
					 ) = 0
					then null
				when (select count(*)
					 from sacer_iam.ORG_V_LIS_TI_SERV_BY_ENTE lis_ti_serv
					 where lis_ti_serv.id_ente_convenz = strut.id_ente_convenz
					 and lis_ti_serv.ti_classe_tipo_servizio = 'ATTIVAZIONE_SISTEMA_VERSANTE'
					 and lis_ti_serv.ti_doc_tipo_servizio = 'AMMINISTRATIVA'
					 and lis_ti_serv.cd_algo_tariffario = 'CLASSE_ENTE'
					 ) = 1
					then (select id_tipo_servizio
						 from sacer_iam.ORG_V_LIS_TI_SERV_BY_ENTE lis_ti_serv
						 where lis_ti_serv.id_ente_convenz = strut.id_ente_convenz
						 and lis_ti_serv.ti_classe_tipo_servizio = 'ATTIVAZIONE_SISTEMA_VERSANTE'
						 and lis_ti_serv.ti_doc_tipo_servizio = 'AMMINISTRATIVA'
						 and lis_ti_serv.cd_algo_tariffario = 'CLASSE_ENTE'
						 )
				else null
			end
		else																								-- tipo servizio ATTIVAZIONE e doc sanitaria
			case
				when (select count(*)
					 from sacer_iam.ORG_V_LIS_TI_SERV_BY_ENTE lis_ti_serv
					 where lis_ti_serv.id_ente_convenz = strut.id_ente_convenz
					 and lis_ti_serv.ti_classe_tipo_servizio = 'ATTIVAZIONE_SISTEMA_VERSANTE'
					 and lis_ti_serv.ti_doc_tipo_servizio = 'SANITARIA'
					 and lis_ti_serv.cd_algo_tariffario = 'CLASSE_ENTE'
					 ) = 0
					then null
				when (select count(*)
					 from sacer_iam.ORG_V_LIS_TI_SERV_BY_ENTE lis_ti_serv
					 where lis_ti_serv.id_ente_convenz = strut.id_ente_convenz
					 and ti_classe_tipo_servizio = 'ATTIVAZIONE_SISTEMA_VERSANTE'
					 and ti_doc_tipo_servizio = 'SANITARIA'
					 and lis_ti_serv.cd_algo_tariffario = 'CLASSE_ENTE'
					 ) = 1
					then (select id_tipo_servizio
						 from sacer_iam.ORG_V_LIS_TI_SERV_BY_ENTE lis_ti_serv
						 where lis_ti_serv.id_ente_convenz = strut.id_ente_convenz
						 and lis_ti_serv.ti_classe_tipo_servizio = 'ATTIVAZIONE_SISTEMA_VERSANTE'
						 and lis_ti_serv.ti_doc_tipo_servizio = 'SANITARIA'
						 and lis_ti_serv.cd_algo_tariffario = 'CLASSE_ENTE'
						 )
						
				else null
			end
 end id_tipo_servizio_attiv
 
from DEC_CATEG_TIPO_UNITA_DOC sottocat
join DEC_CATEG_TIPO_UNITA_DOC cat
 on (cat.id_categ_tipo_unita_doc = sottocat.id_categ_tipo_unita_doc_padre)
join org_strut strut
 on (strut.nm_strut like '%')

UNION

select
 sottocat.id_categ_tipo_unita_doc, 
 strut.id_strut,
 'NO_CLASSE_ENTE' cd_algo_tariffario,
 
 case																										
	when cat.cd_categ_tipo_unita_doc in ('documentazione_amministrativa', 'documentazione_universitaria', 	-- tipo servizio CONSERVAZIONE e doc amministrativa 
										 'documentazione_scolastica','documenti_di_conservazione')
		then
			case
				when (select count(*)
					 from sacer_iam.ORG_V_LIS_TI_SERV_BY_ENTE lis_ti_serv
					 where lis_ti_serv.id_ente_convenz = strut.id_ente_convenz
					 and lis_ti_serv.ti_classe_tipo_servizio = 'CONSERVAZIONE'
					 and lis_ti_serv.ti_doc_tipo_servizio = 'AMMINISTRATIVA'
					 and lis_ti_serv.cd_algo_tariffario = 'NO_CLASSE_ENTE'
					 ) = 0
					then null
				when (select count(*)
					 from sacer_iam.ORG_V_LIS_TI_SERV_BY_ENTE lis_ti_serv
					 where lis_ti_serv.id_ente_convenz = strut.id_ente_convenz
					 and ti_classe_tipo_servizio = 'CONSERVAZIONE'
					 and ti_doc_tipo_servizio = 'AMMINISTRATIVA'
					 and lis_ti_serv.cd_algo_tariffario = 'NO_CLASSE_ENTE'
					 ) = 1
					then (select id_tipo_servizio
						 from sacer_iam.ORG_V_LIS_TI_SERV_BY_ENTE lis_ti_serv
						 where lis_ti_serv.id_ente_convenz = strut.id_ente_convenz
						 and ti_classe_tipo_servizio = 'CONSERVAZIONE'
						 and ti_doc_tipo_servizio = 'AMMINISTRATIVA'
						 and lis_ti_serv.cd_algo_tariffario = 'NO_CLASSE_ENTE'
						 )
				else null
			end
	when cat.cd_categ_tipo_unita_doc = 'documentazione_sanitaria'										 -- tipo servizio CONSERVAZIONE e doc sanitaria no DICOM
	and sottocat.cd_categ_tipo_unita_doc != 'immagini diagnostiche'
		then
			case
				when (select count(*)
					 from sacer_iam.ORG_V_LIS_TI_SERV_BY_ENTE lis_ti_serv
					 where lis_ti_serv.id_ente_convenz = strut.id_ente_convenz
					 and lis_ti_serv.ti_classe_tipo_servizio = 'CONSERVAZIONE'
					 and lis_ti_serv.ti_doc_tipo_servizio = 'SANITARIA'
					 and lis_ti_serv.cd_algo_tariffario = 'NO_CLASSE_ENTE'
					 ) = 0
					then null
				when (select count(*)
					 from sacer_iam.ORG_V_LIS_TI_SERV_BY_ENTE lis_ti_serv
					 where lis_ti_serv.id_ente_convenz = strut.id_ente_convenz
					 and lis_ti_serv.ti_classe_tipo_servizio = 'CONSERVAZIONE'
					 and lis_ti_serv.ti_doc_tipo_servizio = 'SANITARIA'
					 and lis_ti_serv.cd_algo_tariffario = 'NO_CLASSE_ENTE'
					 ) = 1
					then (select id_tipo_servizio
						 from sacer_iam.ORG_V_LIS_TI_SERV_BY_ENTE lis_ti_serv
						 where lis_ti_serv.id_ente_convenz = strut.id_ente_convenz
						 and lis_ti_serv.ti_classe_tipo_servizio = 'CONSERVAZIONE'
						 and lis_ti_serv.ti_doc_tipo_servizio = 'SANITARIA'
						 and lis_ti_serv.cd_algo_tariffario = 'NO_CLASSE_ENTE'
						 )
				else null
			end
		else																								 -- tipo servizio CONSERVAZIONE e doc sanitaria DICOM
			case
				when (select count(*)
					 from sacer_iam.ORG_V_LIS_TI_SERV_BY_ENTE lis_ti_serv
					 where lis_ti_serv.id_ente_convenz = strut.id_ente_convenz
					 and lis_ti_serv.ti_classe_tipo_servizio = 'CONSERVAZIONE'
					 and lis_ti_serv.ti_doc_tipo_servizio = 'SANITARIA_DICOM'
					 and lis_ti_serv.cd_algo_tariffario = 'NO_CLASSE_ENTE'
					 ) = 0
					then null
				when (select count(*)
					 from sacer_iam.ORG_V_LIS_TI_SERV_BY_ENTE lis_ti_serv
					 where lis_ti_serv.id_ente_convenz = strut.id_ente_convenz
					 and lis_ti_serv.ti_classe_tipo_servizio = 'CONSERVAZIONE'
					 and lis_ti_serv.ti_doc_tipo_servizio = 'SANITARIA_DICOM'
					 and lis_ti_serv.cd_algo_tariffario = 'NO_CLASSE_ENTE'
					 ) = 1
					then (select id_tipo_servizio
						 from sacer_iam.ORG_V_LIS_TI_SERV_BY_ENTE lis_ti_serv
						 where lis_ti_serv.id_ente_convenz = strut.id_ente_convenz
						 and lis_ti_serv.ti_classe_tipo_servizio = 'CONSERVAZIONE'
						 and lis_ti_serv.ti_doc_tipo_servizio = 'SANITARIA_DICOM'
						 and lis_ti_serv.cd_algo_tariffario = 'NO_CLASSE_ENTE'
						 )
				else null
			end
 end id_tipo_servizio_conserv,
 
 
 case
	when cat.cd_categ_tipo_unita_doc in ('documentazione_amministrativa', 'documentazione_universitaria', 	-- tipo servizio ATTIVAZIONE e doc amministrativa
										 'documentazione_scolastica','documenti_di_conservazione')
		then
			case
				when (select count(*)
					 from sacer_iam.ORG_V_LIS_TI_SERV_BY_ENTE lis_ti_serv
					 where lis_ti_serv.id_ente_convenz = strut.id_ente_convenz
					 and lis_ti_serv.ti_classe_tipo_servizio = 'ATTIVAZIONE_TIPO_UD'
					 and lis_ti_serv.ti_doc_tipo_servizio = 'AMMINISTRATIVA'
					 and lis_ti_serv.cd_algo_tariffario = 'NO_CLASSE_ENTE'
					 ) = 0
					then null
					
				when (select count(*)
					 from sacer_iam.ORG_V_LIS_TI_SERV_BY_ENTE lis_ti_serv
					 where lis_ti_serv.id_ente_convenz = strut.id_ente_convenz
					 and lis_ti_serv.ti_classe_tipo_servizio = 'ATTIVAZIONE_TIPO_UD'
					 and lis_ti_serv.ti_doc_tipo_servizio = 'AMMINISTRATIVA'
					 and lis_ti_serv.cd_algo_tariffario = 'NO_CLASSE_ENTE'
					 ) = 1
					then (select id_tipo_servizio
						 from sacer_iam.ORG_V_LIS_TI_SERV_BY_ENTE lis_ti_serv
						 where lis_ti_serv.id_ente_convenz = strut.id_ente_convenz
						 and lis_ti_serv.ti_classe_tipo_servizio = 'ATTIVAZIONE_TIPO_UD'
						 and lis_ti_serv.ti_doc_tipo_servizio = 'AMMINISTRATIVA'
						 and lis_ti_serv.cd_algo_tariffario = 'NO_CLASSE_ENTE'
						 )
				else null
			end
	when cat.cd_categ_tipo_unita_doc = 'documentazione_sanitaria'										 -- tipo servizio ATTIVAZIONE e doc sanitaria no DICOM
	and sottocat.cd_categ_tipo_unita_doc != 'immagini diagnostiche'
		then
			case
				when (select count(*)
					 from sacer_iam.ORG_V_LIS_TI_SERV_BY_ENTE lis_ti_serv
					 where lis_ti_serv.id_ente_convenz = strut.id_ente_convenz
					 and lis_ti_serv.ti_classe_tipo_servizio = 'ATTIVAZIONE_TIPO_UD'
					 and lis_ti_serv.ti_doc_tipo_servizio = 'SANITARIA'
					 and lis_ti_serv.cd_algo_tariffario = 'NO_CLASSE_ENTE'
					 ) = 0
					then null
				when (select count(*)
					 from sacer_iam.ORG_V_LIS_TI_SERV_BY_ENTE lis_ti_serv
					 where lis_ti_serv.id_ente_convenz = strut.id_ente_convenz
					 and lis_ti_serv.ti_classe_tipo_servizio = 'ATTIVAZIONE_TIPO_UD'
					 and lis_ti_serv.ti_doc_tipo_servizio = 'SANITARIA'
					 and lis_ti_serv.cd_algo_tariffario = 'NO_CLASSE_ENTE'
					 ) = 1
					then (select id_tipo_servizio
						 from sacer_iam.ORG_V_LIS_TI_SERV_BY_ENTE lis_ti_serv
						 where lis_ti_serv.id_ente_convenz = strut.id_ente_convenz
						 and lis_ti_serv.ti_classe_tipo_servizio = 'ATTIVAZIONE_TIPO_UD'
						 and lis_ti_serv.ti_doc_tipo_servizio = 'SANITARIA'
						 and lis_ti_serv.cd_algo_tariffario = 'NO_CLASSE_ENTE'
						 )
				else null
			end
		else null																						-- tipo servizio ATTIVAZIONE e doc sanitaria DICOM
 end id_tipo_servizio_attiv
 
from DEC_CATEG_TIPO_UNITA_DOC sottocat
join DEC_CATEG_TIPO_UNITA_DOC cat
 on (cat.id_categ_tipo_unita_doc = sottocat.id_categ_tipo_unita_doc_padre)
join org_strut strut
 on (strut.nm_strut like '%');

-- changeset root:1751897635013-695
COMMENT ON COLUMN DEC_V_CALC_TI_SERV_ON_TIPO_UD.ID_CATEG_TIPO_UNITA_DOC IS 'PK.1';

-- changeset root:1751897635013-696
COMMENT ON COLUMN DEC_V_CALC_TI_SERV_ON_TIPO_UD.ID_STRUT IS 'PK.2';

-- changeset root:1751897635013-697
COMMENT ON COLUMN DEC_V_CALC_TI_SERV_ON_TIPO_UD.CD_ALGO_TARIFFARIO IS 'PK.3';

-- changeset root:1751897635013-698
CREATE OR REPLACE FORCE VIEW "ORG_V_CHK_PARTITION_FASC_BY_AA_DA_DROPPARE" ("ID_STRUT", "ANNO", "FL_PART_FASC_OK", "CD_PARTITION_FASC", "FL_PART_FASC_ANNO_OK", "FL_PART_FASCKO_OK", "CD_PARTITION_FASCKO", "FL_PART_FASCKO_ANNO_OK", "FL_PART_SESFASCKO_OK", "CD_PARTITION_SESFASCKO", "FL_PART_SESFASCKO_ANNO_OK", "FL_PART_XMLVERSFASC_OK", "CD_PARTITION_XMLVERSFASC", "FL_PART_XMLVERSFASC_DATA_OK", "FL_PART_XMLFASC_OK", "CD_PARTITION_XMLFASC", "FL_PART_XMLFASC_DATA_OK", "FL_PART_XMLSESFASCKO_OK", "CD_PARTITION_XMLSESFASCKO", "FL_PART_XMLSESFASCKO_DATA_OK", "FL_PART_FILEELEVRSFASC_OK", "CD_PARTITION_FILEELEVRSFASC", "FL_PART_FILEELEVRSFASC_DATA_OK") AS select
 tmp.id_strut,
 aa.aa_val,
 
 tmp.fl_part_fasc_ok,
 tmp.cd_partition_fasc,
 case															-- verifica se per ogni anno la sub-partizione per FAS_FASCICOLO e' definita 
	when (select ds_valore_param_applic
		  from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and  nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then '1'
		else
			case
				when tmp.fl_part_fasc_ok = '1'
					then
						case
							when tmp.cd_partition_fasc is not null
								then 
									case
										when exists (select *
													 from DEC_TIPO_FASCICOLO ti_fasc
													 join DEC_AA_TIPO_FASCICOLO aa_ti_fasc
													  on (aa_ti_fasc.id_tipo_fascicolo = ti_fasc.id_tipo_fascicolo)
													 join DEC_AA_VAL aa
													  on (aa.aa_val >= aa_ti_fasc.aa_ini_tipo_fascicolo
													  and aa.aa_val <= 	case
																			when aa_ti_fasc.aa_fin_tipo_fascicolo = 2444
																				then to_number(substr(to_char (sysdate, 'dd/mm/yyyy'), 7))
																				else aa_ti_fasc.aa_fin_tipo_fascicolo
																		end
														  )
													 where ti_fasc.id_strut = tmp.id_strut
													 and ti_fasc.nm_tipo_fascicolo != 'Tipo fascicolo sconosciuto'
													)
											then 
												case
													when exists (select *
																 from DEC_TIPO_FASCICOLO ti_fasc
																 join DEC_AA_TIPO_FASCICOLO aa_ti_fasc
																  on (aa_ti_fasc.id_tipo_fascicolo = ti_fasc.id_tipo_fascicolo)
																 join DEC_AA_VAL aa
																  on (aa.aa_val >= aa_ti_fasc.aa_ini_tipo_fascicolo
																  and aa.aa_val <= 	case
																						when aa_ti_fasc.aa_fin_tipo_fascicolo = 2444
																							then to_number(substr(to_char (sysdate, 'dd/mm/yyyy'), 7))
																							else aa_ti_fasc.aa_fin_tipo_fascicolo
																					end
																	  )
																 where ti_fasc.id_strut = tmp.id_strut
																 and ti_fasc.nm_tipo_fascicolo != 'Tipo fascicolo sconosciuto'
																 and not exists (select *
																				  from ORG_PARTITION part
																				  join ORG_SUB_PARTITION subpart
																				   on (subpart.id_partition = part.id_partition)
																				  join ORG_VAL_SUB_PARTITION val_subpart
																				   on (val_subpart.id_sub_partition = subpart.id_sub_partition
																				   and val_subpart.id_partition = part.id_partition
																				   and to_number(val_subpart.cd_val_sub_partition) = aa.aa_val)
																				  where part.ti_partition = 'FASCICOLO'
																				  and part.cd_partition = tmp.cd_partition_fasc
																				)
																)
															then '0'					-- esiste anno su tipo fascicolo e tale anno non sottopartizionato
															else '1'
												end
											else '0'									-- non esiste anno su tipo fascicolo
									end
								else '1'												-- controllo partizione per struttura fallito e partizione nulla; 
																						-- si assume partizione definita (caso in cui non si usano le partizioni)
						end
					else '0'															-- controllo partizione per struttura fallito
			end
 end fl_part_fasc_anno_ok,

 tmp.fl_part_fascko_ok,
 tmp.cd_partition_fascko, 
 case															-- verifica se per l'anno in input la sub-partizione per VRS_FASCICOLO_KO e' definita 
	when (select ds_valore_param_applic
		  from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then '1'
		else
			case
				when tmp.fl_part_fascko_ok = '1'
					then
						case
							when tmp.cd_partition_fascko is not null
								then 
									case
										when not exists (select *
														  from ORG_PARTITION part
														  join ORG_SUB_PARTITION subpart
														   on (subpart.id_partition = part.id_partition)
														  join ORG_VAL_SUB_PARTITION val_subpart
														   on (val_subpart.id_sub_partition = subpart.id_sub_partition
														   and val_subpart.id_partition = part.id_partition
														   and to_number(val_subpart.cd_val_sub_partition) = aa.aa_val)
														  where part.ti_partition = 'FASCICOLO_KO'
														  and part.cd_partition = tmp.cd_partition_fascko
														)
											then '0'									-- non esiste sottopartizione per anno in input
											else '1'
									end
								else '1'												-- controllo partizione per struttura fallito e partizione nulla; 
																						-- si assume partizione definita (caso in cui non si usano le partizioni)
						end
					else '0'															-- controllo partizione per struttura fallito
			end
 end fl_part_fascko_anno_ok,

 tmp.fl_part_sesfascko_ok,
 tmp.cd_partition_sesfascko, 
 case															-- verifica se per l'anno in input la sub-partizione per VRS_SES_FASCICOLO_KO e' definita 
	when (select ds_valore_param_applic
		  from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then '1'
		else
			case
				when tmp.fl_part_sesfascko_ok = '1'
					then
						case
							when tmp.cd_partition_fascko is not null
								then 
									case
										when not exists (select *
														  from ORG_PARTITION part
														  join ORG_SUB_PARTITION subpart
														   on (subpart.id_partition = part.id_partition)
														  join ORG_VAL_SUB_PARTITION val_subpart
														   on (val_subpart.id_sub_partition = subpart.id_sub_partition
														   and val_subpart.id_partition = part.id_partition
														   and to_number(val_subpart.cd_val_sub_partition) = aa.aa_val)
														  where part.ti_partition = 'SES_FASCICOLO_KO'
														  and part.cd_partition = tmp.cd_partition_sesfascko
														)
											then '0'									-- non esiste sottopartizione per anno in input
											else '1'
									end
								else '1'												-- controllo partizione per struttura fallito e partizione nulla; 
																						-- si assume partizione definita (caso in cui non si usano le partizioni)
						end
					else '0'															-- controllo partizione per struttura fallito
			end
 end fl_part_sesfascko_anno_ok,


 tmp.fl_part_xmlversfasc_ok,
 tmp.cd_partition_xmlversfasc, 
 case															-- verifica se a data corrente la sub-partizione per FAS_XML_VERS_FASCICOLO e' definita 
	when (select ds_valore_param_applic
		  from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then '1'
		else
			case
				when tmp.fl_part_xmlversfasc_ok = '1'
					then
						case
							when tmp.cd_partition_xmlversfasc is not null
								then 
									case
										when not exists (select *
														 from ORG_PARTITION part
														 join ORG_SUB_PARTITION subpart
														  on (subpart.id_partition = part.id_partition)
														 join ORG_VAL_SUB_PARTITION val_subpart
														  on (val_subpart.id_sub_partition = subpart.id_sub_partition
														  and val_subpart.id_partition = part.id_partition
														  and to_date(val_subpart.cd_val_sub_partition, 'dd/mm/yyyy') > trunc(sysdate))
														 where part.ti_partition = 'XML_VERS_FASCICOLO'
														 and part.cd_partition = tmp.cd_partition_xmlversfasc
														)
											then '0'
											else '1'
									end
								else '1'												-- controllo partizione per struttura fallito e partizione nulla; 
																						-- si assume partizione definita (caso in cui non si usano le partizioni)
						end
					else '0'															-- controllo partizione per struttura fallito
			end
 end fl_part_xmlversfasc_data_ok,


 tmp.fl_part_xmlfasc_ok,
 tmp.cd_partition_xmlfasc, 
 case															-- verifica se a data corrente la sub-partizione per FAS_XML_FASCICOLO e' definita 
	when (select ds_valore_param_applic
		  from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then '1'
		else
			case
				when tmp.fl_part_xmlfasc_ok = '1'
					then
						case
							when tmp.cd_partition_xmlfasc is not null
								then 
									case
										when not exists (select *
														 from ORG_PARTITION part
														 join ORG_SUB_PARTITION subpart
														  on (subpart.id_partition = part.id_partition)
														 join ORG_VAL_SUB_PARTITION val_subpart
														  on (val_subpart.id_sub_partition = subpart.id_sub_partition
														  and val_subpart.id_partition = part.id_partition
														  and to_date(val_subpart.cd_val_sub_partition, 'dd/mm/yyyy') > trunc(sysdate))
														 where part.ti_partition = 'XML_FASCICOLO'
														 and part.cd_partition = tmp.cd_partition_xmlfasc
														)
											then '0'
											else '1'
									end
								else '1'												-- controllo partizione per struttura fallito e partizione nulla; 
																						-- si assume partizione definita (caso in cui non si usano le partizioni)
						end
					else '0'															-- controllo partizione per struttura fallito
			end
 end fl_part_xmlfasc_data_ok,


 tmp.fl_part_xmlsesfascko_ok,
 tmp.cd_partition_xmlsesfascko, 
 case															-- verifica se a data corrente la sub-partizione per VRS_XML_SES_FASCICOLO_KO e' definita 
	when (select ds_valore_param_applic
		  from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then '1'
		else
			case
				when tmp.fl_part_xmlsesfascko_ok = '1'
					then
						case
							when tmp.cd_partition_xmlsesfascko is not null
								then 
									case
										when not exists (select *
														 from ORG_PARTITION part
														 join ORG_SUB_PARTITION subpart
														  on (subpart.id_partition = part.id_partition)
														 join ORG_VAL_SUB_PARTITION val_subpart
														  on (val_subpart.id_sub_partition = subpart.id_sub_partition
														  and val_subpart.id_partition = part.id_partition
														  and to_date(val_subpart.cd_val_sub_partition, 'dd/mm/yyyy') > trunc(sysdate))
														 where part.ti_partition = 'XML_SES_FASCICOLO_KO'
														 and part.cd_partition = tmp.cd_partition_xmlsesfascko
														)
											then '0'
											else '1'
									end
								else '1'												-- controllo partizione per struttura fallito e partizione nulla; 
																						-- si assume partizione definita (caso in cui non si usano le partizioni)
						end
					else '0'															-- controllo partizione per struttura fallito
			end
 end fl_part_xmlsesfascko_data_ok,


 tmp.fl_part_fileelevrsfasc_ok,
 tmp.cd_partition_fileelevrsfasc, 
 case															-- verifica se a data corrente la sub-partizione per ELV_FILE_ELENCO_VERS_FASC e' definita 
	when (select ds_valore_param_applic
		  from APL_PARAM_APPLIC par
          join APL_VALORE_PARAM_APPLIC val
	      on (val.id_param_applic = par.id_param_applic)
		  where par.fl_appart_applic = '1' 
		and val.ti_appart = 'APPLIC' and nm_param_applic = 'VERIFICA_PARTIZIONI') = 'false'
		then '1'
		else
			case
				when tmp.fl_part_fileelevrsfasc_ok = '1'
					then
						case
							when tmp.cd_partition_fileelevrsfasc is not null
								then 
									case
										when not exists (select *
														 from ORG_PARTITION part
														 join ORG_SUB_PARTITION subpart
														  on (subpart.id_partition = part.id_partition)
														 join ORG_VAL_SUB_PARTITION val_subpart
														  on (val_subpart.id_sub_partition = subpart.id_sub_partition
														  and val_subpart.id_partition = part.id_partition
														  and to_date(val_subpart.cd_val_sub_partition, 'dd/mm/yyyy') > trunc(sysdate))
														 where part.ti_partition = 'FILE_ELENCO_VERS_FASC'
														 and part.cd_partition = tmp.cd_partition_fileelevrsfasc
														)
											then '0'
											else '1'
									end
								else '1'												-- controllo partizione per struttura fallito e partizione nulla; 
																						-- si assume partizione definita (caso in cui non si usano le partizioni)
						end
					else '0'															-- controllo partizione per struttura fallito
			end
 end fl_part_fileelevrsfasc_data_ok		 


from ORG_V_CHK_TABLE_PARTITION_FASC tmp
join DEC_AA_VAL aa
	on (aa.aa_val > 1);

-- changeset root:1751897635013-699
COMMENT ON COLUMN ORG_V_CHK_PARTITION_FASC_BY_AA_DA_DROPPARE.ID_STRUT IS 'PK.1';

-- changeset root:1751897635013-700
COMMENT ON COLUMN ORG_V_CHK_PARTITION_FASC_BY_AA_DA_DROPPARE.ANNO IS 'PK.2';

-- changeset root:1751897635013-701
CREATE OR REPLACE FORCE VIEW "APL_V_GETVAL_PARAM_BY_APL" ("ID_PARAM_APPLIC", "NM_PARAM_APPLIC", "ID_VALORE_PARAM_APPLIC", "DS_VALORE_PARAM_APPLIC") AS select
 par.id_param_applic, par.nm_param_applic,
 val.id_valore_param_applic, val.ds_valore_param_applic
 
from APL_PARAM_APPLIC par
join APL_VALORE_PARAM_APPLIC val
	on (val.id_param_applic = par.id_param_applic)
where par.fl_appart_applic = '1'
and par.fl_appart_ambiente = '0'
and par.fl_appart_strut = '0'
and fl_appart_tipo_unita_doc = '0'
and fl_appart_aa_tipo_fascicolo = '0'

and val.ti_appart = 'APPLIC';

-- changeset root:1751897635013-702
COMMENT ON COLUMN APL_V_GETVAL_PARAM_BY_APL.ID_VALORE_PARAM_APPLIC IS 'PK.1';

-- changeset root:1751897635013-703
CREATE OR REPLACE FORCE VIEW "ORG_V_RIC_STRUT" ("ID_USER_IAM_COR", "ID_AMBIENTE", "NM_AMBIENTE", "ID_ENTE", "NM_ENTE", "ID_STRUT", "NM_STRUT", "DS_STRUT", "FL_TEMPLATE", "FL_PART_OK", "ID_AMBITO_TERRIT", "TI_AMBITO_TERRIT", "DS_TREE_CD_AMBITO_TERRIT", "DS_TREE_ID_AMBITO_TERRIT", "ID_CATEG_ENTE", "CD_CATEG_ENTE", "ID_SISTEMA_VERSANTE", "NM_SISTEMA_VERSANTE", "NM_ENTE_CONVENZ", "ID_ENTE_CONVENZ", "NM_AMBIENTE_ENTE_CONVENZ", "ID_AMBIENTE_ENTE_CONVENZ", "FL_PARAMETRI_STRUT", "FL_PARAMETRI_TIPO_UD") AS SELECT abil_org_cor.id_user_iam    id_user_iam_cor,
           amb.id_ambiente,
           amb.nm_ambiente,
           ente.id_ente,
           ente.nm_ente,
           strut.id_strut,
           strut.nm_strut,
           strut.ds_strut,
           strut.fl_template,
           chk_partition.fl_part_ok,
           ambito.id_ambito_territ,
           ambito.ti_ambito_territ,
           ambito.ds_tree_cd_ambito_territ,
           ambito.ds_tree_id_ambito_territ || '/',
           categ.id_categ_ente,
           categ.cd_categ_ente,
           sist_vers.id_sistema_versante,
           sist_vers.nm_sistema_versante,
           enteconvenz.nm_ente_siam,
           enteconvenz.id_ente_siam,
           ambenteconvenz.nm_ambiente_ente_convenz,
           ambenteconvenz.id_ambiente_ente_convenz,
           CASE
               WHEN valore_param_applic.id_valore_param_applic IS NOT NULL THEN
                   '1'
               ELSE
                   '0'
           END                         fl_parametri_strut,
           CASE
               WHEN EXISTS
                        (SELECT 1
                           FROM sacer.apl_valore_param_applic
                                valore_param_applic_tipo_ud
                                JOIN DEC_TIPO_UNITA_DOC tipo_unita_doc
                                    ON (tipo_unita_doc.id_tipo_unita_doc =
                                        valore_param_applic_tipo_ud.id_tipo_unita_doc)
                          WHERE tipo_unita_doc.id_strut = strut.id_strut) THEN
                   '1'
               ELSE
                   '0'
           END                         fl_parametri_tipo_ud
      FROM org_ambiente  amb
           JOIN org_ente ente ON (ente.id_ambiente = amb.id_ambiente)
           JOIN org_strut strut ON (strut.id_ente = ente.id_ente)
           JOIN ORG_V_CHK_STRUT_PARTITION chk_partition
               ON (chk_partition.id_strut = strut.id_strut)
           JOIN org_categ_ente categ
               ON (categ.id_categ_ente = ente.id_categ_ente)
           JOIN iam_abil_organiz abil_org
               ON (abil_org.id_organiz_applic = strut.id_strut)
           JOIN sacer_iam.usr_user usr
               ON (usr.id_user_iam = abil_org.id_user_iam
               AND usr.fl_attivo = '1')
           LEFT JOIN sacer_iam.apl_sistema_versante sist_vers
               ON (sist_vers.id_sistema_versante = usr.id_sistema_versante)
           LEFT JOIN sacer.APL_VALORE_PARAM_APPLIC valore_param_applic
               ON (strut.id_strut = valore_param_applic.id_strut)
           JOIN iam_abil_organiz abil_org_cor
               ON (abil_org_cor.id_organiz_applic = strut.id_strut)
           LEFT JOIN SACER_IAM.org_ente_siam enteconvenz
               ON (enteconvenz.id_ente_siam = strut.id_ente_convenz)
           LEFT JOIN SACER_IAM.org_ambiente_ente_convenz ambenteconvenz
               ON (enteconvenz.id_ambiente_ente_convenz =
                   ambenteconvenz.id_ambiente_ente_convenz)
           LEFT JOIN SACER_IAM.ORG_V_TREE_AMBITO_TERRIT ambito
               ON (ambito.id_ambito_territ = enteconvenz.id_ambito_territ);

-- changeset root:1751897635013-704
COMMENT ON COLUMN ORG_V_RIC_STRUT.ID_USER_IAM_COR IS 'PK.1';

-- changeset root:1751897635013-705
COMMENT ON COLUMN ORG_V_RIC_STRUT.ID_STRUT IS 'PK.2';

-- changeset root:1751897635013-706
COMMENT ON COLUMN ORG_V_RIC_STRUT.ID_SISTEMA_VERSANTE IS 'PK.3';

-- changeset root:1751897635013-707
CREATE OR REPLACE FORCE VIEW "APL_V_PARAM_APPLIC" ("NM_PARAM_APPLIC", "DS_PARAM_APPLIC", "DS_VALORE_PARAM_APPLIC", "TI_PARAM_APPLIC") AS select 
	nm_param_applic,
    ds_param_applic,
    ds_valore_param_applic,
    ti_param_applic
from APL_PARAM_APPLIC par
join APL_VALORE_PARAM_APPLIC val
	on (val.id_param_applic = par.id_param_applic)
where par.fl_appart_applic = '1' 
and par.fl_appart_ambiente = '0' 
and par.fl_appart_strut = '0' 
and par.fl_appart_tipo_unita_doc = '0' 
and par.fl_appart_aa_tipo_fascicolo = '0' 
and val.ti_appart = 'APPLIC';

-- changeset root:1751897635013-708
COMMENT ON COLUMN APL_V_PARAM_APPLIC.NM_PARAM_APPLIC IS 'PK.1';

-- changeset root:1751897635013-709
CREATE OR REPLACE FORCE VIEW "LOG_V_CHK_SCHED_JOB" ("NM_JOB", "STATO_JOB") AS select
 anag_job.nm_job,
 case
	when trunc(inizio_job.dt_reg_log_job) != trunc(sysdate)
		then 'NON_SCHEDULATO'
		else 
			case
				when exists (select *
							from LOG_JOB fine_job
							where fine_job.nm_job = inizio_job.nm_job
							and fine_job.ti_reg_log_job in ('ERRORE')
							and fine_job.dt_reg_log_job >= inizio_job.dt_reg_log_job)
								then 'SCHEDULAZIONE_KO'
								else 'SCHEDULAZIONE_OK'
			end
 end stato_job

from DEC_JOB anag_job
join LOG_JOB inizio_job 
 on (inizio_job.nm_job = anag_job.nm_job)

where ti_sched_job = 'STANDARD'
and inizio_job.ti_reg_log_job = 'INIZIO_SCHEDULAZIONE'
and inizio_job.dt_reg_log_job = (select max(inizio_job_max.dt_reg_log_job)
								from LOG_JOB inizio_job_max
								where inizio_job_max.nm_job = anag_job.nm_job
								and inizio_job_max.ti_reg_log_job = 'INIZIO_SCHEDULAZIONE');

-- changeset root:1751897635013-710
COMMENT ON COLUMN LOG_V_CHK_SCHED_JOB.NM_JOB IS 'PK.1';

-- changeset root:1751897635013-711
CREATE OR REPLACE FORCE VIEW "SER_V_JOB_CONTENUTO_BLOCCATO" ("ID_CONTENUTO_VER_SERIE", "NM_JOB", "FL_JOB_BLOCCATO", "DL_MSG_JOB_BLOCCATO") AS select
 conten.id_contenuto_ver_serie,
 job_sched.nm_job,
 case
	when inizio_job.id_log_job is null
		then 
			case
				when trunc(((sysdate - conten.dt_stato_contenuto_ver_serie) * 86400)) > 300
					then '1'
					else '0'
			end
		else
			case
				when fine_job.ti_reg_log_job is null
					then
						case
							when trunc(((sysdate - inizio_job.dt_reg_log_job) * 86400)) > 7200
								then '1'
								else '0'
						end
					else
						case
							when fine_job.ti_reg_log_job = 'ERRORE'
								then '1'
								else '0'
						end
			end
		
 end fl_job_bloccato,

 case
	when inizio_job.id_log_job is null
		then 
			case
				when trunc(((sysdate - conten.dt_stato_contenuto_ver_serie) * 86400)) > 300
					then 'Il job ' || inizio_job.nm_job || ' non e'' stato avviato e sono trascorsi più di 5 minuti dalla richiesta di avvio'
					else null
			end
		else
			case
				when fine_job.ti_reg_log_job is null
					then
						case
							when trunc(((sysdate - inizio_job.dt_reg_log_job) * 86400)) > 7200
								then 'Il job ' || inizio_job.nm_job || ' e'' in esecuzione da più di 2 ore'
								else null
						end
					else
						case
							when fine_job.ti_reg_log_job = 'ERRORE'
								then 'Il job ' || inizio_job.nm_job || ' e'' terminato con il seguente errore: "' || fine_job.dl_msg_err || '"'
								else null
						end
			end
		
 end dl_msg_job_bloccato

 
from SER_CONTENUTO_VER_SERIE conten
join DEC_JOB job_sched
 on (job_sched.nm_job like '%')
left join LOG_JOB inizio_job
 on (inizio_job.nm_job = job_sched.nm_job
 and inizio_job.nm_entity_record = 'SerContenutoVerSerie'
 and inizio_job.id_record = conten.id_contenuto_ver_serie
 and inizio_job.dt_reg_log_job >= conten.dt_stato_contenuto_ver_serie
 and inizio_job.ti_reg_log_job = 'INIZIO_SCHEDULAZIONE')
 
left join LOG_JOB fine_job
 on (fine_job.nm_job = inizio_job.nm_job
 and fine_job.nm_entity_record = 'SerContenutoVerSerie'
 and fine_job.id_record = conten.id_contenuto_ver_serie
 and fine_job.dt_reg_log_job >= inizio_job.dt_reg_log_job
 and fine_job.ti_reg_log_job in ('FINE_SCHEDULAZIONE', 'ERRORE'));

-- changeset root:1751897635013-712
COMMENT ON COLUMN SER_V_JOB_CONTENUTO_BLOCCATO.ID_CONTENUTO_VER_SERIE IS 'PK.1';

-- changeset root:1751897635013-713
COMMENT ON COLUMN SER_V_JOB_CONTENUTO_BLOCCATO.NM_JOB IS 'PK.2';

-- changeset root:1751897635013-714
CREATE OR REPLACE FORCE VIEW "SER_V_JOB_VER_SERIE_BLOCCATO" ("ID_VER_SERIE", "NM_JOB", "FL_JOB_BLOCCATO", "DL_MSG_JOB_BLOCCATO") AS select
 ver_serie.id_ver_serie,
 job_sched.nm_job,
 case
	when inizio_job.id_log_job is null
		then 
			case
				when trunc(((sysdate - stato_ver.dt_reg_stato_ver_serie) * 86400)) > 300
					then '1'
					else '0'
			end
		else
			case
				when fine_job.ti_reg_log_job is null
					then
						case
							when trunc(((sysdate - inizio_job.dt_reg_log_job) * 86400)) > 7200
								then '1'
								else '0'
						end
					else
						case
							when fine_job.ti_reg_log_job = 'ERRORE'
								then '1'
								else '0'
						end
			end
		
 end fl_job_bloccato,

 case
	when inizio_job.id_log_job is null
		then 
			case
        when trunc(((sysdate - stato_ver.dt_reg_stato_ver_serie) * 86400)) > 300
          then 'Il job ' || inizio_job.nm_job || ' non e'' stato avviato e sono trascorsi più di 5 minuti dalla richiesta di avvio'
          else null
      end
		else
			case
				when fine_job.ti_reg_log_job is null
					then
						case
							when trunc(((sysdate - inizio_job.dt_reg_log_job) * 86400)) > 7200
								then 'Il job ' || inizio_job.nm_job || ' e'' in esecuzione da più di 2 ore'
								else null
						end
					else
						case
							when fine_job.ti_reg_log_job = 'ERRORE'
								then 'Il job ' || inizio_job.nm_job || ' e'' terminato con il seguente errore: "' || fine_job.dl_msg_err || '"'
								else null
						end
			end
		
 end dl_msg_job_bloccato

 
from SER_VER_SERIE ver_serie
join SER_STATO_VER_SERIE stato_ver
 on (stato_ver.id_stato_ver_serie = ver_serie.id_stato_ver_serie_cor)
 
join DEC_JOB job_sched
 on (job_sched.nm_job like '%')
 
left join LOG_JOB inizio_job
 on (inizio_job.nm_job = job_sched.nm_job
 and inizio_job.nm_entity_record = 'SerVerSerie'
 and inizio_job.id_record = ver_serie.id_ver_serie
 and inizio_job.dt_reg_log_job >= stato_ver.dt_reg_stato_ver_serie
 and inizio_job.ti_reg_log_job = 'INIZIO_SCHEDULAZIONE')
 
left join LOG_JOB fine_job
 on (fine_job.nm_job = inizio_job.nm_job
 and fine_job.nm_entity_record = 'SerVerSerie'
 and fine_job.id_record = ver_serie.id_ver_serie
 and fine_job.dt_reg_log_job >= inizio_job.dt_reg_log_job
 and fine_job.ti_reg_log_job in ('FINE_SCHEDULAZIONE', 'ERRORE'))

where inizio_job.dt_reg_log_job = (select max(inizio_max.dt_reg_log_job) 
								   from LOG_JOB inizio_max
								   where inizio_max.nm_job = inizio_job.nm_job 
								   and inizio_max.nm_entity_record = 'SerVerSerie'
								   and inizio_max.id_record = ver_serie.id_ver_serie
								   and inizio_max.ti_reg_log_job = 'INIZIO_SCHEDULAZIONE');

-- changeset root:1751897635013-715
COMMENT ON COLUMN SER_V_JOB_VER_SERIE_BLOCCATO.ID_VER_SERIE IS 'PK.1';

-- changeset root:1751897635013-716
COMMENT ON COLUMN SER_V_JOB_VER_SERIE_BLOCCATO.NM_JOB IS 'PK.2';

-- changeset root:1751897635013-717
CREATE OR REPLACE FORCE VIEW "SER_V_LIS_NOTA_SERIE" ("ID_NOTA_VER_SERIE", "ID_VER_SERIE", "ID_TIPO_NOTA_SERIE", "DS_TIPO_NOTA_SERIE", "CD_TIPO_NOTA_SERIE", "NI_ORD", "PG_NOTA_VER_SERIE", "DT_NOTA_VER_SERIE", "DS_NOTA_VER_SERIE", "ID_USER_IAM", "NM_USERID") AS select
 nota.id_nota_ver_serie, 
 nota.id_ver_serie, 
 ti_nota.id_tipo_nota_serie,
 ti_nota.ds_tipo_nota_serie || 
 case
	when ti_nota.fl_obblig = '1' 
		then ' (' || 'OBBLIGATORIO' || ')'
		else null
 end,
 ti_nota.cd_tipo_nota_serie,
 ti_nota.ni_ord,
 nota.pg_nota_ver_serie,
 nota.dt_nota_ver_serie, 
 nota.ds_nota_ver_serie, 
 nota.id_user_iam,
 usr.nm_userid

from SER_NOTA_VER_SERIE nota
join IAM_USER usr
 on (usr.id_user_iam = nota.id_user_iam)
join DEC_TIPO_NOTA_SERIE ti_nota
 on (ti_nota.id_tipo_nota_serie = nota.id_tipo_nota_serie);

-- changeset root:1751897635013-718
COMMENT ON COLUMN SER_V_LIS_NOTA_SERIE.ID_NOTA_VER_SERIE IS 'PK.1';

-- changeset root:1751897635013-719
CREATE OR REPLACE FORCE VIEW "SER_V_LIS_STATO_SERIE" ("ID_STATO_VER_SERIE", "ID_VER_SERIE", "PG_STATO_VER_SERIE", "TI_STATO_VER_SERIE", "DT_REG_STATO_VER_SERIE", "ID_USER_IAM", "DS_AZIONE", "DS_NOTA_AZIONE", "NM_USERID") AS select
 stato.id_stato_ver_serie, 
 stato.id_ver_serie, 
 stato.pg_stato_ver_serie, 
 stato.ti_stato_ver_serie, 
 stato.dt_reg_stato_ver_serie, 
 stato.id_user_iam, 
 stato.ds_azione, 
 stato.ds_nota_azione,
 usr.nm_userid
 
from SER_STATO_VER_SERIE stato
join IAM_USER usr
 on (usr.id_user_iam = stato.id_user_iam);

-- changeset root:1751897635013-720
COMMENT ON COLUMN SER_V_LIS_STATO_SERIE.ID_STATO_VER_SERIE IS 'PK.1';

-- changeset root:1751897635013-721
CREATE OR REPLACE FORCE VIEW "ARO_V_LIS_NOTA_UNITA_DOC" ("ID_NOTA_UNITA_DOC", "ID_UNITA_DOC", "ID_VER_INDICE_AIP", "ID_TIPO_NOTA_UNITA_DOC", "DS_TIPO_NOTA_UNITA_DOC", "CD_TIPO_NOTA_UNITA_DOC", "NI_ORD", "PG_NOTA_UNITA_DOC", "DT_NOTA_UNITA_DOC", "DS_NOTA_UNITA_DOC", "ID_USER_IAM", "NM_USERID") AS select
 nota.id_nota_unita_doc, 
 nota.id_unita_doc,
 nota.id_ver_indice_aip, 
 ti_nota.id_tipo_nota_unita_doc,
 ti_nota.ds_tipo_nota_unita_doc || 
 case
	when ti_nota.fl_obblig = '1' 
		then ' (' || 'OBBLIGATORIO' || ')'
		else null
 end,
 ti_nota.cd_tipo_nota_unita_doc,
 ti_nota.ni_ord,
 nota.pg_nota_unita_doc,
 nota.dt_nota_unita_doc, 
 nota.ds_nota_unita_doc, 
 nota.id_user_iam,
 usr.nm_userid

from ARO_NOTA_UNITA_DOC nota
join IAM_USER usr
 on (usr.id_user_iam = nota.id_user_iam)
join DEC_TIPO_NOTA_UNITA_DOC ti_nota
 on (ti_nota.id_tipo_nota_unita_doc = nota.id_tipo_nota_unita_doc);

-- changeset root:1751897635013-722
COMMENT ON COLUMN ARO_V_LIS_NOTA_UNITA_DOC.ID_NOTA_UNITA_DOC IS 'PK.1';

-- changeset root:1751897635013-723
CREATE OR REPLACE FORCE VIEW "ARO_V_VIS_UPD_UNITA_DOC" ("ID_UPD_UNITA_DOC", "NM_AMBIENTE", "NM_ENTE", "NM_STRUT", "ID_STRUT", "ID_UNITA_DOC", "CD_REGISTRO_KEY_UNITA_DOC", "ID_REGISTRO_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "ID_TIPO_UNITA_DOC", "NM_TIPO_UNITA_DOC", "ID_TIPO_DOC_PRINC", "NM_TIPO_DOC_PRINC", "PG_UPD_UNITA_DOC", "DS_URN_UPD_UNITA_DOC", "FL_UPD_PROFILO_ARCHIV", "FL_UPD_FASCICOLO_PRINC", "FL_UPD_FASCICOLI_SEC", "FL_UPD_PROFILO_UNITA_DOC", "FL_UPD_LINK_UNITA_DOC", "FL_UPD_DATI_SPEC", "FL_UPD_DATI_SPEC_MIGRAZ", "FL_UPD_PROFILO_NORMATIVO", "CD_VERSIONE_XML", "NM_USERID", "TS_INI_SES", "FL_FORZA_UPD", "NT_UPD", "TIPO_UPD_UNITA_DOC", "TI_STATO_UPD_ELENCO_VERS", "ID_ELENCO_VERS", "TI_STATO_CONSERVAZIONE", "BL_XML_RICH", "DS_HASH_XML_RICH", "DS_ALGO_HASH_XML_RICH", "CD_ENCODING_HASH_XML_RICH", "DS_URN_XML_RICH", "DS_URN_NORMALIZ_XML_RICH", "BL_XML_RISP", "DS_HASH_XML_RISP", "DS_ALGO_HASH_XML_RISP", "CD_ENCODING_HASH_XML_RISP", "DS_URN_XML_RISP", "DS_URN_NORMALIZ_XML_RISP") AS SELECT upd_ud.id_upd_unita_doc,
           amb.nm_ambiente,
           ente.nm_ente,
           strut.nm_strut,
           upd_ud.id_strut,
           upd_ud.id_unita_doc,
           ud.cd_registro_key_unita_doc,
           upd_ud.id_registro_unita_doc,
           ud.aa_key_unita_doc,
           ud.cd_key_unita_doc,
           upd_ud.id_tipo_unita_doc,
           tipo_ud.nm_tipo_unita_doc,
           upd_ud.id_tipo_doc_princ,
           tipo_doc_princ.nm_tipo_doc
               nm_tipo_doc_princ,
           upd_ud.pg_upd_unita_doc,
              'urn:'
           || (SELECT ds_valore_param_applic
                 FROM APL_V_GETVAL_PARAM_BY_APL
                WHERE nm_param_applic = 'SISTEMA_CONSERVAZIONE')
           || ':'
           || ente.nm_ente
           || ':'
           || strut.nm_strut
           || ':'
           || ud.cd_registro_key_unita_doc
           || '-'
           || ud.aa_key_unita_doc
           || '-'
           || ud.cd_key_unita_doc
           || ':'
           || 'AGG_MD'
           || LPAD (upd_ud.pg_upd_unita_doc, 5, '0')
               ds_urn_upd_unita_doc,
           upd_ud.fl_upd_profilo_archiv,
           upd_ud.fl_upd_fascicolo_princ,
           upd_ud.fl_upd_fascicoli_sec,
           upd_ud.fl_upd_profilo_unita_doc,
           upd_ud.fl_upd_link_unita_doc,
           upd_ud.fl_upd_dati_spec,
           upd_ud.fl_upd_dati_spec_migraz,
           upd_ud.FL_UPD_PROFILO_NORMATIVO,
           xml_rich.cd_versione_xml,
           usr.nm_userid,
           upd_ud.ts_ini_ses,
           upd_ud.fl_forza_upd,
           upd_ud.nt_upd,
           upd_ud.tipo_upd_unita_doc,
           upd_ud.ti_stato_upd_elenco_vers,
           upd_ud.id_elenco_vers,
           ud.ti_stato_conservazione,
           xml_rich.bl_xml
               bl_xml_rich,
           xml_rich.ds_hash_xml
               ds_hash_xml_rich,
           xml_rich.ds_algo_hash_xml
               ds_algo_hash_xml_rich,
           xml_rich.cd_encoding_hash_xml
               cd_encoding_hash_xml_rich,
           xml_rich.ds_urn_xml
               ds_urn_xml_rich,
           xml_rich.ds_urn_normaliz_xml
               ds_urn_normaliz_xml_rich,
           xml_risp.bl_xml
               bl_xml_risp,
           xml_risp.ds_hash_xml
               ds_hash_xml_risp,
           xml_risp.ds_algo_hash_xml
               ds_algo_hash_xml_risp,
           xml_risp.cd_encoding_hash_xml
               cd_encoding_hash_xml_risp,
           xml_risp.ds_urn_xml
               ds_urn_xml_risp,
           xml_risp.ds_urn_normaliz_xml
               ds_urn_normaliz_xml_risp
      FROM ARO_UPD_UNITA_DOC  upd_ud
           JOIN ORG_STRUT strut ON (strut.id_strut = upd_ud.id_strut)
           JOIN ORG_ENTE ente ON (ente.id_ente = strut.id_ente)
           JOIN ORG_AMBIENTE amb ON (amb.id_ambiente = ente.id_ambiente)
           JOIN ARO_UNITA_DOC ud ON (ud.id_unita_doc = upd_ud.id_unita_doc)
           JOIN DEC_TIPO_UNITA_DOC tipo_ud
               ON (tipo_ud.id_tipo_unita_doc = upd_ud.id_tipo_unita_doc)
           JOIN DEC_TIPO_DOC tipo_doc_princ
               ON (tipo_doc_princ.id_tipo_doc = upd_ud.id_tipo_doc_princ)
           JOIN IAM_USER usr ON (usr.id_user_iam = upd_ud.id_user_iam_vers)
           JOIN ARO_XML_UPD_UNITA_DOC xml_rich
               ON (xml_rich.id_upd_unita_doc = upd_ud.id_upd_unita_doc
               AND xml_rich.ti_xml_upd_unita_doc = 'RICHIESTA')
           JOIN ARO_XML_UPD_UNITA_DOC xml_risp
               ON (xml_risp.id_upd_unita_doc = upd_ud.id_upd_unita_doc
               AND xml_risp.ti_xml_upd_unita_doc = 'RISPOSTA');

-- changeset root:1751897635013-724
COMMENT ON COLUMN ARO_V_VIS_UPD_UNITA_DOC.ID_UPD_UNITA_DOC IS 'PK.1';

-- changeset root:1751897635013-725
CREATE OR REPLACE FORCE VIEW "ELV_V_CREA_IX_ELENCO_FASC" ("NM_AMBIENTE", "NM_ENTE", "NM_STRUT", "LIS_NM_USERID", "DS_URN_ELENCO", "DS_URN_INDICE_ELENCO", "DS_URN_INDICE_ELENCO_NORMALIZ", "ID_ELENCO_VERS_FASC", "TS_CHIUSURA_ELENCO", "TS_VERS_INI", "TS_VERS_FIN", "NM_CRITERIO_RAGGR", "DS_CRITERIO_RAGGR", "DL_MOTIVO_CHIUS", "NT_INDICE_ELENCO", "NI_FASC_VERS_ELENCO", "LIS_NM_TIPO_FASCICOLO") AS SELECT --  tag EnteProduttore

           amb.nm_ambiente,
           ente.nm_ente,
           strut.nm_strut,
           (SELECT LISTAGG (DISTINCT usr.nm_userid, '; ')
                       WITHIN GROUP (ORDER BY usr.nm_userid)
              FROM FAS_FASCICOLO  fasc
                   JOIN IAM_USER usr
                       ON (usr.id_user_iam = fasc.id_user_iam_vers)
             WHERE fasc.id_elenco_vers_fasc = ele.id_elenco_vers_fasc)
               lis_nm_userid,
           --  tag DescrizioneElencoVersamento

           ele.ds_urn_elenco,
              'urn:'
           || (SELECT ds_valore_param_applic
                 FROM APL_V_GETVAL_PARAM_BY_APL
                WHERE nm_param_applic = 'SISTEMA_CONSERVAZIONE')
           || ':'
           || (SELECT ente.nm_ente || ':' || strut.nm_strut
                 FROM ORG_STRUT  strut
                      JOIN ORG_ENTE ente ON (ente.id_ente = strut.id_ente)
                WHERE strut.id_strut = ele.id_strut)
           || ':'
           || 'ElencoVers-FA-'
           || TO_CHAR (ele.ts_creazione_elenco, 'yyyymmdd')
           || '-'
           || TO_CHAR (ele.id_elenco_vers_fasc)
           || ':'
           || 'Indice'
               ds_urn_indice_elenco,
              'urn:'
           || (SELECT ds_valore_param_applic
                 FROM APL_V_GETVAL_PARAM_BY_APL
                WHERE nm_param_applic = 'SISTEMA_CONSERVAZIONE')
           || ':'
           || (SELECT ente.cd_ente_normaliz || ':' || strut.cd_strut_normaliz
                 FROM ORG_STRUT  strut
                      JOIN ORG_ENTE ente ON (ente.id_ente = strut.id_ente)
                WHERE strut.id_strut = ele.id_strut)
           || ':'
           || 'ElencoVers-FA-'
           || TO_CHAR (ele.ts_creazione_elenco, 'yyyymmdd')
           || '-'
           || TO_CHAR (ele.id_elenco_vers_fasc)
           || ':'
           || 'Indice'
               ds_urn_indice_elenco_normaliz,
           ele.id_elenco_vers_fasc,
           CAST (SYSTIMESTAMP AS TIMESTAMP (6))
               ts_chiusura_elenco,
           (SELECT MIN (fasc.ts_ini_ses)
              FROM FAS_FASCICOLO fasc
             WHERE fasc.id_elenco_vers_fasc = ele.id_elenco_vers_fasc)
               ts_vers_ini,
           (SELECT MAX (fasc.ts_ini_ses)
              FROM FAS_FASCICOLO fasc
             WHERE fasc.id_elenco_vers_fasc = ele.id_elenco_vers_fasc)
               ts_vers_fin,
           crit.nm_criterio_raggr,
           crit.ds_criterio_raggr,
           ele.dl_motivo_chius,
           ele.nt_indice_elenco,
           --  tag ContenutoSinteticoElenco

           ele.ni_fasc_vers_elenco,
           (SELECT LISTAGG (DISTINCT ti_fasc.nm_tipo_fascicolo, '; ')
                       WITHIN GROUP (ORDER BY ti_fasc.nm_tipo_fascicolo)
             FROM FAS_FASCICOLO  fasc
                  JOIN DEC_TIPO_FASCICOLO ti_fasc
                      ON (ti_fasc.id_tipo_fascicolo = fasc.id_tipo_fascicolo)
            WHERE fasc.id_elenco_vers_fasc = ele.id_elenco_vers_fasc)
               lis_nm_tipo_fascicolo
      FROM ELV_ELENCO_VERS_FASC  ele
           JOIN ORG_STRUT strut ON (strut.id_strut = ele.id_strut)
           JOIN ORG_ENTE ente ON (ente.id_ente = strut.id_ente)
           JOIN ORG_AMBIENTE amb ON (amb.id_ambiente = ente.id_ambiente)
           JOIN DEC_CRITERIO_RAGGR_FASC crit
               ON (crit.id_criterio_raggr_fasc = ele.id_criterio_raggr_fasc);

-- changeset root:1751897635013-726
COMMENT ON COLUMN ELV_V_CREA_IX_ELENCO_FASC.ID_ELENCO_VERS_FASC IS 'PK.1';

-- changeset root:1751897635013-727
CREATE OR REPLACE FORCE VIEW "MON_V_VIS_SES_ERR_IAM" ("NM_AMBIENTE", "NM_ENTE", "NM_STRUT", "NM_USERID_WS", "NM_USERID", "NM_COGNOME_USER", "NM_NOME_USER", "ID_SESSIONE_VERS", "DT_APERTURA", "DT_CHIUSURA", "TI_SESSIONE_VERS", "CD_VERSIONE_WS", "CD_REGISTRO_KEY_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "CD_KEY_DOC_VERS", "FL_SESSIONE_ERR_VERIF", "CD_ERR", "DS_ERR", "BL_XML_RICH", "BL_XML_INDEX", "BL_XML_RISP") AS SELECT -- info di organizzazione
           ses.nm_ambiente,
           ses.nm_ente,
           ses.nm_strut,
           -- info user
           ses.nm_userid_ws,
           ses.nm_userid,
           usr.nm_cognome_user,
           usr.nm_nome_user,
           -- info sessione
           ses.id_sessione_vers_ko,
           ses.dt_apertura,
           ses.dt_chiusura,
           ses.ti_sessione_vers,
           ses.cd_versione_ws,
           ses.cd_registro_key_unita_doc,
           ses.aa_key_unita_doc,
           ses.cd_key_unita_doc,
           ses.cd_key_doc_vers,
           ses.fl_sessione_err_verif,
           -- info errore

           ses.cd_err_princ,
           ses.ds_err_princ,
           -- info xml
           xml_rich.bl_xml       bl_xml_rich,
           xml_indice.bl_xml     bl_xml_index,
           xml_risp.bl_xml       bl_xml_risp
      FROM VRS_SESSIONE_VERS_ko  ses
           LEFT JOIN IAM_USER usr ON (usr.id_user_iam = ses.id_user)
           JOIN VRS_DATI_SESSIONE_VERS_ko dati_ses
               ON (dati_ses.id_sessione_vers_ko = ses.id_sessione_vers_ko)
           JOIN VRS_XML_DATI_SESSIONE_VERS_ko xml_rich
               ON (xml_rich.id_dati_sessione_vers_ko =
                   dati_ses.id_dati_sessione_vers_ko
               AND xml_rich.ti_xml_dati = 'RICHIESTA')
           LEFT JOIN VRS_XML_DATI_SESSIONE_VERS_ko xml_indice
               ON (xml_indice.id_dati_sessione_vers_ko =
                   dati_ses.id_dati_sessione_vers_ko
               AND xml_indice.ti_xml_dati = 'INDICE_FILE')
           JOIN VRS_XML_DATI_SESSIONE_VERS_ko xml_risp
               ON (xml_risp.id_dati_sessione_vers_ko =
                   dati_ses.id_dati_sessione_vers_ko
               AND xml_risp.ti_xml_dati = 'RISPOSTA');

-- changeset root:1751897635013-728
COMMENT ON COLUMN MON_V_VIS_SES_ERR_IAM.ID_SESSIONE_VERS IS 'PK.1 relativa a tabella VRS_SESSIONE_VERS';

-- changeset root:1751897635013-729
CREATE OR REPLACE FORCE VIEW "ARO_V_LIS_UPD_KO_RISOLTI" ("ID_SES_UPD_UNITA_DOC_KO", "ID_UPD_UNITA_DOC", "TS_INI_SES", "ID_ERR_SACER_PRINC", "CD_ERR_PRINC", "DS_ERR_PRINC", "ID_TIPO_UNITA_DOC", "NM_TIPO_UNITA_DOC", "ID_REGISTRO_UNITA_DOC", "CD_REGISTRO_UNITA_DOC", "ID_TIPO_DOC_PRINC", "NM_TIPO_DOC_PRINC", "CD_VERSIONE_WS", "ID_USER_IAM", "NM_USERID", "ID_CONTROLLO_WS_PRINC", "CD_CONTROLLO_WS") AS select
ses_ko.id_ses_upd_unita_doc_ko,
ses_ko.id_upd_unita_doc,
ses_ko.ts_ini_ses,
ses_ko.id_err_sacer_princ, err_princ.cd_err cd_err_princ,
ses_ko.ds_err_princ,

ses_ko.id_tipo_unita_doc, ti_ud.nm_tipo_unita_doc,
ses_ko.id_registro_unita_doc, reg.cd_registro_unita_doc,
ses_ko.id_tipo_doc_princ, ti_doc_princ.nm_tipo_doc nm_tipo_doc_princ,
ses_ko.cd_versione_ws,
ses_ko.id_user_iam, usr.nm_userid,
ses_ko.id_controllo_ws_princ, contr.cd_controllo_ws


from VRS_SES_UPD_UNITA_DOC_KO ses_ko
join DEC_ERR_SACER err_princ
	on (err_princ.id_err_sacer = ses_ko.id_err_sacer_princ)
join DEC_TIPO_UNITA_DOC ti_ud
	on (ti_ud.id_tipo_unita_doc = ses_ko.id_tipo_unita_doc)
join DEC_REGISTRO_UNITA_DOC reg
	on (reg.id_registro_unita_doc = ses_ko.id_registro_unita_doc)
join DEC_TIPO_DOC ti_doc_princ
	on (ti_doc_princ.id_tipo_doc = ses_ko.id_tipo_doc_princ)
left join IAM_USER usr
	on (usr.id_user_iam = ses_ko.id_user_iam)
join DEC_CONTROLLO_WS contr
	on (contr.id_controllo_ws = ses_ko.id_controllo_ws_princ);

-- changeset root:1751897635013-730
COMMENT ON COLUMN ARO_V_LIS_UPD_KO_RISOLTI.ID_SES_UPD_UNITA_DOC_KO IS 'PK.1';

-- changeset root:1751897635013-731
CREATE OR REPLACE FORCE VIEW "DEC_V_TISER_CHK_UD_NOVERS_BUCO" ("ID_TIPO_SERIE", "ID_REGISTRO_UNITA_DOC", "ID_TIPO_UNITA_DOC", "FL_DEF_UD_NON_VERS") AS select 
 ti_serie.id_tipo_serie,
 ti_serie_ud.id_registro_unita_doc,
 ti_serie_ud.id_tipo_unita_doc,
 case
	when exists (select * 
				 from DEC_OUT_SEL_UD out_ud
				 where out_ud.id_tipo_serie_ud = ti_serie_ud.id_tipo_serie_ud
				 and out_ud.ti_out = 'PG_UD_SERIE')
			then
				case
					when not exists (select *
									 from DEC_OUT_SEL_UD out_ud, DEC_CAMPO_OUT_SEL_UD campo
									 where out_ud.id_tipo_serie_ud = ti_serie_ud.id_tipo_serie_ud
									 and out_ud.ti_out = 'PG_UD_SERIE'
									 and campo.id_out_sel_ud = out_ud.id_out_sel_ud
 									 and campo.ti_campo != 'DATO_PROFILO'
									 and campo.nm_campo != 'NUMERO'
									)
						and exists (select *
									 from DEC_OUT_SEL_UD out_ud, DEC_CAMPO_OUT_SEL_UD campo
									 where out_ud.id_tipo_serie_ud = ti_serie_ud.id_tipo_serie_ud
									 and out_ud.ti_out = 'PG_UD_SERIE'
									 and campo.id_out_sel_ud = out_ud.id_out_sel_ud
									 and campo.ti_campo = 'DATO_PROFILO'
 									 and campo.nm_campo = 'NUMERO'
									)
						and exists (select *
									from DEC_REGISTRO_UNITA_DOC reg
									where reg.id_registro_unita_doc = ti_serie_ud.id_registro_unita_doc
									and not exists (select *
													from DEC_AA_REGISTRO_UNITA_DOC aa_reg
													where aa_reg.id_registro_unita_doc = reg.id_registro_unita_doc
													and (select count(*)
														 from DEC_PARTE_NUMERO_REGISTRO parte
														 where parte.id_aa_registro_unita_doc = aa_reg.id_aa_registro_unita_doc) > 1
													)
									and exists (select *
												from DEC_AA_REGISTRO_UNITA_DOC aa_reg, DEC_PARTE_NUMERO_REGISTRO parte
												where aa_reg.id_registro_unita_doc = reg.id_registro_unita_doc
												and parte.id_aa_registro_unita_doc = aa_reg.id_aa_registro_unita_doc
												and parte.ti_parte = 'PROGR')
									)
							then '1'
							else '0'
				end
			else '0'
 end fl_def_ud_non_vers

from DEC_TIPO_SERIE ti_serie

join DEC_TIPO_SERIE_UD ti_serie_ud
 on (ti_serie_ud.id_tipo_serie = ti_serie.id_tipo_serie);

-- changeset root:1751897635013-732
CREATE OR REPLACE FORCE VIEW "ARO_V_LIS_DATI_SPEC" ("ID_UNITA_DOC", "ID_DOC", "ID_COMP_DOC", "TI_USO_XSD", "TI_ENTITA_SACER", "ID_USO_XSD_DATI_SPEC", "CD_VERSIONE_XSD", "NM_SISTEMA_MIGRAZ", "ID_VALORE_ATTRIB_DATI_SPEC", "NM_ATTRIB_DATI_SPEC", "DS_ATTRIB_DATI_SPEC", "DL_VALORE", "NI_ORD_ATTRIB", "DT_ISTITUZ", "DT_SOPPRES", "DS_VERSIONE_XSD") AS select
-- info uso xsd
 uso_xsd.id_unita_doc,
 uso_xsd.id_doc,
 uso_xsd.id_comp_doc,
 uso_xsd.ti_uso_xsd,
 uso_xsd.ti_entita_sacer,
 uso_xsd.id_uso_xsd_dati_spec,

-- info xsd
 xsd_spec.cd_versione_xsd,
 xsd_spec.nm_sistema_migraz,
 
-- info valore dato specifico
 val.id_valore_attrib_dati_spec,
 attrib.nm_attrib_dati_spec, attrib.ds_attrib_dati_spec,
 val.dl_valore,
 xsd_att.ni_ord_attrib,
 
 xsd_spec.dt_istituz, xsd_spec.dt_soppres, xsd_spec.ds_versione_xsd

 
from ARO_USO_XSD_DATI_SPEC uso_xsd

join DEC_XSD_DATI_SPEC xsd_spec
 on (xsd_spec.id_xsd_dati_spec = uso_xsd.id_xsd_dati_spec)

join ARO_VALORE_ATTRIB_DATI_SPEC val
 on (val.id_uso_xsd_dati_spec = uso_xsd.id_uso_xsd_dati_spec)

join DEC_ATTRIB_DATI_SPEC attrib
 on (attrib.id_attrib_dati_spec = val.id_attrib_dati_spec)
 
join DEC_XSD_ATTRIB_DATI_SPEC xsd_att
on (xsd_att.id_xsd_dati_spec = xsd_spec.id_xsd_dati_spec
and xsd_att.id_attrib_dati_spec = attrib.id_attrib_dati_spec);

-- changeset root:1751897635013-733
COMMENT ON COLUMN ARO_V_LIS_DATI_SPEC.ID_VALORE_ATTRIB_DATI_SPEC IS 'PK.1 relativa a tabella DEC_ATTRIB_DATI_SPEC';

-- changeset root:1751897635013-734
CREATE OR REPLACE FORCE VIEW "ORG_V_TREE_CATEG_TIPO_UD" ("ID_CATEG_TIPO_UNITA_DOC", "CD_CATEG_TIPO_UNITA_DOC", "DL_PATH_CATEG_TIPO_UNITA_DOC") AS select
 id_categ_tipo_unita_doc,
 cd_categ_tipo_unita_doc,
 ltrim(sys_connect_by_path (cd_categ_tipo_unita_doc, ' / '), ' / ')
from DEC_CATEG_TIPO_UNITA_DOC categ

start with categ.id_categ_tipo_unita_doc_padre is null
connect by prior categ.id_categ_tipo_unita_doc = categ.id_categ_tipo_unita_doc_padre;

-- changeset root:1751897635013-735
CREATE OR REPLACE FORCE VIEW "DEC_V_TREE_CATEG_TIPO_UD" ("ID_CATEG_TIPO_UNITA_DOC", "CD_CATEG_TIPO_UNITA_DOC", "DL_PATH_CATEG_TIPO_UNITA_DOC", "DL_ID_CATEG_TIPO_UNITA_DOC") AS select
 id_categ_tipo_unita_doc,
 cd_categ_tipo_unita_doc,
 ltrim(sys_connect_by_path (cd_categ_tipo_unita_doc, ' / '), ' / '),
 sys_connect_by_path (id_categ_tipo_unita_doc, '/')
from DEC_CATEG_TIPO_UNITA_DOC categ

start with categ.id_categ_tipo_unita_doc_padre is null
connect by prior categ.id_categ_tipo_unita_doc = categ.id_categ_tipo_unita_doc_padre;

-- changeset root:1751897635013-736
CREATE OR REPLACE FORCE VIEW "DEC_V_CHK_CRITERI_BY_TIPO_UD" ("ID_TIPO_UNITA_DOC", "NM_TIPO_UNITA_DOC", "ID_CRITERIO_RAGGR", "NM_CRITERIO_RAGGR", "FL_CRITERIO_RAGGR_STANDARD", "FL_CRITERIO_RAGGR_FISC", "FL_CRITERIO_COERENTE", "DS_CRITERIO_NON_COERENTE") AS select
 tmp.id_tipo_unita_doc,
 tmp.nm_tipo_unita_doc,
 
 tmp.id_criterio_raggr,
 tmp.nm_criterio_raggr,
 tmp.fl_criterio_raggr_standard,
 tmp.fl_criterio_raggr_fisc,
 tmp.fl_criterio_coerente,
 tmp.nm_criterio_raggr || ' ' ||
 case
	when tmp.fl_criterio_raggr_standard = '1'
		then '(standard '
		else '(non standard '
 end ||
 case
	when tmp.fl_criterio_raggr_fisc = '1'
		then 'e fiscale)'
		else 'e non fiscale)'
 end ds_criterio_non_coerente

from (
		select
		 tipo_ud.id_tipo_unita_doc,
		 tipo_ud.nm_tipo_unita_doc,
		 
		 crit.id_criterio_raggr,
		 crit.nm_criterio_raggr,
		 crit.fl_criterio_raggr_standard,
		 crit.fl_criterio_raggr_fisc,
		 case
			when exists (select *
						 from dec_tipo_unita_doc_ammesso ti_ud_amm
						 where ti_ud_amm.id_tipo_unita_doc = tipo_ud.id_tipo_unita_doc
						 )
				then
					case
						when exists (select *
									 from dec_tipo_unita_doc_ammesso ti_ud_amm
									 join dec_registro_unita_doc reg
										on (reg.id_registro_unita_doc = ti_ud_amm.id_registro_unita_doc)
									 where ti_ud_amm.id_tipo_unita_doc = tipo_ud.id_tipo_unita_doc
									 and reg.fl_registro_fisc = '0'
									 )
						and  exists (select *
									 from dec_tipo_unita_doc_ammesso ti_ud_amm
									 join dec_registro_unita_doc reg
										on (reg.id_registro_unita_doc = ti_ud_amm.id_registro_unita_doc)
									 where ti_ud_amm.id_tipo_unita_doc = tipo_ud.id_tipo_unita_doc
									 and reg.fl_registro_fisc = '1'
									 )
							then '0'																			-- tipo ud associato a reg fiscali e non fiscali
						
						when not exists (select *
										 from dec_tipo_unita_doc_ammesso ti_ud_amm
										 join dec_registro_unita_doc reg
											on (reg.id_registro_unita_doc = ti_ud_amm.id_registro_unita_doc)
										 where ti_ud_amm.id_tipo_unita_doc = tipo_ud.id_tipo_unita_doc
										 and reg.fl_registro_fisc = '0'
										 )
							then																				-- tipo ud associato solo a reg fiscali
								case
									when crit.fl_criterio_raggr_standard = '1'
									and crit.fl_criterio_raggr_fisc = '1'
										then '1'																
										else '0'
								end
						
						when not exists (select *
										 from dec_tipo_unita_doc_ammesso ti_ud_amm
										 join dec_registro_unita_doc reg
											on (reg.id_registro_unita_doc = ti_ud_amm.id_registro_unita_doc)
										 where ti_ud_amm.id_tipo_unita_doc = tipo_ud.id_tipo_unita_doc
										 and reg.fl_registro_fisc = '1'
										 )
							then																				-- tipo ud associato solo a reg non fiscali
								case
									when crit.fl_criterio_raggr_standard in ('0', '1')
									and crit.fl_criterio_raggr_fisc = '0'
										then '1'
										else '0'
								end
					end
				else																							-- tipo ud senza reg associati
					case
						when crit.fl_criterio_raggr_standard in ('0', '1') 
						and crit.fl_criterio_raggr_fisc = '0'
							then '1'
							else '0'
					end
		 end fl_criterio_coerente
		from DEC_TIPO_UNITA_DOC tipo_ud
		join DEC_CRITERIO_FILTRO_MULTIPLO filtro
		 on (filtro.id_tipo_unita_doc = tipo_ud.id_tipo_unita_doc)
		join DEC_CRITERIO_RAGGR crit 
		 on (crit.id_criterio_raggr = filtro.id_criterio_raggr)

		where crit.dt_istituz <= trunc (sysdate)
		and crit.dt_soppres > trunc (sysdate)
	) tmp
	
where tmp.fl_criterio_coerente = '0';

-- changeset root:1751897635013-737
COMMENT ON COLUMN DEC_V_CHK_CRITERI_BY_TIPO_UD.ID_TIPO_UNITA_DOC IS 'PK.1';

-- changeset root:1751897635013-738
COMMENT ON COLUMN DEC_V_CHK_CRITERI_BY_TIPO_UD.ID_CRITERIO_RAGGR IS 'PK.2';

-- changeset root:1751897635013-739
CREATE OR REPLACE FORCE VIEW "DEC_V_CALC_CRITERIO_FISC" ("ID_CRITERIO_RAGGR", "NM_CRITERIO_RAGGR", "DS_MESSAGGIO") AS select
 crit.id_criterio_raggr,
 crit.nm_criterio_raggr,
-- crit.fl_criterio_raggr_fisc,
 
 case
	when crit.fl_criterio_raggr_standard = '1'
		then
			case
				when (select filtro.ti_filtro_multiplo
					  from DEC_CRITERIO_FILTRO_MULTIPLO filtro
					  where filtro.id_criterio_raggr = crit.id_criterio_raggr
					) = 'TIPO_UNI_DOC'																						-- criterio standard su tipo ud
						then
							case
								when exists (select *
											 from dec_tipo_unita_doc_ammesso ti_ud_amm
											 where ti_ud_amm.id_tipo_unita_doc = (select filtro_tipo_ud.id_tipo_unita_doc
																				  from DEC_CRITERIO_FILTRO_MULTIPLO filtro_tipo_ud
																				  where filtro_tipo_ud.id_criterio_raggr = crit.id_criterio_raggr
																				  )
											 )
									then 
										case
											when not exists (select *
															 from dec_tipo_unita_doc_ammesso ti_ud_amm
															 join dec_registro_unita_doc reg
															  on (reg.id_registro_unita_doc = ti_ud_amm.id_registro_unita_doc)
															 
															 where ti_ud_amm.id_tipo_unita_doc = (select filtro_tipo_ud.id_tipo_unita_doc
																								  from DEC_CRITERIO_FILTRO_MULTIPLO filtro_tipo_ud
																								  where filtro_tipo_ud.id_criterio_raggr = crit.id_criterio_raggr
																								  )
															 and reg.fl_registro_fisc = '0'
															 )
												then 'Criterio fiscale'														-- tipo ud con reg associati solo fiscali
											when not exists (select *
															 from dec_tipo_unita_doc_ammesso ti_ud_amm
															 join dec_registro_unita_doc reg
															  on (reg.id_registro_unita_doc = ti_ud_amm.id_registro_unita_doc)
															 
															 where ti_ud_amm.id_tipo_unita_doc = (select filtro_tipo_ud.id_tipo_unita_doc
																								  from DEC_CRITERIO_FILTRO_MULTIPLO filtro_tipo_ud
																								  where filtro_tipo_ud.id_criterio_raggr = crit.id_criterio_raggr
																								  )
															 and reg.fl_registro_fisc = '1'
															 )
												then 'Criterio non fiscale'													-- tipo ud con reg associati solo non fiscali
												else 'Criterio non ammesso'													-- tipo ud con reg associati fiscali e non
										end
									else 'Criterio non fiscale'																-- tipo ud senza reg associati
							end
				
				when (select filtro.ti_filtro_multiplo
					  from DEC_CRITERIO_FILTRO_MULTIPLO filtro
					  where filtro.id_criterio_raggr = crit.id_criterio_raggr
					) = 'REGISTRO_UNI_DOC'																						-- criterio standard su reg
						then
							case
								when (select fl_registro_fisc
									  from dec_registro_unita_doc reg
									  where reg.id_registro_unita_doc = (select filtro_reg.id_registro_unita_doc
																	     from DEC_CRITERIO_FILTRO_MULTIPLO filtro_reg
																	     where filtro_reg.id_criterio_raggr = crit.id_criterio_raggr
																	    )
									  ) = '1'
									then 'Criterio fiscale'
									else 'Criterio non fiscale'
							end
						else 'Criterio non fiscale'																			-- criterio standard su tipo doc
			end
		else 'Criterio non fiscale'																							-- criterio non standard
 end ds_messaggio
 
from DEC_CRITERIO_RAGGR crit;

-- changeset root:1751897635013-740
COMMENT ON COLUMN DEC_V_CALC_CRITERIO_FISC.ID_CRITERIO_RAGGR IS 'PK.1';

-- changeset root:1751897635013-741
CREATE OR REPLACE FORCE VIEW "ARO_V_TMP_BUSTA_FIRMA_MARCA" ("ID_BUSTA_CRITTOG", "ID_FORMATO_FILE_STANDARD", "NM_FORMATO_FILE_STANDARD") AS select
 busta.id_busta_crittog,
 fmt_busta.id_formato_file_standard,
 fmt_file.nm_formato_file_standard
from ARO_BUSTA_CRITTOG busta
join ARO_MARCA_COMP marca
 on (marca.id_busta_crittog = busta.id_busta_crittog)
join ARO_FIRMA_COMP firma
 on (firma.id_busta_crittog = busta.id_busta_crittog)
join DEC_FORMATO_FILE_BUSTA fmt_busta
 on (fmt_busta.ti_formato_firma_marca = firma.ti_formato_firma)
join DEC_FORMATO_FILE_STANDARD fmt_file
 on (fmt_file.id_formato_file_standard = fmt_busta.id_formato_file_standard)
UNION
select
 busta.id_busta_crittog,
 fmt_busta.id_formato_file_standard,
 fmt_file.nm_formato_file_standard
from ARO_BUSTA_CRITTOG busta
join ARO_MARCA_COMP marca
 on (marca.id_busta_crittog = busta.id_busta_crittog)
join ARO_FIRMA_COMP firma
 on (firma.id_busta_crittog = busta.id_busta_crittog)
join DEC_FORMATO_FILE_BUSTA fmt_busta
 on (fmt_busta.ti_formato_firma_marca = marca.ti_formato_marca)
join DEC_FORMATO_FILE_STANDARD fmt_file
 on (fmt_file.id_formato_file_standard = fmt_busta.id_formato_file_standard);

-- changeset root:1751897635013-742
CREATE OR REPLACE FORCE VIEW "ARO_V_VIS_COMP_AIP" ("ID_COMP_DOC", "NI_ORD_COMP_DOC", "NM_TIPO_COMP_DOC", "TI_SUPPORTO_COMP", "DS_NOME_COMP_VERS", "DS_HASH_FILE_VERS", "DL_URN_COMP_VERS", "DS_ID_COMP_VERS", "NM_FORMATO_VERS", "NM_TIPO_RAPPR_COMP", "TM_RIF_TEMP_VERS", "DS_RIF_TEMP_VERS", "FL_RIF_TEMP_DATA_FIRMA_VERS", "FL_NO_CALC_FMT_VERIF_FIRME", "FL_NO_CALC_HASH_FILE", "DS_URN_COMP_CALC", "NM_FORMATO_CALC", "NI_SIZE_FILE_CALC", "DS_HASH_FILE_CALC", "DS_ALGO_HASH_FILE_CALC", "CD_ENCODING_HASH_FILE_CALC", "TI_ESITO_CONTR_FORMATO_FILE", "DS_MSG_ESITO_CONTR_FORMATO", "DS_FORMATO_RAPPR_CALC", "DS_FORMATO_RAPPR_ESTESO_CALC", "DS_FORMATO_RAPPR_FILE_DOC", "FL_COMP_FIRMATO", "TI_ESITO_VERIF_FIRME", "DS_MSG_ESITO_VERIF_FIRME", "NM_MIMETYPE_FILE", "TI_ESITO_VERIF_FIRME_DT_VERS", "DS_ESITO_VERIF_FIRME_DT_VERS") AS select
 
-- info componente versate
 comp_doc.id_comp_doc,
 comp_doc.ni_ord_comp_doc,
 tipo_comp.nm_tipo_comp_doc, 
 comp_doc.ti_supporto_comp, 
 comp_doc.ds_nome_comp_vers, comp_doc.ds_hash_file_vers, comp_doc.dl_urn_comp_vers, comp_doc.ds_id_comp_vers,
 fmt_file_vers.nm_formato_file_doc nm_formato_vers, 
 tipo_rappr.nm_tipo_rappr_comp, 
 comp_doc.tm_rif_temp_vers, comp_doc.ds_rif_temp_vers, comp_doc.fl_rif_temp_data_firma_vers, 

-- info componente calcolate 
 comp_doc.fl_no_calc_fmt_verif_firme, comp_doc.fl_no_calc_hash_file,
 case
	when exists (select *
				 from ARO_COMP_URN_CALC urn
				 where urn.id_comp_doc = comp_doc.id_comp_doc
				 )
		then (select ds_urn
			 from ARO_COMP_URN_CALC urn
			 where urn.id_comp_doc = comp_doc.id_comp_doc
			 and ti_urn = 'ORIGINALE'
			 )
		else comp_doc.ds_urn_comp_calc
 end ds_urn_comp_calc, 

 fmt_file_calc.nm_formato_file_standard nm_formato_calc, 
 comp_doc.ni_size_file_calc, 
 comp_doc.ds_hash_file_calc, comp_doc.ds_algo_hash_file_calc, comp_doc.cd_encoding_hash_file_calc, 
 comp_doc.ti_esito_contr_formato_file, 
 comp_doc.ds_msg_esito_contr_formato,
 comp_doc.ds_formato_rappr_calc,
 comp_doc.ds_formato_rappr_esteso_calc,
 case
	when comp_doc.ds_formato_rappr_calc = fmt_file_vers.nm_formato_file_doc
		then fmt_file_vers.ds_formato_file_doc
		else null
 end ds_formato_rappr_file_doc,
 comp_doc.fl_comp_firmato, comp_doc.ti_esito_verif_firme, comp_doc.ds_msg_esito_verif_firme,
 fmt_file_calc.nm_mimetype_file,
 
-- info su verifica firme a data versamento
 comp_doc.ti_esito_verif_firme_dt_vers, comp_doc.ds_esito_verif_firme_dt_vers

from ARO_COMP_DOC comp_doc
join DEC_TIPO_COMP_DOC tipo_comp
 on (tipo_comp.id_tipo_comp_doc = comp_doc.id_tipo_comp_doc)
left join DEC_FORMATO_FILE_DOC fmt_file_vers
 on (fmt_file_vers.id_formato_file_doc = comp_doc.id_formato_file_vers)
left join DEC_FORMATO_FILE_STANDARD fmt_file_calc
 on (fmt_file_calc.id_formato_file_standard = comp_doc.id_formato_file_calc)

left join DEC_TIPO_RAPPR_COMP tipo_rappr
 on(tipo_rappr.id_tipo_rappr_comp = comp_doc.id_tipo_rappr_comp);

-- changeset root:1751897635013-743
COMMENT ON COLUMN ARO_V_VIS_COMP_AIP.ID_COMP_DOC IS 'PK.1 relativa a tabella ARO_COMP_DOC';

-- changeset root:1751897635013-744
CREATE OR REPLACE FORCE VIEW "DEC_V_LIS_USO_FMT_FILE_STD" ("ID_USO_FORMATO_FILE_AMMESSO", "ID_FORMATO_FILE_DOC", "NM_FORMATO_FILE_DOC", "NI_ORD_USO", "ID_FORMATO_FILE_STANDARD", "NM_FORMATO_FILE_STANDARD") AS select
 uso.id_uso_formato_file_ammesso,
 fmt_doc.id_formato_file_doc,
 fmt_doc.nm_formato_file_doc,
 ni_ord_uso,
 fmt_std.id_formato_file_standard,
 fmt_std.nm_formato_file_standard
from DEC_USO_FORMATO_FILE_STANDARD uso
join DEC_FORMATO_FILE_DOC fmt_doc
 on (fmt_doc.id_formato_file_doc = uso.id_formato_file_doc)
join DEC_FORMATO_FILE_STANDARD fmt_std
 on (fmt_std.id_formato_file_standard = uso.id_formato_file_standard);

-- changeset root:1751897635013-745
COMMENT ON COLUMN DEC_V_LIS_USO_FMT_FILE_STD.ID_USO_FORMATO_FILE_AMMESSO IS 'PK.1 relativa a tabella DEC_USO_FORMATO_FILE_STANDARD';

-- changeset root:1751897635013-746
CREATE OR REPLACE FORCE VIEW "VOL_V_LISTA_COMP_VOL" ("ID_UNITA_DOC", "ID_STRUT_UNITA_DOC", "CD_REGISTRO_KEY_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "ID_TIPO_UNITA_DOC", "ID_REGISTRO_UNITA_DOC", "ID_SUB_STRUT", "ID_DOC", "ID_STRUT_DOC", "DT_CREAZIONE_DOC", "FL_FORZA_ACCETTAZIONE", "FL_FORZA_CONSERVAZIONE", "ID_TIPO_DOC", "ID_APPART_COMP_VOLUME", "TI_ESITO_VERIF_FIRME_CHIUS", "ID_VOLUME_CONSERV", "ID_COMP_DOC", "DS_URN_COMP_CALC", "DS_URN_COMP_CALC_SHORT", "DS_NOME_COMP_VERS", "TI_SUPPORTO_COMP", "NI_SIZE_FILE_CALC", "FL_COMP_FIRMATO", "TI_ESITO_VERIF_FIRME_VERS", "DS_HASH_FILE_VERS", "DL_URN_COMP_VERS", "TI_ESITO_CONTR_FORMATO_FILE", "DS_FORMATO_RAPPR_CALC", "DS_FORMATO_RAPPR_ESTESO_CALC", "DS_HASH_FILE_CALC", "DS_ALGO_HASH_FILE_CALC", "CD_ENCODING_HASH_FILE_CALC", "ID_TIPO_STRUT_DOC", "ID_STRUT_TIPO_STRUT", "NM_TIPO_STRUT_DOC", "ID_TIPO_COMP_DOC", "NM_TIPO_COMP_DOC", "ID_FORMATO_FILE_DOC_VERS", "ID_STRUT_FORMATO_FILE_VERS", "NM_FORMATO_FILE_DOC_VERS", "NM_MIMETYPE_FILE", "ID_FIRMA_COMP", "TI_ESITO_CONTR_CONFORME", "DT_SCAD_CERTIF_FIRMATARIO", "DS_ORD_COMP") AS select
-- ===============================================================================
-- colonne unità documentaria
 ud.id_unita_doc id_unita_doc, 
 ud.id_strut id_strut_unita_doc, ud.cd_registro_key_unita_doc cd_registro_key_unita_doc, ud.aa_key_unita_doc, ud.cd_key_unita_doc cd_key_unita_doc, 
 ud.id_tipo_unita_doc,
 ud.id_registro_unita_doc,
 ud.id_sub_strut,

-- ===============================================================================
-- colonne documento
 doc.id_doc id_doc,
 doc.id_strut id_strut_doc, doc.dt_creazione dt_creazione_doc,
 doc.fl_forza_accettazione, doc.fl_forza_conservazione,
 doc.id_tipo_doc,

-- ===============================================================================
-- colonne appartenenza componente a volume
 app_comp_vol.id_appart_comp_volume,
 app_comp_vol.ti_esito_verif_firme_chius ti_esito_verif_firme_chius,
 
-- colonne appartenenza unita documentaria a volume
 app_ud_vol.id_volume_conserv,

-- ===============================================================================
-- colonne componente
 comp_doc.id_comp_doc id_comp_doc, 
 
 case
	when exists (select *
				 from ARO_COMP_URN_CALC urn
				 where urn.id_comp_doc = comp_doc.id_comp_doc
				 )
		then (select ds_urn
			 from ARO_COMP_URN_CALC urn
			 where urn.id_comp_doc = comp_doc.id_comp_doc
			 and ti_urn = 'ORIGINALE'
			 )
		else comp_doc.ds_urn_comp_calc
 end ds_urn_comp_calc, 
 case
	when exists (select *
				 from ARO_COMP_URN_CALC urn
				 where urn.id_comp_doc = comp_doc.id_comp_doc
				 )
		then ud.cd_registro_key_unita_doc || '-' || to_char(ud.aa_key_unita_doc) || '-' || ud.cd_key_unita_doc || ':' || 
			 'DOC' || lpad(doc.ni_ord_doc, 5, '0') || ':' || 
			 case
				when comp_doc.id_comp_doc_padre is null
					then lpad(comp_doc.ni_ord_comp_doc, 5, '0')
					else (select lpad (comp_padre.ni_ord_comp_doc, 5, '0')
						  from ARO_COMP_DOC comp_padre
						  where comp_padre.id_comp_doc = id_comp_doc_padre
						 )
			 end ||
			 case
				when comp_doc.id_comp_doc_padre is null
					then ''
					else ':' || lpad (comp_doc.ni_ord_comp_doc, 2, '0')
			 end
		else
			case
				when doc.ti_doc = 'PRINCIPALE'
					then ud.cd_registro_key_unita_doc || '-' || to_char(ud.aa_key_unita_doc) || '-' || ud.cd_key_unita_doc || '-' || doc.ti_doc || ':' || 
						to_char(strut_doc.ni_ord_strut_doc) || ':' || to_char(comp_doc.ni_ord_comp_doc)
					else ud.cd_registro_key_unita_doc || '-' || to_char(ud.aa_key_unita_doc) || '-' || ud.cd_key_unita_doc || '-' || doc.ti_doc || '-' || to_char(doc.pg_doc) || ':' || 
						to_char(strut_doc.ni_ord_strut_doc) || ':' || to_char(comp_doc.ni_ord_comp_doc)
			end
 end ds_urn_comp_calc_short,

 comp_doc.ds_nome_comp_vers ds_nome_comp_vers,
 comp_doc.ti_supporto_comp ti_supporto_comp,
 comp_doc.ni_size_file_calc ni_size_file_calc,
 comp_doc.fl_comp_firmato fl_comp_firmato,
 comp_doc.ti_esito_verif_firme ti_esito_verif_firme_vers,
 
 comp_doc.ds_hash_file_vers, comp_doc.dl_urn_comp_vers, 
 comp_doc.ti_esito_contr_formato_file, comp_doc.ds_formato_rappr_calc, comp_doc.ds_formato_rappr_esteso_calc, 
 comp_doc.ds_hash_file_calc, comp_doc.ds_algo_hash_file_calc, comp_doc.cd_encoding_hash_file_calc,
 
-- ======================================================================================
-- colonne tipo struttura e tipo componente 
 tipo_strut.id_tipo_strut_doc, 
 tipo_strut.id_strut id_strut_tipo_strut, tipo_strut.nm_tipo_strut_doc,
 tipo_comp.id_tipo_comp_doc, tipo_comp.nm_tipo_comp_doc,
 
-- ======================================================================================
-- colonne formato file versato 
 formato_vers.id_formato_file_doc id_formato_file_doc_vers, 
 formato_vers.id_strut id_strut_formato_file_vers, formato_vers.nm_formato_file_doc nm_formato_file_doc_vers,

-- ======================================================================================
-- colonne formato file calcolato
 formato_std.nm_mimetype_file,
 
-- ======================================================================================
-- colonne firme su componente
 firma_comp.id_firma_comp, firma_comp.ti_esito_contr_conforme ti_esito_contr_conforme,

-- ======================================================================================
-- colonne certificati firmatari delle firme su componente
 certif_firmatario.dt_fin_val_certif_firmatario dt_scad_certif_firmatario,

-- ======================================================================================
-- colonna per ordinamento lista componenti 
 ud.ds_key_ord || '-' ||
 case
   when doc.ti_doc = 'PRINCIPALE' then 'A'
   when doc.ti_doc = 'ALLEGATO' then 'B'
   when doc.ti_doc = 'ANNESSO' then 'C'
   else 'D'
 end || '-' ||
 lpad(to_char(doc.pg_doc), 4, '0') || '-' || lpad(to_char(strut_doc.ni_ord_strut_doc), 4, '0') || '-' || lpad(to_char(comp_doc.ni_ord_comp_doc), 4, '0') ds_ord_comp

from VOL_APPART_UNITA_DOC_VOLUME app_ud_vol

join VOL_APPART_DOC_VOLUME app_doc_vol
 on (app_doc_vol.id_appart_unita_doc_volume = app_ud_vol.id_appart_unita_doc_volume)

join VOL_APPART_COMP_VOLUME app_comp_vol
 on (app_comp_vol.id_appart_doc_volume = app_doc_vol.id_appart_doc_volume)

join ARO_COMP_DOC comp_doc 
 on (comp_doc.id_comp_doc = app_comp_vol.id_comp_doc)

join ARO_STRUT_DOC strut_doc
 on (strut_doc.id_strut_doc = comp_doc.id_strut_doc)
join ARO_DOC doc
 on (doc.id_doc = strut_doc.id_doc)
join ARO_UNITA_DOC ud
 on (ud.id_unita_doc = doc.id_unita_doc)

join DEC_TIPO_COMP_DOC tipo_comp
 on (tipo_comp.id_tipo_comp_doc = comp_doc.id_tipo_comp_doc)
join DEC_TIPO_STRUT_DOC tipo_strut
 on (tipo_strut.id_tipo_strut_doc = tipo_comp.id_tipo_strut_doc) 

left join DEC_FORMATO_FILE_DOC formato_vers
 on (formato_vers.id_formato_file_doc = comp_doc.id_formato_file_vers)

left join DEC_FORMATO_FILE_STANDARD formato_std
 on (formato_std.id_formato_file_standard = comp_doc.id_formato_file_calc)

left join ARO_FIRMA_COMP firma_comp
 on (firma_comp.id_comp_doc = comp_doc.id_comp_doc) 
left join FIR_CERTIF_FIRMATARIO certif_firmatario
 on (certif_firmatario.id_certif_firmatario = firma_comp.id_certif_firmatario);

-- changeset root:1751897635013-747
COMMENT ON COLUMN VOL_V_LISTA_COMP_VOL.ID_APPART_COMP_VOLUME IS 'PK.1 relativa a tabella VOL_APPART_COMP_VOLUME';

-- changeset root:1751897635013-748
COMMENT ON COLUMN VOL_V_LISTA_COMP_VOL.ID_FIRMA_COMP IS 'PK.2 relativa a tabella ARO_FIRMA_COMP';

-- changeset root:1751897635013-749
CREATE OR REPLACE FORCE VIEW "ARO_V_LIS_COMP_DOC" ("ID_DOC", "ID_COMP_DOC", "NI_ORD_COMP_DOC", "NM_TIPO_COMP_DOC", "TI_SUPPORTO_COMP", "DS_NOME_COMP_VERS", "NM_FORMATO_CALC", "NM_FORMATO_VERS", "NI_SIZE_FILE_CALC", "DS_URN_COMP_CALC", "NI_ORD_COMP_PADRE", "DS_FORMATO_RAPPR_CALC", "TI_ESITO_VERIF_FIRME", "DS_MSG_ESITO_VERIF_FIRME", "FL_COMP_FIRMATO") AS select
-- info su documento
 doc.id_doc,

-- info su componente
 comp_doc.id_comp_doc,
 comp_doc.ni_ord_comp_doc,
 tipo_comp.nm_tipo_comp_doc, 
 comp_doc.ti_supporto_comp, 
 comp_doc.ds_nome_comp_vers, 
 fmt_file_calc.nm_formato_file_standard nm_formato_calc, 
 fmt_file_doc.nm_formato_file_doc nm_formato_vers,
 comp_doc.ni_size_file_calc, 
 
 case
	when exists (select *
				 from ARO_COMP_URN_CALC urn
				 where urn.id_comp_doc = comp_doc.id_comp_doc
				 )
		then (select ds_urn
			 from ARO_COMP_URN_CALC urn
			 where urn.id_comp_doc = comp_doc.id_comp_doc
			 and ti_urn = 'ORIGINALE'
			 )
		else comp_doc.ds_urn_comp_calc
 end ds_urn_comp_calc,
 
 comp_padre.ni_ord_comp_doc ni_ord_comp_padre,
 
 comp_doc.ds_formato_rappr_calc,
 comp_doc.ti_esito_verif_firme,
 comp_doc.ds_msg_esito_verif_firme,
 comp_doc.fl_comp_firmato
 
from ARO_DOC doc

join ARO_STRUT_DOC strut_doc
 on (strut_doc.id_doc = doc.id_doc
 and strut_doc.fl_strut_orig = '1')

join ARO_COMP_DOC comp_doc
 on (comp_doc.id_strut_doc = strut_doc.id_strut_doc)
join DEC_TIPO_COMP_DOC tipo_comp
 on (tipo_comp.id_tipo_comp_doc = comp_doc.id_tipo_comp_doc)
left join DEC_FORMATO_FILE_DOC fmt_file_doc
 on (fmt_file_doc.id_formato_file_doc = comp_doc.id_formato_file_vers)
left join DEC_FORMATO_FILE_STANDARD fmt_file_calc
 on (fmt_file_calc.id_formato_file_standard = comp_doc.id_formato_file_calc)
left join ARO_COMP_DOC comp_padre
 on (comp_padre.id_comp_doc = comp_doc.id_comp_doc_padre);

-- changeset root:1751897635013-750
COMMENT ON COLUMN ARO_V_LIS_COMP_DOC.ID_COMP_DOC IS 'PK.1 relativa a tabella ARO_COMP_DOC';

-- changeset root:1751897635013-751
CREATE OR REPLACE FORCE VIEW "ARO_V_RIC_COMP" ("ID_UNITA_DOC", "ID_STRUT_UNITA_DOC", "CD_REGISTRO_KEY_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "ID_SUB_STRUT", "ID_REGISTRO_UNITA_DOC", "ID_TIPO_UNITA_DOC", "ID_DOC", "ID_STRUT_DOC", "DT_CREAZIONE_DOC", "FL_FORZA_ACCETTAZIONE", "FL_FORZA_CONSERVAZIONE", "ID_TIPO_DOC", "ID_COMP_DOC", "NI_SIZE_FILE_CALC", "FL_COMP_FIRMATO", "TI_ESITO_VERIF_FIRME_VERS", "DS_URN_COMP_CALC", "DS_URN_COMP_CALC_SHORT", "DS_NOME_COMP_VERS", "DS_ID_COMP_VERS", "TI_SUPPORTO_COMP", "FL_RIF_TEMP_VERS", "DS_RIF_TEMP_VERS", "FL_HASH_VERS", "DS_HASH_FILE_VERS", "DL_URN_COMP_VERS", "TI_ESITO_CONTR_FORMATO_FILE", "DS_FORMATO_RAPPR_CALC", "DS_FORMATO_RAPPR_ESTESO_CALC", "DS_HASH_FILE_CALC", "DS_ALGO_HASH_FILE_CALC", "CD_ENCODING_HASH_FILE_CALC", "ID_TIPO_STRUT_DOC", "ID_STRUT_TIPO_STRUT", "NM_TIPO_STRUT_DOC", "ID_TIPO_COMP_DOC", "NM_TIPO_COMP_DOC", "ID_FORMATO_FILE_DOC_VERS", "ID_STRUT_FORMATO_FILE_VERS", "NM_FORMATO_FILE_DOC_VERS", "NM_MIMETYPE_FILE", "NM_TIPO_RAPPR_COMP", "ID_FIRMA_COMP", "TI_ESITO_CONTR_CONFORME", "DT_SCAD_CERTIF_FIRMATARIO", "DS_ORD_COMP", "TI_STATO_ELENCO_VERS", "TI_STATO_CONSERVAZIONE") AS SELECT
-- ===============================================================================
-- colonne unità documentaria
 ud.id_unita_doc id_unita_doc, 
 ud.id_strut id_strut_unita_doc, ud.cd_registro_key_unita_doc cd_registro_key_unita_doc, ud.aa_key_unita_doc aa_key_unita_doc, ud.cd_key_unita_doc cd_key_unita_doc, 
 ud.id_sub_strut,
 ud.id_registro_unita_doc, ud.id_tipo_unita_doc,
 
-- ===============================================================================
-- colonne documento
 doc.id_doc id_doc,
 doc.id_strut id_strut_doc, doc.dt_creazione dt_creazione_doc, 
 doc.fl_forza_accettazione, doc.fl_forza_conservazione,
 doc.id_tipo_doc,

 -- ===============================================================================
 -- colonne componente
 comp_doc.id_comp_doc id_comp_doc, 
 comp_doc.ni_size_file_calc ni_size_file_calc,
 comp_doc.fl_comp_firmato fl_comp_firmato,
 comp_doc.ti_esito_verif_firme ti_esito_verif_firme_vers,
 
 case
	when exists (select *
				 from ARO_COMP_URN_CALC urn
				 where urn.id_comp_doc = comp_doc.id_comp_doc
				 )
		then (select ds_urn
			 from ARO_COMP_URN_CALC urn
			 where urn.id_comp_doc = comp_doc.id_comp_doc
			 and ti_urn = 'ORIGINALE'
			 )
		else comp_doc.ds_urn_comp_calc
 end ds_urn_comp_calc, 
 
 case
	when exists (select *
				 from ARO_COMP_URN_CALC urn
				 where urn.id_comp_doc = comp_doc.id_comp_doc
				 )
		then ud.cd_key_unita_doc || ':' || 
			 'DOC' || lpad(doc.ni_ord_doc, 5, '0') || ':' || lpad (comp_doc.ni_ord_comp_doc, 5, '0')
		else
			case
				when doc.ti_doc = 'PRINCIPALE'
					then ud.cd_registro_key_unita_doc || '-' || to_char(ud.aa_key_unita_doc) || '-' || ud.cd_key_unita_doc || '-' || doc.ti_doc || ':' || 
						to_char(strut_doc.ni_ord_strut_doc) || ':' || to_char(comp_doc.ni_ord_comp_doc)
					else ud.cd_registro_key_unita_doc || '-' || to_char(ud.aa_key_unita_doc) || '-' || ud.cd_key_unita_doc || '-' || doc.ti_doc || '-' || 
						to_char(doc.pg_doc) || ':' || 
						to_char(strut_doc.ni_ord_strut_doc) || ':' || to_char(comp_doc.ni_ord_comp_doc)
			end
 end ds_urn_comp_calc_short,
 
 comp_doc.ds_nome_comp_vers ds_nome_comp_vers,
 comp_doc.ds_id_comp_vers ds_id_comp_vers,
 comp_doc.ti_supporto_comp ti_supporto_comp,
 
 case
	when comp_doc.tm_rif_temp_vers is not null
		then '1'
		else '0'
 end fl_rif_temp_vers,
 comp_doc.ds_rif_temp_vers,
 
 case
	when comp_doc.ds_hash_file_vers is not null
		then '1'
		else '0'
 end fl_hash_vers,
 
 comp_doc.ds_hash_file_vers, comp_doc.dl_urn_comp_vers, 
 comp_doc.ti_esito_contr_formato_file, comp_doc.ds_formato_rappr_calc, comp_doc.ds_formato_rappr_esteso_calc, 
 comp_doc.ds_hash_file_calc, comp_doc.ds_algo_hash_file_calc, comp_doc.cd_encoding_hash_file_calc,
 
-- ======================================================================================
-- colonne tipo struttura e tipo componente 
 tipo_strut.id_tipo_strut_doc, tipo_strut.id_strut id_strut_tipo_strut, tipo_strut.nm_tipo_strut_doc,
 tipo_comp.id_tipo_comp_doc, tipo_comp.nm_tipo_comp_doc,
 
-- ======================================================================================
-- colonne formato file versato 
 formato_vers.id_formato_file_doc id_formato_file_doc_vers, 
 formato_vers.id_strut id_strut_formato_file_vers, formato_vers.nm_formato_file_doc nm_formato_file_doc_vers,

-- ======================================================================================
-- colonne formato file calcolato
 formato_std.nm_mimetype_file,

-- ======================================================================================
-- colonne rappresentazione
 rappr.nm_tipo_rappr_comp,
 
-- ======================================================================================
-- colonne firme su componente
 firma_comp.id_firma_comp, firma_comp.ti_esito_contr_conforme ti_esito_contr_conforme,

-- ======================================================================================
-- colonne certificati firmatari delle firme su componente
 certif_firmatario.dt_fin_val_certif_firmatario dt_scad_certif_firmatario,

-- ======================================================================================
-- colonna per ordinamento lista componenti 
 ud.ds_key_ord || '-' ||
 case
   when doc.ti_doc = 'PRINCIPALE' then 'A'
   when doc.ti_doc = 'ALLEGATO' then 'B'
   when doc.ti_doc = 'ANNESSO' then 'C'
   else 'D'
 end || '-' ||
 lpad(to_char(doc.pg_doc), 4, '0') || '-' || lpad(to_char(strut_doc.ni_ord_strut_doc), 4, '0') || '-' || lpad(to_char(comp_doc.ni_ord_comp_doc), 4, '0') ds_ord_comp,

 case
	when doc.id_elenco_vers is not null then doc.ti_stato_doc_elenco_vers
	when ud.id_elenco_vers is not null then ud.ti_stato_ud_elenco_vers
	else null
 end ti_stato_elenco_vers,
 ud.ti_stato_conservazione
 
from ARO_UNITA_DOC ud
join ARO_DOC doc
 on (doc.id_unita_doc = ud.id_unita_doc)
join ARO_STRUT_DOC strut_doc
 on (strut_doc.id_doc = doc.id_doc)
join ARO_COMP_DOC comp_doc 
 on (comp_doc.id_strut_doc = strut_doc.id_strut_doc)
 
join DEC_TIPO_COMP_DOC tipo_comp
 on (tipo_comp.id_tipo_comp_doc = comp_doc.id_tipo_comp_doc)
join DEC_TIPO_STRUT_DOC tipo_strut
 on (tipo_strut.id_tipo_strut_doc = tipo_comp.id_tipo_strut_doc) 

left join DEC_FORMATO_FILE_DOC formato_vers
 on (formato_vers.id_formato_file_doc = comp_doc.id_formato_file_vers)

left join DEC_FORMATO_FILE_STANDARD formato_std
 on (formato_std.id_formato_file_standard = comp_doc.id_formato_file_calc)

left join DEC_TIPO_RAPPR_COMP rappr
 on (rappr.id_tipo_rappr_comp = comp_doc.id_tipo_rappr_comp)
 
left join ARO_FIRMA_COMP firma_comp
 on (firma_comp.id_comp_doc = comp_doc.id_comp_doc) 
left join FIR_CERTIF_FIRMATARIO certif_firmatario
 on (certif_firmatario.id_certif_firmatario = firma_comp.id_certif_firmatario);

-- changeset root:1751897635013-752
COMMENT ON COLUMN ARO_V_RIC_COMP.ID_COMP_DOC IS 'PK.1 relativa a tabella ARO_COMP_DOC';

-- changeset root:1751897635013-753
COMMENT ON COLUMN ARO_V_RIC_COMP.ID_FIRMA_COMP IS 'PK.2 relativa a tabella ARO_FIRMA_COMP';

-- changeset root:1751897635013-754
CREATE OR REPLACE FORCE VIEW "OST_V_LIS_FILE_BLOB_BYSTRUMESE" ("ID_DOC", "ID_STRUT", "DT_CREAZIONE", "NI_ORD_DOC", "ID_UNITA_DOC", "ID_REGISTRO_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC_NORMALIZ", "CD_REGISTRO_UNITA_DOC", "CD_REGISTRO_NORMALIZ", "ID_COMP_DOC", "NI_ORD_COMP_DOC", "NI_ORD_COMP_DOC_PADRE", "TI_SUPPORTO_COMP", "TI_SAVE_FILE") AS select 
doc.id_doc, doc.id_strut, doc.dt_creazione, doc.ni_ord_doc,

ud.id_unita_doc, ud.id_registro_unita_doc, ud.aa_key_unita_doc, ud.cd_key_unita_doc, ud.cd_key_unita_doc_normaliz,
reg.cd_registro_unita_doc, reg.cd_registro_normaliz,

comp.id_comp_doc, comp.ni_ord_comp_doc,
comp_padre.ni_ord_comp_doc ni_ord_comp_doc_padre,

comp.ti_supporto_comp, tipo_ud.ti_save_file

from ARO_DOC doc
join ARO_UNITA_DOC ud
	on (ud.id_unita_doc = doc.id_unita_doc)
join DEC_REGISTRO_UNITA_DOC reg
	on (reg.id_registro_unita_doc = ud.id_registro_unita_doc)
join DEC_TIPO_UNITA_DOC tipo_ud
	on (tipo_ud.id_tipo_unita_doc = ud.id_tipo_unita_doc)
join ARO_STRUT_DOC strut_doc
	on (strut_doc.id_doc = doc.id_doc)
join ARO_COMP_DOC comp
	on (comp.id_strut_doc = strut_doc.id_strut_doc)
left join ARO_COMP_DOC comp_padre
	on (comp_padre.id_comp_doc = comp.id_comp_doc_padre)
	
where (comp.ti_supporto_comp = 'FILE'
and tipo_ud.ti_save_file = 'BLOB'
and not exists (select *
				  from OST_MIGRAZ_FILE migraz_file
				  where migraz_file.nm_tabella_id_oggetto = 'ARO_COMP_DOC'
				  and migraz_file.id_oggetto = comp.id_comp_doc
				  )
)
or (comp.ti_supporto_comp = 'FILE'
and tipo_ud.ti_save_file = 'FILE'
and not exists (select *
				from ARO_COMP_URN_CALC urn_calc
				where urn_calc.id_comp_doc = comp.id_comp_doc
				)
)
or (comp.ti_supporto_comp != 'FILE'
and not exists (select *
				from ARO_COMP_URN_CALC urn_calc
				where urn_calc.id_comp_doc = comp.id_comp_doc
				)
);

-- changeset root:1751897635013-755
COMMENT ON COLUMN OST_V_LIS_FILE_BLOB_BYSTRUMESE.ID_COMP_DOC IS 'PK.1';

-- changeset root:1751897635013-756
CREATE OR REPLACE FORCE VIEW "USR_V_LIS_USER_DISCIP_BY_STRUT" ("ID_STRUT", "TI_USER_ARK_RIF", "ID_USER_IAM", "NM_COGNOME_USER", "NM_NOME_USER", "NM_USERID", "TIPO_USER", "DS_EMAIL", "LISTA_RUO", "LISTA_TIPO_UD_ABIL", "LISTA_REG_ABIL", "LISTA_TIPO_DOC_ABIL", "DL_NOTE") AS select 
 id_strut,
 ti_user_ark_rif,
 id_user_iam,
 nm_cognome_user,
 nm_nome_user,
 nm_userid,
 tipo_user,
 ds_email,
 lista_ruo,
 case
	when ti_user_ark_rif in ('PERSONA_FISICA', 'REF_ENTE')
		then
			case
				when exists (select *
							 from DEC_TIPO_UNITA_DOC tipo_ud
							 where tipo_ud.id_strut = usr.id_strut
							 and not exists (select *
											 from USR_V_LIS_TIPO_UD_ABIL tipo_ud_abil
											 where tipo_ud_abil.id_user_iam = usr.id_user_iam
											 and tipo_ud_abil.id_organiz_applic = tipo_ud.id_strut
											 and tipo_ud_abil.id_tipo_unita_doc = tipo_ud.id_tipo_unita_doc
											)
                )
					then 'Tipo unita'' doc: ' || (select listagg (tipo_ud_abil.nm_tipo_unita_doc, '; ') within group (order by tipo_ud_abil.nm_tipo_unita_doc)
												  from USR_V_LIS_TIPO_UD_ABIL tipo_ud_abil
												  where tipo_ud_abil.id_user_iam = usr.id_user_iam
												  and tipo_ud_abil.id_organiz_applic = usr.id_strut
												 ) 
					else 'ALL' 
			end
 end lista_tipo_ud_abil,
 case
	when ti_user_ark_rif in ('PERSONA_FISICA', 'REF_ENTE')
		then
			case
				when exists (select *
							 from DEC_REGISTRO_UNITA_DOC reg
							 where reg.id_strut = usr.id_strut
							 and not exists (select *
											 from USR_V_LIS_REG_ABIL reg_abil
											 where reg_abil.id_user_iam = usr.id_user_iam
											 and reg_abil.id_organiz_applic = reg.id_strut
											 and reg_abil.id_registro_unita_doc = reg.id_registro_unita_doc
											)
                )
					then 'Registro: ' || (select listagg (reg_abil.cd_registro_unita_doc, '; ') within group (order by reg_abil.cd_registro_unita_doc)
										  from USR_V_LIS_REG_ABIL reg_abil
										  where reg_abil.id_user_iam = usr.id_user_iam
										  and reg_abil.id_organiz_applic = usr.id_strut
										 ) 
					else 'ALL' 
			end
 end lista_reg_abil,
 case
	when ti_user_ark_rif in ('PERSONA_FISICA', 'REF_ENTE')
		then
			case
				when exists (select *
							 from DEC_TIPO_DOC tipo_doc
							 where tipo_doc.id_strut = usr.id_strut
							 and not exists (select *
											 from USR_V_LIS_TIPO_DOC_ABIL tipo_doc_abil
											 where tipo_doc_abil.id_user_iam = usr.id_user_iam
											 and tipo_doc_abil.id_organiz_applic = tipo_doc.id_strut
											 and tipo_doc_abil.id_tipo_doc = tipo_doc.id_tipo_doc
											)
                )
					then 'Tipo doc: ' || (select listagg (tipo_doc_abil.nm_tipo_doc, '; ') within group (order by tipo_doc_abil.nm_tipo_doc)
										  from USR_V_LIS_TIPO_DOC_ABIL tipo_doc_abil
										  where tipo_doc_abil.id_user_iam = usr.id_user_iam
										  and tipo_doc_abil.id_organiz_applic = usr.id_strut
										 ) 
					else 'ALL' 
			end
 end lista_tipo_doc_abil,

 usr.dl_note


from sacer_iam.USR_V_LIS_USER_RIF_BY_STRUT usr;

-- changeset root:1751897635013-757
COMMENT ON COLUMN USR_V_LIS_USER_DISCIP_BY_STRUT.ID_STRUT IS 'PK.1';

-- changeset root:1751897635013-758
COMMENT ON COLUMN USR_V_LIS_USER_DISCIP_BY_STRUT.ID_USER_IAM IS 'PK.2';

-- changeset root:1751897635013-759
CREATE OR REPLACE FORCE VIEW "DEC_V_LIS_TI_UNI_DOC_AMS" ("ID_TIPO_UNITA_DOC_AMMESSO", "ID_TIPO_UNITA_DOC", "NM_TIPO_UNITA_DOC", "ID_REGISTRO_UNITA_DOC", "CD_REGISTRO_UNITA_DOC") AS select
 ti_uni_doc_ams.id_tipo_unita_doc_ammesso,
 ti_uni_doc_ams.id_tipo_unita_doc,
 ti_uni_doc.nm_tipo_unita_doc,
 ti_uni_doc_ams.id_registro_unita_doc,
 reg.cd_registro_unita_doc
from DEC_TIPO_UNITA_DOC_AMMESSO ti_uni_doc_ams
join DEC_TIPO_UNITA_DOC ti_uni_doc
 on (ti_uni_doc.id_tipo_unita_doc = ti_uni_doc_ams.id_tipo_unita_doc)
join DEC_REGISTRO_UNITA_DOC reg
 on (reg.id_registro_unita_doc = ti_uni_doc_ams.id_registro_unita_doc);

-- changeset root:1751897635013-760
COMMENT ON COLUMN DEC_V_LIS_TI_UNI_DOC_AMS.ID_TIPO_UNITA_DOC_AMMESSO IS 'PK.1 relativa a tabella DEC_TIPO_UNITA_DOC_AMMESSO';

-- changeset root:1751897635013-761
CREATE OR REPLACE FORCE VIEW "ARO_V_LIS_DOC" ("ID_UNITA_DOC", "ID_DOC", "TI_DOC", "TI_DOC_ORD", "PG_DOC", "CD_KEY_DOC_VERS", "NM_TIPO_DOC", "DL_DOC", "DS_AUTORE_DOC", "FL_DOC_FIRMATO", "TI_ESITO_VERIF_FIRME", "DT_CREAZIONE", "TI_STATO_ELENCO_VERS") AS select
-- info unita documentaria
 ud.id_unita_doc,

-- info allegato 
 doc.id_doc,
 doc.ti_doc,
 case
	when doc.ti_doc = 'PRINCIPALE' then 1
	when doc.ti_doc = 'ALLEGATO' then 2
	when doc.ti_doc = 'ANNESSO' then 3
	when doc.ti_doc = 'ANNOTAZIONE' then 4
 end ti_doc_ord,
 doc.pg_doc,
 doc.cd_key_doc_vers,
 tipo_doc.nm_tipo_doc,
 doc.dl_doc, doc.ds_autore_doc, 
 doc.fl_doc_firmato, doc.ti_esito_verif_firme,
 doc.dt_creazione,
 
 case
	when doc.ti_stato_doc_elenco_vers is null
		then ud.ti_stato_ud_elenco_vers
		else doc.ti_stato_doc_elenco_vers
 end ti_stato_elenco_vers
 
from ARO_UNITA_DOC ud

join ARO_DOC doc
 on (doc.id_unita_doc = ud.id_unita_doc)
join DEC_TIPO_DOC tipo_doc
 on (tipo_doc.id_tipo_doc = doc.id_tipo_doc);

-- changeset root:1751897635013-762
COMMENT ON COLUMN ARO_V_LIS_DOC.ID_DOC IS 'PK.1 relativa a tabella ARO_DOC';

-- changeset root:1751897635013-763
CREATE OR REPLACE FORCE VIEW "MON_V_LIS_UPD_UD_KO" ("ID_USER_IAM_COR", "ID_AMBIENTE", "NM_AMBIENTE", "ID_ENTE", "NM_ENTE", "ID_STRUT", "NM_STRUT", "ID_TIPO_UNITA_DOC", "NM_TIPO_UNITA_DOC", "ID_REGISTRO_UNITA_DOC", "CD_REGISTRO_KEY_UNITA_DOC", "ID_TIPO_DOC_PRINC", "NM_TIPO_DOC_PRINC", "AA_KEY_UNITA_DOC", "TI_STATO_SES_UPD_KO", "TS_INI_SES", "ID_SES_UPD_UNITA_DOC_KO", "ID_UPD_UNITA_DOC_KO", "DS_TS_INI_SES", "DS_ENTE_STRUT", "DS_UNITA_DOC", "CD_KEY_UNITA_DOC", "ID_CONTROLLO_WS_PRINC", "CD_CONTROLLO_WS_PRINC", "ID_ERR_SACER_PRINC", "CD_ERR_PRINC", "DS_ERR_PRINC") AS select
 abil_key_ud_ko.id_user_iam_cor,
 abil_key_ud_ko.id_ambiente, abil_key_ud_ko.nm_ambiente,
 abil_key_ud_ko.id_ente, abil_key_ud_ko.nm_ente,
 abil_key_ud_ko.id_strut, abil_key_ud_ko.nm_strut,
 abil_key_ud_ko.id_tipo_unita_doc, ti_ud.nm_tipo_unita_doc,
 abil_key_ud_ko.id_registro_unita_doc, upd_ud_ko.cd_registro_key_unita_doc,
 abil_key_ud_ko.id_tipo_doc_princ, ti_doc_princ.nm_tipo_doc nm_tipo_doc_princ,
 abil_key_ud_ko.aa_key_unita_doc,
 
 ses_upd_ko.ti_stato_ses_upd_ko,
 ses_upd_ko.ts_ini_ses,
 
 ses_upd_ko.id_ses_upd_unita_doc_ko,
 ses_upd_ko.id_upd_unita_doc_ko,
 to_char(ses_upd_ko.ts_ini_ses, 'dd/mm/yyyy hh24:mi:ssxff') ds_ts_ini_ses,

 abil_key_ud_ko.nm_ente || '/' || abil_key_ud_ko.nm_strut ds_ente_strut,
 upd_ud_ko.cd_registro_key_unita_doc || '-' || upd_ud_ko.aa_key_unita_doc || '-' || upd_ud_ko.cd_key_unita_doc ds_unita_doc,
 upd_ud_ko.cd_key_unita_doc,

 ses_upd_ko.id_controllo_ws_princ, contr_princ.cd_controllo_ws cd_controllo_ws_princ,
 ses_upd_ko.id_err_sacer_princ, err_princ.cd_err cd_err_princ, ses_upd_ko.ds_err_princ

from MON_V_ABIL_KEY_TOTAL_UD_KO abil_key_ud_ko
join VRS_SES_UPD_UNITA_DOC_KO ses_upd_ko
	on (ses_upd_ko.id_strut = abil_key_ud_ko.id_strut
	and ses_upd_ko.id_tipo_unita_doc = abil_key_ud_ko.id_tipo_unita_doc
	and ses_upd_ko.id_registro_unita_doc = abil_key_ud_ko.id_registro_unita_doc
	and ses_upd_ko.id_tipo_doc_princ = abil_key_ud_ko.id_tipo_doc_princ
	and ses_upd_ko.aa_key_unita_doc = abil_key_ud_ko.aa_key_unita_doc)

join DEC_TIPO_UNITA_DOC ti_ud
	on (ti_ud.id_tipo_unita_doc = ses_upd_ko.id_tipo_unita_doc)
join DEC_TIPO_DOC ti_doc_princ
	on (ti_doc_princ.id_tipo_doc = ses_upd_ko.id_tipo_doc_princ)
join DEC_CONTROLLO_WS contr_princ
	on (contr_princ.id_controllo_ws = ses_upd_ko.id_controllo_ws_princ)
join DEC_ERR_SACER err_princ
	on (err_princ.id_err_sacer = ses_upd_ko.id_err_sacer_princ)

join VRS_UPD_UNITA_DOC_KO upd_ud_ko
	on (upd_ud_ko.id_upd_unita_doc_ko = ses_upd_ko.id_upd_unita_doc_ko);

-- changeset root:1751897635013-764
COMMENT ON COLUMN MON_V_LIS_UPD_UD_KO.ID_SES_UPD_UNITA_DOC_KO IS 'PK.1';

-- changeset root:1751897635013-765
CREATE OR REPLACE FORCE VIEW "MON_V_LIS_UPD_UD_DA_ELAB" ("ID_USER_IAM_COR", "ID_AMBIENTE", "NM_AMBIENTE", "ID_ENTE", "NM_ENTE", "ID_STRUT", "NM_STRUT", "ID_TIPO_UNITA_DOC", "NM_TIPO_UNITA_DOC", "ID_REGISTRO_UNITA_DOC", "CD_REGISTRO_KEY_UNITA_DOC", "ID_TIPO_DOC_PRINC", "NM_TIPO_DOC_PRINC", "AA_KEY_UNITA_DOC", "TI_STATO_UPD_ELENCO_VERS", "TS_INI_SES", "ID_UPD_UNITA_DOC", "ID_UNITA_DOC", "PG_UPD_UNITA_DOC", "FL_FORZA_UPD", "NT_UPD", "FL_SES_UPD_KO_RISOLTI", "DS_TS_INI_SES", "DS_ENTE_STRUT", "DS_UNITA_DOC", "CD_KEY_UNITA_DOC") AS select
 abil_key_ud.id_user_iam_cor,
 abil_key_ud.id_ambiente, abil_key_ud.nm_ambiente,
 abil_key_ud.id_ente, abil_key_ud.nm_ente,
 abil_key_ud.id_strut, abil_key_ud.nm_strut,
 abil_key_ud.id_tipo_unita_doc, ti_ud.nm_tipo_unita_doc,
 abil_key_ud.id_registro_unita_doc, ud.cd_registro_key_unita_doc,
 abil_key_ud.id_tipo_doc_princ, ti_doc_princ.nm_tipo_doc nm_tipo_doc_princ,
 abil_key_ud.aa_key_unita_doc,
 
 upd_da_elab.ti_stato_upd_elenco_vers,
 upd_da_elab.dt_creazione ts_ini_ses,
 
 upd.id_upd_unita_doc,
 upd.id_unita_doc,
 upd.pg_upd_unita_doc,
 upd.fl_forza_upd,
 upd.nt_upd,
 upd.fl_ses_upd_ko_risolti,
 to_char(upd.ts_ini_ses, 'dd/mm/yyyy hh24:mi:ssxff') ds_ts_ini_ses,

 abil_key_ud.nm_ente || '/' || abil_key_ud.nm_strut ds_ente_strut,
 ud.cd_registro_key_unita_doc || '-' || ud.aa_key_unita_doc || '-' || ud.cd_key_unita_doc ds_unita_doc,
 ud.cd_key_unita_doc

from MON_V_ABIL_KEY_TOTAL_UD abil_key_ud
join ELV_UPD_UD_DA_ELAB_ELENCO upd_da_elab
	on (upd_da_elab.id_strut = abil_key_ud.id_strut
	and upd_da_elab.id_tipo_unita_doc = abil_key_ud.id_tipo_unita_doc
	and upd_da_elab.id_registro_unita_doc = abil_key_ud.id_registro_unita_doc
	and upd_da_elab.id_tipo_doc_princ = abil_key_ud.id_tipo_doc_princ
	and upd_da_elab.aa_key_unita_doc = abil_key_ud.aa_key_unita_doc)

join DEC_TIPO_UNITA_DOC ti_ud
	on (ti_ud.id_tipo_unita_doc = upd_da_elab.id_tipo_unita_doc)
join DEC_TIPO_DOC ti_doc_princ
	on (ti_doc_princ.id_tipo_doc = upd_da_elab.id_tipo_doc_princ)

join ARO_UPD_UNITA_DOC upd
	on (upd.id_upd_unita_doc = upd_da_elab.id_upd_unita_doc)
join ARO_UNITA_DOC ud
	on (ud.id_unita_doc = upd.id_unita_doc);

-- changeset root:1751897635013-766
COMMENT ON COLUMN MON_V_LIS_UPD_UD_DA_ELAB.ID_UPD_UNITA_DOC IS 'PK.1';

-- changeset root:1751897635013-767
CREATE OR REPLACE FORCE VIEW "MON_V_LIS_UPD_UD" ("ID_USER_IAM_COR", "ID_AMBIENTE", "NM_AMBIENTE", "ID_ENTE", "NM_ENTE", "ID_STRUT", "NM_STRUT", "ID_TIPO_UNITA_DOC", "NM_TIPO_UNITA_DOC", "ID_REGISTRO_UNITA_DOC", "CD_REGISTRO_KEY_UNITA_DOC", "ID_TIPO_DOC_PRINC", "NM_TIPO_DOC_PRINC", "AA_KEY_UNITA_DOC", "TI_STATO_UPD_ELENCO_VERS", "TS_INI_SES", "ID_UPD_UNITA_DOC", "ID_UNITA_DOC", "PG_UPD_UNITA_DOC", "FL_FORZA_UPD", "NT_UPD", "FL_SES_UPD_KO_RISOLTI", "DS_TS_INI_SES", "DS_ENTE_STRUT", "DS_UNITA_DOC", "CD_KEY_UNITA_DOC") AS select
 abil_key_ud.id_user_iam_cor,
 abil_key_ud.id_ambiente, abil_key_ud.nm_ambiente,
 abil_key_ud.id_ente, abil_key_ud.nm_ente,
 abil_key_ud.id_strut, abil_key_ud.nm_strut,
 abil_key_ud.id_tipo_unita_doc, ti_ud.nm_tipo_unita_doc,
 abil_key_ud.id_registro_unita_doc, ud.cd_registro_key_unita_doc,
 abil_key_ud.id_tipo_doc_princ, ti_doc_princ.nm_tipo_doc nm_tipo_doc_princ,
 abil_key_ud.aa_key_unita_doc,
 
 upd.ti_stato_upd_elenco_vers,
 cast (upd.ts_ini_ses as date),
 
 upd.id_upd_unita_doc,
 upd.id_unita_doc,
 upd.pg_upd_unita_doc,
 upd.fl_forza_upd,
 upd.nt_upd,
 upd.fl_ses_upd_ko_risolti,
 to_char(upd.ts_ini_ses, 'dd/mm/yyyy hh24:mi:ssxff') ds_ts_ini_ses,

 abil_key_ud.nm_ente || '/' || abil_key_ud.nm_strut ds_ente_strut,
 ud.cd_registro_key_unita_doc || '-' || ud.aa_key_unita_doc || '-' || ud.cd_key_unita_doc ds_unita_doc,
 ud.cd_key_unita_doc

from MON_V_ABIL_KEY_TOTAL_UD abil_key_ud
join ARO_UPD_UNITA_DOC upd
	on (upd.id_strut = abil_key_ud.id_strut
	and upd.id_tipo_unita_doc = abil_key_ud.id_tipo_unita_doc
	and upd.id_registro_unita_doc = abil_key_ud.id_registro_unita_doc
	and upd.id_tipo_doc_princ = abil_key_ud.id_tipo_doc_princ
	and upd.aa_key_unita_doc = abil_key_ud.aa_key_unita_doc)

join DEC_TIPO_UNITA_DOC ti_ud
	on (ti_ud.id_tipo_unita_doc = upd.id_tipo_unita_doc)
join DEC_TIPO_DOC ti_doc_princ
	on (ti_doc_princ.id_tipo_doc = upd.id_tipo_doc_princ)

join ARO_UNITA_DOC ud
	on (ud.id_unita_doc = upd.id_unita_doc)
and ti_stato_upd_elenco_vers is not null
and ud.dt_annul = to_date('31/12/2444', 'dd/mm/yyyy');

-- changeset root:1751897635013-768
COMMENT ON COLUMN MON_V_LIS_UPD_UD.ID_UPD_UNITA_DOC IS 'PK.1';

-- changeset root:1751897635013-769
CREATE OR REPLACE FORCE VIEW "MON_V_LIS_UD_UPD_KO" ("ID_USER_IAM_COR", "ID_AMBIENTE", "NM_AMBIENTE", "ID_ENTE", "NM_ENTE", "ID_STRUT", "NM_STRUT", "ID_TIPO_UNITA_DOC", "NM_TIPO_UNITA_DOC", "ID_TIPO_UNITA_DOC_LAST", "NM_TIPO_UNITA_DOC_LAST", "ID_REGISTRO_UNITA_DOC", "CD_REGISTRO_KEY_UNITA_DOC", "ID_TIPO_DOC_PRINC", "NM_TIPO_DOC_PRINC", "ID_TIPO_DOC_PRINC_LAST", "NM_TIPO_DOC_PRINC_LAST", "AA_KEY_UNITA_DOC", "TI_STATO_SES_UPD_KO", "TI_STATO_UPD_UD_KO", "TS_INI_SES", "TS_INI_LAST_SES", "ID_SES_UPD_UNITA_DOC_KO", "ID_SES_UPD_UD_KO_LAST", "ID_UPD_UNITA_DOC_KO", "DS_TS_INI_SES", "DS_TS_INI_LAST_SES", "DS_ENTE_STRUT", "DS_UNITA_DOC", "CD_KEY_UNITA_DOC", "ID_CONTROLLO_WS_PRINC", "ID_CONTROLLO_WS_PRINC_LAST", "CD_CONTROLLO_WS_PRINC", "CD_CONTROLLO_WS_PRINC_LAST", "ID_ERR_SACER_PRINC", "ID_ERR_SACER_PRINC_LAST", "CD_ERR_PRINC", "CD_ERR_PRINC_LAST", "DS_ERR_PRINC", "DS_ERR_PRINC_LAST") AS select
 abil_key_ud_ko.id_user_iam_cor,
 abil_key_ud_ko.id_ambiente, abil_key_ud_ko.nm_ambiente,
 abil_key_ud_ko.id_ente, abil_key_ud_ko.nm_ente,
 abil_key_ud_ko.id_strut, abil_key_ud_ko.nm_strut,
 abil_key_ud_ko.id_tipo_unita_doc, ti_ud.nm_tipo_unita_doc,
 upd_ud_ko.id_tipo_unita_doc_last, ti_ud_last.nm_tipo_unita_doc as nm_tipo_unita_doc_last,
 abil_key_ud_ko.id_registro_unita_doc, upd_ud_ko.cd_registro_key_unita_doc,
 abil_key_ud_ko.id_tipo_doc_princ, ti_doc_princ.nm_tipo_doc nm_tipo_doc_princ,
 upd_ud_ko.id_tipo_doc_princ_last, ti_doc_princ_last.nm_tipo_doc as nm_tipo_doc_princ_last,
 abil_key_ud_ko.aa_key_unita_doc,
 
 ses_upd_ko.ti_stato_ses_upd_ko,
 upd_ud_ko.ti_stato_udp_ud_ko as ti_stato_upd_ud_ko,
 
 ses_upd_ko.ts_ini_ses,
 upd_ud_ko.ts_ini_last_ses,
 
 ses_upd_ko.id_ses_upd_unita_doc_ko,
 upd_ud_ko.id_ses_upd_ud_ko_last,

 upd_ud_ko.id_upd_unita_doc_ko,
 
 to_char(ses_upd_ko.ts_ini_ses, 'dd/mm/yyyy hh24:mi:ssxff') ds_ts_ini_ses,
 to_char(upd_ud_ko.ts_ini_last_ses, 'dd/mm/yyyy hh24:mi:ssxff') ds_ts_ini_last_ses,
 
 abil_key_ud_ko.nm_ente || '/' || abil_key_ud_ko.nm_strut ds_ente_strut,
 upd_ud_ko.cd_registro_key_unita_doc || '-' || upd_ud_ko.aa_key_unita_doc || '-' || upd_ud_ko.cd_key_unita_doc ds_unita_doc,
 upd_ud_ko.cd_key_unita_doc,
 
 ses_upd_ko.id_controllo_ws_princ, 
 upd_ud_ko.id_controllo_ws_princ as id_controllo_ws_princ_last, 
 
 contr_princ.cd_controllo_ws cd_controllo_ws_princ,
 contr_princ_last.cd_controllo_ws cd_controllo_ws_princ_last,
 
 ses_upd_ko.id_err_sacer_princ, 
 upd_ud_ko.id_err_sacer_princ as id_err_sacer_princ_last, 
 
 err_princ.cd_err cd_err_princ, 
 err_princ_last.cd_err cd_err_princ_last, 
 
 ses_upd_ko.ds_err_princ,
 upd_ud_ko.ds_err_princ as ds_err_princ_last
 
from MON_V_ABIL_KEY_TOTAL_UD_KO abil_key_ud_ko
join VRS_SES_UPD_UNITA_DOC_KO ses_upd_ko
	on (ses_upd_ko.id_strut = abil_key_ud_ko.id_strut
	and ses_upd_ko.id_tipo_unita_doc = abil_key_ud_ko.id_tipo_unita_doc
	and ses_upd_ko.id_registro_unita_doc = abil_key_ud_ko.id_registro_unita_doc
	and ses_upd_ko.id_tipo_doc_princ = abil_key_ud_ko.id_tipo_doc_princ
	and ses_upd_ko.aa_key_unita_doc = abil_key_ud_ko.aa_key_unita_doc)
	
join DEC_TIPO_UNITA_DOC ti_ud
	on (ti_ud.id_tipo_unita_doc = ses_upd_ko.id_tipo_unita_doc)
join DEC_TIPO_DOC ti_doc_princ
	on (ti_doc_princ.id_tipo_doc = ses_upd_ko.id_tipo_doc_princ)
join DEC_CONTROLLO_WS contr_princ
	on (contr_princ.id_controllo_ws = ses_upd_ko.id_controllo_ws_princ)
join DEC_ERR_SACER err_princ
	on (err_princ.id_err_sacer = ses_upd_ko.id_err_sacer_princ)
	
join VRS_UPD_UNITA_DOC_KO upd_ud_ko
	on (upd_ud_ko.id_upd_unita_doc_ko = ses_upd_ko.id_upd_unita_doc_ko)

join DEC_TIPO_UNITA_DOC ti_ud_last
	on (ti_ud_last.id_tipo_unita_doc = upd_ud_ko.id_tipo_unita_doc_last)
join DEC_TIPO_DOC ti_doc_princ_last
	on (ti_doc_princ_last.id_tipo_doc = upd_ud_ko.id_tipo_doc_princ_last)
left join DEC_CONTROLLO_WS contr_princ_last
	on (contr_princ_last.id_controllo_ws = upd_ud_ko.id_controllo_ws_princ)
left join DEC_ERR_SACER err_princ_last
	on (err_princ_last.id_err_sacer = upd_ud_ko.id_err_sacer_princ);

-- changeset root:1751897635013-770
COMMENT ON COLUMN MON_V_LIS_UD_UPD_KO.ID_SES_UPD_UNITA_DOC_KO IS 'PK.1';

-- changeset root:1751897635013-771
CREATE OR REPLACE FORCE VIEW "MON_V_LIS_UD_UPD_KO_BY_ERR" ("ID_USER_IAM_COR", "ID_AMBIENTE", "NM_AMBIENTE", "ID_ENTE", "NM_ENTE", "ID_STRUT", "NM_STRUT", "ID_TIPO_UNITA_DOC", "NM_TIPO_UNITA_DOC", "ID_TIPO_UNITA_DOC_LAST", "NM_TIPO_UNITA_DOC_LAST", "ID_REGISTRO_UNITA_DOC", "CD_REGISTRO_KEY_UNITA_DOC", "ID_TIPO_DOC_PRINC", "NM_TIPO_DOC_PRINC", "ID_TIPO_DOC_PRINC_LAST", "NM_TIPO_DOC_PRINC_LAST", "AA_KEY_UNITA_DOC", "TI_STATO_SES_UPD_KO", "TI_STATO_UPD_UD_KO", "TS_INI_SES", "TS_INI_LAST_SES", "ID_SES_UPD_UNITA_DOC_KO", "ID_SES_UPD_UD_KO_LAST", "ID_UPD_UNITA_DOC_KO", "DS_TS_INI_SES", "DS_TS_INI_LAST_SES", "DS_ENTE_STRUT", "DS_UNITA_DOC", "CD_KEY_UNITA_DOC", "ID_CONTROLLO_WS_PRINC", "ID_CONTROLLO_WS_PRINC_LAST", "CD_CONTROLLO_WS_PRINC", "CD_CONTROLLO_WS_PRINC_LAST", "ID_ERR_SACER_PRINC", "ID_ERR_SACER_PRINC_LAST", "CD_ERR_PRINC", "CD_ERR_PRINC_LAST", "DS_ERR_PRINC", "DS_ERR_PRINC_LAST", "ID_CLASSE_ERR_SACER", "ID_ERR_SACER") AS select
 abil_key_ud_ko.id_user_iam_cor,
 abil_key_ud_ko.id_ambiente, abil_key_ud_ko.nm_ambiente,
 abil_key_ud_ko.id_ente, abil_key_ud_ko.nm_ente,
 abil_key_ud_ko.id_strut, abil_key_ud_ko.nm_strut,
 abil_key_ud_ko.id_tipo_unita_doc, ti_ud.nm_tipo_unita_doc,
 upd_ud_ko.id_tipo_unita_doc_last, ti_ud_last.nm_tipo_unita_doc as nm_tipo_unita_doc_last,
 abil_key_ud_ko.id_registro_unita_doc, upd_ud_ko.cd_registro_key_unita_doc,
 abil_key_ud_ko.id_tipo_doc_princ, ti_doc_princ.nm_tipo_doc nm_tipo_doc_princ,
 upd_ud_ko.id_tipo_doc_princ_last, ti_doc_princ_last.nm_tipo_doc as nm_tipo_doc_princ_last,
 abil_key_ud_ko.aa_key_unita_doc,
 
 ses_upd_ko.ti_stato_ses_upd_ko,
 upd_ud_ko.ti_stato_udp_ud_ko as ti_stato_upd_ud_ko,
 
 ses_upd_ko.ts_ini_ses,
 upd_ud_ko.ts_ini_last_ses,
 
 ses_upd_ko.id_ses_upd_unita_doc_ko,
 upd_ud_ko.id_ses_upd_ud_ko_last,

 upd_ud_ko.id_upd_unita_doc_ko,
 
 to_char(ses_upd_ko.ts_ini_ses, 'dd/mm/yyyy hh24:mi:ssxff') ds_ts_ini_ses,
 to_char(upd_ud_ko.ts_ini_last_ses, 'dd/mm/yyyy hh24:mi:ssxff') ds_ts_ini_last_ses,

 abil_key_ud_ko.nm_ente || '/' || abil_key_ud_ko.nm_strut ds_ente_strut,
 upd_ud_ko.cd_registro_key_unita_doc || '-' || upd_ud_ko.aa_key_unita_doc || '-' || upd_ud_ko.cd_key_unita_doc ds_unita_doc,
 upd_ud_ko.cd_key_unita_doc,

 ses_upd_ko.id_controllo_ws_princ, 
 upd_ud_ko.id_controllo_ws_princ as id_controllo_ws_princ_last, 

 contr_princ.cd_controllo_ws cd_controllo_ws_princ,
 contr_princ_last.cd_controllo_ws cd_controllo_ws_princ_last,

 ses_upd_ko.id_err_sacer_princ, 
 upd_ud_ko.id_err_sacer_princ as id_err_sacer_princ_last, 

 err_princ.cd_err cd_err_princ, 
 err_princ_last.cd_err cd_err_princ_last, 

 ses_upd_ko.ds_err_princ,
 upd_ud_ko.ds_err_princ as ds_err_princ_last,
 
 classe_err.id_classe_err_sacer, err.id_err_sacer

from MON_V_ABIL_KEY_TOTAL_UD_KO abil_key_ud_ko
join VRS_SES_UPD_UNITA_DOC_KO ses_upd_ko
	on (ses_upd_ko.id_strut = abil_key_ud_ko.id_strut
	and ses_upd_ko.id_tipo_unita_doc = abil_key_ud_ko.id_tipo_unita_doc
	and ses_upd_ko.id_registro_unita_doc = abil_key_ud_ko.id_registro_unita_doc
	and ses_upd_ko.id_tipo_doc_princ = abil_key_ud_ko.id_tipo_doc_princ
	and ses_upd_ko.aa_key_unita_doc = abil_key_ud_ko.aa_key_unita_doc)

join DEC_TIPO_UNITA_DOC ti_ud
	on (ti_ud.id_tipo_unita_doc = ses_upd_ko.id_tipo_unita_doc)
join DEC_TIPO_DOC ti_doc_princ
	on (ti_doc_princ.id_tipo_doc = ses_upd_ko.id_tipo_doc_princ)
join DEC_CONTROLLO_WS contr_princ
	on (contr_princ.id_controllo_ws = ses_upd_ko.id_controllo_ws_princ)
join DEC_ERR_SACER err_princ
	on (err_princ.id_err_sacer = ses_upd_ko.id_err_sacer_princ)

join VRS_UPD_UNITA_DOC_KO upd_ud_ko
	on (upd_ud_ko.id_upd_unita_doc_ko = ses_upd_ko.id_upd_unita_doc_ko)
    
join VRS_ERR_SES_UPD_UNITA_DOC_KO err_ses
	on (err_ses.id_ses_upd_unita_doc_ko = ses_upd_ko.id_ses_upd_unita_doc_ko)
join DEC_ERR_SACER err
	on (err.id_err_sacer = err_ses.id_err_sacer)
join DEC_CLASSE_ERR_SACER classe_err
	on (classe_err.id_classe_err_sacer = err.id_classe_err_sacer)

join DEC_TIPO_UNITA_DOC ti_ud_last
	on (ti_ud_last.id_tipo_unita_doc = upd_ud_ko.id_tipo_unita_doc_last)
join DEC_TIPO_DOC ti_doc_princ_last
	on (ti_doc_princ_last.id_tipo_doc = upd_ud_ko.id_tipo_doc_princ_last)
left join DEC_CONTROLLO_WS contr_princ_last
	on (contr_princ_last.id_controllo_ws = upd_ud_ko.id_controllo_ws_princ)
left join DEC_ERR_SACER err_princ_last
	on (err_princ_last.id_err_sacer = upd_ud_ko.id_err_sacer_princ);

-- changeset root:1751897635013-772
COMMENT ON COLUMN MON_V_LIS_UD_UPD_KO_BY_ERR.ID_SES_UPD_UNITA_DOC_KO IS 'PK.1';

-- changeset root:1751897635013-773
CREATE OR REPLACE FORCE VIEW "MON_V_LIS_UPD_UD_KO_BY_ERR" ("ID_USER_IAM_COR", "ID_AMBIENTE", "NM_AMBIENTE", "ID_ENTE", "NM_ENTE", "ID_STRUT", "NM_STRUT", "ID_TIPO_UNITA_DOC", "NM_TIPO_UNITA_DOC", "ID_REGISTRO_UNITA_DOC", "CD_REGISTRO_KEY_UNITA_DOC", "ID_TIPO_DOC_PRINC", "NM_TIPO_DOC_PRINC", "AA_KEY_UNITA_DOC", "TI_STATO_SES_UPD_KO", "TS_INI_SES", "ID_SES_UPD_UNITA_DOC_KO", "ID_UPD_UNITA_DOC_KO", "DS_TS_INI_SES", "DS_ENTE_STRUT", "DS_UNITA_DOC", "CD_KEY_UNITA_DOC", "ID_CONTROLLO_WS_PRINC", "CD_CONTROLLO_WS_PRINC", "ID_ERR_SACER_PRINC", "CD_ERR_PRINC", "DS_ERR_PRINC", "ID_CLASSE_ERR_SACER", "ID_ERR_SACER") AS select
 abil_key_ud_ko.id_user_iam_cor,
 abil_key_ud_ko.id_ambiente, abil_key_ud_ko.nm_ambiente,
 abil_key_ud_ko.id_ente, abil_key_ud_ko.nm_ente,
 abil_key_ud_ko.id_strut, abil_key_ud_ko.nm_strut,
 abil_key_ud_ko.id_tipo_unita_doc, ti_ud.nm_tipo_unita_doc,
 abil_key_ud_ko.id_registro_unita_doc, upd_ud_ko.cd_registro_key_unita_doc,
 abil_key_ud_ko.id_tipo_doc_princ, ti_doc_princ.nm_tipo_doc nm_tipo_doc_princ,
 abil_key_ud_ko.aa_key_unita_doc,
 
 ses_upd_ko.ti_stato_ses_upd_ko,
 ses_upd_ko.ts_ini_ses,
 
 ses_upd_ko.id_ses_upd_unita_doc_ko,
 ses_upd_ko.id_upd_unita_doc_ko,
 to_char(ses_upd_ko.ts_ini_ses, 'dd/mm/yyyy hh24:mi:ssxff') ds_ts_ini_ses,

 abil_key_ud_ko.nm_ente || '/' || abil_key_ud_ko.nm_strut ds_ente_strut,
 upd_ud_ko.cd_registro_key_unita_doc || '-' || upd_ud_ko.aa_key_unita_doc || '-' || upd_ud_ko.cd_key_unita_doc ds_unita_doc,
 upd_ud_ko.cd_key_unita_doc,

 ses_upd_ko.id_controllo_ws_princ, contr_princ.cd_controllo_ws cd_controllo_ws_princ,
 ses_upd_ko.id_err_sacer_princ, err_princ.cd_err cd_err_princ, ses_upd_ko.ds_err_princ,

 classe_err.id_classe_err_sacer, err.id_err_sacer

from MON_V_ABIL_KEY_TOTAL_UD_KO abil_key_ud_ko
join VRS_SES_UPD_UNITA_DOC_KO ses_upd_ko
	on (ses_upd_ko.id_strut = abil_key_ud_ko.id_strut
	and ses_upd_ko.id_tipo_unita_doc = abil_key_ud_ko.id_tipo_unita_doc
	and ses_upd_ko.id_registro_unita_doc = abil_key_ud_ko.id_registro_unita_doc
	and ses_upd_ko.id_tipo_doc_princ = abil_key_ud_ko.id_tipo_doc_princ
	and ses_upd_ko.aa_key_unita_doc = abil_key_ud_ko.aa_key_unita_doc)

join DEC_TIPO_UNITA_DOC ti_ud
	on (ti_ud.id_tipo_unita_doc = ses_upd_ko.id_tipo_unita_doc)
join DEC_TIPO_DOC ti_doc_princ
	on (ti_doc_princ.id_tipo_doc = ses_upd_ko.id_tipo_doc_princ)
join DEC_CONTROLLO_WS contr_princ
	on (contr_princ.id_controllo_ws = ses_upd_ko.id_controllo_ws_princ)
join DEC_ERR_SACER err_princ
	on (err_princ.id_err_sacer = ses_upd_ko.id_err_sacer_princ)

join VRS_UPD_UNITA_DOC_KO upd_ud_ko
	on (upd_ud_ko.id_upd_unita_doc_ko = ses_upd_ko.id_upd_unita_doc_ko)

join VRS_ERR_SES_UPD_UNITA_DOC_KO err_ses
	on (err_ses.id_ses_upd_unita_doc_ko = ses_upd_ko.id_ses_upd_unita_doc_ko)
join DEC_ERR_SACER err
	on (err.id_err_sacer = err_ses.id_err_sacer)
join DEC_CLASSE_ERR_SACER classe_err
	on (classe_err.id_classe_err_sacer = err.id_classe_err_sacer);

-- changeset root:1751897635013-774
COMMENT ON COLUMN MON_V_LIS_UPD_UD_KO_BY_ERR.ID_SES_UPD_UNITA_DOC_KO IS 'PK.1';

-- changeset root:1751897635013-775
CREATE OR REPLACE FORCE VIEW "ARO_V_RIC_UNITA_DOC_RIC_DS" ("ID_UNITA_DOC", "ID_STRUT_UNITA_DOC", "CD_REGISTRO_KEY_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "ID_SUB_STRUT", "DT_CREAZIONE", "FL_UNITA_DOC_FIRMATO", "TI_ESITO_VERIF_FIRME", "DS_MSG_ESITO_VERIF_FIRME", "ID_TIPO_UNITA_DOC", "ID_STRUT_TIPO_UNITA_DOC", "NM_TIPO_UNITA_DOC", "FL_FORZA_ACCETTAZIONE", "FL_FORZA_CONSERVAZIONE", "DS_KEY_ORD", "DL_OGGETTO_UNITA_DOC", "DT_REG_UNITA_DOC", "TI_CONSERVAZIONE", "NM_SISTEMA_MIGRAZ", "NI_ALLEG", "NI_ANNESSI", "NI_ANNOT", "ID_TIPO_DOC", "NM_TIPO_DOC_PRINC", "TI_STATO_CONSERVAZIONE", "TI_STATO_UD_ELENCO_VERS", "DS_LISTA_STATI_ELENCO_VERS") AS SELECT -- ===============================================================================
           -- colonne unità documentaria
           ud.id_unita_doc,
           ud.id_strut                                     id_strut_unita_doc,
           ud.cd_registro_key_unita_doc,
           ud.aa_key_unita_doc,
           ud.cd_key_unita_doc,
           ud.id_sub_strut,
           ud.dt_creazione,
           ud.fl_unita_doc_firmato,
           ud.ti_esito_verif_firme,
           ud.ds_msg_esito_verif_firme,
           ud.id_tipo_unita_doc,
           tipo_unita_doc.id_strut                         id_strut_tipo_unita_doc,
           tipo_unita_doc.nm_tipo_unita_doc,
           ud.fl_forza_accettazione,
           ud.fl_forza_conservazione,
           ud.ds_key_ord,
           ud.dl_oggetto_unita_doc,
           ud.dt_reg_unita_doc,
           ud.ti_conservazione,
           ud.nm_sistema_migraz,
           ud.ni_alleg,
           ud.ni_annessi,
           ud.ni_annot,
           -- ===============================================================================
           doc.id_tipo_doc,
           (SELECT tipo_doc_princ.nm_tipo_doc
              FROM ARO_DOC  doc_princ
                   JOIN DEC_TIPO_DOC tipo_doc_princ
                       ON (tipo_doc_princ.id_tipo_doc = doc_princ.id_tipo_doc)
             WHERE     doc_princ.id_unita_doc = ud.id_unita_doc
                   AND doc_princ.ti_doc = 'PRINCIPALE')    nm_tipo_doc_princ,
           --  colonne aggiunte

           ud.ti_stato_conservazione,
           ud.ti_stato_ud_elenco_vers,
           (SELECT LISTAGG (tmp.ti_stato_elenco_vers, '; ')
                       WITHIN GROUP (ORDER BY tmp.ti_stato_elenco_vers)
              FROM (SELECT ud_elenco.ti_stato_ud_elenco_vers    ti_stato_elenco_vers
                      FROM ARO_UNITA_DOC ud_elenco
                     WHERE ud_elenco.id_unita_doc = ud.id_unita_doc
                    UNION 
                    SELECT 
                           doc_elenco.ti_stato_doc_elenco_vers    ti_stato_elenco_vers
                      FROM ARO_DOC doc_elenco
                     WHERE     doc_elenco.id_unita_doc = ud.id_unita_doc
                           AND doc_elenco.ti_stato_doc_elenco_vers
                                   IS NOT NULL) tmp)       ds_lista_stati_elenco_vers
      FROM ARO_UNITA_DOC  ud
           JOIN DEC_TIPO_UNITA_DOC tipo_unita_doc
               ON (tipo_unita_doc.id_tipo_unita_doc = ud.id_tipo_unita_doc)
           JOIN ARO_DOC doc ON (doc.id_unita_doc = ud.id_unita_doc);

-- changeset root:1751897635013-776
CREATE OR REPLACE FORCE VIEW "ARO_V_LIS_UPD_COMP_UNITA_DOC" ("ID_UPD_COMP_UNITA_DOC", "ID_UPD_DOC_UNITA_DOC", "ID_UPD_UNITA_DOC", "ID_DOC", "DS_ELEMENTO", "NM_TIPO_DOC", "NI_ORD_COMP_DOC", "FL_UPD_INFO_VERS", "FL_UPD_DATI_SPEC", "FL_UPD_DATI_SPEC_MIGRAZ", "TI_DOC_ORD", "PG_DOC") AS select
 upd_comp.id_upd_comp_unita_doc, upd_doc.id_upd_doc_unita_doc, upd_doc.id_upd_unita_doc,
 upd_doc.id_doc, doc.ti_doc || ' ' || doc.pg_doc ds_elemento,
 tipo_doc.nm_tipo_doc, 
 
 comp.ni_ord_comp_doc,
 
 '1' fl_upd_info_vers, upd_comp.fl_upd_dati_spec, upd_comp.fl_upd_dati_spec_migraz,

 case
	when doc.ti_doc = 'PRINCIPALE' then 1
	when doc.ti_doc = 'ALLEGATO' then 2
	when doc.ti_doc = 'ANNESSO' then 3
	when doc.ti_doc = 'ANNOTAZIONE' then 4
 end ti_doc_ord, doc.pg_doc
 
from ARO_UPD_DOC_UNITA_DOC upd_doc
join ARO_DOC doc
	on (doc.id_doc = upd_doc.id_doc)
join DEC_TIPO_DOC tipo_doc
	on (tipo_doc.id_tipo_doc = doc.id_tipo_doc)
join ARO_UPD_COMP_UNITA_DOC upd_comp
	on (upd_comp.id_upd_doc_unita_doc = upd_doc.id_upd_doc_unita_doc)
join ARO_COMP_DOC comp
	on (comp.id_comp_doc = upd_comp.id_comp_doc);

-- changeset root:1751897635013-777
COMMENT ON COLUMN ARO_V_LIS_UPD_COMP_UNITA_DOC.ID_UPD_COMP_UNITA_DOC IS 'PK.1';

-- changeset root:1751897635013-778
CREATE OR REPLACE FORCE VIEW "ARO_V_LIS_UPD_DOC_UNITA_DOC" ("ID_UPD_DOC_UNITA_DOC", "ID_UPD_UNITA_DOC", "ID_DOC", "DS_ELEMENTO", "NM_TIPO_DOC", "FL_UPD_PROFILO_DOC", "FL_UPD_DATI_SPEC", "FL_UPD_DATI_SPEC_MIGRAZ", "TI_DOC_ORD", "PG_DOC") AS select
 upd_doc.id_upd_doc_unita_doc, upd_doc.id_upd_unita_doc,
 upd_doc.id_doc, doc.ti_doc || ' ' || doc.pg_doc ds_elemento,
 tipo_doc.nm_tipo_doc, 
  
 upd_doc.fl_upd_profilo_doc, upd_doc.fl_upd_dati_spec, upd_doc.fl_upd_dati_spec_migraz,

 case
	when doc.ti_doc = 'PRINCIPALE' then 1
	when doc.ti_doc = 'ALLEGATO' then 2
	when doc.ti_doc = 'ANNESSO' then 3
	when doc.ti_doc = 'ANNOTAZIONE' then 4
 end ti_doc_ord, doc.pg_doc
 
from ARO_UPD_DOC_UNITA_DOC upd_doc
join ARO_DOC doc
	on (doc.id_doc = upd_doc.id_doc)
join DEC_TIPO_DOC tipo_doc
	on (tipo_doc.id_tipo_doc = doc.id_tipo_doc);

-- changeset root:1751897635013-779
COMMENT ON COLUMN ARO_V_LIS_UPD_DOC_UNITA_DOC.ID_UPD_DOC_UNITA_DOC IS 'PK.1';

-- changeset root:1751897635013-780
CREATE OR REPLACE FORCE VIEW "ARO_V_CHK_AIP_REST_ARCH_UD" ("ID_RICHIESTA_RA", "FL_ESTRATTO", "FL_ERRORE", "FL_DA_ELABORARE", "FL_ALL_DA_ELAB") AS select ra.id_richiesta_ra,
(CASE 
    when not exists (select 1 from aro_aip_restituzione_archivio aipra 
                where
					aipra.id_richiesta_ra = ra.id_richiesta_ra
					and aipra.ti_tipologia_oggetto = 'UD'
					and (aipra.ti_stato <> 'ESTRATTO' OR aipra.ti_stato IS NULL))
			then 1
            else 0
     END) as "FL_ESTRATTO",
(CASE
    when NOT exists (select 1 from aro_aip_restituzione_archivio aipra 
					where aipra.id_richiesta_ra = ra.id_richiesta_ra
						and aipra.ti_tipologia_oggetto = 'UD'
						and((aipra.ti_stato <> 'ESTRATTO' AND aipra.ti_stato <> 'ERRORE' AND aipra.ti_stato is null)))
                then 1
                else 0
    END) as "FL_ERRORE",
(CASE 
	when exists (select 1 from aro_aip_restituzione_archivio aipra 
					where aipra.id_richiesta_ra = ra.id_richiesta_ra
						and aipra.ti_tipologia_oggetto = 'UD'
						and aipra.ti_stato = 'DA_ELABORARE')
				then 1
				else 0
	END) as "FL_DA_ELABORARE",
(CASE 
	when NOT exists (select 1 from aro_aip_restituzione_archivio aipra 
					where aipra.id_richiesta_ra = ra.id_richiesta_ra
						and aipra.ti_tipologia_oggetto = 'UD'
						and (aipra.ti_stato <> 'DA_ELABORARE' OR aipra.ti_stato IS NULL))
				then 1
				else 0
	END) as "FL_ALL_DA_ELAB"
                
from aro_richiesta_ra ra
group by ra.id_richiesta_ra;

-- changeset root:1751897635013-781
CREATE OR REPLACE FORCE VIEW "ARO_V_LIS_ITEM_RA" ("ID_RICHIESTA_RA", "ID_STRUT", "ANNO", "TOT_UD", "NUM_AIP", "DIMENSIONE", "NUM_DOCS", "NUM_ERRORI", "NUM_ESTRATTI", "AVANZAMENTO") AS SELECT
    a."ID_RICHIESTA",a."ID_STRUT",a."ANNO",a."TOT",a."NUM_AIP",a."dimensione",a."NUM_DOCUMENTI",a."NUM_ERRORI",a."NUM_ESTRATTI",
    CAST((a.num_estratti * 100 / a.num_aip) AS NUMBER(10,2)) "AVANZAMENTO"
FROM
    (
        SELECT
            ra.id_richiesta_ra    ID_RICHIESTA,ud.id_strut,
            ud.aa_key_unita_doc   ANNO,
            COUNT(ud.id_unita_doc) tot,
            COUNT(aip.id_indice_aip) num_aip,
            cast(SUM(ra.dim)/1048576 as number (20,2)) "dimensione",
            SUM(ni_annot) + SUM(ni_annessi) + SUM(ni_alleg) + COUNT(DISTINCT aip.id_indice_aip) "NUM_DOCUMENTI",
            SUM(
                CASE ra.ti_stato
                    WHEN 'ERRORE' THEN
                        1
                    ELSE
                        0
                END
            ) NUM_ERRORI,
            SUM(
                CASE ra.ti_stato
                    WHEN 'ESTRATTO' THEN
                        1
                    ELSE
                        0
                END
            ) num_estratti
        FROM
            aro_indice_aip_ud               aip
            JOIN aro_unita_doc                   ud ON ud.id_unita_doc = aip.id_unita_doc
            JOIN aro_aip_restituzione_archivio   ra ON ra.id_indice_aip = aip.id_indice_aip
        GROUP BY
            ra.id_richiesta_ra,
            ud.aa_key_unita_doc,
            ud.id_strut
    ) a;

-- changeset root:1751897635013-782
CREATE OR REPLACE FORCE VIEW "STAT_V_CONTA_UD_PRINC" ("ID_STRUT", "ID_REGISTRO_UNITA_DOC", "AA_KEY_UNITA_DOC", "ID_CATEG_TIPO_UNITA_DOC", "ID_TIPO_UNITA_DOC", "ID_TIPO_DOC_PRINCIPALE", "DT_CONTA", "NUM_UD") AS select 
 ud.id_strut, ud.id_registro_unita_doc, ud.aa_key_unita_doc, tipo_ud.id_categ_tipo_unita_doc, ud.id_tipo_unita_doc, doc_princ.id_tipo_doc, trunc(doc_princ.dt_creazione), 
 nvl(count(*), 0) num_ud
from ARO_UNITA_DOC ud
join DEC_TIPO_UNITA_DOC tipo_ud
 on (tipo_ud.id_tipo_unita_doc = ud.id_tipo_unita_doc)
join ARO_DOC doc_princ
 on (doc_princ.id_unita_doc = ud.id_unita_doc
 and doc_princ.ti_doc = 'PRINCIPALE')

group by ud.id_strut, ud.id_registro_unita_doc, ud.aa_key_unita_doc, tipo_ud.id_categ_tipo_unita_doc, ud.id_tipo_unita_doc, doc_princ.id_tipo_doc, trunc(doc_princ.dt_creazione);

-- changeset root:1751897635013-783
CREATE OR REPLACE FORCE VIEW "MON_V_CHK_DOC_TIPO_UD" ("ID_TIPO_UNITA_DOC", "FL_DOC_CORR", "FL_DOC_30GG", "FL_DOC_ATTESA_MEM_CORR", "FL_DOC_ATTESA_MEM_30GG", "FL_DOC_ATTESA_SCHED_CORR", "FL_DOC_ATTESA_SCHED_30GG", "FL_DOC_NOSEL_SCHED_CORR", "FL_DOC_NOSEL_SCHED_30GG") AS select
 tipo_ud.id_tipo_unita_doc,

--
--					doc TOTALE
--
case
	when exists (select * 
				from ARO_DOC doc, ARO_UNITA_DOC ud
				where doc.id_strut = tipo_ud.id_strut 
				and doc.dt_creazione between trunc(sysdate) and sysdate + 1/24
				and doc.dt_annul = to_date('31/12/2444', 'dd/mm/yyyy')
				and doc.ti_creazione = 'AGGIUNTA_DOCUMENTO'
				
				and ud.id_unita_doc = doc.id_unita_doc
				and ud.id_tipo_unita_doc = tipo_ud.id_tipo_unita_doc
				)
			then '1'
			else '0'
end fl_doc_corr,
case
	when (select nvl(sum(ni_doc_agg), 0)
		  from MON_CONTA_UD_DOC_COMP conta_doc
		  where conta_doc.id_strut = tipo_ud.id_strut 
		  and conta_doc.dt_rif_conta between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
		  and conta_doc.id_tipo_unita_doc = tipo_ud.id_tipo_unita_doc
		  ) -
		 (select nvl(count(*), 0)
		  from ARO_ITEM_RICH_ANNUL_VERS item_annul, ARO_UNITA_DOC ud,  ARO_DOC doc
		  where item_annul.id_strut = tipo_ud.id_strut
		  and item_annul.ti_item_rich_annul_vers = 'UNI_DOC'
		  and item_annul.ti_stato_item = 'ANNULLATO'
		  
		  and ud.id_unita_doc = item_annul.id_unita_doc
		  and ud.id_tipo_unita_doc = tipo_ud.id_tipo_unita_doc
		  
		  and doc.id_unita_doc = ud.id_unita_doc
		  and doc.ti_creazione = 'AGGIUNTA_DOCUMENTO'
		  and doc.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
		 ) != 0
			then '1'
			else '0'
end fl_doc_30gg,


--
--						doc IN_ATTESA_MEMORIZZAZIONE
--
case
	when exists (select * 
				from ELV_DOC_AGG_DA_ELAB_ELENCO doc_da_elab, ARO_DOC doc, ARO_UNITA_DOC ud
				where doc_da_elab.id_strut = tipo_ud.id_strut 
				and doc_da_elab.ti_stato_doc_da_elab = 'IN_ATTESA_MEMORIZZAZIONE'
				and doc_da_elab.dt_creazione between trunc(sysdate) and sysdate + 1/24
				
				and doc.id_doc = doc_da_elab.id_doc
				and ud.id_unita_doc = doc.id_unita_doc
				and ud.id_tipo_unita_doc = tipo_ud.id_tipo_unita_doc
				)
			then '1'
			else '0'
end fl_doc_attesa_mem_corr,
case
	when exists (select * 
				from ELV_DOC_AGG_DA_ELAB_ELENCO doc_da_elab, ARO_DOC doc, ARO_UNITA_DOC ud
				where doc_da_elab.id_strut = tipo_ud.id_strut 
				and doc_da_elab.ti_stato_doc_da_elab = 'IN_ATTESA_MEMORIZZAZIONE'
				and doc_da_elab.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
				
				and doc.id_doc = doc_da_elab.id_doc
				and ud.id_unita_doc = doc.id_unita_doc
				and ud.id_tipo_unita_doc = tipo_ud.id_tipo_unita_doc
				)
			then '1'
			else '0'
end fl_doc_attesa_mem_30gg,

--
--						doc IN_ATTESA_SCHED
--
case
	when exists (select * 
				from ELV_DOC_AGG_DA_ELAB_ELENCO doc_da_elab, ARO_DOC doc, ARO_UNITA_DOC ud
				where doc_da_elab.id_strut = tipo_ud.id_strut 
				and doc_da_elab.ti_stato_doc_da_elab = 'IN_ATTESA_SCHED'
				and doc_da_elab.dt_creazione between trunc(sysdate) and sysdate + 1/24
				
				and doc.id_doc = doc_da_elab.id_doc
				and ud.id_unita_doc = doc.id_unita_doc
				and ud.id_tipo_unita_doc = tipo_ud.id_tipo_unita_doc
				)
			then '1'
			else '0'
end fl_doc_attesa_sched_corr,
case
	when exists (select * 
				from ELV_DOC_AGG_DA_ELAB_ELENCO doc_da_elab, ARO_DOC doc, ARO_UNITA_DOC ud
				where doc_da_elab.id_strut = tipo_ud.id_strut 
				and doc_da_elab.ti_stato_doc_da_elab = 'IN_ATTESA_SCHED'
				and doc_da_elab.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
				
				and doc.id_doc = doc_da_elab.id_doc
				and ud.id_unita_doc = doc.id_unita_doc
				and ud.id_tipo_unita_doc = tipo_ud.id_tipo_unita_doc
				)
			then '1'
			else '0'
end fl_doc_attesa_sched_30gg,

--
--						doc NON_SELEZ_SCHED
--
case
	when exists (select * 
				from ELV_DOC_AGG_DA_ELAB_ELENCO doc_da_elab, ARO_DOC doc, ARO_UNITA_DOC ud
				where doc_da_elab.id_strut = tipo_ud.id_strut 
				and doc_da_elab.ti_stato_doc_da_elab = 'NON_SELEZ_SCHED'
				and doc_da_elab.dt_creazione between trunc(sysdate) and sysdate + 1/24
				
				and doc.id_doc = doc_da_elab.id_doc
				and ud.id_unita_doc = doc.id_unita_doc
				and ud.id_tipo_unita_doc = tipo_ud.id_tipo_unita_doc
				)
			then '1'
end fl_doc_nosel_sched_corr,
case
	when exists (select * 
				from ELV_DOC_AGG_DA_ELAB_ELENCO doc_da_elab, ARO_DOC doc, ARO_UNITA_DOC ud
				where doc_da_elab.id_strut = tipo_ud.id_strut 
				and doc_da_elab.ti_stato_doc_da_elab = 'NON_SELEZ_SCHED'
				and doc_da_elab.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
				
				and doc.id_doc = doc_da_elab.id_doc
				and ud.id_unita_doc = doc.id_unita_doc
				and ud.id_tipo_unita_doc = tipo_ud.id_tipo_unita_doc
				)
			then '1'
			else '0'
end fl_doc_nosel_sched_30gg


from DEC_TIPO_UNITA_DOC tipo_ud;

-- changeset root:1751897635013-784
COMMENT ON COLUMN MON_V_CHK_DOC_TIPO_UD.ID_TIPO_UNITA_DOC IS 'PK.1 relativa a tabella DEC_TIPO_UNITA_DOC';

-- changeset root:1751897635013-785
CREATE OR REPLACE FORCE VIEW "STAT_V_CONTA_COMP" ("ID_STRUT", "ID_REGISTRO_UNITA_DOC", "AA_KEY_UNITA_DOC", "ID_CATEG_TIPO_UNITA_DOC", "DT_CONTA", "NUM_COMP", "NUM_BYTE") AS select 
 ud.id_strut, ud.id_registro_unita_doc, ud.aa_key_unita_doc, tipo_ud.id_categ_tipo_unita_doc, trunc(doc.dt_creazione), 
 nvl(count(*), 0) num_comp, nvl(sum(ni_size_file_calc), 0) num_byte
from ARO_UNITA_DOC ud
join DEC_TIPO_UNITA_DOC tipo_ud
 on (tipo_ud.id_tipo_unita_doc = ud.id_tipo_unita_doc)
join ARO_DOC doc
 on (doc.id_unita_doc = ud.id_unita_doc)
join ARO_STRUT_DOC  strut_doc
 on (strut_doc.id_doc = doc.id_doc)
join ARO_COMP_DOC comp
 on (comp.id_strut_doc = strut_doc.id_strut_doc)

group by ud.id_strut, ud.id_registro_unita_doc, ud.aa_key_unita_doc, tipo_ud.id_categ_tipo_unita_doc, trunc(doc.dt_creazione);

-- changeset root:1751897635013-786
CREATE OR REPLACE FORCE VIEW "STAT_V_CONTA_COMP_PRINC" ("ID_STRUT", "ID_REGISTRO_UNITA_DOC", "AA_KEY_UNITA_DOC", "ID_CATEG_TIPO_UNITA_DOC", "ID_TIPO_UNITA_DOC", "ID_TIPO_DOC_PRINCIPALE", "DT_CONTA", "NUM_COMP", "NUM_BYTE") AS select 
 ud.id_strut, ud.id_registro_unita_doc, ud.aa_key_unita_doc, tipo_ud.id_categ_tipo_unita_doc, ud.id_tipo_unita_doc, doc_princ.id_tipo_doc, trunc(doc.dt_creazione), 
 nvl(count(*), 0) num_comp, nvl(sum(ni_size_file_calc), 0) num_byte
from ARO_UNITA_DOC ud
join DEC_TIPO_UNITA_DOC tipo_ud
 on (tipo_ud.id_tipo_unita_doc = ud.id_tipo_unita_doc)
join ARO_DOC doc_princ
 on (doc_princ.id_unita_doc = ud.id_unita_doc
 and doc_princ.ti_doc = 'PRINCIPALE')

join ARO_DOC doc
 on (doc.id_unita_doc = ud.id_unita_doc)
join ARO_STRUT_DOC  strut_doc
 on (strut_doc.id_doc = doc.id_doc)
join ARO_COMP_DOC comp
 on (comp.id_strut_doc = strut_doc.id_strut_doc)

group by ud.id_strut, ud.id_registro_unita_doc, ud.aa_key_unita_doc, tipo_ud.id_categ_tipo_unita_doc, ud.id_tipo_unita_doc, doc_princ.id_tipo_doc, trunc(doc.dt_creazione);

-- changeset root:1751897635013-787
CREATE OR REPLACE FORCE VIEW "STAT_V_CONTA_DOC" ("ID_STRUT", "ID_REGISTRO_UNITA_DOC", "AA_KEY_UNITA_DOC", "ID_CATEG_TIPO_UNITA_DOC", "DT_CONTA", "NUM_DOC") AS select 
 ud.id_strut, ud.id_registro_unita_doc, ud.aa_key_unita_doc, tipo_ud.id_categ_tipo_unita_doc, trunc(doc.dt_creazione), 
 nvl(count(*), 0) num_doc
from ARO_UNITA_DOC ud
join DEC_TIPO_UNITA_DOC tipo_ud
 on (tipo_ud.id_tipo_unita_doc = ud.id_tipo_unita_doc)
join ARO_DOC doc
 on (doc.id_unita_doc = ud.id_unita_doc)

group by ud.id_strut, ud.id_registro_unita_doc, ud.aa_key_unita_doc, tipo_ud.id_categ_tipo_unita_doc, trunc(doc.dt_creazione);

-- changeset root:1751897635013-788
CREATE OR REPLACE FORCE VIEW "STAT_V_CONTA_DOC_PRINC" ("ID_STRUT", "ID_REGISTRO_UNITA_DOC", "AA_KEY_UNITA_DOC", "ID_CATEG_TIPO_UNITA_DOC", "ID_TIPO_UNITA_DOC", "ID_TIPO_DOC_PRINCIPALE", "DT_CONTA", "NUM_DOC") AS select 
 ud.id_strut, ud.id_registro_unita_doc, ud.aa_key_unita_doc, tipo_ud.id_categ_tipo_unita_doc, ud.id_tipo_unita_doc, doc_princ.id_tipo_doc, trunc(doc.dt_creazione), 
 nvl(count(*), 0) num_doc
from ARO_UNITA_DOC ud
join DEC_TIPO_UNITA_DOC tipo_ud
 on (tipo_ud.id_tipo_unita_doc = ud.id_tipo_unita_doc)
join ARO_DOC doc_princ
 on (doc_princ.id_unita_doc = ud.id_unita_doc
 and doc_princ.ti_doc = 'PRINCIPALE')

join ARO_DOC doc
 on (doc.id_unita_doc = ud.id_unita_doc)

group by ud.id_strut, ud.id_registro_unita_doc, ud.aa_key_unita_doc, tipo_ud.id_categ_tipo_unita_doc, ud.id_tipo_unita_doc, doc_princ.id_tipo_doc, trunc(doc.dt_creazione);

-- changeset root:1751897635013-789
CREATE OR REPLACE FORCE VIEW "STAT_V_CONTA_UD" ("ID_STRUT", "ID_REGISTRO_UNITA_DOC", "AA_KEY_UNITA_DOC", "ID_CATEG_TIPO_UNITA_DOC", "DT_CONTA", "NUM_UD") AS select 
 ud.id_strut, ud.id_registro_unita_doc, ud.aa_key_unita_doc, tipo_ud.id_categ_tipo_unita_doc, trunc(ud.dt_creazione), 
 nvl(count(*), 0) num_ud
from ARO_UNITA_DOC ud
join DEC_TIPO_UNITA_DOC tipo_ud
 on (tipo_ud.id_tipo_unita_doc = ud.id_tipo_unita_doc)

group by ud.id_strut, ud.id_registro_unita_doc, ud.aa_key_unita_doc, tipo_ud.id_categ_tipo_unita_doc, trunc(ud.dt_creazione);

-- changeset root:1751897635013-790
CREATE OR REPLACE FORCE VIEW "VOL_V_CNT_UD_DOC_COMP_TIPO_UD" ("ID_VOLUME_CONSERV", "NM_TIPO_UNITA_DOC", "NI_UD", "NI_DOC", "NI_COMP") AS select 
 vol.id_volume_conserv, conta_ud.nm_tipo_unita_doc, conta_ud.ni_ud, conta_doc.ni_doc, conta_comp.ni_comp
from VOL_VOLUME_CONSERV vol,

	(select app_ud.id_volume_conserv, tipo_ud.nm_tipo_unita_doc, count(*) ni_ud
	from VOL_APPART_UNITA_DOC_VOLUME app_ud
	join ARO_UNITA_DOC ud
	 on (ud.id_unita_doc = app_ud.id_unita_doc)
	join DEC_TIPO_UNITA_DOC tipo_ud
	 on (tipo_ud.id_tipo_unita_doc = ud.id_tipo_unita_doc)
	
	group by app_ud.id_volume_conserv, tipo_ud.nm_tipo_unita_doc
	) conta_ud,
	
	(select app_ud.id_volume_conserv, tipo_ud.nm_tipo_unita_doc, count(*) ni_doc
	from VOL_APPART_UNITA_DOC_VOLUME app_ud
	join ARO_UNITA_DOC ud
	 on (ud.id_unita_doc = app_ud.id_unita_doc)
	join DEC_TIPO_UNITA_DOC tipo_ud
	 on (tipo_ud.id_tipo_unita_doc = ud.id_tipo_unita_doc)
	join VOL_APPART_DOC_VOLUME app_doc
	 on (app_doc.id_appart_unita_doc_volume = app_ud.id_appart_unita_doc_volume)
	
	group by app_ud.id_volume_conserv, tipo_ud.nm_tipo_unita_doc
	) conta_doc,
	
	(select app_ud.id_volume_conserv, tipo_ud.nm_tipo_unita_doc, count(*) ni_comp
	from VOL_APPART_UNITA_DOC_VOLUME app_ud
	join ARO_UNITA_DOC ud
	 on (ud.id_unita_doc = app_ud.id_unita_doc)
	join DEC_TIPO_UNITA_DOC tipo_ud
	 on (tipo_ud.id_tipo_unita_doc = ud.id_tipo_unita_doc)
	join VOL_APPART_DOC_VOLUME app_doc
	 on (app_doc.id_appart_unita_doc_volume = app_ud.id_appart_unita_doc_volume)
	join VOL_APPART_COMP_VOLUME app_comp
	 on (app_comp.id_appart_doc_volume = app_doc.id_appart_doc_volume)
	
	group by app_ud.id_volume_conserv, tipo_ud.nm_tipo_unita_doc
	) conta_comp

where conta_ud.id_volume_conserv = vol.id_volume_conserv
and conta_doc.id_volume_conserv = conta_ud.id_volume_conserv
and conta_doc.nm_tipo_unita_doc = conta_ud.nm_tipo_unita_doc
and conta_comp.id_volume_conserv = conta_doc.id_volume_conserv
and conta_comp.nm_tipo_unita_doc = conta_doc.nm_tipo_unita_doc
order by conta_ud.nm_tipo_unita_doc;

-- changeset root:1751897635013-791
COMMENT ON COLUMN VOL_V_CNT_UD_DOC_COMP_TIPO_UD.ID_VOLUME_CONSERV IS 'PK.1';

-- changeset root:1751897635013-792
COMMENT ON COLUMN VOL_V_CNT_UD_DOC_COMP_TIPO_UD.NM_TIPO_UNITA_DOC IS 'PK.2';

-- changeset root:1751897635013-793
CREATE OR REPLACE FORCE VIEW "DEC_V_LIS_SIS_VERS_BY_TIPO_UD" ("ID_TIPO_UNITA_DOC", "ID_SISTEMA_VERSANTE", "NM_SISTEMA_VERSANTE", "ID_TIPO_SERVIZIO", "ID_TIPO_SERVIZIO_ATTIV", "DT_EROG", "DT_LAST_EROG") AS SELECT tot_tipo_ud.id_tipo_unita_doc,
             sist_vers.id_sistema_versante,
             sist_vers.nm_sistema_versante,
             tipo_ud.id_tipo_servizio,
             tipo_ud.id_tipo_servizio_attiv,
             MIN (tot_tipo_ud.dt_rif_conta)     dt_erog,
             MAX (tot_tipo_ud.dt_rif_conta)     dt_last_erog
        FROM MON_TIPO_UNITA_DOC_USER_VERS tot_tipo_ud
             JOIN DEC_TIPO_UNITA_DOC tipo_ud
                 ON (tipo_ud.id_tipo_unita_doc = tot_tipo_ud.id_tipo_unita_doc)
             JOIN sacer_iam.USR_USER usr
                 ON (usr.id_user_iam = tot_tipo_ud.id_user_iam)
             JOIN sacer_iam.APL_SISTEMA_VERSANTE sist_vers
                 ON (sist_vers.id_sistema_versante = usr.id_sistema_versante)
    GROUP BY tot_tipo_ud.id_tipo_unita_doc,
             sist_vers.id_sistema_versante,
             sist_vers.nm_sistema_versante,
             tipo_ud.id_tipo_servizio,
             tipo_ud.id_tipo_servizio_attiv;

-- changeset root:1751897635013-794
COMMENT ON COLUMN DEC_V_LIS_SIS_VERS_BY_TIPO_UD.ID_TIPO_UNITA_DOC IS 'PK.1';

-- changeset root:1751897635013-795
COMMENT ON COLUMN DEC_V_LIS_SIS_VERS_BY_TIPO_UD.ID_SISTEMA_VERSANTE IS 'PK.2';

-- changeset root:1751897635013-796
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_UD_TIPO_UD" ("ID_STRUT", "ID_TIPO_UNITA_DOC", "TI_STATO_UD", "TI_DT_CREAZIONE", "NI_UD") AS select 
 ud_da_elab.id_strut id_strut, 
 ud.id_tipo_unita_doc id_tipo_unita_doc,
 ud_da_elab.ti_stato_ud_da_elab ti_stato_ud,
 case
	when ud_da_elab.dt_creazione between trunc(sysdate) and sysdate + 1/24 then 'OGGI'
	else '30gg'
 end ti_dt_creazione,
 
 count(*) ni_ud

from ELV_UD_VERS_DA_ELAB_ELENCO ud_da_elab
join ARO_UNITA_DOC ud
 on (ud.id_unita_doc = ud_da_elab.id_unita_doc)
where ud_da_elab.dt_creazione between trunc(sysdate - 30) and sysdate + 1/24

group by ud_da_elab.id_strut, ud.id_tipo_unita_doc, ud_da_elab.ti_stato_ud_da_elab,  
		 case
			when ud_da_elab.dt_creazione between trunc(sysdate) and sysdate + 1/24 then 'OGGI'
			else '30gg'
		 end

UNION

select
 tmp.id_strut id_strut,
 tmp.id_tipo_unita_doc id_tipo_unita_doc,
 'TOTALE' ti_stato_ud, 
 'OGGI' ti_dt_creazione, 
 tmp.ni_ud
from (select 
	   doc.id_strut id_strut,
	   ud.id_tipo_unita_doc id_tipo_unita_doc,
	   count(*) ni_ud
	  from ARO_DOC doc
	  join ARO_UNITA_DOC ud
	   on (ud.id_unita_doc = doc.id_unita_doc)
	  where doc.ti_doc = 'PRINCIPALE'
	  and doc.dt_creazione between trunc(sysdate) and sysdate + 1/24
	  and doc.dt_annul = to_date('31/12/2444', 'dd/mm/yyyy')
	  and doc.ti_creazione = 'VERSAMENTO_UNITA_DOC'
	  group by doc.id_strut, ud.id_tipo_unita_doc
	) tmp

UNION
	  
select 
 tipo_ud.id_strut id_strut,
 tipo_ud.id_tipo_unita_doc id_tipo_unita_doc,
'TOTALE' ti_stato_ud, 
'30gg' ti_dt_creazione,

(select nvl(sum(ni_unita_doc_vers), 0)
 from MON_CONTA_UD_DOC_COMP conta_ud
 where conta_ud.id_strut = tipo_ud.id_strut 
 and conta_ud.id_tipo_unita_doc = tipo_ud.id_tipo_unita_doc
 and conta_ud.dt_rif_conta between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
) -
(select nvl(count(*), 0)
 from ARO_ITEM_RICH_ANNUL_VERS item_annul, ARO_UNITA_DOC ud
 where item_annul.id_strut = tipo_ud.id_strut
 and item_annul.ti_item_rich_annul_vers = 'UNI_DOC'
 and item_annul.ti_stato_item = 'ANNULLATO'
 and ud.id_unita_doc = item_annul.id_unita_doc
 and ud.id_tipo_unita_doc = tipo_ud.id_tipo_unita_doc
 and ud.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
) ni_ud
from DEC_TIPO_UNITA_DOC tipo_ud;

-- changeset root:1751897635013-797
COMMENT ON COLUMN MON_V_CNT_UD_TIPO_UD.ID_STRUT IS 'PK.1 relativa a tabella ORG_STRUT';

-- changeset root:1751897635013-798
COMMENT ON COLUMN MON_V_CNT_UD_TIPO_UD.ID_TIPO_UNITA_DOC IS 'PK.2 relativa a tabella DEC_TIPO_UNITA_DOC';

-- changeset root:1751897635013-799
COMMENT ON COLUMN MON_V_CNT_UD_TIPO_UD.TI_STATO_UD IS 'PK.3';

-- changeset root:1751897635013-800
COMMENT ON COLUMN MON_V_CNT_UD_TIPO_UD.TI_DT_CREAZIONE IS 'PK.4';

-- changeset root:1751897635013-801
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_UD_TIPO_UD_B30" ("ID_STRUT", "ID_TIPO_UNITA_DOC", "TI_STATO_UD", "NI_UD") AS select 
 ud_da_elab.id_strut id_strut, 
 ud.id_tipo_unita_doc id_tipo_unita_doc,
 ud_da_elab.ti_stato_ud_da_elab ti_stato_ud,
 
 count(*) ni_ud

from ELV_UD_VERS_DA_ELAB_ELENCO ud_da_elab
join ARO_UNITA_DOC ud
 on (ud.id_unita_doc = ud_da_elab.id_unita_doc)
where ud_da_elab.dt_creazione between to_date('01-01-2000', 'dd-mm-yyyy') and to_date(to_char(trunc(sysdate - 31), 'dd-mm-yyyy') || '23:59:59', 'dd-mm-yyyy hh24:mi:ss')

group by ud_da_elab.id_strut, ud.id_tipo_unita_doc, ud_da_elab.ti_stato_ud_da_elab

UNION
	  
select 
 tipo_ud.id_strut id_strut,
 tipo_ud.id_tipo_unita_doc id_tipo_unita_doc,
'TOTALE' ti_stato_ud, 

(select nvl(sum(ni_unita_doc_vers), 0)
 from MON_CONTA_UD_DOC_COMP conta_ud
 where conta_ud.id_strut = tipo_ud.id_strut 
 and conta_ud.id_tipo_unita_doc = tipo_ud.id_tipo_unita_doc
 and conta_ud.dt_rif_conta between to_date('01-01-2000', 'dd-mm-yyyy') and to_date(to_char(trunc(sysdate - 31), 'dd-mm-yyyy') || '23:59:59', 'dd-mm-yyyy hh24:mi:ss')
) -
(select nvl(count(*), 0)
 from ARO_ITEM_RICH_ANNUL_VERS item_annul, ARO_UNITA_DOC ud
 where item_annul.id_strut = tipo_ud.id_strut
 and item_annul.ti_item_rich_annul_vers = 'UNI_DOC'
 and item_annul.ti_stato_item = 'ANNULLATO'
 and ud.id_unita_doc = item_annul.id_unita_doc
 and ud.id_tipo_unita_doc = tipo_ud.id_tipo_unita_doc
 and ud.dt_creazione between to_date('01-01-2000', 'dd-mm-yyyy') and to_date(to_char(trunc(sysdate - 31), 'dd-mm-yyyy') || '23:59:59', 'dd-mm-yyyy hh24:mi:ss')
) ni_ud
from DEC_TIPO_UNITA_DOC tipo_ud;

-- changeset root:1751897635013-802
COMMENT ON COLUMN MON_V_CNT_UD_TIPO_UD_B30.ID_STRUT IS 'PK.1';

-- changeset root:1751897635013-803
COMMENT ON COLUMN MON_V_CNT_UD_TIPO_UD_B30.ID_TIPO_UNITA_DOC IS 'PK.2';

-- changeset root:1751897635013-804
COMMENT ON COLUMN MON_V_CNT_UD_TIPO_UD_B30.TI_STATO_UD IS 'PK.3';

-- changeset root:1751897635013-805
CREATE OR REPLACE FORCE VIEW "MON_V_CHK_UD_TIPO_UD" ("ID_TIPO_UNITA_DOC", "FL_UD_CORR", "FL_UD_30GG", "FL_UD_ATTESA_MEM_CORR", "FL_UD_ATTESA_MEM_30GG", "FL_UD_ATTESA_SCHED_CORR", "FL_UD_ATTESA_SCHED_30GG", "FL_UD_NOSEL_SCHED_CORR", "FL_UD_NOSEL_SCHED_30GG") AS select
 tipo_ud.id_tipo_unita_doc,
 
--
--					ud TOTALE
--
case
	when exists (select * 
				from ARO_DOC doc, ARO_UNITA_DOC ud
				where doc.id_strut = tipo_ud.id_strut 
				and doc.ti_doc = 'PRINCIPALE'
				and doc.dt_creazione between trunc(sysdate) and sysdate + 1/24
				and doc.dt_annul = to_date('31/12/2444', 'dd/mm/yyyy')
				and doc.ti_creazione = 'VERSAMENTO_UNITA_DOC'
				
				and ud.id_unita_doc = doc.id_unita_doc
				and ud.id_tipo_unita_doc = tipo_ud.id_tipo_unita_doc
				)
			then '1'
			else '0'
end fl_ud_corr,
case
	when (select nvl(sum(ni_unita_doc_vers), 0)
		  from MON_CONTA_UD_DOC_COMP conta_ud
		  where conta_ud.id_strut = tipo_ud.id_strut 
		  and conta_ud.dt_rif_conta between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
		  and conta_ud.id_tipo_unita_doc = tipo_ud.id_tipo_unita_doc
		  ) -
		 (select nvl(count(*), 0)
		  from ARO_ITEM_RICH_ANNUL_VERS item_annul, ARO_UNITA_DOC ud
		  where item_annul.id_strut = tipo_ud.id_strut
		  and item_annul.ti_item_rich_annul_vers = 'UNI_DOC'
		  and item_annul.ti_stato_item = 'ANNULLATO'
		  and ud.id_unita_doc = item_annul.id_unita_doc
		  and ud.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
		  and ud.id_tipo_unita_doc = tipo_ud.id_tipo_unita_doc
		 ) != 0
			then '1'
			else '0'
end fl_ud_30gg,

--
--						ud IN_ATTESA_MEMORIZZAZIONE
--
case
	when exists (select * 
				from ELV_UD_VERS_DA_ELAB_ELENCO ud_da_elab, ARO_UNITA_DOC ud
				where ud_da_elab.id_strut = tipo_ud.id_strut 
				and ud_da_elab.ti_stato_ud_da_elab = 'IN_ATTESA_MEMORIZZAZIONE'
				and ud_da_elab.dt_creazione between trunc(sysdate) and sysdate + 1/24
				
				and ud.id_unita_doc = ud_da_elab.id_unita_doc
				and ud.id_tipo_unita_doc = tipo_ud.id_tipo_unita_doc
				)
			then '1'
			else '0'
end fl_ud_attesa_mem_corr,
case
	when exists (select * 
				from ELV_UD_VERS_DA_ELAB_ELENCO ud_da_elab, ARO_UNITA_DOC ud
				where ud_da_elab.id_strut = tipo_ud.id_strut 
				and ud_da_elab.ti_stato_ud_da_elab = 'IN_ATTESA_MEMORIZZAZIONE'
				and ud_da_elab.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
				
				and ud.id_unita_doc = ud_da_elab.id_unita_doc
				and ud.id_tipo_unita_doc = tipo_ud.id_tipo_unita_doc
				)
			then '1'
			else '0'
end fl_ud_attesa_mem_30gg,

--
--						ud IN_ATTESA_SCHED
--
case
	when exists (select * 
				from ELV_UD_VERS_DA_ELAB_ELENCO ud_da_elab, ARO_UNITA_DOC ud
				where ud_da_elab.id_strut = tipo_ud.id_strut 
				and ud_da_elab.ti_stato_ud_da_elab = 'IN_ATTESA_SCHED'
				and ud_da_elab.dt_creazione between trunc(sysdate) and sysdate + 1/24
				
				and ud.id_unita_doc = ud_da_elab.id_unita_doc
				and ud.id_tipo_unita_doc = tipo_ud.id_tipo_unita_doc
				)
			then '1'
			else '0'
end fl_ud_attesa_sched_corr,
case
	when exists (select * 
				from ELV_UD_VERS_DA_ELAB_ELENCO ud_da_elab, ARO_UNITA_DOC ud
				where ud_da_elab.id_strut = tipo_ud.id_strut 
				and ud_da_elab.ti_stato_ud_da_elab = 'IN_ATTESA_SCHED'
				and ud_da_elab.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
				
				and ud.id_unita_doc = ud_da_elab.id_unita_doc
				and ud.id_tipo_unita_doc = tipo_ud.id_tipo_unita_doc
				)
			then '1'
			else '0'
end fl_ud_attesa_sched_30gg,

--
--						ud NON_SELEZ_SCHED
--
case
	when exists (select * 
				from ELV_UD_VERS_DA_ELAB_ELENCO ud_da_elab, ARO_UNITA_DOC ud
				where ud_da_elab.id_strut = tipo_ud.id_strut 
				and ud_da_elab.ti_stato_ud_da_elab = 'NON_SELEZ_SCHED'
				and ud_da_elab.dt_creazione between trunc(sysdate) and sysdate + 1/24
				
				and ud.id_unita_doc = ud_da_elab.id_unita_doc
				and ud.id_tipo_unita_doc = tipo_ud.id_tipo_unita_doc
				)
			then '1'
end fl_ud_nosel_sched_corr,
case
	when exists (select * 
				from ELV_UD_VERS_DA_ELAB_ELENCO ud_da_elab, ARO_UNITA_DOC ud
				where ud_da_elab.id_strut = tipo_ud.id_strut 
				and ud_da_elab.ti_stato_ud_da_elab = 'NON_SELEZ_SCHED'
				and ud_da_elab.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
				
				and ud.id_unita_doc = ud_da_elab.id_unita_doc
				and ud.id_tipo_unita_doc = tipo_ud.id_tipo_unita_doc
				)
			then '1'
			else '0'
end fl_ud_nosel_sched_30gg

from DEC_TIPO_UNITA_DOC tipo_ud;

-- changeset root:1751897635013-806
COMMENT ON COLUMN MON_V_CHK_UD_TIPO_UD.ID_TIPO_UNITA_DOC IS 'PK.1 relativa a tabella DEC_TIPO_UNITA_DOC';

-- changeset root:1751897635013-807
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_DOC_TIPO_UD" ("ID_STRUT", "ID_TIPO_UNITA_DOC", "TI_STATO_DOC", "TI_DT_CREAZIONE", "NI_DOC") AS select 
 doc_da_elab.id_strut id_strut, 
 ud.id_tipo_unita_doc id_tipo_unita_doc,
 doc_da_elab.ti_stato_doc_da_elab ti_stato_doc,
 case
	when doc_da_elab.dt_creazione between trunc(sysdate) and sysdate + 1/24 then 'OGGI'
	else '30gg'
 end ti_dt_creazione,
 
 count(*) ni_doc

from ELV_DOC_AGG_DA_ELAB_ELENCO doc_da_elab
join ARO_DOC doc
 on (doc.id_doc = doc_da_elab.id_doc)
join ARO_UNITA_DOC ud
 on (ud.id_unita_doc = doc.id_unita_doc)
where doc_da_elab.dt_creazione between trunc(sysdate - 30) and sysdate + 1/24

group by doc_da_elab.id_strut, ud.id_tipo_unita_doc, doc_da_elab.ti_stato_doc_da_elab,  
		 case
			when doc_da_elab.dt_creazione between trunc(sysdate) and sysdate + 1/24 then 'OGGI'
			else '30gg'
		 end

UNION

select
 tmp.id_strut id_strut,
 tmp.id_tipo_unita_doc id_tipo_unita_doc,
 'TOTALE' ti_stato_doc, 
 'OGGI' ti_dt_creazione, 
 tmp.ni_doc
from (select 
	   doc.id_strut id_strut,
	   ud.id_tipo_unita_doc id_tipo_unita_doc,
	   count(*) ni_doc
	  from ARO_DOC doc
	  join ARO_UNITA_DOC ud
	   on (ud.id_unita_doc = doc.id_unita_doc)
	  where doc.dt_creazione between trunc(sysdate) and sysdate + 1/24
	  and doc.dt_annul = to_date('31/12/2444', 'dd/mm/yyyy')
	  and doc.ti_creazione = 'AGGIUNTA_DOCUMENTO'
	  group by doc.id_strut, ud.id_tipo_unita_doc
	) tmp

UNION
	  
select 
 tipo_ud.id_strut id_strut,
 tipo_ud.id_tipo_unita_doc id_tipo_unita_doc,
'TOTALE' ti_stato_doc, 
'30gg' ti_dt_creazione,

(select nvl(sum(ni_doc_agg), 0)
 from MON_CONTA_UD_DOC_COMP conta_doc
 where conta_doc.id_strut = tipo_ud.id_strut 
 and conta_doc.id_tipo_unita_doc = tipo_ud.id_tipo_unita_doc
 and conta_doc.dt_rif_conta between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
) -
(select nvl(count(*), 0)
 from ARO_ITEM_RICH_ANNUL_VERS item_annul, ARO_UNITA_DOC ud, ARO_DOC doc
 where item_annul.id_strut = tipo_ud.id_strut
 and item_annul.ti_item_rich_annul_vers = 'UNI_DOC'
 and item_annul.ti_stato_item = 'ANNULLATO'
 and ud.id_unita_doc = item_annul.id_unita_doc
 and ud.id_tipo_unita_doc = tipo_ud.id_tipo_unita_doc
 and doc.id_unita_doc = ud.id_unita_doc
 and doc.ti_creazione = 'AGGIUNTA_DOCUMENTO'
 and doc.dt_creazione between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
) ni_doc
from DEC_TIPO_UNITA_DOC tipo_ud;

-- changeset root:1751897635013-808
COMMENT ON COLUMN MON_V_CNT_DOC_TIPO_UD.ID_STRUT IS 'PK.1 relativa a tabella ORG_STRUT';

-- changeset root:1751897635013-809
COMMENT ON COLUMN MON_V_CNT_DOC_TIPO_UD.ID_TIPO_UNITA_DOC IS 'PK.2 relativa a tabella DEC_TIPO_UNITA_DOC';

-- changeset root:1751897635013-810
COMMENT ON COLUMN MON_V_CNT_DOC_TIPO_UD.TI_STATO_DOC IS 'PK.3';

-- changeset root:1751897635013-811
COMMENT ON COLUMN MON_V_CNT_DOC_TIPO_UD.TI_DT_CREAZIONE IS 'PK.4';

-- changeset root:1751897635013-812
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_DOC_TIPO_UD_B30" ("ID_STRUT", "ID_TIPO_UNITA_DOC", "TI_STATO_DOC", "NI_DOC") AS select 
 doc_da_elab.id_strut id_strut, 
 ud.id_tipo_unita_doc id_tipo_unita_doc,
 doc_da_elab.ti_stato_doc_da_elab ti_stato_doc,
 
 count(*) ni_doc

from ELV_DOC_AGG_DA_ELAB_ELENCO doc_da_elab
join ARO_DOC doc
 on (doc.id_doc = doc_da_elab.id_doc)
join ARO_UNITA_DOC ud
 on (ud.id_unita_doc = doc.id_unita_doc)
where doc_da_elab.dt_creazione between to_date('01-01-2000', 'dd-mm-yyyy') and to_date(to_char(trunc(sysdate - 31), 'dd-mm-yyyy') || '23:59:59', 'dd-mm-yyyy hh24:mi:ss')

group by doc_da_elab.id_strut, ud.id_tipo_unita_doc, doc_da_elab.ti_stato_doc_da_elab

UNION
	  
select 
 tipo_ud.id_strut id_strut,
 tipo_ud.id_tipo_unita_doc id_tipo_unita_doc,
'TOTALE' ti_stato_doc, 

(select nvl(sum(ni_doc_agg), 0)
 from MON_CONTA_UD_DOC_COMP conta_doc
 where conta_doc.id_strut = tipo_ud.id_strut 
 and conta_doc.id_tipo_unita_doc = tipo_ud.id_tipo_unita_doc
 and conta_doc.dt_rif_conta between to_date('01-01-2000', 'dd-mm-yyyy') and to_date(to_char(trunc(sysdate - 31), 'dd-mm-yyyy') || '23:59:59', 'dd-mm-yyyy hh24:mi:ss')
) -
(select nvl(count(*), 0)
 from ARO_ITEM_RICH_ANNUL_VERS item_annul, ARO_UNITA_DOC ud, ARO_DOC doc
 where item_annul.id_strut = tipo_ud.id_strut
 and item_annul.ti_item_rich_annul_vers = 'UNI_DOC'
 and item_annul.ti_stato_item = 'ANNULLATO'
 and ud.id_unita_doc = item_annul.id_unita_doc
 and ud.id_tipo_unita_doc = tipo_ud.id_tipo_unita_doc
 and doc.id_unita_doc = ud.id_unita_doc
 and doc.ti_creazione = 'AGGIUNTA_DOCUMENTO'
 and doc.dt_creazione between to_date('01-01-2000', 'dd-mm-yyyy') and to_date(to_char(trunc(sysdate - 31), 'dd-mm-yyyy') || '23:59:59', 'dd-mm-yyyy hh24:mi:ss')
) ni_doc
from DEC_TIPO_UNITA_DOC tipo_ud;

-- changeset root:1751897635013-813
COMMENT ON COLUMN MON_V_CNT_DOC_TIPO_UD_B30.ID_STRUT IS 'PK.1';

-- changeset root:1751897635013-814
COMMENT ON COLUMN MON_V_CNT_DOC_TIPO_UD_B30.ID_TIPO_UNITA_DOC IS 'PK.2';

-- changeset root:1751897635013-815
COMMENT ON COLUMN MON_V_CNT_DOC_TIPO_UD_B30.TI_STATO_DOC IS 'PK.3';

-- changeset root:1751897635013-816
CREATE OR REPLACE FORCE VIEW "DEC_V_FIN_VAL_VOCE_TITOL" ("ID_VAL_VOCE_TITOL", "CD_REGISTRO_DOC_INVIO_FIN", "AA_DOC_INVIO_FIN", "CD_DOC_INVIO_FIN", "DT_DOC_INVIO_FIN", "TI_OPER_TITOL_FIN", "TI_OPER_VOCE_TITOL_FIN", "DT_VAL_OPER_VOCE_TITOL_FIN") AS select
 val_voce.id_val_voce_titol, 
 
 oper_titol_fin.cd_registro_doc_invio cd_registro_doc_invio_fin, oper_titol_fin.aa_doc_invio aa_doc_invio_fin, oper_titol_fin.cd_doc_invio cd_doc_invio_fin, oper_titol_fin.dt_doc_invio dt_doc_invio_fin, 
 oper_titol_fin.ti_oper_titol  ti_oper_titol_fin,
 oper_voce_fin.ti_oper_voce_titol ti_oper_voce_titol_fin, oper_voce_fin.dt_val_oper_voce_titol dt_val_oper_voce_titol_fin   
 
from DEC_VAL_VOCE_TITOL val_voce

join ORG_OPER_VOCE_TITOL oper_voce_fin
 on (oper_voce_fin.id_voce_titol = val_voce.id_voce_titol
 and oper_voce_fin.dt_val_oper_voce_titol = val_voce.dt_fin_val
 and oper_voce_fin.ti_oper_voce_titol = 'CHIUDI')
 
join ORG_OPER_TITOL oper_titol_fin
 on (oper_titol_fin.id_oper_titol = oper_voce_fin.id_oper_titol)

where val_voce.dt_fin_val != to_date('31/12/2444', 'dd/mm/yyyy')

UNION

select
 val_voce.id_val_voce_titol, 
 
 oper_titol_fin.cd_registro_doc_invio cd_registro_doc_invio_fin, oper_titol_fin.aa_doc_invio aa_doc_invio_fin, oper_titol_fin.cd_doc_invio cd_doc_invio_fin, oper_titol_fin.dt_doc_invio dt_doc_invio_fin, 
 oper_titol_fin.ti_oper_titol  ti_oper_titol_fin,
 oper_voce_fin.ti_oper_voce_titol ti_oper_voce_titol_fin, oper_voce_fin.dt_val_oper_voce_titol dt_val_oper_voce_titol_fin   
 
from DEC_VAL_VOCE_TITOL val_voce

join ORG_OPER_VOCE_TITOL oper_voce_fin
 on (oper_voce_fin.id_voce_titol = val_voce.id_voce_titol
 and oper_voce_fin.dt_val_oper_voce_titol - 1 = val_voce.dt_fin_val
 and oper_voce_fin.ti_oper_voce_titol = 'MODIFICA')
  
join ORG_OPER_TITOL oper_titol_fin
 on (oper_titol_fin.id_oper_titol = oper_voce_fin.id_oper_titol)

where val_voce.dt_fin_val != to_date('31/12/2444', 'dd/mm/yyyy');

-- changeset root:1751897635013-817
CREATE OR REPLACE FORCE VIEW "DEC_V_LIS_VAL_VOCE_TITOL" ("ID_VAL_VOCE_TITOL", "ID_VOCE_TITOL", "DT_INI_VAL", "DT_FIN_VAL", "DS_VOCE_TITOL", "FL_USO_CLASSIF", "NI_ANNI_CONSERV", "DL_NOTE", "CD_REGISTRO_DOC_INVIO_INI", "AA_DOC_INVIO_INI", "CD_DOC_INVIO_INI", "DT_DOC_INVIO_INI", "TI_OPER_TITOL_INI", "TI_OPER_VOCE_TITOL_INI", "DT_VAL_OPER_VOCE_TITOL_INI", "CD_REGISTRO_DOC_INVIO_FIN", "AA_DOC_INVIO_FIN", "CD_DOC_INVIO_FIN", "DT_DOC_INVIO_FIN", "TI_OPER_TITOL_FIN", "TI_OPER_VOCE_TITOL_FIN", "DT_VAL_OPER_VOCE_TITOL_FIN") AS select
 val_voce.id_val_voce_titol, 
 val_voce.id_voce_titol, val_voce.dt_ini_val, val_voce.dt_fin_val, 
 val_voce.ds_voce_titol, val_voce.fl_uso_classif, val_voce.ni_anni_conserv, val_voce.dl_note,
 
 oper_titol_ini.cd_registro_doc_invio cd_registro_doc_invio_ini, oper_titol_ini.aa_doc_invio aa_doc_invio_ini, oper_titol_ini.cd_doc_invio cd_doc_invio_ini, oper_titol_ini.dt_doc_invio dt_doc_invio_ini, 
 oper_titol_ini.ti_oper_titol  ti_oper_titol_ini,
 oper_voce_ini.ti_oper_voce_titol ti_oper_voce_titol_ini, oper_voce_ini.dt_val_oper_voce_titol dt_val_oper_voce_titol_ini,
 
 
 oper_fin.cd_registro_doc_invio_fin, oper_fin.aa_doc_invio_fin, oper_fin.cd_doc_invio_fin, oper_fin.dt_doc_invio_fin, 
 oper_fin.ti_oper_titol_fin,
 oper_fin.ti_oper_voce_titol_fin, oper_fin.dt_val_oper_voce_titol_fin   

 
from DEC_VAL_VOCE_TITOL val_voce

join ORG_OPER_VOCE_TITOL oper_voce_ini
 on (oper_voce_ini.id_voce_titol = val_voce.id_voce_titol
 and oper_voce_ini.dt_val_oper_voce_titol = val_voce.dt_ini_val)
join ORG_OPER_TITOL oper_titol_ini
 on (oper_titol_ini.id_oper_titol = oper_voce_ini.id_oper_titol)

left join DEC_V_FIN_VAL_VOCE_TITOL oper_fin
 on (oper_fin.id_val_voce_titol = val_voce.id_val_voce_titol);

-- changeset root:1751897635013-818
COMMENT ON COLUMN DEC_V_LIS_VAL_VOCE_TITOL.ID_VAL_VOCE_TITOL IS 'PK.1';

-- changeset root:1751897635013-819
CREATE OR REPLACE FORCE VIEW "DEC_V_TREE_VOCE" ("ID_VOCE_TITOL", "ID_TITOL", "CD_COMPOSITO_VOCE_TITOL", "CD_VOCE_TITOL", "ID_LIVELLO_TITOL", "NI_ORD_VOCE_TITOL", "DT_ISTITUZ", "DT_SOPPRES", "ID_VOCE_TITOL_PADRE", "NI_FASCIC", "NI_FASCIC_VOCI_FIGLIE") AS select 
 voce.id_voce_titol, voce.id_titol, voce.cd_composito_voce_titol, 
 voce.cd_voce_titol, voce.id_livello_titol, voce.ni_ord_voce_titol, 
 voce.dt_istituz, voce.dt_soppres, voce.id_voce_titol_padre, voce.ni_fascic, voce.ni_fascic_voci_figlie
from DEC_VOCE_TITOL voce

start with voce.id_voce_titol_padre is null
connect by prior voce.id_voce_titol = voce.id_voce_titol_padre
ORDER SIBLINGS BY voce.ni_ord_voce_titol ASC;

-- changeset root:1751897635013-820
CREATE OR REPLACE FORCE VIEW "DEC_V_TREE_TITOL" ("ID_VOCE_TITOL", "ID_TITOL", "CD_COMPOSITO_VOCE_TITOL", "CD_VOCE_TITOL", "ID_LIVELLO_TITOL", "NM_LIVELLO_TITOL", "NI_LIVELLO", "NI_ORD_VOCE_TITOL", "DT_ISTITUZ", "DT_SOPPRES", "ID_VOCE_TITOL_PADRE", "CD_COMPOSITO_VOCE_PADRE", "NI_FASCIC", "NI_FASCIC_VOCI_FIGLIE", "ID_VAL_VOCE_TITOL", "DS_VOCE_TITOL", "DT_INI_VAL", "DT_FIN_VAL", "FL_USO_CLASSIF", "NI_ANNI_CONSERV", "DL_NOTE") AS select 
 voce.id_voce_titol, voce.id_titol, voce.cd_composito_voce_titol, 
 voce.cd_voce_titol, voce.id_livello_titol, liv_titol.nm_livello_titol, liv_titol.ni_livello, voce.ni_ord_voce_titol, 
 voce.dt_istituz, voce.dt_soppres, voce.id_voce_titol_padre, voce_padre.cd_composito_voce_titol, voce.ni_fascic, voce.ni_fascic_voci_figlie,
 val_voce.id_val_voce_titol, val_voce.ds_voce_titol, val_voce.dt_ini_val, val_voce.dt_fin_val, val_voce.fl_uso_classif, val_voce.ni_anni_conserv, val_voce.dl_note 
from DEC_V_TREE_VOCE voce
join DEC_VAL_VOCE_TITOL val_voce
 on (val_voce.id_voce_titol = voce.id_voce_titol)
join DEC_LIVELLO_TITOL liv_titol
 on (liv_titol.id_livello_titol  = voce.id_livello_titol)
 
left join DEC_VOCE_TITOL voce_padre
 on (voce_padre.id_voce_titol = voce.id_voce_titol_padre);

-- changeset root:1751897635013-821
COMMENT ON COLUMN DEC_V_TREE_TITOL.ID_VOCE_TITOL IS 'PK.1';

-- changeset root:1751897635013-822
COMMENT ON COLUMN DEC_V_TREE_TITOL.ID_VAL_VOCE_TITOL IS 'PK.2';

-- changeset root:1751897635013-823
CREATE OR REPLACE FORCE VIEW "ARO_V_LIS_CERTIF_CA_FIRMA_COMP" ("ID_FIRMA_COMP", "ID_USO_CERTIF_CA_CONTR_COMP", "ID_CONTR_FIRMA_COMP", "PG_CERTIF_CA", "DL_DN_ISSUER_CERTIF_CA", "DS_SERIAL_CERTIF_CA", "DT_INI_VAL_CERTIF_CA", "DT_FIN_VAL_CERTIF_CA", "DL_DN_ISSUER_CRL", "DS_SERIAL_CERTIF_CRL", "DS_SERIAL_CRL", "DT_SCAD_CRL", "DL_DN_ISSUER_CERTIF_OCSP", "DS_SERIAL_CERTIF_OCSP", "DT_INI_VAL_CERTIF_OCSP", "DT_FIN_VAL_CERTIF_OCSP", "TI_CONTR") AS select
 contr_catena.id_firma_comp,
 uso.id_uso_certif_ca_contr_comp,
 uso.id_contr_firma_comp,
 uso.pg_certif_ca,
-- eliminazione issuer (CA)
-- issuer_certif_ca.dl_dn_issuer_certif_ca dl_dn_issuer_certif_ca,
 certif_ca.dl_dn_issuer_certif_ca dl_dn_issuer_certif_ca,  
 certif_ca.ds_serial_certif_ca ds_serial_certif_ca,
 certif_ca.dt_ini_val_certif_ca dt_ini_val_certif_ca,
 certif_ca.dt_fin_val_certif_ca dt_fin_val_certif_ca,
-- eliminazione issuer (CRL)
-- issuer_crl.dl_dn_issuer_certif_ca dl_dn_issuer_crl,
 certif_ca_crl.dl_dn_issuer_certif_ca dl_dn_issuer_crl,  
 certif_ca_crl.ds_serial_certif_ca ds_serial_certif_crl, 
 crl.ds_serial_crl ds_serial_crl, 
 crl.dt_scad_crl,
  ---- ocsp
 certif_ocsp.dl_dn_subject_certif_ocsp dl_dn_issuer_certif_ocsp, 
 certif_ocsp.ds_serial_certif_ocsp ds_serial_certif_ocsp,
 certif_ocsp.dt_ini_val_certif_ocsp dt_ini_val_certif_ocsp,
 certif_ocsp.dt_fin_val_certif_ocsp dt_fin_val_certif_ocsp,
  contr_catena.ti_contr


from ARO_CONTR_FIRMA_COMP contr_catena
 
join ARO_USO_CERTIF_CA_CONTR_COMP uso
 on (uso.id_contr_firma_comp = contr_catena.id_contr_firma_comp)

join FIR_CERTIF_CA certif_ca
 on (certif_ca.id_certif_ca = uso.id_certif_ca)
-- eliminazione issuer (CA)
-- join FIR_ISSUER issuer_certif_ca
-- on (issuer_certif_ca.id_issuer = certif_ca.id_issuer)
left join FIR_CRL crl
 on (crl.id_crl = uso.id_crl_usata)
left join FIR_CERTIF_CA certif_ca_crl
 on (certif_ca_crl.id_certif_ca = crl.id_certif_ca)
-- eliminazione issuer (CRL)
-- left join FIR_ISSUER issuer_crl
-- on (issuer_crl.id_issuer = certif_ca_crl.id_issuer)
-- OCSP
left join FIR_OCSP ocsp
 on (ocsp.id_ocsp = uso.id_ocsp_usata)
left join FIR_CERTIF_OCSP certif_ocsp
 on (ocsp.id_certif_ocsp = certif_ocsp.id_certif_ocsp)
left join FIR_CERTIF_CA certif_ca_ocsp
 on (certif_ca_ocsp.id_certif_ca = crl.id_certif_ca)


where contr_catena.ti_contr  in ('CATENA_TRUSTED', 'OCSP');

-- changeset root:1751897635013-824
CREATE OR REPLACE FORCE VIEW "ARO_V_LIS_CERTIF_CA_MARCA_COMP" ("ID_MARCA_COMP", "ID_USO_CERTIF_CA_CONTR_MARCA", "ID_CONTR_MARCA_COMP", "PG_CERTIF_CA", "DL_DN_ISSUER_CERTIF_CA", "DS_SERIAL_CERTIF_CA", "DT_INI_VAL_CERTIF_CA", "DT_FIN_VAL_CERTIF_CA", "DL_DN_ISSUER_CRL", "DS_SERIAL_CERTIF_CRL", "DS_SERIAL_CRL", "DT_SCAD_CRL", "DL_DN_ISSUER_CERTIF_OCSP", "DS_SERIAL_CERTIF_OCSP", "DT_INI_VAL_CERTIF_OCSP", "DT_FIN_VAL_CERTIF_OCSP", "TI_CONTR") AS select
 contr_catena.id_marca_comp,
 uso.id_uso_certif_ca_contr_marca,
 uso.id_contr_marca_comp, 
 uso.pg_certif_ca,
-- eliminazione issuer (CA)
-- issuer_certif_ca.dl_dn_issuer_certif_ca dl_dn_issuer_certif_ca,
 certif_ca.dl_dn_issuer_certif_ca dl_dn_issuer_certif_ca,  
 certif_ca.ds_serial_certif_ca ds_serial_certif_ca,
 certif_ca.dt_ini_val_certif_ca dt_ini_val_certif_ca,
 certif_ca.dt_fin_val_certif_ca dt_fin_val_certif_ca,
-- eliminazione issuer (CRL)
-- issuer_crl.dl_dn_issuer_certif_ca dl_dn_issuer_crl, 
 certif_ca_crl.dl_dn_issuer_certif_ca dl_dn_issuer_crl, 
 certif_ca_crl.ds_serial_certif_ca ds_serial_certif_crl, 
 crl.ds_serial_crl ds_serial_crl, 
 crl.dt_scad_crl,
  ---- ocsp
 certif_ocsp.dl_dn_subject_certif_ocsp dl_dn_issuer_certif_ocsp, 
 certif_ocsp.ds_serial_certif_ocsp ds_serial_certif_ocsp,
 certif_ocsp.dt_ini_val_certif_ocsp dt_ini_val_certif_ocsp,
 certif_ocsp.dt_fin_val_certif_ocsp dt_fin_val_certif_ocsp,
  contr_catena.ti_contr
from ARO_CONTR_MARCA_COMP contr_catena

join ARO_USO_CERTIF_CA_CONTR_MARCA uso
 on (uso.id_contr_marca_comp = contr_catena.id_contr_marca_comp)

join FIR_CERTIF_CA certif_ca
 on (certif_ca.id_certif_ca = uso.id_certif_ca)
-- eliminazione issuer (CA)
--join FIR_ISSUER issuer_certif_ca
-- on (issuer_certif_ca.id_issuer = certif_ca.id_issuer)

left join FIR_CRL crl
 on (crl.id_crl = uso.id_crl_usata)
left join FIR_CERTIF_CA certif_ca_crl
 on (certif_ca_crl.id_certif_ca = crl.id_certif_ca)
-- eliminazione issuer (CRL)
--left join FIR_ISSUER issuer_crl
-- on (issuer_crl.id_issuer = certif_ca_crl.id_issuer)
-- OCSP
left join FIR_OCSP ocsp
 on (ocsp.id_ocsp = uso.id_ocsp_usata)
left join FIR_CERTIF_OCSP certif_ocsp
 on (ocsp.id_certif_ocsp = certif_ocsp.id_certif_ocsp)
left join FIR_CERTIF_CA certif_ca_ocsp
 on (certif_ca_ocsp.id_certif_ca = crl.id_certif_ca)
 
and contr_catena.ti_contr in ('CATENA_TRUSTED','OCSP');

-- changeset root:1751897635013-825
CREATE OR REPLACE FORCE VIEW "ARO_V_LIS_MARCA_COMP" ("ID_COMP_DOC", "ISSUER_CERTIF_TSA", "ID_MARCA_COMP", "PG_MARCA", "TM_MARCA_TEMP", "TI_FORMATO_MARCA", "TI_ESITO_CONTR_CONFORME", "TI_ESITO_VERIF_MARCA") AS select
-- info componente
 comp_doc.id_comp_doc,

-- dati certificato TSA
-- eliminazione issuer
-- issuer_certif_tsa.dl_dn_issuer_certif_ca issuer_certif_tsa,
 certif_tsa.dl_dn_issuer_certif_ca issuer_certif_tsa,

-- info su marca
 marca.id_marca_comp, 
 marca.pg_marca,
 marca.tm_marca_temp, marca.ti_formato_marca, 
 marca.ti_esito_contr_conforme, 
 marca.ti_esito_verif_marca

from ARO_COMP_DOC comp_doc

join ARO_MARCA_COMP marca
 on (marca.id_comp_doc = comp_doc.id_comp_doc)

left join FIR_CERTIF_CA certif_tsa
 on (certif_tsa.id_certif_ca = marca.id_certif_ca);

-- changeset root:1751897635013-826
COMMENT ON COLUMN ARO_V_LIS_MARCA_COMP.ID_MARCA_COMP IS 'PK.1 relativa a tabella ARO_MARCA_COMP';

-- changeset root:1751897635013-827
CREATE OR REPLACE FORCE VIEW "ARO_V_VIS_COMP_VOL" ("ID_COMP_DOC", "ID_VOLUME_CONSERV", "NM_VOLUME_CONSERV", "TI_STATO_VOLUME_CONSERV", "DT_CHIUS_VOLUME", "TI_ESITO_VERIF_FIRME_CHIUS", "DS_ESITO_VERIF_FIRME_CHIUS") AS select
 app_comp.id_comp_doc,
-- info volume valido 
 vol.id_volume_conserv, vol.nm_volume_conserv, vol.ti_stato_volume_conserv, vol.dt_chius,
 
-- info verifica firme a chiusura volume valido
 app_comp.ti_esito_verif_firme_chius, app_comp.ds_esito_verif_firme_chius
 
from VOL_APPART_COMP_VOLUME app_comp
join VOL_APPART_DOC_VOLUME app_doc
 on (app_doc.id_appart_doc_volume = app_comp.id_appart_doc_volume
 and app_doc.fl_valida = '1')
join VOL_APPART_UNITA_DOC_VOLUME app_ud
 on (app_ud.id_appart_unita_doc_volume = app_doc.id_appart_unita_doc_volume)
join VOL_VOLUME_CONSERV vol
 on (vol.id_volume_conserv = app_ud.id_volume_conserv);

-- changeset root:1751897635013-828
COMMENT ON COLUMN ARO_V_VIS_COMP_VOL.ID_COMP_DOC IS 'PK.1 relativa a tabella ARO_COMP_DOC';

-- changeset root:1751897635013-829
CREATE OR REPLACE FORCE VIEW "ARO_V_LIS_VOL_NO_VAL_COMP" ("ID_COMP_DOC", "ID_VOLUME_CONSERV", "NM_VOLUME_CONSERV", "DS_VOLUME_CONSERV", "DT_CREAZIONE", "TI_STATO_VOLUME_CONSERV") AS select
-- info componente
 comp_doc.id_comp_doc,

-- info volume  
 vol.id_volume_conserv, 
 vol.nm_volume_conserv, 
 vol.ds_volume_conserv, 
 vol.dt_creazione, 
 vol.ti_stato_volume_conserv
 
from ARO_COMP_DOC comp_doc

join ARO_STRUT_DOC strut_doc
 on (strut_doc.id_strut_doc = comp_doc.id_strut_doc
 and strut_doc.fl_strut_orig = '1')
join ARO_DOC doc
 on (doc.id_doc = strut_doc.id_doc)

left join VOL_APPART_DOC_VOLUME app_doc_vol
 on (app_doc_vol.id_doc = doc.id_doc
 and app_doc_vol.fl_valida = '0')
left join VOL_APPART_UNITA_DOC_VOLUME app_ud_vol
 on (app_ud_vol.id_appart_unita_doc_volume = app_doc_vol.id_appart_unita_doc_volume)
left join VOL_VOLUME_CONSERV vol
 on (vol.id_volume_conserv = app_ud_vol.id_volume_conserv)

left join VOL_APPART_COMP_VOLUME app_comp_vol
 on (app_comp_vol.id_appart_doc_volume = app_doc_vol.id_appart_doc_volume
 and app_comp_vol.id_comp_doc = comp_doc.id_comp_doc);

-- changeset root:1751897635013-830
COMMENT ON COLUMN ARO_V_LIS_VOL_NO_VAL_COMP.ID_COMP_DOC IS 'PK.1 relativa a tabella ARO_COMP_DOC';

-- changeset root:1751897635013-831
COMMENT ON COLUMN ARO_V_LIS_VOL_NO_VAL_COMP.ID_VOLUME_CONSERV IS 'PK.2 relativa a tabella VOL_VOLUME_CONSERV';

-- changeset root:1751897635013-832
CREATE OR REPLACE FORCE VIEW "ARO_V_DOC_VOL_RANGE_DT" ("ID_STRUT", "TI_DOC", "TI_STATO_DOC", "TI_STATO_VOLUME_CONSERV", "TI_DT_CREAZIONE") AS select
doc.id_strut, doc.ti_doc, doc.ti_stato_doc, vol.ti_stato_volume_conserv,
case
	when doc.dt_creazione between trunc(sysdate) and sysdate + 1/24 then 'CORR'
	when doc.dt_creazione between trunc(sysdate - 6) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss') then '6_GG_PREC_CORR'
	else 'PREC_6_GG_PREC_CORR'
end ti_dt_creazione
from ARO_DOC doc
join VOL_APPART_DOC_VOLUME app_doc
 on (app_doc.id_doc = doc.id_doc
 and app_doc.fl_valida = '1')
join VOL_APPART_UNITA_DOC_VOLUME app_ud
 on (app_ud.id_appart_unita_doc_volume = app_doc.id_appart_unita_doc_volume)
join VOL_VOLUME_CONSERV vol
 on (vol.id_volume_conserv = app_ud.id_volume_conserv);

-- changeset root:1751897635013-833
CREATE OR REPLACE FORCE VIEW "ARO_V_DOC_VOL_TI_UD_RANGE_DT" ("ID_STRUT", "TI_DOC", "TI_STATO_DOC", "TI_STATO_VOLUME_CONSERV", "ID_TIPO_UNITA_DOC", "TI_DT_CREAZIONE") AS select
doc.id_strut, doc.ti_doc, doc.ti_stato_doc, vol.ti_stato_volume_conserv, ud.id_tipo_unita_doc,
case
	when doc.dt_creazione between trunc(sysdate) and sysdate + 1/24 then 'CORR'
	when doc.dt_creazione between trunc(sysdate - 6) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss') then '6_GG_PREC_CORR'
	else 'PREC_6_GG_PREC_CORR'
end ti_dt_creazione
from ARO_DOC doc
join ARO_UNITA_DOC ud
 on (ud.id_unita_doc = doc.id_unita_doc)
join VOL_APPART_DOC_VOLUME app_doc
 on (app_doc.id_doc = doc.id_doc
 and app_doc.fl_valida = '1')
join VOL_APPART_UNITA_DOC_VOLUME app_ud
 on (app_ud.id_appart_unita_doc_volume = app_doc.id_appart_unita_doc_volume)
join VOL_VOLUME_CONSERV vol
 on (vol.id_volume_conserv = app_ud.id_volume_conserv);

-- changeset root:1751897635013-834
CREATE OR REPLACE FORCE VIEW "ARO_V_LIS_VOL_COR" ("ID_UNITA_DOC", "ID_VOLUME_CONSERV", "NM_VOLUME_CONSERV", "DT_CREAZIONE", "TI_STATO_VOLUME_CONSERV") AS select distinct
 doc.id_unita_doc,
 vol.id_volume_conserv, vol.nm_volume_conserv, vol.dt_creazione, vol.ti_stato_volume_conserv

from ARO_DOC doc
join VOL_APPART_DOC_VOLUME app_doc
 on (app_doc.id_doc = doc.id_doc
 and app_doc.fl_valida = '1')

join VOL_APPART_UNITA_DOC_VOLUME app_ud
 on (app_ud.id_appart_unita_doc_volume = app_doc.id_appart_unita_doc_volume)
join VOL_VOLUME_CONSERV vol
 on (vol.id_volume_conserv = app_ud.id_volume_conserv);

-- changeset root:1751897635013-835
COMMENT ON COLUMN ARO_V_LIS_VOL_COR.ID_UNITA_DOC IS 'PK.1';

-- changeset root:1751897635013-836
COMMENT ON COLUMN ARO_V_LIS_VOL_COR.ID_VOLUME_CONSERV IS 'PK.2';

-- changeset root:1751897635013-837
CREATE OR REPLACE FORCE VIEW "ARO_V_LIS_VOL_NO_VAL_DOC" ("ID_DOC", "ID_VOLUME_CONSERV", "NM_VOLUME_CONSERV", "DS_VOLUME_CONSERV", "DT_CREAZIONE", "TI_STATO_VOLUME_CONSERV") AS select
-- info su documento
 doc.id_doc,

-- info volume  
 vol.id_volume_conserv, vol.nm_volume_conserv, vol.ds_volume_conserv, vol.dt_creazione, vol.ti_stato_volume_conserv
 
from ARO_DOC doc

join VOL_APPART_DOC_VOLUME app_doc
 on (app_doc.id_doc = doc.id_doc
 and app_doc.fl_valida = '0')
join VOL_APPART_UNITA_DOC_VOLUME app_ud
 on (app_ud.id_appart_unita_doc_volume = app_doc.id_appart_unita_doc_volume)
join VOL_VOLUME_CONSERV vol
 on (vol.id_volume_conserv = app_ud.id_volume_conserv);

-- changeset root:1751897635013-838
COMMENT ON COLUMN ARO_V_LIS_VOL_NO_VAL_DOC.ID_DOC IS 'PK.1 relativa a tabella ARO_DOC';

-- changeset root:1751897635013-839
COMMENT ON COLUMN ARO_V_LIS_VOL_NO_VAL_DOC.ID_VOLUME_CONSERV IS 'PK.2 relativa a tabella VOL_VOLUME_CONSERV';

-- changeset root:1751897635013-840
CREATE OR REPLACE FORCE VIEW "VOL_V_RIC_VOLUME" ("ID_VOLUME_CONSERV", "ID_STRUT_VOLUME", "NM_VOLUME_CONSERV", "DS_VOLUME_CONSERV", "TI_STATO_VOLUME_CONSERV", "DT_CREAZIONE", "NI_MAX_UNITA_DOC", "NI_MAX_COMP", "TI_SCAD_CHIUS_VOLUME", "NI_TEMPO_SCAD_CHIUS", "TI_TEMPO_SCAD_CHIUS", "NI_TEMPO_SCAD_CHIUS_FIRME", "TI_TEMPO_SCAD_CHIUS_FIRME", "NI_UNITA_DOC_VOLUME", "NI_COMP_VOLUME", "NI_KB_SIZE", "DT_SCAD_CHIUS", "NT_INDICE_VOLUME", "DT_CHIUS", "DL_MOTIVO_CHIUS", "DT_FIRMA_MARCA", "TI_PRESENZA_FIRME", "TI_VAL_FIRME", "CD_VERSIONE_INDICE", "NT_VOLUME_CHIUSO", "ID_CRITERIO_RAGGR", "ID_STRUT_CRITERIO", "NM_CRITERIO_RAGGR", "ID_APPART_UNITA_DOC_VOLUME", "ID_UNITA_DOC", "ID_STRUT_UNITA_DOC", "CD_REGISTRO_KEY_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC") AS SELECT
 volume.id_volume_conserv, volume.id_strut id_strut_volume, volume.nm_volume_conserv, volume.ds_volume_conserv,
 volume.ti_stato_volume_conserv,
 volume.dt_creazione,
 volume.ni_max_unita_doc,
 volume.ni_max_comp,
 volume.ti_scad_chius_volume,
 volume.ni_tempo_scad_chius,
 volume.ti_tempo_scad_chius,
 volume.ni_tempo_scad_chius_firme,
 volume.ti_tempo_scad_chius_firme,
 volume.ni_unita_doc_volume,
 volume.ni_comp_volume,
 volume.ni_kb_size,
 volume.dt_scad_chius,
 volume.nt_indice_volume,
 volume.dt_chius,
 volume.dl_motivo_chius,
 volume.dt_firma_marca,
 volume.ti_presenza_firme,
 volume.ti_val_firme,
 volume.cd_versione_indice,
 volume.nt_volume_chiuso,

-- ================================================================================
-- colonne criterio raggruppamento
 criterio.id_criterio_raggr, criterio.id_strut id_strut_criterio, criterio.nm_criterio_raggr,

-- ================================================================================
-- colonne unita documentarie appartenenti a volume
 appart_ud.id_appart_unita_doc_volume,
 ud.id_unita_doc, ud.id_strut id_strut_unita_doc, ud.cd_registro_key_unita_doc, ud.aa_key_unita_doc, ud.cd_key_unita_doc

FROM  VOL_VOLUME_CONSERV volume
left join DEC_CRITERIO_RAGGR criterio
 on (criterio.id_criterio_raggr = volume.id_criterio_raggr)
 
left join  VOL_APPART_UNITA_DOC_VOLUME appart_ud
 on (appart_ud.id_volume_conserv = volume.id_volume_conserv)
left join ARO_UNITA_DOC ud
 on (ud.id_unita_doc = appart_ud.id_unita_doc);

-- changeset root:1751897635013-841
COMMENT ON COLUMN VOL_V_RIC_VOLUME.ID_APPART_UNITA_DOC_VOLUME IS 'PK.1 relativa a tabella VOL_APPART_UNITA_DOC_VOLUME';

-- changeset root:1751897635013-842
CREATE OR REPLACE FORCE VIEW "VOL_V_LIS_UD_ANNUL_BY_VOLUME" ("ID_RICH_ANNUL_VERS", "ID_VOLUME_CONSERV", "ID_UNITA_DOC", "DS_URN_UNITA_DOC_ANNUL") AS select distinct
 rich_ann.id_rich_annul_vers,
 app_ud.id_volume_conserv,
 ud.id_unita_doc,
 
 case
	when ud.cd_key_unita_doc_normaliz is not null
		then 'urn:' || 
			 (select ds_valore_param_applic
			  from APL_V_GETVAL_PARAM_BY_APL
			  where nm_param_applic = 'SISTEMA_CONSERVAZIONE') || ':' ||
			 ente.nm_ente || ':' || strut.nm_strut || ':' ||
			 ud.cd_registro_key_unita_doc || '-' || ud.aa_key_unita_doc || '-' || ud.cd_key_unita_doc 
		else 'urn:' || 
			 amb.nm_ambiente || ':' || ente.nm_ente || ':' || strut.nm_strut || ':' ||
			 ud.cd_registro_key_unita_doc || '-' || ud.aa_key_unita_doc || '-' || ud.cd_key_unita_doc
 end ds_urn_unita_doc_annul

from ARO_RICH_ANNUL_VERS rich_ann
join ARO_ITEM_RICH_ANNUL_VERS item
 on (item.id_rich_annul_vers = rich_ann.id_rich_annul_vers
 and item.ti_item_rich_annul_vers = 'UNI_DOC'
 and item.ti_stato_item = 'DA_ANNULLARE_IN_SACER')
join ARO_UNITA_DOC ud
 on (ud.id_unita_doc = item.id_unita_doc)
 
join VOL_APPART_UNITA_DOC_VOLUME app_ud
 on (app_ud.id_unita_doc = item.id_unita_doc)
 
join org_strut strut
 on (strut.id_strut = ud.id_strut)
join org_ente ente
 on (ente.id_ente = strut.id_ente)
join org_ambiente amb
 on (amb.id_ambiente = ente.id_ambiente);

-- changeset root:1751897635013-843
COMMENT ON COLUMN VOL_V_LIS_UD_ANNUL_BY_VOLUME.ID_UNITA_DOC IS 'PK.1';

-- changeset root:1751897635013-844
CREATE OR REPLACE FORCE VIEW "ELV_V_SEL_UD_DOC_UPD_DA_ELAB" ("TI_ELE", "ID_STRUT", "AA_KEY_UNITA_DOC", "DT_CREAZIONE", "ID_UNITA_DOC", "ID_DOC", "ID_UPD_UNITA_DOC", "ID_TIPO_UNITA_DOC", "ID_REGISTRO_UNITA_DOC", "CD_KEY_UNITA_DOC", "FL_UNITA_DOC_FIRMATO", "TI_ESITO_VERIF_FIRME", "TI_CONSERVAZIONE", "NM_SISTEMA_MIGRAZ", "FL_FORZA_ACCETTAZIONE", "FL_FORZA_CONSERVAZIONE", "DL_OGGETTO_UNITA_DOC", "DT_REG_UNITA_DOC", "ID_TIPO_DOC", "DL_DOC", "DS_AUTORE_DOC") AS select
 '01_UNI_DOC' ti_ele, ud_da_elab.id_strut, ud_da_elab.aa_key_unita_doc, ud_da_elab.dt_creazione, ud_da_elab.id_unita_doc, 0 id_doc, 0 id_upd_unita_doc,
 
 ud.id_tipo_unita_doc, ud.id_registro_unita_doc, ud.cd_key_unita_doc, ud.fl_unita_doc_firmato, ud.ti_esito_verif_firme,
 ud.ti_conservazione, ud.nm_sistema_migraz, ud.fl_forza_accettazione, ud.fl_forza_conservazione, ud.dl_oggetto_unita_doc, ud.dt_reg_unita_doc, 
 
 doc.id_tipo_doc, doc.dl_doc, doc.ds_autore_doc
 
from ELV_UD_VERS_DA_ELAB_ELENCO ud_da_elab
join ARO_UNITA_DOC ud
 on (ud.id_unita_doc = ud_da_elab.id_unita_doc
 and ud.dt_annul = to_date('31/12/2444', 'dd/mm/yyyy'))
join ARO_DOC doc
 on (doc.id_unita_doc = ud.id_unita_doc
 and doc.dt_annul = to_date('31/12/2444', 'dd/mm/yyyy')
 and doc.ti_creazione = 'VERSAMENTO_UNITA_DOC')
where ud_da_elab.ti_stato_ud_da_elab in ('NON_SELEZ_SCHED')
/*
UNION  				-- considero le ud in volume di conservazione sottoposte ad un aggiornamento (aggiunta doc o aggiornamento metadati)

select
 '01_UNI_DOC' ti_ele, ud.id_strut, ud.aa_key_unita_doc, ud.dt_creazione, ud.id_unita_doc, 0 id_doc, 0 id_upd_unita_doc,
 
 ud.id_tipo_unita_doc, ud.id_registro_unita_doc, ud.cd_key_unita_doc, ud.fl_unita_doc_firmato, ud.ti_esito_verif_firme,
 ud.ti_conservazione, ud.nm_sistema_migraz, ud.fl_forza_accettazione, ud.fl_forza_conservazione, ud.dl_oggetto_unita_doc, ud.dt_reg_unita_doc, 
 
 doc.id_tipo_doc, doc.dl_doc, doc.ds_autore_doc
 
from ARO_UNITA_DOC ud
join ARO_DOC doc
 on (doc.id_unita_doc = ud.id_unita_doc
 and doc.dt_annul = to_date('31/12/2444', 'dd/mm/yyyy')
 and doc.ti_creazione = 'VERSAMENTO_UNITA_DOC')
where ud.dt_annul = to_date('31/12/2444', 'dd/mm/yyyy')
  and ud.ti_stato_conservazione = 'AIP_IN_AGGIORNAMENTO'
  and ud.id_elenco_vers is null
  and not exists (select *
                    from ELV_UD_VERS_DA_ELAB_ELENCO ud_da_elab
                   where ud_da_elab.id_unita_doc = ud.id_unita_doc
				 )
*/
UNION

select
 '02_DOC_AGG' ti_ele, doc_da_elab.id_strut, doc_da_elab.aa_key_unita_doc, doc_da_elab.dt_creazione, doc.id_unita_doc, doc_da_elab.id_doc, 0 id_upd_unita_doc,

 ud.id_tipo_unita_doc, ud.id_registro_unita_doc, ud.cd_key_unita_doc, ud.fl_unita_doc_firmato, ud.ti_esito_verif_firme,
 ud.ti_conservazione, ud.nm_sistema_migraz, ud.fl_forza_accettazione, ud.fl_forza_conservazione, ud.dl_oggetto_unita_doc, ud.dt_reg_unita_doc, 
 
 doc.id_tipo_doc, doc.dl_doc, doc.ds_autore_doc
 
from ELV_DOC_AGG_DA_ELAB_ELENCO doc_da_elab
join ARO_DOC doc
 on (doc.id_doc = doc_da_elab.id_doc
 and doc.dt_annul = to_date('31/12/2444', 'dd/mm/yyyy'))

join ARO_UNITA_DOC ud
 on (ud.id_unita_doc = doc.id_unita_doc)
 
where doc_da_elab.ti_stato_doc_da_elab in ('NON_SELEZ_SCHED')
/*
UNION				-- considero gli allegati delle ud in volume di conservazione sottoposte ad un aggiornamento (aggiunta doc o aggiornamento metadati)

select
 '02_DOC_AGG' ti_ele, doc.id_strut, ud.aa_key_unita_doc, doc.dt_creazione, doc.id_unita_doc, doc.id_doc, 0 id_upd_unita_doc,

 ud.id_tipo_unita_doc, ud.id_registro_unita_doc, ud.cd_key_unita_doc, ud.fl_unita_doc_firmato, ud.ti_esito_verif_firme,
 ud.ti_conservazione, ud.nm_sistema_migraz, ud.fl_forza_accettazione, ud.fl_forza_conservazione, ud.dl_oggetto_unita_doc, ud.dt_reg_unita_doc, 
 
 doc.id_tipo_doc, doc.dl_doc, doc.ds_autore_doc
 
from ARO_DOC doc

join ARO_UNITA_DOC ud
 on (ud.id_unita_doc = doc.id_unita_doc
 and ud.dt_annul = to_date('31/12/2444', 'dd/mm/yyyy')
 and ud.ti_stato_conservazione = 'AIP_IN_AGGIORNAMENTO')

where doc.dt_annul = to_date('31/12/2444', 'dd/mm/yyyy')
  and doc.ti_creazione != 'VERSAMENTO_UNITA_DOC'
  and doc.id_elenco_vers is null
  and not exists (select *
                    from ELV_DOC_AGG_DA_ELAB_ELENCO doc_da_elab
                   where doc_da_elab.id_doc = doc.id_doc
				 )
*/
UNION

select
 '03_UPD_UD' ti_ele, upd_da_elab.id_strut, upd_da_elab.aa_key_unita_doc, upd_da_elab.dt_creazione, upd_ud.id_unita_doc, 0 id_doc, upd_da_elab.id_upd_unita_doc,

 ud.id_tipo_unita_doc, ud.id_registro_unita_doc, ud.cd_key_unita_doc, ud.fl_unita_doc_firmato, ud.ti_esito_verif_firme,
 ud.ti_conservazione, ud.nm_sistema_migraz, ud.fl_forza_accettazione, ud.fl_forza_conservazione, ud.dl_oggetto_unita_doc, ud.dt_reg_unita_doc, 
 
 doc.id_tipo_doc, doc.dl_doc, doc.ds_autore_doc

from ELV_UPD_UD_DA_ELAB_ELENCO upd_da_elab
join ARO_UPD_UNITA_DOC upd_ud
 on (upd_ud.id_upd_unita_doc = upd_da_elab.id_upd_unita_doc
 and upd_ud.dt_annul = to_date('31/12/2444', 'dd/mm/yyyy'))
join ARO_UNITA_DOC ud
 on (ud.id_unita_doc = upd_ud.id_unita_doc)
join ARO_DOC doc
 on (doc.id_unita_doc = ud.id_unita_doc)
 
where upd_da_elab.ti_stato_upd_elenco_vers in ('NON_SELEZ_SCHED');

-- changeset root:1751897635013-845
CREATE OR REPLACE FORCE VIEW "SER_V_RIC_SERIE_UD" ("ID_SERIE", "ID_STRUT", "CD_COMPOSITO_SERIE", "AA_SERIE", "DS_SERIE", "ID_TIPO_SERIE", "NM_STRUT", "ID_ENTE", "NM_ENTE", "ID_AMBIENTE", "NM_AMBIENTE", "NM_TIPO_SERIE", "ID_VER_SERIE", "CD_VER_SERIE", "DT_INIZIO_SEL_SERIE", "DT_FINE_SEL_SERIE", "TI_STATO_VER_SERIE", "TI_STATO_SERIE", "TI_STATO_CONTENUTO_CALC", "NI_UD_CONTENUTO_CALC", "FL_ERR_CONTENUTO_CALC", "TI_STATO_CONTENUTO_ACQ", "NI_UD_CONTENUTO_ACQ", "FL_ERR_CONTENUTO_FILE", "FL_ERR_CONTENUTO_ACQ", "TI_STATO_CONTENUTO_EFF", "NI_UD_CONTENUTO_EFF", "FL_ERR_CONTENUTO_EFF", "DS_ELAB_BLOCCATA", "FL_DA_RIGENERA", "FL_PRESENZA_CONSIST_ATTESA", "TI_CREA_STANDARD", "ID_MODELLO_TIPO_SERIE", "NM_MODELLO_TIPO_SERIE", "FL_ERR_VALIDAZIONE", "FL_UPD_ANNUL_UNITA_DOC") AS select
 serie.id_serie, serie.id_strut, serie.cd_composito_serie, serie.aa_serie, serie.ds_serie, serie.id_tipo_serie,
 
 strut.nm_strut, ente.id_ente, ente.nm_ente, amb.id_ambiente, amb.nm_ambiente,
 
 ti_serie.nm_tipo_serie,
 ver_serie.id_ver_serie, ver_serie.cd_ver_serie, ver_serie.dt_inizio_sel_serie, ver_serie.dt_fine_sel_serie,
 stato_ver_serie.ti_stato_ver_serie,
 stato_serie.ti_stato_serie,
 
 case
	when conten_calc.id_contenuto_ver_serie is not null 
		then conten_calc.ti_stato_contenuto_ver_serie 
		else null
 end ti_stato_contenuto_calc,
 conten_calc.ni_ud_contenuto_ver_serie ni_ud_contenuto_calc,
 case
	when conten_calc.id_contenuto_ver_serie is not null 
		then
			case
				when exists (select * 
							from SER_ERR_CONTENUTO_VER_SERIE err_conten_calc 
							where err_conten_calc.id_contenuto_ver_serie = conten_calc.id_contenuto_ver_serie)
					then '1'
					else '0'
			end
		else null
 end fl_err_contenuto_calc,
 
 case
	when conten_acq.id_contenuto_ver_serie is not null 
		then conten_acq.ti_stato_contenuto_ver_serie 
		else null
 end ti_stato_contenuto_acq,
 conten_acq.ni_ud_contenuto_ver_serie ni_ud_contenuto_acq,
 case
	when conten_acq.id_contenuto_ver_serie is not null 
		then
			case
				when exists (select * 
							from SER_FILE_INPUT_VER_SERIE input_ver_serie, SER_ERR_FILE_INPUT err_file_input
							where input_ver_serie.id_ver_serie = ver_serie.id_ver_serie
							and input_ver_serie.ti_scopo_file_input_ver_serie = 'ACQUISIRE_CONTENUTO'
							and err_file_input.id_file_input_ver_serie = input_ver_serie.id_file_input_ver_serie)
					then '1'
					else '0'
			end
		else null
 end fl_err_contenuto_file,
 case
	when conten_acq.id_contenuto_ver_serie is not null 
		then
			case
				when exists (select * 
							from SER_ERR_CONTENUTO_VER_SERIE err_conten_acq 
							where err_conten_acq.id_contenuto_ver_serie = conten_acq.id_contenuto_ver_serie)
					then '1'
					else '0'
			end
		else null
 end fl_err_contenuto_acq,

 
 case
	when conten_eff.id_contenuto_ver_serie is not null 
		then conten_eff.ti_stato_contenuto_ver_serie 
		else null
 end ti_stato_contenuto_eff,
 conten_eff.ni_ud_contenuto_ver_serie ni_ud_contenuto_eff,
 case
	when conten_eff.id_contenuto_ver_serie is not null 
		then
			case
				when exists (select * 
							from SER_ERR_CONTENUTO_VER_SERIE err_conten_eff 
							where err_conten_eff.id_contenuto_ver_serie = conten_eff.id_contenuto_ver_serie)
					then '1'
					else '0'
			end
		else null
 end fl_err_contenuto_eff,
 
 case
	when conten_calc.id_contenuto_ver_serie is not null 
	and conten_calc.ti_stato_contenuto_ver_serie = 'CREAZIONE_IN_CORSO'
		then 
			case
				when	(select fl_job_bloccato 
						from SER_V_JOB_CONTENUTO_BLOCCATO job_bloccato
						where job_bloccato.id_contenuto_ver_serie = conten_calc.id_contenuto_ver_serie
						and job_bloccato.nm_job = 'CALCOLO_SERIE') = '1'
					then 'Calcolo della serie bloccato'
					else null
			end
	
	when conten_calc.id_contenuto_ver_serie is not null 
	and conten_calc.ti_stato_contenuto_ver_serie = 'CONTROLLO_CONSIST_IN_CORSO'
		then 
			case
				when	(select fl_job_bloccato 
						from SER_V_JOB_CONTENUTO_BLOCCATO job_bloccato
						where job_bloccato.id_contenuto_ver_serie = conten_calc.id_contenuto_ver_serie
						and job_bloccato.nm_job = 'CONTROLLA_CONTENUTO_SERIE_UD') = '1'
					then 'Controllo contenuto CALCOLATO bloccato'
					else null
			end

	when conten_acq.id_contenuto_ver_serie is not null 
	and conten_acq.ti_stato_contenuto_ver_serie = 'CREAZIONE_IN_CORSO'
		then 
			case
				when	(select fl_job_bloccato 
						from SER_V_JOB_CONTENUTO_BLOCCATO job_bloccato
						where job_bloccato.id_contenuto_ver_serie = conten_acq.id_contenuto_ver_serie
						and job_bloccato.nm_job = 'INPUT_SERIE') = '1'
					then 'Acquisizione della serie bloccata'
					else null
			end
	
	when conten_acq.id_contenuto_ver_serie is not null 
	and conten_acq.ti_stato_contenuto_ver_serie = 'CONTROLLO_CONSIST_IN_CORSO'
		then 
			case
				when	(select fl_job_bloccato 
						from SER_V_JOB_CONTENUTO_BLOCCATO job_bloccato
						where job_bloccato.id_contenuto_ver_serie = conten_acq.id_contenuto_ver_serie
						and job_bloccato.nm_job = 'CONTROLLA_CONTENUTO_SERIE_UD') = '1'
					then 'Controllo contenuto ACQUISITO bloccato'
					else null
			end

	when conten_eff.id_contenuto_ver_serie is not null 
	and conten_eff.ti_stato_contenuto_ver_serie = 'CREAZIONE_IN_CORSO'
		then 
			case
				when	(select fl_job_bloccato 
						from SER_V_JOB_CONTENUTO_BLOCCATO job_bloccato
						where job_bloccato.id_contenuto_ver_serie = conten_eff.id_contenuto_ver_serie
						and job_bloccato.nm_job = 'GENERAZIONE_CONTENUTO_EFFETTIVO_SERIE_UD') = '1'
					then 'Generazione contenuto EFFETTIVO della serie bloccato'
					else null
			end
	
	when conten_eff.id_contenuto_ver_serie is not null 
	and conten_eff.ti_stato_contenuto_ver_serie = 'CONTROLLO_CONSIST_IN_CORSO'
		then 
			case
				when	(select fl_job_bloccato 
						from SER_V_JOB_CONTENUTO_BLOCCATO job_bloccato
						where job_bloccato.id_contenuto_ver_serie = conten_eff.id_contenuto_ver_serie
						and job_bloccato.nm_job = 'CONTROLLA_CONTENUTO_SERIE_UD') = '1'
					then 'Controllo contenuto EFFETTIVO bloccato'
					else null
			end
	
	when stato_ver_serie.ti_stato_ver_serie = 'VALIDAZIONE_IN_CORSO'
		then 
			case
				when	(select fl_job_bloccato 
						from SER_V_JOB_VER_SERIE_BLOCCATO job_bloccato
						where job_bloccato.id_ver_serie = ver_serie.id_ver_serie
						and job_bloccato.nm_job = 'SET_SERIE_UD_VALIDATA') = '1'
					then 'Validazione serie bloccata'
					else null
			end
 end ds_elab_bloccata,
 
 case
	when 
	(conten_calc.id_contenuto_ver_serie is not null 
	and conten_calc.fl_tipo_serie_upd = '1')
	or
	(conten_acq.id_contenuto_ver_serie is not null 
	and conten_acq.fl_tipo_serie_upd = '1')
	or
	(conten_eff.id_contenuto_ver_serie is not null 
	and conten_eff.fl_tipo_serie_upd = '1')
		then '1'
		else '0'
 end fl_da_rigenera,
 
 case
	when consist.ni_unita_doc_attese is not null 
		then '1'
		else '0'
 end fl_presenza_consist_attesa,
 
 ti_serie.ti_crea_standard,
 ti_serie.id_modello_tipo_serie,
 modl_serie.nm_modello_tipo_serie,
 
 case
	when conten_eff.id_contenuto_ver_serie is not null 
		then
			case
				when exists (select * 
							from SER_ERR_CONTENUTO_VER_SERIE err_conten_eff 
							where err_conten_eff.id_contenuto_ver_serie = conten_eff.id_contenuto_ver_serie
							and err_conten_eff.ti_origine_err = 'VALIDAZIONE')
					then '1'
					else '0'
			end
		else null
 end fl_err_validazione,
 
 ver_serie.fl_upd_annul_unita_doc

from SER_SERIE serie

join ORG_STRUT strut
 on (strut.id_strut = serie.id_strut)
join ORG_ENTE ente
 on (ente.id_ente = strut.id_ente)
join ORG_AMBIENTE amb
 on (amb.id_ambiente = ente.id_ambiente)

join SER_VER_SERIE ver_serie
 on (ver_serie.id_serie = serie.id_serie)
join DEC_TIPO_SERIE ti_serie
 on (ti_serie.id_tipo_serie = serie.id_tipo_serie)
join SER_STATO_VER_SERIE stato_ver_serie
 on (stato_ver_serie.id_stato_ver_serie = ver_serie.id_stato_ver_serie_cor)

left join SER_STATO_SERIE stato_serie
 on (stato_serie.id_stato_serie = serie.id_stato_serie_cor)
 
left join SER_CONTENUTO_VER_SERIE conten_calc
 on (conten_calc.id_ver_serie = ver_serie.id_ver_serie
 and conten_calc.ti_contenuto_ver_serie = 'CALCOLATO')
 
left join SER_CONTENUTO_VER_SERIE conten_acq
 on (conten_acq.id_ver_serie = ver_serie.id_ver_serie
 and conten_acq.ti_contenuto_ver_serie = 'ACQUISITO')
 
left join SER_CONTENUTO_VER_SERIE conten_eff
 on (conten_eff.id_ver_serie = ver_serie.id_ver_serie
 and conten_eff.ti_contenuto_ver_serie = 'EFFETTIVO')
 
left join SER_CONSIST_VER_SERIE consist
 on (consist.id_ver_serie = ver_serie.id_ver_serie)
 
left join DEC_MODELLO_TIPO_SERIE modl_serie
 on (modl_serie.id_modello_tipo_serie = ti_serie.id_modello_tipo_serie)
 
where ver_serie.pg_ver_serie = (select max(ver_serie_cor.pg_ver_serie )
								from SER_VER_SERIE ver_serie_cor
								where ver_serie_cor.id_serie = serie.id_serie
								);

-- changeset root:1751897635013-846
COMMENT ON COLUMN SER_V_RIC_SERIE_UD.ID_VER_SERIE IS 'PK.1';

-- changeset root:1751897635013-847
CREATE OR REPLACE FORCE VIEW "LOG_V_LIS_INI_SCHED_JOB" ("ID_LOG_JOB", "NM_JOB", "DT_REG_LOG_JOB_INI", "DT_REG_LOG_JOB_FINE_SUC", "DT_REG_LOG_JOB_INI_SUC") AS select 
 inizio_job.id_log_job,
 inizio_job.nm_job,
 inizio_job.dt_reg_log_job dt_reg_log_job_ini,
 
 (select min(fine_job_min.dt_reg_log_job)
	from LOG_JOB fine_job_min
	where fine_job_min.nm_job = inizio_job.nm_job
	and fine_job_min.ti_reg_log_job in ('FINE_SCHEDULAZIONE', 'ERRORE')
  and fine_job_min.dt_reg_log_job >= inizio_job.dt_reg_log_job) dt_reg_log_job_fine_suc,
  
 (select min(inizio_suc.dt_reg_log_job) 
  from LOG_JOB inizio_suc
	where inizio_suc.nm_job = inizio_job.nm_job
  and inizio_suc.ti_reg_log_job = 'INIZIO_SCHEDULAZIONE'
	and inizio_suc.dt_reg_log_job > inizio_job.dt_reg_log_job) dt_reg_log_job_ini_suc
  
from LOG_JOB inizio_job
where inizio_job.ti_reg_log_job = 'INIZIO_SCHEDULAZIONE';

-- changeset root:1751897635013-848
CREATE OR REPLACE FORCE VIEW "LOG_V_LIS_INI_SCHED_JOB_STRUT" ("ID_LOG_JOB", "NM_JOB", "ID_STRUT", "DT_REG_LOG_JOB_INI", "DT_REG_LOG_JOB_FINE_SUC", "DT_REG_LOG_JOB_INI_SUC") AS select 
 inizio_job.id_log_job,
 inizio_job.nm_job,
 inizio_job.id_strut,
 inizio_job.dt_reg_log_job dt_reg_log_job_ini,
 
 (select min(fine_job_min.dt_reg_log_job)
	from LOG_JOB fine_job_min
	where fine_job_min.nm_job = inizio_job.nm_job
	and fine_job_min.id_strut = inizio_job.id_strut
	and fine_job_min.ti_reg_log_job in ('FINE_SCHEDULAZIONE', 'ERRORE')
  and fine_job_min.dt_reg_log_job >= inizio_job.dt_reg_log_job) dt_reg_log_job_fine_suc,
  
 (select min(inizio_suc.dt_reg_log_job) 
  from LOG_JOB inizio_suc
	where inizio_suc.nm_job = inizio_job.nm_job
    and inizio_suc.ti_reg_log_job = 'INIZIO_SCHEDULAZIONE'
    and inizio_suc.id_strut = inizio_job.id_strut
	and inizio_suc.dt_reg_log_job > inizio_job.dt_reg_log_job) dt_reg_log_job_ini_suc
  
from LOG_JOB inizio_job
where inizio_job.ti_reg_log_job = 'INIZIO_SCHEDULAZIONE'
and inizio_job.id_strut is not null;

-- changeset root:1751897635013-849
CREATE OR REPLACE FORCE VIEW "LOG_V_LIS_SCHED" ("ID_LOG_JOB", "NM_JOB", "DT_REG_LOG_JOB_INI", "DT_REG_LOG_JOB_FINE", "DURATA_GG", "DURATA_ORE", "DURATA_MIN", "DURATA_SEC", "DL_MSG_ERR") AS select
 tmp.id_log_job,
 tmp.nm_job,
 tmp.dt_reg_log_job_ini,
 
 case
	when (tmp.dt_reg_log_job_ini_suc is not null and tmp.dt_reg_log_job_fine_suc is not null and tmp.dt_reg_log_job_ini_suc > tmp.dt_reg_log_job_fine_suc) 
	or (tmp.dt_reg_log_job_ini_suc is null)
		then tmp.dt_reg_log_job_fine_suc
		else null
 end dt_reg_log_job_fine,

 case
	when (tmp.dt_reg_log_job_ini_suc is not null and tmp.dt_reg_log_job_fine_suc is not null and tmp.dt_reg_log_job_ini_suc > tmp.dt_reg_log_job_fine_suc) 
	or (tmp.dt_reg_log_job_ini_suc is null and tmp.dt_reg_log_job_fine_suc is not null)
		then trunc((((86400*(tmp.dt_reg_log_job_fine_suc - tmp.dt_reg_log_job_ini))/60)/60)/24)
		else null
 end durata_gg,

 case
	when (tmp.dt_reg_log_job_ini_suc is not null and tmp.dt_reg_log_job_fine_suc is not null and tmp.dt_reg_log_job_ini_suc > tmp.dt_reg_log_job_fine_suc) 
	or (tmp.dt_reg_log_job_ini_suc is null and tmp.dt_reg_log_job_fine_suc is not null)
		then trunc(((86400*(tmp.dt_reg_log_job_fine_suc - tmp.dt_reg_log_job_ini))/60)/60)-24*(trunc((((86400*(tmp.dt_reg_log_job_fine_suc - tmp.dt_reg_log_job_ini))/60)/60)/24))
		else null
 end durata_ore,

 case
	when (tmp.dt_reg_log_job_ini_suc is not null and tmp.dt_reg_log_job_fine_suc is not null and tmp.dt_reg_log_job_ini_suc > tmp.dt_reg_log_job_fine_suc) 
	or (tmp.dt_reg_log_job_ini_suc is null and tmp.dt_reg_log_job_fine_suc is not null)
		then trunc((86400*(tmp.dt_reg_log_job_fine_suc - tmp.dt_reg_log_job_ini))/60)-60*(trunc(((86400*(tmp.dt_reg_log_job_fine_suc - tmp.dt_reg_log_job_ini))/60)/60))
		else null
 end durata_min,

 case
	when (tmp.dt_reg_log_job_ini_suc is not null and tmp.dt_reg_log_job_fine_suc is not null and tmp.dt_reg_log_job_ini_suc > tmp.dt_reg_log_job_fine_suc) 
	or (tmp.dt_reg_log_job_ini_suc is null and tmp.dt_reg_log_job_fine_suc is not null)
		then trunc(86400*(tmp.dt_reg_log_job_fine_suc - tmp.dt_reg_log_job_ini))-60*(trunc((86400*(tmp.dt_reg_log_job_fine_suc - tmp.dt_reg_log_job_ini))/60))
		else null
 end durata_sec,

 case
	when (tmp.dt_reg_log_job_ini_suc is not null and tmp.dt_reg_log_job_fine_suc is not null and tmp.dt_reg_log_job_ini_suc > tmp.dt_reg_log_job_fine_suc) 
	or (tmp.dt_reg_log_job_ini_suc is null and tmp.dt_reg_log_job_fine_suc is not null)
		then (select min(fine_job.dl_msg_err)
			from LOG_JOB fine_job 
			where fine_job.nm_job = tmp.nm_job
			and fine_job.ti_reg_log_job in ('FINE_SCHEDULAZIONE', 'ERRORE')
			and fine_job.dt_reg_log_job = tmp.dt_reg_log_job_fine_suc)
	when (tmp.dt_reg_log_job_ini_suc is not null and tmp.dt_reg_log_job_fine_suc is not null and tmp.dt_reg_log_job_ini_suc < tmp.dt_reg_log_job_fine_suc)
		then 'Job terminato per caduta dell''application server'
		else null
 end dl_msg_err
 
from LOG_V_LIS_INI_SCHED_JOB tmp;

-- changeset root:1751897635013-850
COMMENT ON COLUMN LOG_V_LIS_SCHED.ID_LOG_JOB IS 'PK.1 relativa a tabella LOG_JOB';

-- changeset root:1751897635013-851
CREATE OR REPLACE FORCE VIEW "LOG_V_LIS_SCHED_STRUT" ("ID_LOG_JOB", "NM_JOB", "ID_STRUT", "DT_REG_LOG_JOB_INI", "DT_REG_LOG_JOB_FINE", "DURATA_GG", "DURATA_ORE", "DURATA_MIN", "DURATA_SEC", "DL_MSG_ERR") AS select
 tmp.id_log_job,
 tmp.nm_job,
 tmp.id_strut,
 tmp.dt_reg_log_job_ini,
 
 case
	when (tmp.dt_reg_log_job_ini_suc is not null and tmp.dt_reg_log_job_fine_suc is not null and tmp.dt_reg_log_job_ini_suc > tmp.dt_reg_log_job_fine_suc) 
	or (tmp.dt_reg_log_job_ini_suc is null)
		then tmp.dt_reg_log_job_fine_suc
		else null
 end dt_reg_log_job_fine,

 case
	when (tmp.dt_reg_log_job_ini_suc is not null and tmp.dt_reg_log_job_fine_suc is not null and tmp.dt_reg_log_job_ini_suc > tmp.dt_reg_log_job_fine_suc) 
	or (tmp.dt_reg_log_job_ini_suc is null and tmp.dt_reg_log_job_fine_suc is not null)
		then trunc((((86400*(tmp.dt_reg_log_job_fine_suc - tmp.dt_reg_log_job_ini))/60)/60)/24)
		else null
 end durata_gg,

 case
	when (tmp.dt_reg_log_job_ini_suc is not null and tmp.dt_reg_log_job_fine_suc is not null and tmp.dt_reg_log_job_ini_suc > tmp.dt_reg_log_job_fine_suc) 
	or (tmp.dt_reg_log_job_ini_suc is null and tmp.dt_reg_log_job_fine_suc is not null)
		then trunc(((86400*(tmp.dt_reg_log_job_fine_suc - tmp.dt_reg_log_job_ini))/60)/60)-24*(trunc((((86400*(tmp.dt_reg_log_job_fine_suc - tmp.dt_reg_log_job_ini))/60)/60)/24))
		else null
 end durata_ore,

 case
	when (tmp.dt_reg_log_job_ini_suc is not null and tmp.dt_reg_log_job_fine_suc is not null and tmp.dt_reg_log_job_ini_suc > tmp.dt_reg_log_job_fine_suc) 
	or (tmp.dt_reg_log_job_ini_suc is null and tmp.dt_reg_log_job_fine_suc is not null)
		then trunc((86400*(tmp.dt_reg_log_job_fine_suc - tmp.dt_reg_log_job_ini))/60)-60*(trunc(((86400*(tmp.dt_reg_log_job_fine_suc - tmp.dt_reg_log_job_ini))/60)/60))
		else null
 end durata_min,

 case
	when (tmp.dt_reg_log_job_ini_suc is not null and tmp.dt_reg_log_job_fine_suc is not null and tmp.dt_reg_log_job_ini_suc > tmp.dt_reg_log_job_fine_suc) 
	or (tmp.dt_reg_log_job_ini_suc is null and tmp.dt_reg_log_job_fine_suc is not null)
		then trunc(86400*(tmp.dt_reg_log_job_fine_suc - tmp.dt_reg_log_job_ini))-60*(trunc((86400*(tmp.dt_reg_log_job_fine_suc - tmp.dt_reg_log_job_ini))/60))
		else null
 end durata_sec,

 case
	when (tmp.dt_reg_log_job_ini_suc is not null and tmp.dt_reg_log_job_fine_suc is not null and tmp.dt_reg_log_job_ini_suc > tmp.dt_reg_log_job_fine_suc) 
	or (tmp.dt_reg_log_job_ini_suc is null and tmp.dt_reg_log_job_fine_suc is not null)
		then (select min(fine_job.dl_msg_err)
			from LOG_JOB fine_job 
			where fine_job.nm_job = tmp.nm_job
			and fine_job.ti_reg_log_job in ('FINE_SCHEDULAZIONE', 'ERRORE')
			and fine_job.dt_reg_log_job = tmp.dt_reg_log_job_fine_suc)
	when (tmp.dt_reg_log_job_ini_suc is not null and tmp.dt_reg_log_job_fine_suc is not null and tmp.dt_reg_log_job_ini_suc < tmp.dt_reg_log_job_fine_suc)
		then 'Job terminato per caduta dell''application server'
		else null
 end dl_msg_err
 
from LOG_V_LIS_INI_SCHED_JOB_STRUT tmp;

-- changeset root:1751897635013-852
CREATE OR REPLACE FORCE VIEW "LOG_V_JOB_ALL" ("ID_LOG_JOB", "NM_JOB", "TI_REG_LOG_JOB", "DT_REG_LOG_JOB", "DL_MSG_ERR", "ID_STRUT", "ID_RECORD", "NM_ENTITY_RECORD", "CD_IND_SERVER", "DT_VIRTUAL_REG") AS SELECT "ID_LOG_JOB",
           "NM_JOB",
           "TI_REG_LOG_JOB",
           "DT_REG_LOG_JOB",
           "DL_MSG_ERR",
           "ID_STRUT",
           "ID_RECORD",
           "NM_ENTITY_RECORD",
           "CD_IND_SERVER",
           "DT_VIRTUAL_REG"
      FROM log_job
    UNION ALL
    SELECT "ID_LOG_JOB_HIST",
           "NM_JOB",
           "TI_REG_LOG_JOB",
           "DT_REG_LOG_JOB",
           "DL_MSG_ERR",
           "ID_STRUT",
           "ID_RECORD",
           "NM_ENTITY_RECORD",
           "CD_IND_SERVER",
           "DT_VIRTUAL_REG"
      FROM log_job_history;

-- changeset root:1751897635013-853
CREATE OR REPLACE FORCE VIEW "LOG_V_LIS_INI_SCHED_JOB_HIST" ("ID_LOG_JOB", "NM_JOB", "DT_REG_LOG_JOB_INI", "DT_REG_LOG_JOB_FINE_SUC", "DT_REG_LOG_JOB_INI_SUC") AS SELECT inizio_job.id_log_job,
           inizio_job.nm_job,
           inizio_job.dt_reg_log_job
               dt_reg_log_job_ini,
           (SELECT MIN (fine_job_min.dt_reg_log_job)
              FROM LOG_JOB fine_job_min
             WHERE fine_job_min.nm_job = inizio_job.nm_job
               AND fine_job_min.ti_reg_log_job IN
                       ('FINE_SCHEDULAZIONE', 'ERRORE')
               AND fine_job_min.dt_reg_log_job >= inizio_job.dt_reg_log_job)
               dt_reg_log_job_fine_suc,
           (SELECT MIN (inizio_suc.dt_reg_log_job)
             FROM LOG_JOB inizio_suc
            WHERE inizio_suc.nm_job = inizio_job.nm_job
              AND inizio_suc.ti_reg_log_job = 'INIZIO_SCHEDULAZIONE'
              AND inizio_suc.dt_reg_log_job > inizio_job.dt_reg_log_job)
               dt_reg_log_job_ini_suc
      FROM LOG_V_JOB_ALL inizio_job
     WHERE inizio_job.ti_reg_log_job = 'INIZIO_SCHEDULAZIONE';

-- changeset root:1751897635013-854
CREATE OR REPLACE FORCE VIEW "LOG_V_LIS_INI_SCHED_JOB_STRUT_HIST" ("ID_LOG_JOB", "NM_JOB", "ID_STRUT", "DT_REG_LOG_JOB_INI", "DT_REG_LOG_JOB_FINE_SUC", "DT_REG_LOG_JOB_INI_SUC") AS SELECT inizio_job.id_log_job,
           inizio_job.nm_job,
           inizio_job.id_strut,
           inizio_job.dt_reg_log_job
               dt_reg_log_job_ini,
           (SELECT MIN (fine_job_min.dt_reg_log_job)
              FROM LOG_JOB fine_job_min
             WHERE fine_job_min.nm_job = inizio_job.nm_job
               AND fine_job_min.id_strut = inizio_job.id_strut
               AND fine_job_min.ti_reg_log_job IN
                       ('FINE_SCHEDULAZIONE', 'ERRORE')
               AND fine_job_min.dt_reg_log_job >= inizio_job.dt_reg_log_job)
               dt_reg_log_job_fine_suc,
           (SELECT MIN (inizio_suc.dt_reg_log_job)
             FROM LOG_JOB inizio_suc
            WHERE inizio_suc.nm_job = inizio_job.nm_job
              AND inizio_suc.ti_reg_log_job = 'INIZIO_SCHEDULAZIONE'
              AND inizio_suc.id_strut = inizio_job.id_strut
              AND inizio_suc.dt_reg_log_job > inizio_job.dt_reg_log_job)
               dt_reg_log_job_ini_suc
      FROM LOG_V_JOB_ALL inizio_job
     WHERE inizio_job.ti_reg_log_job = 'INIZIO_SCHEDULAZIONE'
       AND inizio_job.id_strut IS NOT NULL;

-- changeset root:1751897635013-855
CREATE OR REPLACE FORCE VIEW "LOG_V_LIS_SCHED_HIST" ("ID_LOG_JOB", "NM_JOB", "DT_REG_LOG_JOB_INI", "DT_REG_LOG_JOB_FINE", "DURATA_GG", "DURATA_ORE", "DURATA_MIN", "DURATA_SEC", "DL_MSG_ERR") AS SELECT tmp.id_log_job,
           tmp.nm_job,
           tmp.dt_reg_log_job_ini,
           CASE
               WHEN (tmp.dt_reg_log_job_ini_suc IS NOT NULL
                 AND tmp.dt_reg_log_job_fine_suc IS NOT NULL
                 AND tmp.dt_reg_log_job_ini_suc > tmp.dt_reg_log_job_fine_suc)
                 OR (tmp.dt_reg_log_job_ini_suc IS NULL) THEN
                   tmp.dt_reg_log_job_fine_suc
               ELSE
                   NULL
           END    dt_reg_log_job_fine,
           CASE
               WHEN (tmp.dt_reg_log_job_ini_suc IS NOT NULL
                 AND tmp.dt_reg_log_job_fine_suc IS NOT NULL
                 AND tmp.dt_reg_log_job_ini_suc > tmp.dt_reg_log_job_fine_suc)
                 OR (tmp.dt_reg_log_job_ini_suc IS NULL
                 AND tmp.dt_reg_log_job_fine_suc IS NOT NULL) THEN
                   TRUNC (
                         (  (  (  86400
                                * (  tmp.dt_reg_log_job_fine_suc
                                   - tmp.dt_reg_log_job_ini))
                             / 60)
                          / 60)
                       / 24)
               ELSE
                   NULL
           END    durata_gg,
           CASE
               WHEN (tmp.dt_reg_log_job_ini_suc IS NOT NULL
                 AND tmp.dt_reg_log_job_fine_suc IS NOT NULL
                 AND tmp.dt_reg_log_job_ini_suc > tmp.dt_reg_log_job_fine_suc)
                 OR (tmp.dt_reg_log_job_ini_suc IS NULL
                 AND tmp.dt_reg_log_job_fine_suc IS NOT NULL) THEN
                     TRUNC (
                           (  (  86400
                               * (  tmp.dt_reg_log_job_fine_suc
                                  - tmp.dt_reg_log_job_ini))
                            / 60)
                         / 60)
                   -   24
                     * (TRUNC (
                              (  (  (  86400
                                     * (  tmp.dt_reg_log_job_fine_suc
                                        - tmp.dt_reg_log_job_ini))
                                  / 60)
                               / 60)
                            / 24))
               ELSE
                   NULL
           END    durata_ore,
           CASE
               WHEN (tmp.dt_reg_log_job_ini_suc IS NOT NULL
                 AND tmp.dt_reg_log_job_fine_suc IS NOT NULL
                 AND tmp.dt_reg_log_job_ini_suc > tmp.dt_reg_log_job_fine_suc)
                 OR (tmp.dt_reg_log_job_ini_suc IS NULL
                 AND tmp.dt_reg_log_job_fine_suc IS NOT NULL) THEN
                     TRUNC (
                           (  86400
                            * (  tmp.dt_reg_log_job_fine_suc
                               - tmp.dt_reg_log_job_ini))
                         / 60)
                   -   60
                     * (TRUNC (
                              (  (  86400
                                  * (  tmp.dt_reg_log_job_fine_suc
                                     - tmp.dt_reg_log_job_ini))
                               / 60)
                            / 60))
               ELSE
                   NULL
           END    durata_min,
           CASE
               WHEN (tmp.dt_reg_log_job_ini_suc IS NOT NULL
                 AND tmp.dt_reg_log_job_fine_suc IS NOT NULL
                 AND tmp.dt_reg_log_job_ini_suc > tmp.dt_reg_log_job_fine_suc)
                 OR (tmp.dt_reg_log_job_ini_suc IS NULL
                 AND tmp.dt_reg_log_job_fine_suc IS NOT NULL) THEN
                     TRUNC (
                           86400
                         * (  tmp.dt_reg_log_job_fine_suc
                            - tmp.dt_reg_log_job_ini))
                   -   60
                     * (TRUNC (
                              (  86400
                               * (  tmp.dt_reg_log_job_fine_suc
                                  - tmp.dt_reg_log_job_ini))
                            / 60))
               ELSE
                   NULL
           END    durata_sec,
           CASE
               WHEN (tmp.dt_reg_log_job_ini_suc IS NOT NULL
                 AND tmp.dt_reg_log_job_fine_suc IS NOT NULL
                 AND tmp.dt_reg_log_job_ini_suc > tmp.dt_reg_log_job_fine_suc)
                 OR (tmp.dt_reg_log_job_ini_suc IS NULL
                 AND tmp.dt_reg_log_job_fine_suc IS NOT NULL) THEN
                   (SELECT MIN (fine_job.dl_msg_err)
                     FROM LOG_JOB fine_job
                    WHERE fine_job.nm_job = tmp.nm_job
                      AND fine_job.ti_reg_log_job IN
                              ('FINE_SCHEDULAZIONE', 'ERRORE')
                      AND fine_job.dt_reg_log_job =
                          tmp.dt_reg_log_job_fine_suc)
               WHEN (tmp.dt_reg_log_job_ini_suc IS NOT NULL
                 AND tmp.dt_reg_log_job_fine_suc IS NOT NULL
                 AND tmp.dt_reg_log_job_ini_suc < tmp.dt_reg_log_job_fine_suc) THEN
                   'Job terminato per caduta dell''application server'
               ELSE
                   NULL
           END    dl_msg_err
      FROM LOG_V_LIS_INI_SCHED_JOB_HIST tmp;

-- changeset root:1751897635013-856
CREATE OR REPLACE FORCE VIEW "LOG_V_LIS_SCHED_STRUT_HIST" ("ID_LOG_JOB", "NM_JOB", "ID_STRUT", "DT_REG_LOG_JOB_INI", "DT_REG_LOG_JOB_FINE", "DURATA_GG", "DURATA_ORE", "DURATA_MIN", "DURATA_SEC", "DL_MSG_ERR") AS SELECT tmp.id_log_job,
           tmp.nm_job,
           tmp.id_strut,
           tmp.dt_reg_log_job_ini,
           CASE
               WHEN (tmp.dt_reg_log_job_ini_suc IS NOT NULL
                 AND tmp.dt_reg_log_job_fine_suc IS NOT NULL
                 AND tmp.dt_reg_log_job_ini_suc > tmp.dt_reg_log_job_fine_suc)
                 OR (tmp.dt_reg_log_job_ini_suc IS NULL) THEN
                   tmp.dt_reg_log_job_fine_suc
               ELSE
                   NULL
           END    dt_reg_log_job_fine,
           CASE
               WHEN (tmp.dt_reg_log_job_ini_suc IS NOT NULL
                 AND tmp.dt_reg_log_job_fine_suc IS NOT NULL
                 AND tmp.dt_reg_log_job_ini_suc > tmp.dt_reg_log_job_fine_suc)
                 OR (tmp.dt_reg_log_job_ini_suc IS NULL
                 AND tmp.dt_reg_log_job_fine_suc IS NOT NULL) THEN
                   TRUNC (
                         (  (  (  86400
                                * (  tmp.dt_reg_log_job_fine_suc
                                   - tmp.dt_reg_log_job_ini))
                             / 60)
                          / 60)
                       / 24)
               ELSE
                   NULL
           END    durata_gg,
           CASE
               WHEN (tmp.dt_reg_log_job_ini_suc IS NOT NULL
                 AND tmp.dt_reg_log_job_fine_suc IS NOT NULL
                 AND tmp.dt_reg_log_job_ini_suc > tmp.dt_reg_log_job_fine_suc)
                 OR (tmp.dt_reg_log_job_ini_suc IS NULL
                 AND tmp.dt_reg_log_job_fine_suc IS NOT NULL) THEN
                     TRUNC (
                           (  (  86400
                               * (  tmp.dt_reg_log_job_fine_suc
                                  - tmp.dt_reg_log_job_ini))
                            / 60)
                         / 60)
                   -   24
                     * (TRUNC (
                              (  (  (  86400
                                     * (  tmp.dt_reg_log_job_fine_suc
                                        - tmp.dt_reg_log_job_ini))
                                  / 60)
                               / 60)
                            / 24))
               ELSE
                   NULL
           END    durata_ore,
           CASE
               WHEN (tmp.dt_reg_log_job_ini_suc IS NOT NULL
                 AND tmp.dt_reg_log_job_fine_suc IS NOT NULL
                 AND tmp.dt_reg_log_job_ini_suc > tmp.dt_reg_log_job_fine_suc)
                 OR (tmp.dt_reg_log_job_ini_suc IS NULL
                 AND tmp.dt_reg_log_job_fine_suc IS NOT NULL) THEN
                     TRUNC (
                           (  86400
                            * (  tmp.dt_reg_log_job_fine_suc
                               - tmp.dt_reg_log_job_ini))
                         / 60)
                   -   60
                     * (TRUNC (
                              (  (  86400
                                  * (  tmp.dt_reg_log_job_fine_suc
                                     - tmp.dt_reg_log_job_ini))
                               / 60)
                            / 60))
               ELSE
                   NULL
           END    durata_min,
           CASE
               WHEN (tmp.dt_reg_log_job_ini_suc IS NOT NULL
                 AND tmp.dt_reg_log_job_fine_suc IS NOT NULL
                 AND tmp.dt_reg_log_job_ini_suc > tmp.dt_reg_log_job_fine_suc)
                 OR (tmp.dt_reg_log_job_ini_suc IS NULL
                 AND tmp.dt_reg_log_job_fine_suc IS NOT NULL) THEN
                     TRUNC (
                           86400
                         * (  tmp.dt_reg_log_job_fine_suc
                            - tmp.dt_reg_log_job_ini))
                   -   60
                     * (TRUNC (
                              (  86400
                               * (  tmp.dt_reg_log_job_fine_suc
                                  - tmp.dt_reg_log_job_ini))
                            / 60))
               ELSE
                   NULL
           END    durata_sec,
           CASE
               WHEN (tmp.dt_reg_log_job_ini_suc IS NOT NULL
                 AND tmp.dt_reg_log_job_fine_suc IS NOT NULL
                 AND tmp.dt_reg_log_job_ini_suc > tmp.dt_reg_log_job_fine_suc)
                 OR (tmp.dt_reg_log_job_ini_suc IS NULL
                 AND tmp.dt_reg_log_job_fine_suc IS NOT NULL) THEN
                   (SELECT MIN (fine_job.dl_msg_err)
                     FROM LOG_JOB fine_job
                    WHERE fine_job.nm_job = tmp.nm_job
                      AND fine_job.ti_reg_log_job IN
                              ('FINE_SCHEDULAZIONE', 'ERRORE')
                      AND fine_job.dt_reg_log_job =
                          tmp.dt_reg_log_job_fine_suc)
               WHEN (tmp.dt_reg_log_job_ini_suc IS NOT NULL
                 AND tmp.dt_reg_log_job_fine_suc IS NOT NULL
                 AND tmp.dt_reg_log_job_ini_suc < tmp.dt_reg_log_job_fine_suc) THEN
                   'Job terminato per caduta dell''application server'
               ELSE
                   NULL
           END    dl_msg_err
      FROM LOG_V_LIS_INI_SCHED_JOB_STRUT_HIST tmp;

-- changeset root:1751897635013-857
CREATE OR REPLACE FORCE VIEW "LOG_V_VIS_LAST_SCHED_STRUT" ("ID_LOG_JOB", "NM_JOB", "ID_STRUT", "DT_REG_LOG_JOB_INI", "FL_JOB_ATTIVO") AS select 
 inizio_job.id_log_job,
 inizio_job.nm_job,
 inizio_job.id_strut,
 inizio_job.dt_reg_log_job dt_reg_log_job_ini,
 case
	when exists (select *
				from LOG_JOB fine_job
				where fine_job.nm_job = inizio_job.nm_job
				and fine_job.id_strut = inizio_job.id_strut
				and fine_job.ti_reg_log_job in ('FINE_SCHEDULAZIONE', 'ERRORE')
				and fine_job.dt_reg_log_job >= inizio_job.dt_reg_log_job)
		then '0'
		else '1'
 end fl_job_attivo
  
from LOG_JOB inizio_job
where inizio_job.ti_reg_log_job = 'INIZIO_SCHEDULAZIONE'
and inizio_job.dt_reg_log_job = (select max(inizio_job_max.dt_reg_log_job)
								from LOG_JOB inizio_job_max
								where inizio_job_max.nm_job = inizio_job.nm_job
								and inizio_job_max.id_strut = inizio_job.id_strut
								and inizio_job_max.ti_reg_log_job = 'INIZIO_SCHEDULAZIONE');

-- changeset root:1751897635013-858
CREATE OR REPLACE FORCE VIEW "APL_V_LOG_JOB" ("ID_LOG_JOB", "NM_JOB", "TI_REG_LOG_JOB", "DT_REG_LOG_JOB", "DL_MSG_ERR", "CD_IND_SERVER") AS SELECT ID_LOG_JOB, NM_JOB, TI_REG_LOG_JOB,DT_REG_LOG_JOB, DL_MSG_ERR, cd_ind_server
FROM LOG_JOB;

-- changeset root:1751897635013-859
CREATE OR REPLACE FORCE VIEW "LOG_V_VIS_LAST_SCHED" ("ID_LOG_JOB", "NM_JOB", "DT_REG_LOG_JOB_INI", "FL_JOB_ATTIVO", "LAST_EXEC_OK") AS select max (tab1.id_log_job), tab1.nm_job,tab1.dt_reg_log_job_ini, tab1.fl_job_attivo,tab1.LAST_EXEC_OK
  from (
  SELECT inizio_job.id_log_job,
           inizio_job.nm_job,
           inizio_job.dt_reg_log_job    dt_reg_log_job_ini,
           CASE
               WHEN EXISTS
                        (SELECT *
                           FROM LOG_JOB fine_job
                          WHERE fine_job.nm_job = inizio_job.nm_job
                            AND fine_job.ti_reg_log_job IN
                                    ('FINE_SCHEDULAZIONE', 'ERRORE')
                            AND fine_job.dt_reg_log_job >=
                                inizio_job.dt_reg_log_job) THEN
                   '0'
               ELSE
                   '1'
           END                          fl_job_attivo,
           CASE
               WHEN EXISTS
                        (SELECT *
                           FROM LOG_JOB fine_job
                          WHERE fine_job.nm_job = inizio_job.nm_job
                            AND fine_job.ti_reg_log_job IN
                                    ('FINE_SCHEDULAZIONE')
                            AND fine_job.dt_reg_log_job >=
                                inizio_job.dt_reg_log_job) THEN
                   '1'
               ELSE
                   '0'
           END                          last_exec_ok
      FROM LOG_JOB inizio_job
     WHERE inizio_job.ti_reg_log_job = 'INIZIO_SCHEDULAZIONE'
       AND inizio_job.dt_reg_log_job =
           (SELECT MAX (inizio_job_max.dt_reg_log_job)
              FROM LOG_JOB inizio_job_max
             WHERE inizio_job_max.nm_job = inizio_job.nm_job
               AND inizio_job_max.ti_reg_log_job = 'INIZIO_SCHEDULAZIONE'
               )) tab1
group by  tab1.nm_job,tab1.dt_reg_log_job_ini, tab1.fl_job_attivo,tab1.LAST_EXEC_OK;

-- changeset root:1751897635013-860
CREATE OR REPLACE FORCE VIEW "ORG_V_RIC_ORGANIZ_REST_ARCH" ("FL_ASSOCIAZIONE_SCADUTA", "FL_ASSOCIAZIONI_FUTURE", "ID_ENTE_CONVENZ_ORG", "ID_ENTE_CONVENZ", "ID_ORGANIZ_IAM", "DT_INI_VAL", "DT_FINE_VAL") AS (

-- 1) associazione valida

SELECT NULL     fl_associazione_scaduta,
       NULL     fl_associazioni_future,
       convenz_org."ID_ENTE_CONVENZ_ORG",convenz_org."ID_ENTE_CONVENZ",convenz_org."ID_ORGANIZ_IAM",convenz_org."DT_INI_VAL",convenz_org."DT_FINE_VAL"
  FROM sacer_iam.org_ente_convenz_org convenz_org
 WHERE SYSDATE BETWEEN convenz_org.dt_ini_val AND convenz_org.dt_fine_val
UNION aLL
-- 2) associazione non valida, ma con altre associazioni future (anch'esse non valide in quanto future)
SELECT '1' fl_associazione_scaduta, '1' fl_associazioni_future, c1."ID_ENTE_CONVENZ_ORG",c1."ID_ENTE_CONVENZ",c1."ID_ORGANIZ_IAM",c1."DT_INI_VAL",c1."DT_FINE_VAL"
  FROM sacer_iam.org_ente_convenz_org c1
 WHERE     c1.dt_fine_val < SYSDATE
       AND EXISTS
               (SELECT 1
                  FROM sacer_iam.org_ente_convenz_org c2
                 WHERE     c2.id_organiz_iam = c1.id_organiz_iam
                       AND c2.dt_ini_val > SYSDATE)
UNION ALL
-- 3) associazione non valida senza altre associazioni future
SELECT '1' fl_associazione_scaduta, '0' fl_associazioni_future, c1."ID_ENTE_CONVENZ_ORG",c1."ID_ENTE_CONVENZ",c1."ID_ORGANIZ_IAM",c1."DT_INI_VAL",c1."DT_FINE_VAL"
  FROM sacer_iam.org_ente_convenz_org c1
 WHERE     c1.dt_fine_val < SYSDATE
       AND NOT EXISTS
               (SELECT 1
                  FROM sacer_iam.org_ente_convenz_org c2
                 WHERE     c2.id_organiz_iam = c1.id_organiz_iam
                       AND c2.id_ente_convenz != c1.id_ente_convenz) );

-- changeset root:1751897635013-861
CREATE OR REPLACE FORCE VIEW "SER_V_CREA_IX_VOL_SERIE_UD" ("ID_VOL_VER_SERIE", "CD_VER_XSD_IX_VOL", "DS_ID_SERIE", "DS_SERIE", "CD_VER_SERIE", "NI_UNITA_DOC_VOL", "CD_FIRST_UNITA_DOC_VOL", "DT_FIRST_UNITA_DOC_VOL", "CD_LAST_UNITA_DOC_VOL", "DT_LAST_UNITA_DOC_VOL", "DS_AUTORE_CRITERIO_ORDINAMENTO", "DT_CRITERIO_ORDINAMENTO", "DS_CRITERIO_ORDINAMENTO") AS select
 vol_serie.id_vol_ver_serie, 
 '1.0' cd_ver_xsd_ix_vol,
 valore.ds_valore_param_applic || ':' || ente.nm_ente || ':' || strut.nm_strut || ':' || serie.cd_composito_serie ds_id_serie,
 serie.ds_serie,
 ver_serie.cd_ver_serie,
 
 vol_serie.ni_unita_doc_vol ni_unita_doc_vol, 
 
 ud_conten_first.cd_ud_serie cd_first_unita_doc_vol, ud_conten_first.dt_ud_serie dt_first_unita_doc_vol, 
 ud_conten_last.cd_ud_serie cd_last_unita_doc_vol, ud_conten_last.dt_ud_serie dt_last_unita_doc_vol,
 
 nota_crit_ord.nm_userid ds_autore_criterio_ordinamento, 
 nota_crit_ord.dt_nota_ver_serie dt_criterio_ordinamento,
 nota_crit_ord.ds_nota_ver_serie ds_criterio_ordinamento

from SER_VOL_VER_SERIE vol_serie
join SER_VER_SERIE ver_serie
 on (ver_serie.id_ver_serie = vol_serie.id_ver_serie)

join SER_SERIE serie
 on (serie.id_serie = ver_serie.id_serie)
join ORG_STRUT strut
 on (strut.id_strut = serie.id_strut)
join ORG_ENTE ente
 on (ente.id_ente = strut.id_ente)
join ORG_AMBIENTE amb
 on (amb.id_ambiente = ente.id_ambiente)

left join SER_V_LIS_NOTA_SERIE nota_crit_ord
 on (nota_crit_ord.id_ver_serie = ver_serie.id_ver_serie
 and nota_crit_ord.cd_tipo_nota_serie = 'CRITERI_ORDINAMENTO')

join ARO_UD_APPART_VER_SERIE ud_conten_first
 on (ud_conten_first.id_ud_appart_ver_serie = vol_serie.id_first_ud_appart_vol)
join ARO_UD_APPART_VER_SERIE ud_conten_last
 on (ud_conten_last.id_ud_appart_ver_serie = vol_serie.id_last_ud_appart_vol)
 join APL_PARAM_APPLIC param on (param.nm_param_applic = 'SISTEMA_CONSERVAZIONE')
 join APL_VALORE_PARAM_APPLIC valore on (valore.id_param_applic = param.id_param_applic);

-- changeset root:1751897635013-862
COMMENT ON COLUMN SER_V_CREA_IX_VOL_SERIE_UD.ID_VOL_VER_SERIE IS 'PK.1';

-- changeset root:1751897635013-863
CREATE OR REPLACE FORCE VIEW "TPI_V_LIS_DT_SCHED" ("ID_DT_SCHED", "DT_SCHED", "TI_STATO_DT_SCHED", "FL_PRESENZA_SECONDARIO", "FL_MIGRAZ_IN_CORSO", "FL_ANOMALIA_ARK_PRIM", "FL_ANOMALIA_COPIA_PRIM", "FL_ANOMALIA_BACKUP_PRIM", "FL_ANOMALIA_MIGRATE_PRIM", "FL_ANOMALIA_RI_ARK_PRIM", "FL_ANOMALIA_ARK_SECOND", "FL_ANOMALIA_COPIA_SECOND", "FL_ANOMALIA_BACKUP_SECOND", "FL_ANOMALIA_MIGRATE_SECOND", "FL_ANOMALIA_RI_ARK_SECOND") AS select
 dt.id_dt_sched,
 dt.dt_sched,
 dt.ti_stato_dt_sched,
 dt.fl_presenza_secondario,
 dt.fl_migraz_in_corso,
 case
	when exists (select *
				from TPI_SCHED_JOB sched
				where sched.id_dt_sched = dt.id_dt_sched
				and sched.nm_job like 'ARCHIVIAZIONE_FILE_VERSATI_%'
				and sched.fl_migraz = '0'
				and sched.ti_tpi_sched_job = 'PRIMARIO'
				and sched.fl_job_ok = '0')
		or not exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job like 'ARCHIVIAZIONE_FILE_VERSATI_%'
						and sched.fl_migraz = '0'
						and sched.ti_tpi_sched_job = 'PRIMARIO')
		or (dt.fl_migraz_in_corso = '1'
		and exists (select *
					from TPI_SCHED_JOB sched
					where sched.id_dt_sched = dt.id_dt_sched
					and sched.nm_job like 'ARCHIVIAZIONE_FILE_MIGRATI_%'
					and sched.fl_migraz = '1'
					and sched.ti_tpi_sched_job = 'PRIMARIO'
					and sched.fl_job_ok = '0'))
		or (dt.fl_migraz_in_corso = '1'
		and not exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job like 'ARCHIVIAZIONE_FILE_MIGRATI_%'
						and sched.fl_migraz = '1'
						and sched.ti_tpi_sched_job = 'PRIMARIO'))
																	then '1'
	when not exists (select *
				from TPI_SCHED_JOB sched
				where sched.id_dt_sched = dt.id_dt_sched
				and sched.nm_job like 'ARCHIVIAZIONE_FILE_VERSATI_%'
				and sched.fl_migraz = '0'
				and sched.ti_tpi_sched_job = 'PRIMARIO'
				and (sched.fl_job_ok = '0'
				or (sched.fl_job_ok = '1'
				and sched.dl_err_job is not null)
				or sched.fl_job_ok is null)
				)
		and ((dt.fl_migraz_in_corso = '1'
		and not exists (select *
					from TPI_SCHED_JOB sched
					where sched.id_dt_sched = dt.id_dt_sched
					and sched.nm_job like 'ARCHIVIAZIONE_FILE_MIGRATI_%'
					and sched.fl_migraz = '1'
					and sched.ti_tpi_sched_job = 'PRIMARIO'
					and (sched.fl_job_ok = '0'
					or (sched.fl_job_ok = '1'
					and sched.dl_err_job is not null)
					or sched.fl_job_ok is null)
					))
		or dt.fl_migraz_in_corso = '0')
																	then '0'
																	else '2'
 end fl_anomalia_ark_prim,
 
 case
	when exists (select *
				from TPI_SCHED_JOB sched
				where sched.id_dt_sched = dt.id_dt_sched
				and sched.nm_job = 'COPIA_FILE_VERSATI'
				and sched.fl_migraz = '0'
				and sched.ti_tpi_sched_job = 'PRIMARIO'
				and sched.fl_job_ok = '0')
		or not exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job = 'COPIA_FILE_VERSATI'
						and sched.fl_migraz = '0'
						and sched.ti_tpi_sched_job = 'PRIMARIO')
		or (dt.fl_migraz_in_corso = '1'
		and exists (select *
					from TPI_SCHED_JOB sched
					where sched.id_dt_sched = dt.id_dt_sched
					and sched.nm_job = 'COPIA_FILE_MIGRATI'
					and sched.fl_migraz = '1'
					and sched.ti_tpi_sched_job = 'PRIMARIO'
					and sched.fl_job_ok = '0'))
		or (dt.fl_migraz_in_corso = '1'
		and not exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job = 'COPIA_FILE_MIGRATI'
						and sched.fl_migraz = '1'
						and sched.ti_tpi_sched_job = 'PRIMARIO'))
	then '1'
	else '0'
 end fl_anomalia_copia_prim,
 
 case
	when exists (select *
				from TPI_SCHED_JOB sched
				where sched.id_dt_sched = dt.id_dt_sched
				and sched.nm_job = 'JOB_TSM_BACKUP_VERS'
				and sched.fl_migraz = '0'
				and sched.ti_tpi_sched_job = 'PRIMARIO'
				and sched.fl_job_ok = '0')
		or not exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job = 'JOB_TSM_BACKUP_VERS'
						and sched.fl_migraz = '0'
						and sched.ti_tpi_sched_job = 'PRIMARIO')
		or (dt.fl_migraz_in_corso = '1'
		and exists (select *
					from TPI_SCHED_JOB sched
					where sched.id_dt_sched = dt.id_dt_sched
					and sched.nm_job = 'JOB_TSM_BACKUP_MIGRAZ'
					and sched.fl_migraz = '1'
					and sched.ti_tpi_sched_job = 'PRIMARIO'
					and sched.fl_job_ok = '0'))
		or (dt.fl_migraz_in_corso = '1'
		and not exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job = 'JOB_TSM_BACKUP_MIGRAZ'
						and sched.fl_migraz = '1'
						and sched.ti_tpi_sched_job = 'PRIMARIO'))
																	then '1'
	when exists (select *
				from TPI_SCHED_JOB sched
				where sched.id_dt_sched = dt.id_dt_sched
				and sched.nm_job = 'JOB_TSM_BACKUP_VERS'
				and sched.fl_migraz = '0'
				and sched.ti_tpi_sched_job = 'PRIMARIO'
				and sched.fl_job_ok = '1'
				and sched.dl_err_job is null)
		and ((dt.fl_migraz_in_corso = '1'
		and exists (select *
					from TPI_SCHED_JOB sched
					where sched.id_dt_sched = dt.id_dt_sched
					and sched.nm_job = 'JOB_TSM_BACKUP_MIGRAZ'
					and sched.fl_migraz = '1'
					and sched.ti_tpi_sched_job = 'PRIMARIO'
					and sched.fl_job_ok = '1'
					and sched.dl_err_job is null))
		or dt.fl_migraz_in_corso = '0')
																	then '0'
																	else '2'
 end fl_anomalia_backup_prim,
 
 case
	when exists (select *
				from TPI_SCHED_JOB sched
				where sched.id_dt_sched = dt.id_dt_sched
				and sched.nm_job = 'JOB_TSM_MIGRATE_VERS'
				and sched.fl_migraz = '0'
				and sched.ti_tpi_sched_job = 'PRIMARIO'
				and sched.fl_job_ok = '0')
		or not exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job = 'JOB_TSM_MIGRATE_VERS'
						and sched.fl_migraz = '0'
						and sched.ti_tpi_sched_job = 'PRIMARIO')
		or (dt.fl_migraz_in_corso = '1'
		and exists (select *
					from TPI_SCHED_JOB sched
					where sched.id_dt_sched = dt.id_dt_sched
					and sched.nm_job = 'JOB_TSM_MIGRATE_MIGRAZ'
					and sched.fl_migraz = '1'
					and sched.ti_tpi_sched_job = 'PRIMARIO'
					and sched.fl_job_ok = '0'))
		or (dt.fl_migraz_in_corso = '1'
		and not exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job = 'JOB_TSM_MIGRATE_MIGRAZ'
						and sched.fl_migraz = '1'
						and sched.ti_tpi_sched_job = 'PRIMARIO'))
																	then '1'
	when exists (select *
				from TPI_SCHED_JOB sched
				where sched.id_dt_sched = dt.id_dt_sched
				and sched.nm_job = 'JOB_TSM_MIGRATE_VERS'
				and sched.fl_migraz = '0'
				and sched.ti_tpi_sched_job = 'PRIMARIO'
				and sched.fl_job_ok = '1'
				and sched.dl_err_job is null)
		and ((dt.fl_migraz_in_corso = '1'
		and exists (select *
					from TPI_SCHED_JOB sched
					where sched.id_dt_sched = dt.id_dt_sched
					and sched.nm_job = 'JOB_TSM_MIGRATE_MIGRAZ'
					and sched.fl_migraz = '1'
					and sched.ti_tpi_sched_job = 'PRIMARIO'
					and sched.fl_job_ok = '1'
					and sched.dl_err_job is null))
		or dt.fl_migraz_in_corso = '0')
																	then '0'
																	else '2'
 end fl_anomalia_migrate_prim,
 
 case
	when exists (select *
				from TPI_SCHED_JOB sched
				where sched.id_dt_sched = dt.id_dt_sched
				and sched.nm_job = 'ARCHIVIAZIONE_FILE_NO_ARK_VERSATI'
				and sched.fl_migraz = '0'
				and sched.ti_tpi_sched_job = 'PRIMARIO'
				and sched.fl_job_ok = '0')
		or not exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job = 'ARCHIVIAZIONE_FILE_NO_ARK_VERSATI'
						and sched.fl_migraz = '0'
						and sched.ti_tpi_sched_job = 'PRIMARIO')
		or (dt.fl_migraz_in_corso = '1'
		and exists (select *
					from TPI_SCHED_JOB sched
					where sched.id_dt_sched = dt.id_dt_sched
					and sched.nm_job = 'ARCHIVIAZIONE_FILE_NO_ARK_MIGRATI'
					and sched.fl_migraz = '1'
					and sched.ti_tpi_sched_job = 'PRIMARIO'
					and sched.fl_job_ok = '0'))
		or (dt.fl_migraz_in_corso = '1'
		and not exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job = 'ARCHIVIAZIONE_FILE_NO_ARK_MIGRATI'
						and sched.fl_migraz = '1'
						and sched.ti_tpi_sched_job = 'PRIMARIO'))
																	then '1'
	when not exists (select *
				from TPI_SCHED_JOB sched
				where sched.id_dt_sched = dt.id_dt_sched
				and sched.nm_job = 'ARCHIVIAZIONE_FILE_NO_ARK_VERSATI'
				and sched.fl_migraz = '0'
				and sched.ti_tpi_sched_job = 'PRIMARIO'
				and (sched.fl_job_ok = '0'
				or (sched.fl_job_ok = '1'
				and sched.dl_err_job is not null)
				or sched.fl_job_ok is null)
				)
		and (
		(dt.fl_migraz_in_corso = '1'
		and not exists (select *
					from TPI_SCHED_JOB sched
					where sched.id_dt_sched = dt.id_dt_sched
					and sched.nm_job = 'ARCHIVIAZIONE_FILE_NO_ARK_MIGRATI'
					and sched.fl_migraz = '1'
					and sched.ti_tpi_sched_job = 'PRIMARIO'
					and (sched.fl_job_ok = '0'
					or (sched.fl_job_ok = '1'
					and sched.dl_err_job is not null)
					or sched.fl_job_ok is null)
					)
		)
		or dt.fl_migraz_in_corso = '0'
		)
																	then '0'
																	else '2'
 end fl_anomalia_ri_ark_prim,
 
 
 case
	when exists (select *
				from TPI_SCHED_JOB sched
				where sched.id_dt_sched = dt.id_dt_sched
				and sched.nm_job like 'ARCHIVIAZIONE_FILE_VERSATI_%'
				and sched.fl_migraz = '0'
				and sched.ti_tpi_sched_job = 'SECONDARIO'
				and sched.fl_job_ok = '0')
		or not exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job like 'ARCHIVIAZIONE_FILE_VERSATI_%'
						and sched.fl_migraz = '0'
						and sched.ti_tpi_sched_job = 'SECONDARIO')
		or (dt.fl_migraz_in_corso = '1'
		and exists (select *
					from TPI_SCHED_JOB sched
					where sched.id_dt_sched = dt.id_dt_sched
					and sched.nm_job like 'ARCHIVIAZIONE_FILE_MIGRATI_%'
					and sched.fl_migraz = '1'
					and sched.ti_tpi_sched_job = 'SECONDARIO'
					and sched.fl_job_ok = '0'))
		or (dt.fl_migraz_in_corso = '1'
		and not exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job like 'ARCHIVIAZIONE_FILE_MIGRATI_%'
						and sched.fl_migraz = '1'
						and sched.ti_tpi_sched_job = 'SECONDARIO'))
																	then '1'						
	when not exists (select *
				from TPI_SCHED_JOB sched
				where sched.id_dt_sched = dt.id_dt_sched
				and sched.nm_job like 'ARCHIVIAZIONE_FILE_VERSATI_%'
				and sched.fl_migraz = '0'
				and sched.ti_tpi_sched_job = 'SECONDARIO'
				and 
				(sched.fl_job_ok = '0'
				or (sched.fl_job_ok = '1'
				and sched.dl_err_job is not null)
				or sched.fl_job_ok is null)
				)
		and (
		(dt.fl_migraz_in_corso = '1'
		and not exists (select *
					from TPI_SCHED_JOB sched
					where sched.id_dt_sched = dt.id_dt_sched
					and sched.nm_job like 'ARCHIVIAZIONE_FILE_MIGRATI_%'
					and sched.fl_migraz = '1'
					and sched.ti_tpi_sched_job = 'SECONDARIO'
					and 
					(sched.fl_job_ok = '0'
					or (sched.fl_job_ok = '1'
					and sched.dl_err_job is not null)
					or sched.fl_job_ok is null)
					))
		or dt.fl_migraz_in_corso = '0')
																	then '0'
																	else '2'
 end fl_anomalia_ark_second,
 
 case
	when exists (select *
				from TPI_SCHED_JOB sched
				where sched.id_dt_sched = dt.id_dt_sched
				and sched.nm_job = 'COPIA_FILE_VERSATI'
				and sched.fl_migraz = '0'
				and sched.ti_tpi_sched_job = 'SECONDARIO'
				and sched.fl_job_ok = '0')
		or not exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job = 'COPIA_FILE_VERSATI'
						and sched.fl_migraz = '0'
						and sched.ti_tpi_sched_job = 'SECONDARIO')
		or (dt.fl_migraz_in_corso = '1'
		and exists (select *
					from TPI_SCHED_JOB sched
					where sched.id_dt_sched = dt.id_dt_sched
					and sched.nm_job = 'COPIA_FILE_MIGRATI'
					and sched.fl_migraz = '1'
					and sched.ti_tpi_sched_job = 'SECONDARIO'
					and sched.fl_job_ok = '0'))
		or (dt.fl_migraz_in_corso = '1'
		and not exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job = 'COPIA_FILE_MIGRATI'
						and sched.fl_migraz = '1'
						and sched.ti_tpi_sched_job = 'SECONDARIO'))
	then '1'
	else '0'
 end fl_anomalia_copia_second,
 
 case
	when exists (select *
				from TPI_SCHED_JOB sched
				where sched.id_dt_sched = dt.id_dt_sched
				and sched.nm_job = 'JOB_TSM_BACKUP_VERS'
				and sched.fl_migraz = '0'
				and sched.ti_tpi_sched_job = 'SECONDARIO'
				and sched.fl_job_ok = '0')
		or not exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job = 'JOB_TSM_BACKUP_VERS'
						and sched.fl_migraz = '0'
						and sched.ti_tpi_sched_job = 'SECONDARIO')
		or (dt.fl_migraz_in_corso = '1'
		and exists (select *
					from TPI_SCHED_JOB sched
					where sched.id_dt_sched = dt.id_dt_sched
					and sched.nm_job = 'JOB_TSM_BACKUP_MIGRAZ'
					and sched.fl_migraz = '1'
					and sched.ti_tpi_sched_job = 'SECONDARIO'
					and sched.fl_job_ok = '0'))
		or (dt.fl_migraz_in_corso = '1'
		and not exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job = 'JOB_TSM_BACKUP_MIGRAZ'
						and sched.fl_migraz = '1'
						and sched.ti_tpi_sched_job = 'SECONDARIO'))
																	then '1'
	when exists (select *
				from TPI_SCHED_JOB sched
				where sched.id_dt_sched = dt.id_dt_sched
				and sched.nm_job = 'JOB_TSM_BACKUP_VERS'
				and sched.fl_migraz = '0'
				and sched.ti_tpi_sched_job = 'SECONDARIO'
				and sched.fl_job_ok = '1'
				and sched.dl_err_job is null)
		and ((dt.fl_migraz_in_corso = '1'
		and exists (select *
					from TPI_SCHED_JOB sched
					where sched.id_dt_sched = dt.id_dt_sched
					and sched.nm_job = 'JOB_TSM_BACKUP_MIGRAZ'
					and sched.fl_migraz = '1'
					and sched.ti_tpi_sched_job = 'SECONDARIO'
					and sched.fl_job_ok = '1'
					and sched.dl_err_job is null))
		or dt.fl_migraz_in_corso = '0')
																	then '0'
																	else '2'
 end fl_anomalia_backup_second,
 
 case
	when exists (select *
				from TPI_SCHED_JOB sched
				where sched.id_dt_sched = dt.id_dt_sched
				and sched.nm_job = 'JOB_TSM_MIGRATE_VERS'
				and sched.fl_migraz = '0'
				and sched.ti_tpi_sched_job = 'SECONDARIO'
				and sched.fl_job_ok = '0')
		or not exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job = 'JOB_TSM_MIGRATE_VERS'
						and sched.fl_migraz = '0'
						and sched.ti_tpi_sched_job = 'SECONDARIO')
		or (dt.fl_migraz_in_corso = '1'
		and exists (select *
					from TPI_SCHED_JOB sched
					where sched.id_dt_sched = dt.id_dt_sched
					and sched.nm_job = 'JOB_TSM_MIGRATE_MIGRAZ'
					and sched.fl_migraz = '1'
					and sched.ti_tpi_sched_job = 'SECONDARIO'
					and sched.fl_job_ok = '0'))
		or (dt.fl_migraz_in_corso = '1'
		and not exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job = 'JOB_TSM_MIGRATE_MIGRAZ'
						and sched.fl_migraz = '1'
						and sched.ti_tpi_sched_job = 'SECONDARIO'))
																then '1'
	when exists (select *
				from TPI_SCHED_JOB sched
				where sched.id_dt_sched = dt.id_dt_sched
				and sched.nm_job = 'JOB_TSM_MIGRATE_VERS'
				and sched.fl_migraz = '0'
				and sched.ti_tpi_sched_job = 'SECONDARIO'
				and sched.fl_job_ok = '1'
				and sched.dl_err_job is null)
		and ((dt.fl_migraz_in_corso = '1'
		and exists (select *
					from TPI_SCHED_JOB sched
					where sched.id_dt_sched = dt.id_dt_sched
					and sched.nm_job = 'JOB_TSM_MIGRATE_MIGRAZ'
					and sched.fl_migraz = '1'
					and sched.ti_tpi_sched_job = 'SECONDARIO'
					and sched.fl_job_ok = '1'
					and sched.dl_err_job is null))
		or dt.fl_migraz_in_corso = '0')
																	then '0'
																	else '2'
 end fl_anomalia_migrate_second,
 
 case
	when exists (select *
				from TPI_SCHED_JOB sched
				where sched.id_dt_sched = dt.id_dt_sched
				and sched.nm_job = 'ARCHIVIAZIONE_FILE_NO_ARK_VERSATI'
				and sched.fl_migraz = '0'
				and sched.ti_tpi_sched_job = 'SECONDARIO'
				and sched.fl_job_ok = '0')
		or not exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job = 'ARCHIVIAZIONE_FILE_NO_ARK_VERSATI'
						and sched.fl_migraz = '0'
						and sched.ti_tpi_sched_job = 'SECONDARIO')
		or (dt.fl_migraz_in_corso = '1'
		and exists (select *
					from TPI_SCHED_JOB sched
					where sched.id_dt_sched = dt.id_dt_sched
					and sched.nm_job = 'ARCHIVIAZIONE_FILE_NO_ARK_MIGRATI'
					and sched.fl_migraz = '1'
					and sched.ti_tpi_sched_job = 'SECONDARIO'
					and sched.fl_job_ok = '0'))
		or (dt.fl_migraz_in_corso = '1'
		and not exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job = 'ARCHIVIAZIONE_FILE_NO_ARK_MIGRATI'
						and sched.fl_migraz = '1'
						and sched.ti_tpi_sched_job = 'SECONDARIO'))
																	then '1'
	when not exists (select *
				from TPI_SCHED_JOB sched
				where sched.id_dt_sched = dt.id_dt_sched
				and sched.nm_job = 'ARCHIVIAZIONE_FILE_NO_ARK_VERSATI'
				and sched.fl_migraz = '0'
				and sched.ti_tpi_sched_job = 'SECONDARIO'
				and (sched.fl_job_ok = '0'
				or (sched.fl_job_ok = '1'
				and sched.dl_err_job is not null)
				or sched.fl_job_ok is null)
				)
		and ((dt.fl_migraz_in_corso = '1'
		and not exists (select *
					from TPI_SCHED_JOB sched
					where sched.id_dt_sched = dt.id_dt_sched
					and sched.nm_job = 'ARCHIVIAZIONE_FILE_NO_ARK_MIGRATI'
					and sched.fl_migraz = '1'
					and sched.ti_tpi_sched_job = 'SECONDARIO'
					and (sched.fl_job_ok = '0'
					or (sched.fl_job_ok = '1'
					and sched.dl_err_job is not null)
					or sched.fl_job_ok is null)
					))
		or dt.fl_migraz_in_corso = '0')
																	then '0'
																	else '2'																	
 end fl_anomalia_ri_ark_second
  
from TPI_DT_SCHED dt;

-- changeset root:1751897635013-864
COMMENT ON COLUMN TPI_V_LIS_DT_SCHED.ID_DT_SCHED IS 'PK.1 relativa a tabella TPI_DT_SCHED';

-- changeset root:1751897635013-865
CREATE OR REPLACE FORCE VIEW "TPI_V_VIS_DT_SCHED" ("ID_DT_SCHED", "DT_SCHED", "TI_STATO_DT_SCHED", "FL_PRESENZA_SECONDARIO", "FL_MIGRAZ_IN_CORSO", "FL_ANOM_ARK_VERS_PRIM", "FL_ANOM_COPIA_VERS_PRIM", "FL_ANOM_BACKUP_VERS_PRIM", "FL_ANOM_MIGRATE_VERS_PRIM", "FL_ANOM_RI_ARK_VERS_PRIM", "FL_ANOM_ARK_MIGRAZ_PRIM", "FL_ANOM_COPIA_MIGRAZ_PRIM", "FL_ANOM_BACKUP_MIGRAZ_PRIM", "FL_ANOM_MIGRATE_MIGRAZ_PRIM", "FL_ANOM_RI_ARK_MIGRAZ_PRIM", "FL_ANOM_ARK_VERS_SECOND", "FL_ANOM_COPIA_VERS_SECOND", "FL_ANOM_BACKUP_VERS_SECOND", "FL_ANOM_MIGRATE_VERS_SECOND", "FL_ANOM_RI_ARK_VERS_SECOND", "FL_ANOM_ARK_MIGRAZ_SECOND", "FL_ANOM_COPIA_MIGRAZ_SECOND", "FL_ANOM_BACKUP_MIGRAZ_SECOND", "FL_ANOM_MIGRATE_MIGRAZ_SECOND", "FL_ANOM_RI_ARK_MIGRAZ_SECOND") AS select
 dt.id_dt_sched,
 dt.dt_sched,
 dt.ti_stato_dt_sched,
 dt.fl_presenza_secondario,
 dt.fl_migraz_in_corso,
 
--			anomalie per file versati nel primario

 case
	when exists (select *
				from TPI_SCHED_JOB sched
				where sched.id_dt_sched = dt.id_dt_sched
				and sched.nm_job like 'ARCHIVIAZIONE_FILE_VERSATI_%'
				and sched.fl_migraz = '0'
				and sched.ti_tpi_sched_job = 'PRIMARIO'
				and sched.fl_job_ok = '0')
		or not exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job like 'ARCHIVIAZIONE_FILE_VERSATI_%'
						and sched.fl_migraz = '0'
						and sched.ti_tpi_sched_job = 'PRIMARIO')

																	then '1'
	when not exists (select *
				from TPI_SCHED_JOB sched
				where sched.id_dt_sched = dt.id_dt_sched
				and sched.nm_job like 'ARCHIVIAZIONE_FILE_VERSATI_%'
				and sched.fl_migraz = '0'
				and sched.ti_tpi_sched_job = 'PRIMARIO'
				and (sched.fl_job_ok = '0'
				or (sched.fl_job_ok = '1'
				and sched.dl_err_job is not null)
				or sched.fl_job_ok is null))
																	then '0'
																	else '2'
 end fl_anom_ark_vers_prim,
 
 case
	when exists (select *
				from TPI_SCHED_JOB sched
				where sched.id_dt_sched = dt.id_dt_sched
				and sched.nm_job = 'COPIA_FILE_VERSATI'
				and sched.fl_migraz = '0'
				and sched.ti_tpi_sched_job = 'PRIMARIO'
				and sched.fl_job_ok = '0')
		or not exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job = 'COPIA_FILE_VERSATI'
						and sched.fl_migraz = '0'
						and sched.ti_tpi_sched_job = 'PRIMARIO')
	then '1'
	else '0'
 end fl_anom_copia_vers_prim,
 
 case
	when exists (select *
				from TPI_SCHED_JOB sched
				where sched.id_dt_sched = dt.id_dt_sched
				and sched.nm_job = 'JOB_TSM_BACKUP_VERS'
				and sched.fl_migraz = '0'
				and sched.ti_tpi_sched_job = 'PRIMARIO'
				and sched.fl_job_ok = '0')
		or not exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job = 'JOB_TSM_BACKUP_VERS'
						and sched.fl_migraz = '0'
						and sched.ti_tpi_sched_job = 'PRIMARIO')
																	then '1'
	when exists (select *
				from TPI_SCHED_JOB sched
				where sched.id_dt_sched = dt.id_dt_sched
				and sched.nm_job = 'JOB_TSM_BACKUP_VERS'
				and sched.fl_migraz = '0'
				and sched.ti_tpi_sched_job = 'PRIMARIO'
				and sched.fl_job_ok = '1'
				and sched.dl_err_job is null)
																	then '0'
																	else '2'	
 end fl_anom_backup_vers_prim,
 
 case
	when exists (select *
				from TPI_SCHED_JOB sched
				where sched.id_dt_sched = dt.id_dt_sched
				and sched.nm_job = 'JOB_TSM_MIGRATE_VERS'
				and sched.fl_migraz = '0'
				and sched.ti_tpi_sched_job = 'PRIMARIO'
				and sched.fl_job_ok = '0')
		or not exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job = 'JOB_TSM_MIGRATE_VERS'
						and sched.fl_migraz = '0'
						and sched.ti_tpi_sched_job = 'PRIMARIO')
																	then '1'
	when exists (select *
				from TPI_SCHED_JOB sched
				where sched.id_dt_sched = dt.id_dt_sched
				and sched.nm_job = 'JOB_TSM_MIGRATE_VERS'
				and sched.fl_migraz = '0'
				and sched.ti_tpi_sched_job = 'PRIMARIO'
				and sched.fl_job_ok = '1'
				and sched.dl_err_job is null)
																	then '0'
																	else '2'	
 end fl_anom_migrate_vers_prim,
 
 case
	when exists (select *
				from TPI_SCHED_JOB sched
				where sched.id_dt_sched = dt.id_dt_sched
				and sched.nm_job = 'ARCHIVIAZIONE_FILE_NO_ARK_VERSATI'
				and sched.fl_migraz = '0'
				and sched.ti_tpi_sched_job = 'PRIMARIO'
				and sched.fl_job_ok = '0')
		or not exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job = 'ARCHIVIAZIONE_FILE_NO_ARK_VERSATI'
						and sched.fl_migraz = '0'
						and sched.ti_tpi_sched_job = 'PRIMARIO')
																	then '1'
	when not exists (select *
				from TPI_SCHED_JOB sched
				where sched.id_dt_sched = dt.id_dt_sched
				and sched.nm_job = 'ARCHIVIAZIONE_FILE_NO_ARK_VERSATI'
				and sched.fl_migraz = '0'
				and sched.ti_tpi_sched_job = 'PRIMARIO'
				and (sched.fl_job_ok = '0'
				or (sched.fl_job_ok = '1'
				and sched.dl_err_job is not null)
				or sched.fl_job_ok is null))
																	then '0'
																	else '2'
 end fl_anom_ri_ark_vers_prim,

 
--			anomalie per file migrati nel primario
 
 case
	when dt.fl_migraz_in_corso = '1' then
		case
			when exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job like 'ARCHIVIAZIONE_FILE_MIGRATI_%'
						and sched.fl_migraz = '1'
						and sched.ti_tpi_sched_job = 'PRIMARIO'
						and sched.fl_job_ok = '0')
				or not exists (select *
								from TPI_SCHED_JOB sched
								where sched.id_dt_sched = dt.id_dt_sched
								and sched.nm_job like 'ARCHIVIAZIONE_FILE_MIGRATI_%'
								and sched.fl_migraz = '1'
								and sched.ti_tpi_sched_job = 'PRIMARIO')
																					then '1'
			when not exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job like 'ARCHIVIAZIONE_FILE_MIGRATI_%'
						and sched.fl_migraz = '1'
						and sched.ti_tpi_sched_job = 'PRIMARIO'
						and (sched.fl_job_ok = '0'
						or (sched.fl_job_ok = '1'
						and sched.dl_err_job is not null)
						or sched.fl_job_ok is null))
																					then '0'
																					else '2'
		end
	else null	
 end fl_anom_ark_migraz_prim,
 
 case
	when dt.fl_migraz_in_corso = '1' then
		case
			when exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job = 'COPIA_FILE_MIGRATI'
						and sched.fl_migraz = '1'
						and sched.ti_tpi_sched_job = 'PRIMARIO'
						and sched.fl_job_ok = '0')
				or  not exists (select *
								from TPI_SCHED_JOB sched
								where sched.id_dt_sched = dt.id_dt_sched
								and sched.nm_job = 'COPIA_FILE_MIGRATI'
								and sched.fl_migraz = '1'
								and sched.ti_tpi_sched_job = 'PRIMARIO')
			then '1'
			else '0'
		end
	else null
 end fl_anom_copia_migraz_prim,
 
 case
	when dt.fl_migraz_in_corso = '1' then
		case
			when exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job = 'JOB_TSM_BACKUP_MIGRAZ'
						and sched.fl_migraz = '1'
						and sched.ti_tpi_sched_job = 'PRIMARIO'
						and sched.fl_job_ok = '0')
				or not exists (select *
								from TPI_SCHED_JOB sched
								where sched.id_dt_sched = dt.id_dt_sched
								and sched.nm_job = 'JOB_TSM_BACKUP_MIGRAZ'
								and sched.fl_migraz = '1'
								and sched.ti_tpi_sched_job = 'PRIMARIO')
																					then '1'
			when exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job = 'JOB_TSM_BACKUP_MIGRAZ'
						and sched.fl_migraz = '1'
						and sched.ti_tpi_sched_job = 'PRIMARIO'
						and sched.fl_job_ok = '1'
						and sched.dl_err_job is null)
																					then '0'
																					else '2'
		end
	else null
 end fl_anom_backup_migraz_prim,
 
 case
	when dt.fl_migraz_in_corso = '1' then
		case
			when exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job = 'JOB_TSM_MIGRATE_MIGRAZ'
						and sched.fl_migraz = '1'
						and sched.ti_tpi_sched_job = 'PRIMARIO'
						and sched.fl_job_ok = '0')
				or not exists (select *
								from TPI_SCHED_JOB sched
								where sched.id_dt_sched = dt.id_dt_sched
								and sched.nm_job = 'JOB_TSM_MIGRATE_MIGRAZ'
								and sched.fl_migraz = '1'
								and sched.ti_tpi_sched_job = 'PRIMARIO')
																					then '1'
			when exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job = 'JOB_TSM_MIGRATE_MIGRAZ'
						and sched.fl_migraz = '1'
						and sched.ti_tpi_sched_job = 'PRIMARIO'
						and sched.fl_job_ok = '1'
						and sched.dl_err_job is null)
																					then '0'
																					else '2'
		end
	else null
 end fl_anom_migrate_migraz_prim,
 
 case
	when dt.fl_migraz_in_corso = '1' then
		case
			when exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job = 'ARCHIVIAZIONE_FILE_NO_ARK_MIGRATI'
						and sched.fl_migraz = '1'
						and sched.ti_tpi_sched_job = 'PRIMARIO'
						and sched.fl_job_ok = '0')
				or not exists (select *
								from TPI_SCHED_JOB sched
								where sched.id_dt_sched = dt.id_dt_sched
								and sched.nm_job = 'ARCHIVIAZIONE_FILE_NO_ARK_MIGRATI'
								and sched.fl_migraz = '1'
								and sched.ti_tpi_sched_job = 'PRIMARIO')
																					then '1'
			when not exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job = 'ARCHIVIAZIONE_FILE_NO_ARK_MIGRATI'
						and sched.fl_migraz = '1'
						and sched.ti_tpi_sched_job = 'PRIMARIO'
						and (sched.fl_job_ok = '0'
						or (sched.fl_job_ok = '1'
						and sched.dl_err_job is not null)
						or sched.fl_job_ok is null))
																					then '0'
																					else '2'
		end
	else null
 end fl_anom_ri_ark_migraz_prim,
 
 
--			anomalie per file versati nel secondario
 
 case
	when exists (select *
				from TPI_SCHED_JOB sched
				where sched.id_dt_sched = dt.id_dt_sched
				and sched.nm_job like 'ARCHIVIAZIONE_FILE_VERSATI_%'
				and sched.fl_migraz = '0'
				and sched.ti_tpi_sched_job = 'SECONDARIO'
				and sched.fl_job_ok = '0')
		or not exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job like 'ARCHIVIAZIONE_FILE_VERSATI_%'
						and sched.fl_migraz = '0'
						and sched.ti_tpi_sched_job = 'SECONDARIO')
																				then '1'
	when not exists (select *
				from TPI_SCHED_JOB sched
				where sched.id_dt_sched = dt.id_dt_sched
				and sched.nm_job like 'ARCHIVIAZIONE_FILE_VERSATI_%'
				and sched.fl_migraz = '0'
				and sched.ti_tpi_sched_job = 'SECONDARIO'
				and (sched.fl_job_ok = '0'
				or (sched.fl_job_ok = '1'
				and sched.dl_err_job is not null)
				or sched.fl_job_ok is null))	
																				then '0'
																				else '2'
 end fl_anom_ark_vers_second,
 
 case
	when exists (select *
				from TPI_SCHED_JOB sched
				where sched.id_dt_sched = dt.id_dt_sched
				and sched.nm_job = 'COPIA_FILE_VERSATI'
				and sched.fl_migraz = '0'
				and sched.ti_tpi_sched_job = 'SECONDARIO'
				and sched.fl_job_ok = '0')
		or not exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job = 'COPIA_FILE_VERSATI'
						and sched.fl_migraz = '0'
						and sched.ti_tpi_sched_job = 'SECONDARIO')
	then '1'
	else '0'
 end fl_anom_copia_vers_second,
 
 case
	when exists (select *
				from TPI_SCHED_JOB sched
				where sched.id_dt_sched = dt.id_dt_sched
				and sched.nm_job = 'JOB_TSM_BACKUP_VERS'
				and sched.fl_migraz = '0'
				and sched.ti_tpi_sched_job = 'SECONDARIO'
				and sched.fl_job_ok = '0')
		or not exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job = 'JOB_TSM_BACKUP_VERS'
						and sched.fl_migraz = '0'
						and sched.ti_tpi_sched_job = 'SECONDARIO')
																				then '1'
	when exists (select *
				from TPI_SCHED_JOB sched
				where sched.id_dt_sched = dt.id_dt_sched
				and sched.nm_job = 'JOB_TSM_BACKUP_VERS'
				and sched.fl_migraz = '0'
				and sched.ti_tpi_sched_job = 'SECONDARIO'
				and sched.fl_job_ok = '1'
				and sched.dl_err_job is null)
																				then '0'
																				else '2'
 end fl_anom_backup_vers_second,
 
 case
	when exists (select *
				from TPI_SCHED_JOB sched
				where sched.id_dt_sched = dt.id_dt_sched
				and sched.nm_job = 'JOB_TSM_MIGRATE_VERS'
				and sched.fl_migraz = '0'
				and sched.ti_tpi_sched_job = 'SECONDARIO'
				and sched.fl_job_ok = '0')
		or not exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job = 'JOB_TSM_MIGRATE_VERS'
						and sched.fl_migraz = '0'
						and sched.ti_tpi_sched_job = 'SECONDARIO')
																				then '1'
	when exists (select *
				from TPI_SCHED_JOB sched
				where sched.id_dt_sched = dt.id_dt_sched
				and sched.nm_job = 'JOB_TSM_MIGRATE_VERS'
				and sched.fl_migraz = '0'
				and sched.ti_tpi_sched_job = 'SECONDARIO'
				and sched.fl_job_ok = '1'
				and sched.dl_err_job is null)
																				then '0'
																				else '2'
 end fl_anom_migrate_vers_second,
 
 case
	when exists (select *
				from TPI_SCHED_JOB sched
				where sched.id_dt_sched = dt.id_dt_sched
				and sched.nm_job = 'ARCHIVIAZIONE_FILE_NO_ARK_VERSATI'
				and sched.fl_migraz = '0'
				and sched.ti_tpi_sched_job = 'SECONDARIO'
				and sched.fl_job_ok = '0')
		or not exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job = 'ARCHIVIAZIONE_FILE_NO_ARK_VERSATI'
						and sched.fl_migraz = '0'
						and sched.ti_tpi_sched_job = 'SECONDARIO')
																				then '1'
	when not exists (select *
				from TPI_SCHED_JOB sched
				where sched.id_dt_sched = dt.id_dt_sched
				and sched.nm_job = 'ARCHIVIAZIONE_FILE_NO_ARK_VERSATI'
				and sched.fl_migraz = '0'
				and sched.ti_tpi_sched_job = 'SECONDARIO'
				and (sched.fl_job_ok = '0'
				or (sched.fl_job_ok = '1'
				and sched.dl_err_job is not null)
				or sched.fl_job_ok is null))
																				then '0'
																				else '2'
 end fl_anom_ri_ark_vers_second,
 
 
--			anomalie per file migrati nel secondario
 
 case
	when dt.fl_migraz_in_corso = '1' then
		case
			when exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job like 'ARCHIVIAZIONE_FILE_MIGRATI_%'
						and sched.fl_migraz = '1'
						and sched.ti_tpi_sched_job = 'SECONDARIO'
						and sched.fl_job_ok = '0')
				or not exists (select *
								from TPI_SCHED_JOB sched
								where sched.id_dt_sched = dt.id_dt_sched
								and sched.nm_job like 'ARCHIVIAZIONE_FILE_MIGRATI_%'
								and sched.fl_migraz = '1'
								and sched.ti_tpi_sched_job = 'SECONDARIO')
																						then '1'
			when not exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job like 'ARCHIVIAZIONE_FILE_MIGRATI_%'
						and sched.fl_migraz = '1'
						and sched.ti_tpi_sched_job = 'SECONDARIO'
						and (sched.fl_job_ok = '0'
						or (sched.fl_job_ok = '1'
						and sched.dl_err_job is not null)
						or sched.fl_job_ok is null))
																						then '0'
																						else '2'
		end
	else null
 end fl_anom_ark_migraz_second,
 
 case
	when dt.fl_migraz_in_corso = '1' then
		case
			when exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job = 'COPIA_FILE_MIGRATI'
						and sched.fl_migraz = '1'
						and sched.ti_tpi_sched_job = 'SECONDARIO'
						and sched.fl_job_ok = '0')
				or not exists (select *
								from TPI_SCHED_JOB sched
								where sched.id_dt_sched = dt.id_dt_sched
								and sched.nm_job = 'COPIA_FILE_MIGRATI'
								and sched.fl_migraz = '1'
								and sched.ti_tpi_sched_job = 'SECONDARIO')
			then '1'
			else '0'
		end
	else null
 end fl_anom_copia_migraz_second,
 
 case
	when dt.fl_migraz_in_corso = '1' then
		case
			when exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job = 'JOB_TSM_BACKUP_MIGRAZ'
						and sched.fl_migraz = '1'
						and sched.ti_tpi_sched_job = 'SECONDARIO'
						and sched.fl_job_ok = '0')
				or not exists (select *
								from TPI_SCHED_JOB sched
								where sched.id_dt_sched = dt.id_dt_sched
								and sched.nm_job = 'JOB_TSM_BACKUP_MIGRAZ'
								and sched.fl_migraz = '1'
								and sched.ti_tpi_sched_job = 'SECONDARIO')
																						then '1'
			when exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job = 'JOB_TSM_BACKUP_MIGRAZ'
						and sched.fl_migraz = '1'
						and sched.ti_tpi_sched_job = 'SECONDARIO'
						and sched.fl_job_ok = '1'
						and sched.dl_err_job is null)
																						then '0'
																						else '2'
		end
	else null
 end fl_anom_backup_migraz_second,
 
 case
	when dt.fl_migraz_in_corso = '1' then
		case
			when exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job = 'JOB_TSM_MIGRATE_MIGRAZ'
						and sched.fl_migraz = '1'
						and sched.ti_tpi_sched_job = 'SECONDARIO'
						and sched.fl_job_ok = '0')
				or not exists (select *
								from TPI_SCHED_JOB sched
								where sched.id_dt_sched = dt.id_dt_sched
								and sched.nm_job = 'JOB_TSM_MIGRATE_MIGRAZ'
								and sched.fl_migraz = '1'
								and sched.ti_tpi_sched_job = 'SECONDARIO')
																						then '1'
			when exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job = 'JOB_TSM_MIGRATE_MIGRAZ'
						and sched.fl_migraz = '1'
						and sched.ti_tpi_sched_job = 'SECONDARIO'
						and sched.fl_job_ok = '1'
						and sched.dl_err_job is null)
																						then '0'
																						else '2'
		end
	else null
 end fl_anom_migrate_migraz_second,
 
 case
	when dt.fl_migraz_in_corso = '1' then
		case
			when exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job = 'ARCHIVIAZIONE_FILE_NO_ARK_MIGRATI'
						and sched.fl_migraz = '1'
						and sched.ti_tpi_sched_job = 'SECONDARIO'
						and sched.fl_job_ok = '0')
				or not exists (select *
								from TPI_SCHED_JOB sched
								where sched.id_dt_sched = dt.id_dt_sched
								and sched.nm_job = 'ARCHIVIAZIONE_FILE_NO_ARK_MIGRATI'
								and sched.fl_migraz = '1'
								and sched.ti_tpi_sched_job = 'SECONDARIO')
																						then '1'
			when not exists (select *
						from TPI_SCHED_JOB sched
						where sched.id_dt_sched = dt.id_dt_sched
						and sched.nm_job = 'ARCHIVIAZIONE_FILE_NO_ARK_MIGRATI'
						and sched.fl_migraz = '1'
						and sched.ti_tpi_sched_job = 'SECONDARIO'
						and (sched.fl_job_ok = '0'
						or (sched.fl_job_ok = '1'
						and sched.dl_err_job is not null)
						or sched.fl_job_ok is null))
																						then '0'
																						else '2'
		end
	else null
 end fl_anom_ri_ark_migraz_second
  
from TPI_DT_SCHED dt;

-- changeset root:1751897635013-866
COMMENT ON COLUMN TPI_V_VIS_DT_SCHED.ID_DT_SCHED IS 'PK.1 relativa a tabella TPI_DT_SCHED';

-- changeset root:1751897635013-867
CREATE OR REPLACE FORCE VIEW "ARO_V_CHK_RA_UD" ("ID_ENTE_CONVENZ", "ID_STRUT", "FL_ASSOCIAZIONE_SCADUTA", "FL_ASSOCIAZIONI_FUTURE", "FL_UD_NON_IN_ELENCO", "FL_ELENCO_NON_COMPLETATO", "FL_UD_AIP_NON_FIRMATO") AS WITH
        strutture_sacer
        AS
            (SELECT organiz_iam.id_organiz_applic AS id_strut, strut_rest.*
               FROM sacer.org_v_ric_organiz_rest_arch  strut_rest
                    JOIN sacer_iam.usr_organiz_iam organiz_iam
                        ON (organiz_iam.id_organiz_iam =
                            strut_rest.id_organiz_iam)
                    -- prendi le organizzazioni in quanto struttura sacer
                    JOIN sacer_iam.apl_tipo_organiz tipo_organiz
                        ON (tipo_organiz.id_tipo_organiz =
                            organiz_iam.id_tipo_organiz)
                    JOIN sacer_iam.apl_applic applic
                        ON (applic.id_applic = organiz_iam.id_applic)
              WHERE     tipo_organiz.nm_tipo_organiz = 'STRUTTURA'
                    AND applic.nm_applic = 'SACER')
      SELECT rootstrut.id_ente_convenz,
             strut.id_strut,
             strut.fl_associazione_scaduta,
             strut.fl_associazioni_future,
             (CASE
                  WHEN EXISTS
                           (SELECT 1
                              FROM aro_unita_doc udoc
                                   JOIN org_strut strut1
                                       ON udoc.id_strut = strut1.id_strut
                             WHERE     strut1.id_ente_convenz =
                                       rootstrut.id_ente_convenz
                                   AND strut1.id_strut = strut.id_strut
                                   AND udoc.id_elenco_vers IS NULL
                                   AND UDOC.dt_annul =
                                       TO_DATE ('31122444', 'ddmmyyyy')
                                   AND NOT EXISTS
                                           (SELECT *
                                              FROM aro_ud_appart_ver_serie se
                                             WHERE se.id_unita_doc =
                                                   udoc.id_unita_doc)
                                   AND NOT EXISTS
                                           (SELECT *
                                              FROM vol_appart_unita_doc_volume
                                                   vol
                                             WHERE vol.id_unita_doc =
                                                   udoc.id_unita_doc))
                  THEN
                      1
                  ELSE
                      0
              END)    AS "FL_UD_NON_IN_ELENCO",
             (CASE
                  WHEN EXISTS
                           (SELECT 1
                              FROM elv_elenco_vers el
                                   JOIN org_strut strut1
                                       ON el.id_strut = strut1.id_strut
                             WHERE     strut1.id_ente_convenz =
                                       rootstrut.id_ente_convenz
                                   AND strut1.id_strut = strut.id_strut
                                   AND el.ti_stato_elenco <> 'COMPLETATO')
                  THEN
                      1
                  ELSE
                      0
              END)    AS "FL_ELENCO_NON_COMPLETATO",
             (CASE
                  WHEN EXISTS
                           (SELECT 1
                              FROM elv_elenco_vers el
                                   JOIN aro_unita_doc udoc
                                       ON udoc.id_elenco_vers =
                                          el.id_elenco_vers
                                   JOIN org_strut strut1
                                       ON strut1.id_strut = udoc.id_strut
                             WHERE     strut1.id_ente_convenz =
                                       rootstrut.id_ente_convenz
                                   AND strut1.id_strut = strut.id_strut
                                   AND el.ti_stato_elenco = 'COMPLETATO'
                                   AND (    udoc.ti_stato_conservazione <>
                                            'AIP_FIRMATO'
                                        AND udoc.ti_stato_conservazione <>
                                            'IN_ARCHIVIO')
                                   AND udoc.dt_annul =
                                       TO_DATE ('31/12/2444', 'dd/mm/yyyy'))
                  THEN
                      1
                  ELSE
                      0
              END)    AS "FL_UD_AIP_NON_FIRMATO"
        FROM org_strut rootStrut
             -- MEV #32535
             JOIN strutture_sacer strut
                 ON (strut.id_ente_convenz = rootStrut.id_ente_convenz)
    GROUP BY rootStrut.id_ente_convenz,
             strut.id_strut,
             strut.fl_associazione_scaduta,
             strut.fl_associazioni_future;

-- changeset root:1751897635013-868
CREATE OR REPLACE FORCE VIEW "ELV_V_SEL_FASC_VERS" ("ID_CRITERIO_RAGGR_FASC", "AA_FASCICOLO", "TS_VERS_FASCICOLO", "ID_FASCICOLO") AS select 
 crit.id_criterio_raggr_fasc, fasc_da_elab.aa_fascicolo, fasc_da_elab.ts_vers_fascicolo, fasc_da_elab.id_fascicolo

from DEC_CRITERIO_RAGGR_FASC crit

join ELV_FASC_DA_ELAB_ELENCO fasc_da_elab
 on (fasc_da_elab.id_strut = crit.id_strut
 and fasc_da_elab.ti_stato_fasc_da_elab in ('IN_ATTESA_SCHED', 'NON_SELEZ_SCHED'))

where 
--					filtro sul tipo fascicolo
((crit.fl_filtro_tipo_fascicolo = '1'
 and exists (select *
			from DEC_SEL_CRITERIO_RAGGR_FASC mult
			where mult.id_criterio_raggr_fasc = crit.id_criterio_raggr_fasc
			and mult.ti_sel = 'TIPO_FASCICOLO'
			and mult.id_tipo_fascicolo = fasc_da_elab.id_tipo_fascicolo))
 or crit.fl_filtro_tipo_fascicolo = '0')

--					filtro su voce classificazione
and ((crit.fl_filtro_voce_titol = '1'
 and exists (select *
			from DEC_SEL_CRITERIO_RAGGR_FASC mult, FAS_FASCICOLO fasc
			where mult.id_criterio_raggr_fasc = crit.id_criterio_raggr_fasc
			and fasc.id_fascicolo  = fasc_da_elab.id_fascicolo
			
			and mult.ti_sel = 'VOCE_TITOL'
			and mult.id_voce_titol = fasc.id_voce_titol))
 or crit.fl_filtro_voce_titol = '0');

-- changeset root:1751897635013-869
COMMENT ON COLUMN ELV_V_SEL_FASC_VERS.ID_CRITERIO_RAGGR_FASC IS 'PK.1';

-- changeset root:1751897635013-870
COMMENT ON COLUMN ELV_V_SEL_FASC_VERS.ID_FASCICOLO IS 'PK.2';

-- changeset root:1751897635013-871
CREATE OR REPLACE FORCE VIEW "ELV_V_CHK_ALL_AIP_FASC_CREATI" ("ID_ELENCO_VERS_FASC", "FL_ALL_AIP_CREATI") AS select
 ele.id_elenco_vers_fasc,
 case
	when stato_cor.ti_stato = 'IN_CODA_CREAZIONE_AIP'
		then
			case
				when exists (select *
							from FAS_FASCICOLO fasc
							where fasc.id_elenco_vers_fasc = ele.id_elenco_vers_fasc
							and fasc.TI_STATO_CONSERVAZIONE != 'ANNULLATO'
							and fasc.ti_stato_fasc_elenco_vers = 'IN_ELENCO_IN_CODA_CREAZIONE_AIP'
							)
					then '0'
					else '1'
			end
		else '0'
 end fl_all_aip_creati
from elv_elenco_vers_fasc ele
join elv_stato_elenco_vers_fasc stato_cor
	on (stato_cor.id_stato_elenco_vers_fasc = ele.id_stato_elenco_vers_fasc_cor);

-- changeset root:1751897635013-872
COMMENT ON COLUMN ELV_V_CHK_ALL_AIP_FASC_CREATI.ID_ELENCO_VERS_FASC IS 'PK.1';

-- changeset root:1751897635013-873
CREATE OR REPLACE FORCE VIEW "ELV_V_CHK_SOLO_FASC_ANNUL" ("ID_ELENCO_VERS_FASC", "FL_SOLO_FASC_ANNUL") AS select 
 ele.id_elenco_vers_fasc,
 case
	when exists (select *
				from FAS_FASCICOLO fasc
				where fasc.id_elenco_vers_fasc = ele.id_elenco_vers_fasc
				and fasc.TI_STATO_CONSERVAZIONE != 'ANNULLATO'
				)
		then '0'
		else '1'
  end fl_solo_fasc_annul

from elv_elenco_vers_fasc ele;

-- changeset root:1751897635013-874
COMMENT ON COLUMN ELV_V_CHK_SOLO_FASC_ANNUL.ID_ELENCO_VERS_FASC IS 'PK.1';

-- changeset root:1751897635013-875
CREATE OR REPLACE FORCE VIEW "ELV_V_CHK_ALL_AIP_FASC_IN_CODA" ("ID_ELENCO_VERS_FASC", "FL_ALL_AIP_IN_CODA") AS SELECT ele.id_elenco_vers_fasc,
           CASE
               WHEN stato_cor.ti_stato = 'VALIDATO' THEN
                   CASE
                       WHEN EXISTS
                                (SELECT *
                                   FROM FAS_FASCICOLO fasc
                                  WHERE fasc.id_elenco_vers_fasc =
                                        ele.id_elenco_vers_fasc
                                    AND fasc.TI_STATO_CONSERVAZIONE !=
                                        'ANNULLATO'
                                    AND fasc.ti_stato_fasc_elenco_vers =
                                        'IN_ELENCO_VALIDATO') THEN
                           '0'
                       ELSE
                           '1'
                   END
               ELSE
                   '0'
           END    fl_all_aip_in_coda
      FROM elv_elenco_vers_fasc  ele
           JOIN elv_stato_elenco_vers_fasc stato_cor
               ON (stato_cor.id_stato_elenco_vers_fasc =
                   ele.id_stato_elenco_vers_fasc_cor);

-- changeset root:1751897635013-876
COMMENT ON COLUMN ELV_V_CHK_ALL_AIP_FASC_IN_CODA.ID_ELENCO_VERS_FASC IS 'PK.1';

-- changeset root:1751897635013-877
CREATE OR REPLACE FORCE VIEW "MON_V_CHK_FASC_BY_TI_FASC" ("ID_TIPO_FASCICOLO", "FL_FASC_CORR", "FL_FASC_30GG", "FL_FASC_B30GG", "FL_FASC_ATTESA_SCHED_CORR", "FL_FASC_ATTESA_SCHED_30GG", "FL_FASC_ATTESA_SCHED_B30GG", "FL_FASC_NOSEL_SCHED_CORR", "FL_FASC_NOSEL_SCHED_30GG", "FL_FASC_NOSEL_SCHED_B30GG") AS select
 ti_fasc.id_tipo_fascicolo,
 
--
--					ud TOTALE
--
case
	when exists (select * 
				from FAS_FASCICOLO fasc
				where fasc.id_strut = ti_fasc.id_strut
				and trunc(fasc.ts_ini_ses) = trunc(sysdate)
				and fasc.id_tipo_fascicolo = ti_fasc.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_corr,
case
	when exists (select *
				  from MON_CONTA_FASCICOLI conta_fasc
				  where conta_fasc.id_tipo_fascicolo = ti_fasc.id_tipo_fascicolo
				  and conta_fasc.dt_rif_conta between trunc(sysdate - 30) and trunc(sysdate - 1)
				  ) 
			then '1'
			else '0'
end fl_fasc_30gg,
case
	when exists (select *
				  from MON_CONTA_FASCICOLI conta_fasc
				  where conta_fasc.id_tipo_fascicolo = ti_fasc.id_tipo_fascicolo
				  and conta_fasc.dt_rif_conta < trunc(sysdate - 30)
				  ) 
			then '1'
			else '0'
end fl_fasc_b30gg,


--
--						ud IN_ATTESA_SCHED
--
case
	when exists (select * 
				from ELV_FASC_DA_ELAB_ELENCO fasc_da_elab, FAS_FASCICOLO fasc
				where fasc_da_elab.id_strut = ti_fasc.id_strut
				and fasc_da_elab.ti_stato_fasc_da_elab = 'IN_ATTESA_SCHED'
				and trunc(fasc_da_elab.ts_vers_fascicolo) = trunc(sysdate)
				
				and fasc.id_fascicolo = fasc_da_elab.id_fascicolo
				and fasc.id_tipo_fascicolo = ti_fasc.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_attesa_sched_corr,
case
	when exists (select * 
				from ELV_FASC_DA_ELAB_ELENCO fasc_da_elab, FAS_FASCICOLO fasc
				where fasc_da_elab.id_strut = ti_fasc.id_strut 
				and fasc_da_elab.ti_stato_fasc_da_elab = 'IN_ATTESA_SCHED'
				and trunc(fasc_da_elab.ts_vers_fascicolo) between trunc(sysdate - 30) and trunc(sysdate - 1)
				
				and fasc.id_fascicolo = fasc_da_elab.id_fascicolo
				and fasc.id_tipo_fascicolo = ti_fasc.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_attesa_sched_30gg,
case
	when exists (select * 
				from ELV_FASC_DA_ELAB_ELENCO fasc_da_elab, FAS_FASCICOLO fasc
				where fasc_da_elab.id_strut = ti_fasc.id_strut 
				and fasc_da_elab.ti_stato_fasc_da_elab = 'IN_ATTESA_SCHED'
				and trunc(fasc_da_elab.ts_vers_fascicolo) < trunc(sysdate - 30)
				
				and fasc.id_fascicolo = fasc_da_elab.id_fascicolo
				and fasc.id_tipo_fascicolo = ti_fasc.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_attesa_sched_b30gg,

--
--						ud NON_SELEZ_SCHED
--
case
	when exists (select * 
				from ELV_FASC_DA_ELAB_ELENCO fasc_da_elab, FAS_FASCICOLO fasc
				where fasc_da_elab.id_strut = ti_fasc.id_strut 
				and fasc_da_elab.ti_stato_fasc_da_elab = 'NON_SELEZ_SCHED'
				and trunc(fasc_da_elab.ts_vers_fascicolo) = trunc(sysdate)
				
				and fasc.id_fascicolo = fasc_da_elab.id_fascicolo
				and fasc.id_tipo_fascicolo = ti_fasc.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_nosel_sched_corr,
case
	when exists (select * 
				from ELV_FASC_DA_ELAB_ELENCO fasc_da_elab, FAS_FASCICOLO fasc
				where fasc_da_elab.id_strut = ti_fasc.id_strut 
				and fasc_da_elab.ti_stato_fasc_da_elab = 'NON_SELEZ_SCHED'
				and trunc(fasc_da_elab.ts_vers_fascicolo) between trunc(sysdate - 30) and trunc(sysdate - 1)
				
				and fasc.id_fascicolo = fasc_da_elab.id_fascicolo
				and fasc.id_tipo_fascicolo = ti_fasc.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_nosel_sched_30gg,
case
	when exists (select * 
				from ELV_FASC_DA_ELAB_ELENCO fasc_da_elab, FAS_FASCICOLO fasc
				where fasc_da_elab.id_strut = ti_fasc.id_strut 
				and fasc_da_elab.ti_stato_fasc_da_elab = 'NON_SELEZ_SCHED'
				and trunc(fasc_da_elab.ts_vers_fascicolo) < trunc(sysdate - 30)
				
				and fasc.id_fascicolo = fasc_da_elab.id_fascicolo
				and fasc.id_tipo_fascicolo = ti_fasc.id_tipo_fascicolo
				)
			then '1'
			else '0'
end fl_fasc_nosel_sched_b30gg

from DEC_TIPO_FASCICOLO ti_fasc;

-- changeset root:1751897635013-878
COMMENT ON COLUMN MON_V_CHK_FASC_BY_TI_FASC.ID_TIPO_FASCICOLO IS 'PK.1';

-- changeset root:1751897635013-879
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_FASC_BY_TI_FASC" ("ID_TIPO_FASCICOLO", "TI_STATO_FASC", "TI_DT_CREAZIONE", "NI_FASC") AS select 																				-- conta fasc per stato IN_ATTESA_SCHED o NON_SELEZ_SCHED per OGGI e per 30gg e per before 30gg
 fasc.id_tipo_fascicolo id_tipo_fascicolo, 
 fasc_da_elab.ti_stato_fasc_da_elab ti_stato_fasc,
 case
	when trunc(fasc_da_elab.ts_vers_fascicolo) = trunc(sysdate) then 'OGGI'
	when trunc(fasc_da_elab.ts_vers_fascicolo) between trunc (sysdate - 30) and trunc(sysdate - 1) then '30gg'
	else 'before30gg'
 end ti_dt_creazione,
 
 count(*) ni_fasc

from ELV_FASC_DA_ELAB_ELENCO fasc_da_elab, FAS_FASCICOLO fasc
where fasc.id_fascicolo = fasc_da_elab.id_fascicolo

group by fasc.id_tipo_fascicolo, fasc_da_elab.ti_stato_fasc_da_elab,  
		 case
			when trunc(fasc_da_elab.ts_vers_fascicolo) = trunc(sysdate) then 'OGGI'
			when trunc(fasc_da_elab.ts_vers_fascicolo) between trunc (sysdate - 30) and trunc(sysdate - 1) then '30gg'
			else 'before30gg'
		 end

UNION

select																				-- conta fasc per stato TOTALE per OGGI
 tmp.id_tipo_fascicolo id_tipo_fascicolo, 
 'TOTALE' ti_stato_fasc, 
 'OGGI' ti_dt_creazione, 
 tmp.ni_fasc
from (select 
	   fasc.id_tipo_fascicolo, 
	   count(*) ni_fasc
	  from FAS_FASCICOLO fasc
	  where trunc(fasc.ts_ini_ses) = trunc(sysdate)
 
	  group by fasc.id_tipo_fascicolo
	) tmp

UNION

select 																				-- conta fasc per stato TOTALE per 30gg
 ti_fasc.id_tipo_fascicolo id_tipo_fascicolo,
 'TOTALE' ti_stato_fasc, 
 case
	when conta_fasc.dt_rif_conta between trunc (sysdate - 30) and trunc(sysdate - 1) then '30gg'
	else 'before30gg'
 end ti_dt_creazione,
 sum (ni_fascicoli_vers) ni_fasc
 
from DEC_TIPO_FASCICOLO ti_fasc
join MON_CONTA_FASCICOLI conta_fasc
 on (conta_fasc.id_tipo_fascicolo = ti_fasc.id_tipo_fascicolo)

group by ti_fasc.id_tipo_fascicolo, 
		'TOTALE', 
		case
			when conta_fasc.dt_rif_conta between trunc (sysdate - 30) and trunc(sysdate - 1) then '30gg'
			else 'before30gg'
		 end;

-- changeset root:1751897635013-880
COMMENT ON COLUMN MON_V_CNT_FASC_BY_TI_FASC.ID_TIPO_FASCICOLO IS 'PK.1';

-- changeset root:1751897635013-881
COMMENT ON COLUMN MON_V_CNT_FASC_BY_TI_FASC.TI_STATO_FASC IS 'PK.2';

-- changeset root:1751897635013-882
COMMENT ON COLUMN MON_V_CNT_FASC_BY_TI_FASC.TI_DT_CREAZIONE IS 'PK.3';

-- changeset root:1751897635013-883
CREATE OR REPLACE FORCE VIEW "MON_V_CHK_FASC_KO_BY_TI_FASC" ("ID_TIPO_FASCICOLO", "FL_FASC_KO_NON_RISOLUB_CORR", "FL_FASC_KO_NON_RISOLUB_30GG", "FL_FASC_KO_NON_RISOLUB_B30GG", "FL_FASC_KO_VERIF_CORR", "FL_FASC_KO_VERIF_30GG", "FL_FASC_KO_VERIF_B30GG", "FL_FASC_KO_NON_VERIF_CORR", "FL_FASC_KO_NON_VERIF_30GG", "FL_FASC_KO_NON_VERIF_B30GG") AS select
 ti_fasc.id_tipo_fascicolo,
 
--
--						fascicoli KO non risolubili
--
case
	when exists (select * 
				from VRS_FASCICOLO_KO fasc_ko
				where fasc_ko.id_tipo_fascicolo_last = ti_fasc.id_tipo_fascicolo 
				and fasc_ko.ti_stato_fascicolo_ko = 'NON_RISOLUBILE'
				and trunc(fasc_ko.ts_ini_last_ses) = trunc(sysdate)
				)
			then '1'
			else '0'
end fl_fasc_ko_non_risolub_corr,
case
	when exists (select * 
				from MON_CONTA_FASCICOLI_KO conta_fasc_ko
				where conta_fasc_ko.id_tipo_fascicolo = ti_fasc.id_tipo_fascicolo 
				and conta_fasc_ko.ti_stato_fascicolo_ko = 'NON_RISOLUBILE'
				and conta_fasc_ko.dt_rif_conta between trunc(sysdate - 30) and trunc(sysdate - 1)
				)
			then '1'
			else '0'
end fl_fasc_ko_non_risolub_30gg,
case
	when exists (select * 
				from MON_CONTA_FASCICOLI_KO conta_fasc_ko
				where conta_fasc_ko.id_tipo_fascicolo = ti_fasc.id_tipo_fascicolo 
				and conta_fasc_ko.ti_stato_fascicolo_ko = 'NON_RISOLUBILE'
				and conta_fasc_ko.dt_rif_conta < trunc(sysdate - 30)
				)
			then '1'
			else '0'
end fl_fasc_ko_non_risolub_b30gg,


--
--						fascicoli KO verificati
--
case
	when exists (select * 
				from VRS_FASCICOLO_KO fasc_ko
				where fasc_ko.id_tipo_fascicolo_last = ti_fasc.id_tipo_fascicolo 
				and fasc_ko.ti_stato_fascicolo_ko = 'VERIFICATO'
				and trunc(fasc_ko.ts_ini_last_ses) = trunc(sysdate)
				)
			then '1'
			else '0'
end fl_fasc_ko_verif_corr,
case
	when exists (select * 
				from MON_CONTA_FASCICOLI_KO conta_fasc_ko
				where conta_fasc_ko.id_tipo_fascicolo = ti_fasc.id_tipo_fascicolo 
				and conta_fasc_ko.ti_stato_fascicolo_ko = 'VERIFICATO'
				and conta_fasc_ko.dt_rif_conta between trunc(sysdate - 30) and trunc(sysdate - 1)
				)
			then '1'
			else '0'
end fl_fasc_ko_verif_30gg,
case
	when exists (select * 
				from MON_CONTA_FASCICOLI_KO conta_fasc_ko
				where conta_fasc_ko.id_tipo_fascicolo = ti_fasc.id_tipo_fascicolo 
				and conta_fasc_ko.ti_stato_fascicolo_ko = 'VERIFICATO'
				and conta_fasc_ko.dt_rif_conta < trunc(sysdate - 30)
				)
			then '1'
			else '0'
end fl_fasc_ko_verif_b30gg,


--
--						fascicoli KO non verificati
--
case
	when exists (select * 
				from VRS_FASCICOLO_KO fasc_ko
				where fasc_ko.id_tipo_fascicolo_last = ti_fasc.id_tipo_fascicolo 
				and fasc_ko.ti_stato_fascicolo_ko = 'NON_VERIFICATO'
				and trunc(fasc_ko.ts_ini_last_ses) = trunc(sysdate)
				)
			then '1'
			else '0'
end fl_fasc_ko_non_verif_corr,
case
	when exists (select * 
				from MON_CONTA_FASCICOLI_KO conta_fasc_ko
				where conta_fasc_ko.id_tipo_fascicolo = ti_fasc.id_tipo_fascicolo 
				and conta_fasc_ko.ti_stato_fascicolo_ko = 'NON_VERIFICATO'
				and conta_fasc_ko.dt_rif_conta between trunc(sysdate - 30) and trunc(sysdate - 1)
				)
			then '1'
			else '0'
end fl_fasc_ko_non_verif_30gg,
case
	when exists (select * 
				from MON_CONTA_FASCICOLI_KO conta_fasc_ko
				where conta_fasc_ko.id_tipo_fascicolo = ti_fasc.id_tipo_fascicolo 
				and conta_fasc_ko.ti_stato_fascicolo_ko = 'NON_VERIFICATO'
				and conta_fasc_ko.dt_rif_conta < trunc(sysdate - 30)
				)
			then '1'
			else '0'
end fl_fasc_ko_non_verif_b30gg

from DEC_TIPO_FASCICOLO ti_fasc;

-- changeset root:1751897635013-884
COMMENT ON COLUMN MON_V_CHK_FASC_KO_BY_TI_FASC.ID_TIPO_FASCICOLO IS 'PK.1';

-- changeset root:1751897635013-885
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_FASC_KO_BY_TI_FASC" ("ID_TIPO_FASCICOLO", "TI_STATO_FASC_KO", "TI_DT_CREAZIONE", "NI_FASC_KO") AS select 																				-- conta fasc ko per stato NON_RISOLUBILE, VERIFICATO, NON_VERIFICATO per OGGI
 ti_fasc.id_tipo_fascicolo id_tipo_fascicolo, 
 fasc_ko.ti_stato_fascicolo_ko ti_stato_fasc_ko,
 'OGGI' ti_dt_creazione,
 
 count(*) ni_fasc

from DEC_TIPO_FASCICOLO ti_fasc
join VRS_FASCICOLO_KO fasc_ko
 on (fasc_ko.id_tipo_fascicolo_last = ti_fasc.id_tipo_fascicolo)
where trunc(fasc_ko.ts_ini_last_ses) = trunc(sysdate)

group by ti_fasc.id_tipo_fascicolo, fasc_ko.ti_stato_fascicolo_ko, 'OGGI'

UNION

select 		 																		-- conta fasc ko per stato NON_RISOLUBILE, VERIFICATO, NON_VERIFICATO per 30gg e before 30gg
 ti_fasc.id_tipo_fascicolo id_tipo_fascicolo, 
 conta_fasc_ko.ti_stato_fascicolo_ko ti_stato_fasc_ko,
 case
	when conta_fasc_ko.dt_rif_conta between trunc (sysdate - 30) and trunc(sysdate - 1) then '30gg'
	else 'before30gg'
 end ti_dt_creazione,
 sum (ni_fascicoli_ko) ni_fasc
 
from DEC_TIPO_FASCICOLO ti_fasc
join MON_CONTA_FASCICOLI_KO conta_fasc_ko
 on (conta_fasc_ko.id_tipo_fascicolo = ti_fasc.id_tipo_fascicolo)

group by ti_fasc.id_tipo_fascicolo, conta_fasc_ko.ti_stato_fascicolo_ko,
		 case
			when conta_fasc_ko.dt_rif_conta between trunc (sysdate - 30) and trunc(sysdate - 1) then '30gg'
			else 'before30gg'
		 end;

-- changeset root:1751897635013-886
COMMENT ON COLUMN MON_V_CNT_FASC_KO_BY_TI_FASC.ID_TIPO_FASCICOLO IS 'PK.1';

-- changeset root:1751897635013-887
COMMENT ON COLUMN MON_V_CNT_FASC_KO_BY_TI_FASC.TI_STATO_FASC_KO IS 'PK.2';

-- changeset root:1751897635013-888
COMMENT ON COLUMN MON_V_CNT_FASC_KO_BY_TI_FASC.TI_DT_CREAZIONE IS 'PK.3';

-- changeset root:1751897635013-889
CREATE OR REPLACE FORCE VIEW "DEC_V_CHK_FMT_NUMERO_FASC" ("ID_STRUT", "ID_TIPO_FASCICOLO", "ID_AA_TIPO_FASCICOLO", "FL_FMT_NUMERO_OK") AS select
 tipo_fasc.id_strut,
 tipo_fasc.ID_TIPO_FASCICOLO,
 aa_tipo_fasc.ID_AA_TIPO_FASCICOLO,
 case
	when  aa_tipo_fasc.fl_upd_fmt_numero = '1'		-- e' in corso il controllo formato numero o deve essere svolto
		then null
		else
			case
				when exists (select *
							from DEC_ERR_AA_TIPO_FASCICOLO err_tipo_fasc
							where err_tipo_fasc.id_aa_tipo_fascicolo = aa_tipo_fasc.id_aa_tipo_fascicolo
							)
				or exists (select *
						   from DEC_WARN_AA_TIPO_FASCICOLO warn_tipo_fasc
						   where warn_tipo_fasc.id_aa_tipo_fascicolo = aa_tipo_fasc.id_aa_tipo_fascicolo
						   and warn_tipo_fasc.FL_WARN_AA_TIPO_FASCICOLO = '1'
						   )
					then '0'
					else '1'
			end
 end fl_fmt_numero_ok
from DEC_TIPO_FASCICOLO tipo_fasc
join DEC_AA_TIPO_FASCICOLO aa_tipo_fasc
 on (aa_tipo_fasc.id_tipo_fascicolo = tipo_fasc.id_tipo_fascicolo);

-- changeset root:1751897635013-890
COMMENT ON COLUMN DEC_V_CHK_FMT_NUMERO_FASC.ID_AA_TIPO_FASCICOLO IS 'PK.1';

-- changeset root:1751897635013-891
CREATE OR REPLACE FORCE VIEW "SER_V_CHK_SERIE_UD_DA_RIGENERA" ("ID_VER_SERIE", "FL_VER_SERIE_DA_RIGENERA", "FL_CONSIST_DA_RIDEF") AS select
ver_serie.id_ver_serie,

 case
	when 
	(conten_calc.id_contenuto_ver_serie is not null 
	and conten_calc.fl_tipo_serie_upd = '1')
	or
	(conten_acq.id_contenuto_ver_serie is not null 
	and conten_acq.fl_tipo_serie_upd = '1')
	or
	(conten_eff.id_contenuto_ver_serie is not null 
	and conten_eff.fl_tipo_serie_upd = '1')
		then '1'
		else '0'
 end fl_da_rigenera,
 
 
 case
	when ((conten_calc.id_contenuto_ver_serie is not null 
	and conten_calc.fl_tipo_serie_upd = '1')
	or
	(conten_acq.id_contenuto_ver_serie is not null 
	and conten_acq.fl_tipo_serie_upd = '1')
	or
	(conten_eff.id_contenuto_ver_serie is not null 
	and conten_eff.fl_tipo_serie_upd = '1'))
	and consist.id_consist_ver_serie is not null
		then
			case
				when exists (select *
							 from DEC_TIPO_SERIE_UD tipo_serie_ud
							 where tipo_serie_ud.id_tipo_serie = serie.id_tipo_serie
							 and not exists (select *
											 from DEC_OUT_SEL_UD out_sel
											 where out_sel.id_tipo_serie_ud = tipo_serie_ud.id_tipo_serie_ud
											 and out_sel.ti_out = 'PG_UD_SERIE'))
				and consist.ti_mod_consist_first_last = 'PROGRESSIVO'
					then '1'
					else '0'
			end
		else '0'
 end fl_consist_da_ridef
 
 
 
from SER_VER_SERIE ver_serie
join SER_SERIE serie
 on (serie.id_serie = ver_serie.id_serie)
left join SER_CONTENUTO_VER_SERIE conten_calc
 on (conten_calc.id_ver_serie = ver_serie.id_ver_serie
 and conten_calc.ti_contenuto_ver_serie = 'CALCOLATO')
 
left join SER_CONTENUTO_VER_SERIE conten_acq
 on (conten_acq.id_ver_serie = ver_serie.id_ver_serie
 and conten_acq.ti_contenuto_ver_serie = 'ACQUISITO')
 
left join SER_CONTENUTO_VER_SERIE conten_eff
 on (conten_eff.id_ver_serie = ver_serie.id_ver_serie
 and conten_eff.ti_contenuto_ver_serie = 'EFFETTIVO')

left join SER_CONSIST_VER_SERIE consist
 on (consist.id_ver_serie = ver_serie.id_ver_serie);

-- changeset root:1751897635013-892
COMMENT ON COLUMN SER_V_CHK_SERIE_UD_DA_RIGENERA.ID_VER_SERIE IS 'PK.1';

-- changeset root:1751897635013-893
CREATE OR REPLACE FORCE VIEW "DEC_V_TISER_CHK_UD_NOVERS" ("ID_TIPO_SERIE", "ID_REGISTRO_UNITA_DOC", "FL_DEF_UD_NON_VERS") AS select 
 ti_serie.id_tipo_serie,
 ti_serie_ud.id_registro_unita_doc,
/* 
 case
	when not exists (select *
					 from DEC_CAMPO_OUT_SEL_UD campo
					 where campo.id_out_sel_ud = out_ud.id_out_sel_ud
					 and campo.nm_campo not in ('REGISTRO', 'ANNO', 'NUMERO')
					)
		and exists (select *
					from DEC_CAMPO_OUT_SEL_UD campo
					where campo.id_out_sel_ud = out_ud.id_out_sel_ud
					and campo.ti_campo = 'DATO_PROFILO'
					and campo.nm_campo ='REGISTRO'
				    )
		and exists (select *
				    from DEC_CAMPO_OUT_SEL_UD campo
				    where campo.id_out_sel_ud = out_ud.id_out_sel_ud
				    and campo.ti_campo = 'DATO_PROFILO'
				    and campo.nm_campo ='ANNO'
				   )
		and exists (select *
				    from DEC_CAMPO_OUT_SEL_UD campo
				    where campo.id_out_sel_ud = out_ud.id_out_sel_ud
				    and campo.ti_campo = 'DATO_PROFILO'
				    and campo.nm_campo ='NUMERO'
				   )
		then '1'
		else '0'
 end 
*/ 
 '1' fl_def_ud_non_vers

from DEC_TIPO_SERIE ti_serie

join DEC_TIPO_SERIE_UD ti_serie_ud
 on (ti_serie_ud.id_tipo_serie = ti_serie.id_tipo_serie)

join DEC_OUT_SEL_UD out_ud
 on (out_ud.id_tipo_serie_ud = ti_serie_ud.id_tipo_serie_ud
 and out_ud.ti_out = 'KEY_UD_SERIE');

-- changeset root:1751897635013-894
CREATE OR REPLACE FORCE VIEW "SER_V_LIS_ERR_FILE_SERIE_UD" ("ID_VER_SERIE", "TI_SCOPO_FILE_INPUT_VER_SERIE", "ID_FILE_INPUT_VER_SERIE", "ID_ERR_FILE_INPUT", "NI_REC_ERR", "TI_ERR_REC", "DS_REC_ERR") AS select
 file_inp.id_ver_serie,
 file_inp.ti_scopo_file_input_ver_serie,
 file_inp.id_file_input_ver_serie, 
 
 err.id_err_file_input,
 err.ni_rec_err, 
 err.ti_err_rec, 
 err.ds_rec_err

from SER_FILE_INPUT_VER_SERIE file_inp
join SER_ERR_FILE_INPUT err
 on (err.id_file_input_ver_serie = file_inp.id_file_input_ver_serie);

-- changeset root:1751897635013-895
COMMENT ON COLUMN SER_V_LIS_ERR_FILE_SERIE_UD.ID_ERR_FILE_INPUT IS 'PK.1';

-- changeset root:1751897635013-896
CREATE OR REPLACE FORCE VIEW "SER_V_VIS_CONTENUTO_SERIE_UD" ("ID_SERIE", "ID_STRUT", "CD_COMPOSITO_SERIE", "AA_SERIE", "DS_SERIE", "ID_TIPO_SERIE", "NM_STRUT", "ID_ENTE", "NM_ENTE", "ID_AMBIENTE", "NM_AMBIENTE", "NM_TIPO_SERIE", "ID_VER_SERIE", "CD_VER_SERIE", "DT_INIZIO_SEL_SERIE", "DT_FINE_SEL_SERIE", "ID_STATO_VER_SERIE_COR", "TI_STATO_VER_SERIE", "ID_STATO_SERIE_COR", "TI_STATO_SERIE", "ID_CONSIST_VER_SERIE", "CD_DOC_CONSIST_VER_SERIE", "DS_DOC_CONSIST_VER_SERIE", "NI_UNITA_DOC_ATTESE", "TI_MOD_CONSIST_FIRST_LAST", "CD_FIRST_UNITA_DOC_ATTESA", "CD_LAST_UNITA_DOC_ATTESA", "ID_USER_IAM_CONSIST", "NM_USERID_CONSIST", "FL_PRESENZA_LACUNE", "ID_CONTENUTO_VER_SERIE", "TI_CONTENUTO_VER_SERIE", "TI_STATO_CONTENUTO_VER_SERIE", "DT_STATO_CONTENUTO_VER_SERIE", "FL_ERR_CONTENUTO_FILE", "FL_ERR_CONTENUTO", "NI_UNITA_DOC", "CD_FIRST_UNITA_DOC", "DT_FIRST_UNITA_DOC", "CD_LAST_UNITA_DOC", "DT_LAST_UNITA_DOC", "NI_VOL_VER_SERIE", "DS_MSG_SERIE_DA_RIGENERA") AS select
 serie.id_serie, serie.id_strut, serie.cd_composito_serie, serie.aa_serie, serie.ds_serie, serie.id_tipo_serie,
 
 strut.nm_strut, ente.id_ente, ente.nm_ente, amb.id_ambiente, amb.nm_ambiente,
 
 ti_serie.nm_tipo_serie,
 
 ver_serie.id_ver_serie, ver_serie.cd_ver_serie, ver_serie.dt_inizio_sel_serie, ver_serie.dt_fine_sel_serie,

 ver_serie.id_stato_ver_serie_cor, stato_ver_serie.ti_stato_ver_serie, 

 serie.id_stato_serie_cor, stato_serie.ti_stato_serie,
 
 consist.id_consist_ver_serie, consist.cd_doc_consist_ver_serie, consist.ds_doc_consist_ver_serie, consist.ni_unita_doc_attese, 
 consist.ti_mod_consist_first_last,
 
 case
	when consist.id_consist_ver_serie is not null
    then
      case
        when consist.ti_mod_consist_first_last = 'CODICE'
			then cd_first_unita_doc_attesa 
        when consist.ti_mod_consist_first_last = 'CHIAVE_UD'
			then cd_registro_first || '-' || aa_unita_doc_first || '-' || cd_unita_doc_first 
			else to_char(ni_first_unita_doc_attesa)
      end
    else null
 end cd_first_unita_doc_attesa,
 case
  when consist.id_consist_ver_serie is not null
    then
      case
        when consist.ti_mod_consist_first_last = 'CODICE'
			then cd_last_unita_doc_attesa 
		when consist.ti_mod_consist_first_last = 'CHIAVE_UD'
			then cd_registro_last || '-' || aa_unita_doc_last || '-' || cd_unita_doc_last
			else to_char(ni_last_unita_doc_attesa)
      end
    else null
 end cd_last_unita_doc_attesa,
 usr_consist.id_user_iam id_user_iam_consist, usr_consist.nm_userid nm_userid_consist,
 case
	when consist.id_consist_ver_serie is not null
    then
      case
        when exists (select * from SER_LACUNA_CONSIST_VER_SERIE lacuna where lacuna.id_consist_ver_serie = consist.id_consist_ver_serie) then '1' else '0'
      end
  else null
 end fl_presenza_lacune,
 
 conten.id_contenuto_ver_serie,
 conten.ti_contenuto_ver_serie,
 conten.ti_stato_contenuto_ver_serie,
 conten.dt_stato_contenuto_ver_serie,
  case
	when conten.ti_contenuto_ver_serie = 'ACQUISITO'
		then
			case
				when exists (select * 
							from SER_FILE_INPUT_VER_SERIE input_ver_serie, SER_ERR_FILE_INPUT err_file_input
							where input_ver_serie.id_ver_serie = ver_serie.id_ver_serie
							and input_ver_serie.ti_scopo_file_input_ver_serie = 'ACQUISIRE_CONTENUTO'
							and err_file_input.id_file_input_ver_serie = input_ver_serie.id_file_input_ver_serie)
					then '1'
					else '0'
			end
		else null
 end fl_err_contenuto_file,
 case
	when conten.id_contenuto_ver_serie is not null 
		then
			case
				when exists (select * 
							from SER_ERR_CONTENUTO_VER_SERIE err_conten
							where err_conten.id_contenuto_ver_serie = conten.id_contenuto_ver_serie)
					then '1'
					else '0'
			end
		else null
 end fl_err_contenuto,
 conten.ni_ud_contenuto_ver_serie ni_unita_doc, 
 ud_conten_first.cd_ud_serie cd_first_unita_doc, ud_conten_first.dt_ud_serie dt_first_unita_doc, ud_conten_last.cd_ud_serie cd_last_unita_doc, ud_conten_last.dt_ud_serie dt_last_unita_doc,
 
 case
	when conten.ti_contenuto_ver_serie = 'EFFETTIVO'
		then
			case
				when stato_ver_serie.ti_stato_ver_serie = 'DA_FIRMARE'
					then (select nvl(count(*), 0)
						  from SER_VOL_VER_SERIE vol_serie
						  where vol_serie.id_ver_serie = ver_serie.id_ver_serie)
					else null
			end
		else null
 end ni_vol_ver_serie,

 case
	when (select fl_ver_serie_da_rigenera
		  from SER_V_CHK_SERIE_UD_DA_RIGENERA chk
		  where chk.id_ver_serie = ver_serie.id_ver_serie) = '1'
			then
				case
					when (select fl_consist_da_ridef
						  from SER_V_CHK_SERIE_UD_DA_RIGENERA chk
						  where chk.id_ver_serie = ver_serie.id_ver_serie) = '1'
						then 'Il tipo della serie e'' stato modificato e, quindi, la serie deve essere nuovamente calcolata e/o acquisita e la consistenza deve essere ridefinita'
						else 'Il tipo della serie e'' stato modificato e, quindi, la serie deve essere nuovamente calcolata e/o acquisita'
				end
			else null
 end ds_msg_serie_da_rigenera


from SER_VER_SERIE ver_serie
join SER_STATO_VER_SERIE stato_ver_serie
 on (stato_ver_serie.id_stato_ver_serie = ver_serie.id_stato_ver_serie_cor)

join SER_SERIE serie
 on (serie.id_serie = ver_serie.id_serie)
join DEC_TIPO_SERIE ti_serie
 on (ti_serie.id_tipo_serie = serie.id_tipo_serie)
 
join ORG_STRUT strut
 on (strut.id_strut = serie.id_strut)
join ORG_ENTE ente
 on (ente.id_ente = strut.id_ente)
join ORG_AMBIENTE amb
 on (amb.id_ambiente = ente.id_ambiente)

left join SER_STATO_SERIE stato_serie
 on (stato_serie.id_stato_serie = serie.id_stato_serie_cor)
 
left join SER_CONSIST_VER_SERIE consist
 on (consist.id_ver_serie = ver_serie.id_ver_serie)
left join IAM_USER usr_consist
 on (usr_consist.id_user_iam = consist.id_user_iam)
 
left join SER_CONTENUTO_VER_SERIE conten
 on (conten.id_ver_serie = ver_serie.id_ver_serie)
left join ARO_UD_APPART_VER_SERIE ud_conten_first
 on (ud_conten_first.id_ud_appart_ver_serie = conten.id_first_ud_appart_ver_serie)
left join ARO_UD_APPART_VER_SERIE ud_conten_last
 on (ud_conten_last.id_ud_appart_ver_serie = conten.id_last_ud_appart_ver_serie);

-- changeset root:1751897635013-897
COMMENT ON COLUMN SER_V_VIS_CONTENUTO_SERIE_UD.ID_CONTENUTO_VER_SERIE IS 'PK.1';

-- changeset root:1751897635013-898
CREATE OR REPLACE FORCE VIEW "SER_V_VIS_SERIE_UD" ("ID_SERIE", "ID_STRUT", "CD_COMPOSITO_SERIE", "AA_SERIE", "DS_SERIE", "ID_TIPO_SERIE", "NM_STRUT", "ID_ENTE", "NM_ENTE", "ID_AMBIENTE", "NM_AMBIENTE", "NM_TIPO_SERIE", "NI_ANNI_CONSERV", "ID_VER_SERIE", "CD_VER_SERIE", "DT_INIZIO_SEL_SERIE", "DT_FINE_SEL_SERIE", "DT_CREAZIONE_UNITA_DOC_DA", "DT_CREAZIONE_UNITA_DOC_A", "DT_REG_UNITA_DOC_DA", "DT_REG_UNITA_DOC_A", "DS_LISTA_ANNI_SEL_SERIE", "ID_STATO_VER_SERIE_COR", "TI_STATO_VER_SERIE", "DT_REG_STATO_VER_SERIE", "DS_AZIONE", "DS_NOTA_AZIONE", "ID_USER_IAM_STATO", "NM_USERID_STATO", "ID_STATO_SERIE_COR", "TI_STATO_SERIE", "DT_REG_STATO_SERIE", "DS_AZIONE_STATO_SERIE", "DS_NOTA_AZIONE_STATO_SERIE", "ID_USER_IAM_STATO_SERIE", "NM_USERID_STATO_SERIE", "ID_CONSIST_VER_SERIE", "CD_DOC_CONSIST_VER_SERIE", "DS_DOC_CONSIST_VER_SERIE", "NI_UNITA_DOC_ATTESE", "TI_MOD_CONSIST_FIRST_LAST", "CD_FIRST_UNITA_DOC_ATTESA", "CD_LAST_UNITA_DOC_ATTESA", "ID_USER_IAM_CONSIST", "NM_USERID_CONSIST", "FL_PRESENZA_LACUNE", "ID_CONTENUTO_CALC", "TI_STATO_CONTENUTO_CALC", "DT_STATO_CONTENUTO_CALC", "FL_ERR_CONTENUTO_CALC", "NI_UNITA_DOC_CALC", "CD_FIRST_UNITA_DOC_CALC", "DT_FIRST_UNITA_DOC_CALC", "CD_LAST_UNITA_DOC_CALC", "DT_LAST_UNITA_DOC_CALC", "ID_CONTENUTO_ACQ", "TI_STATO_CONTENUTO_ACQ", "DT_STATO_CONTENUTO_ACQ", "FL_ERR_CONTENUTO_FILE", "FL_ERR_CONTENUTO_ACQ", "NI_UNITA_DOC_ACQ", "CD_FIRST_UNITA_DOC_ACQ", "DT_FIRST_UNITA_DOC_ACQ", "CD_LAST_UNITA_DOC_ACQ", "DT_LAST_UNITA_DOC_ACQ", "ID_FILE_INPUT_VER_SERIE", "CD_DOC_FILE_INPUT_VER_SERIE", "DS_DOC_FILE_INPUT_VER_SERIE", "FL_FORNITO_ENTE", "NM_USERID_FILE", "ID_CONTENUTO_EFF", "TI_STATO_CONTENUTO_EFF", "DT_STATO_CONTENUTO_EFF", "FL_ERR_CONTENUTO_EFF", "NI_UNITA_DOC_EFF", "CD_FIRST_UNITA_DOC_EFF", "DT_FIRST_UNITA_DOC_EFF", "CD_LAST_UNITA_DOC_EFF", "DT_LAST_UNITA_DOC_EFF", "DS_HASH_IX_AIP", "DS_ALGO_HASH_IX_AIP", "CD_ENCODING_HASH_IX_AIP", "CD_VER_XSD_AIP", "DT_CREAZIONE_IX_AIP", "BL_FILE_IX_AIP", "DS_FMT_IX_AIP", "ID_ENTE_CONSERV", "DS_MSG_SERIE_DA_RIGENERA", "FL_UPD_ANNUL_UNITA_DOC", "FL_UPD_MODIF_UNITA_DOC") AS select
 serie.id_serie, serie.id_strut, serie.cd_composito_serie, serie.aa_serie, serie.ds_serie, serie.id_tipo_serie,
 
 strut.nm_strut, ente.id_ente, ente.nm_ente, amb.id_ambiente, amb.nm_ambiente,
 
 ti_serie.nm_tipo_serie,
 serie.ni_anni_conserv, 
 
 ver_serie.id_ver_serie, ver_serie.cd_ver_serie, ver_serie.dt_inizio_sel_serie, ver_serie.dt_fine_sel_serie,
 ver_serie.dt_creazione_unita_doc_da, ver_serie.dt_creazione_unita_doc_a, ver_serie.dt_reg_unita_doc_da, ver_serie.dt_reg_unita_doc_a,
 ver_serie.ds_lista_anni_sel_serie,
 
 ver_serie.id_stato_ver_serie_cor,
 stato_ver_serie.ti_stato_ver_serie, stato_ver_serie.dt_reg_stato_ver_serie, stato_ver_serie.ds_azione, stato_ver_serie.ds_nota_azione, usr_stato.id_user_iam id_user_iam_stato, usr_stato.nm_userid nm_userid_stato,

 serie.id_stato_serie_cor,
 stato_serie.ti_stato_serie, stato_serie.dt_reg_stato_serie, stato_serie.ds_azione, stato_serie.ds_nota_azione, usr_stato_serie.id_user_iam id_user_iam_stato_serie, usr_stato_serie.nm_userid nm_userid_stato_serie,
 
 consist.id_consist_ver_serie, consist.cd_doc_consist_ver_serie, consist.ds_doc_consist_ver_serie, consist.ni_unita_doc_attese, 
 consist.ti_mod_consist_first_last,
 case
	when consist.id_consist_ver_serie is not null
    then
      case
        when consist.ti_mod_consist_first_last = 'CODICE'
			then cd_first_unita_doc_attesa 
        when consist.ti_mod_consist_first_last = 'CHIAVE_UD'
			then cd_registro_first || '-' || aa_unita_doc_first || '-' || cd_unita_doc_first 
			else to_char(ni_first_unita_doc_attesa)
      end
    else null
 end cd_first_unita_doc_attesa,
 case
  when consist.id_consist_ver_serie is not null
    then
      case
        when consist.ti_mod_consist_first_last = 'CODICE'
			then cd_last_unita_doc_attesa 
		when consist.ti_mod_consist_first_last = 'CHIAVE_UD'
			then cd_registro_last || '-' || aa_unita_doc_last || '-' || cd_unita_doc_last
			else to_char(ni_last_unita_doc_attesa)
      end
    else null
 end cd_last_unita_doc_attesa,
 usr_consist.id_user_iam id_user_iam_consist, usr_consist.nm_userid nm_userid_consist,
 case
	when consist.id_consist_ver_serie is not null
    then
      case
        when exists (select * from SER_LACUNA_CONSIST_VER_SERIE lacuna where lacuna.id_consist_ver_serie = consist.id_consist_ver_serie) then '1' else '0'
      end
  else null
 end fl_presenza_lacune,
 
 conten_calc.id_contenuto_ver_serie id_contenuto_calc,
 case
	when conten_calc.id_contenuto_ver_serie is not null 
		then conten_calc.ti_stato_contenuto_ver_serie 
		else null
 end ti_stato_contenuto_calc,
 conten_calc.dt_stato_contenuto_ver_serie dt_stato_contenuto_calc,
 case
	when conten_calc.id_contenuto_ver_serie is not null 
		then
			case
				when exists (select * 
							from SER_ERR_CONTENUTO_VER_SERIE err_conten_calc 
							where err_conten_calc.id_contenuto_ver_serie = conten_calc.id_contenuto_ver_serie)
					then '1'
					else '0'
			end
		else null
 end fl_err_contenuto_calc,
 conten_calc.ni_ud_contenuto_ver_serie ni_unita_doc_calc, 
 ud_conten_calc_first.cd_ud_serie cd_first_unita_doc_calc, ud_conten_calc_first.dt_ud_serie dt_first_unita_doc_calc, ud_conten_calc_last.cd_ud_serie cd_last_unita_doc_calc, ud_conten_calc_last.dt_ud_serie dt_last_unita_doc_calc ,
 
 conten_acq.id_contenuto_ver_serie id_contenuto_acq,
 case
	when conten_acq.id_contenuto_ver_serie is not null 
		then conten_acq.ti_stato_contenuto_ver_serie 
		else null
 end ti_stato_contenuto_acq,
 conten_acq.dt_stato_contenuto_ver_serie dt_stato_contenuto_acq,
  case
	when conten_acq.id_contenuto_ver_serie is not null 
		then
			case
				when exists (select * 
							from SER_FILE_INPUT_VER_SERIE input_ver_serie, SER_ERR_FILE_INPUT err_file_input
							where input_ver_serie.id_ver_serie = ver_serie.id_ver_serie
							and input_ver_serie.ti_scopo_file_input_ver_serie = 'ACQUISIRE_CONTENUTO'
							and err_file_input.id_file_input_ver_serie = input_ver_serie.id_file_input_ver_serie)
					then '1'
					else '0'
			end
		else null
 end fl_err_contenuto_file,
 case
	when conten_acq.id_contenuto_ver_serie is not null 
		then
			case
				when exists (select * 
							from SER_ERR_CONTENUTO_VER_SERIE err_conten_acq 
							where err_conten_acq.id_contenuto_ver_serie = conten_acq.id_contenuto_ver_serie)
					then '1'
					else '0'
			end
		else null
 end fl_err_contenuto_acq,
 conten_acq.ni_ud_contenuto_ver_serie ni_unita_doc_acq, 
 ud_conten_acq_first.cd_ud_serie cd_first_unita_doc_acq, ud_conten_acq_first.dt_ud_serie dt_first_unita_doc_acq, ud_conten_acq_last.cd_ud_serie cd_last_unita_doc_acq, ud_conten_acq_last.dt_ud_serie dt_last_unita_doc_acq,
 file_acq.id_file_input_ver_serie, file_acq.cd_doc_file_input_ver_serie, file_acq.ds_doc_file_input_ver_serie, file_acq.fl_fornito_ente, user_file.nm_userid,

 conten_eff.id_contenuto_ver_serie id_contenuto_eff,
 case
	when conten_eff.id_contenuto_ver_serie is not null 
		then conten_eff.ti_stato_contenuto_ver_serie 
		else null
 end ti_stato_contenuto_eff,
 conten_eff.dt_stato_contenuto_ver_serie dt_stato_contenuto_eff,
 case
	when conten_eff.id_contenuto_ver_serie is not null 
		then
			case
				when exists (select * 
							from SER_ERR_CONTENUTO_VER_SERIE err_conten_eff 
							where err_conten_eff.id_contenuto_ver_serie = conten_eff.id_contenuto_ver_serie)
					then '1'
					else '0'
			end
		else null
 end fl_err_contenuto_eff,
 conten_eff.ni_ud_contenuto_ver_serie ni_unita_doc_eff, 
 
 ud_conten_eff_first.cd_ud_serie cd_first_unita_doc_eff, ud_conten_eff_first.dt_ud_serie dt_first_unita_doc_eff, 
 ud_conten_eff_last.cd_ud_serie cd_last_unita_doc_eff, ud_conten_eff_last.dt_ud_serie dt_last_unita_doc_eff,
 
 file_ix_aip_unisincro.ds_hash_file, file_ix_aip_unisincro.ds_algo_hash_file, file_ix_aip_unisincro.cd_encoding_hash_file, 
 
 file_ix_aip_unisincro.cd_ver_xsd_file, file_ix_aip_unisincro.dt_creazione, file_ix_aip_unisincro.bl_file,
 case
	when file_ix_aip_unisincro.ti_file_ver_serie = 'IX_AIP_UNISINCRO'
		then 'UNI SInCRO'
		else null
 end ds_fmt_ix_aip,
 file_ix_aip_unisincro.id_ente_conserv,
 
 case
	when (select fl_ver_serie_da_rigenera
		  from SER_V_CHK_SERIE_UD_DA_RIGENERA chk
		  where chk.id_ver_serie = ver_serie.id_ver_serie) = '1'
			then
				case
					when (select fl_consist_da_ridef
						  from SER_V_CHK_SERIE_UD_DA_RIGENERA chk
						  where chk.id_ver_serie = ver_serie.id_ver_serie) = '1'
						then 'Il tipo della serie e'' stato modificato e, quindi, la serie deve essere nuovamente calcolata e/o acquisita e la consistenza deve essere ridefinita'
						else 'Il tipo della serie e'' stato modificato e, quindi, la serie deve essere nuovamente calcolata e/o acquisita'
				end
			else null
 end ds_msg_serie_da_rigenera,

 ver_serie.fl_upd_annul_unita_doc,
 ver_serie.fl_upd_modif_unita_doc

from SER_VER_SERIE ver_serie
join SER_STATO_VER_SERIE stato_ver_serie
 on (stato_ver_serie.id_stato_ver_serie = ver_serie.id_stato_ver_serie_cor)
join IAM_USER usr_stato
 on (usr_stato.id_user_iam = stato_ver_serie.id_user_iam)
join SER_SERIE serie
 on (serie.id_serie = ver_serie.id_serie)
join DEC_TIPO_SERIE ti_serie
 on (ti_serie.id_tipo_serie = serie.id_tipo_serie)

join ORG_STRUT strut
 on (strut.id_strut = serie.id_strut)
join ORG_ENTE ente
 on (ente.id_ente = strut.id_ente)
join ORG_AMBIENTE amb
 on (amb.id_ambiente = ente.id_ambiente)

left join SER_STATO_SERIE stato_serie
 on (stato_serie.id_stato_serie = serie.id_stato_serie_cor)
left join IAM_USER usr_stato_serie
 on (usr_stato_serie.id_user_iam = stato_serie.id_user_iam)

left join SER_CONSIST_VER_SERIE consist
 on (consist.id_ver_serie = ver_serie.id_ver_serie)
left join IAM_USER usr_consist
 on (usr_consist.id_user_iam = consist.id_user_iam)

left join SER_CONTENUTO_VER_SERIE conten_calc
 on (conten_calc.id_ver_serie = ver_serie.id_ver_serie
 and conten_calc.ti_contenuto_ver_serie = 'CALCOLATO')
left join ARO_UD_APPART_VER_SERIE ud_conten_calc_first
 on (ud_conten_calc_first.id_ud_appart_ver_serie = conten_calc.id_first_ud_appart_ver_serie)
left join ARO_UD_APPART_VER_SERIE ud_conten_calc_last
 on (ud_conten_calc_last.id_ud_appart_ver_serie = conten_calc.id_last_ud_appart_ver_serie)

left join SER_CONTENUTO_VER_SERIE conten_acq
 on (conten_acq.id_ver_serie = ver_serie.id_ver_serie
 and conten_acq.ti_contenuto_ver_serie = 'ACQUISITO')
left join ARO_UD_APPART_VER_SERIE ud_conten_acq_first
 on (ud_conten_acq_first.id_ud_appart_ver_serie = conten_acq.id_first_ud_appart_ver_serie)
left join ARO_UD_APPART_VER_SERIE ud_conten_acq_last
 on (ud_conten_acq_last.id_ud_appart_ver_serie = conten_acq.id_last_ud_appart_ver_serie)
left join SER_FILE_INPUT_VER_SERIE file_acq
 on (file_acq.id_ver_serie = ver_serie.id_ver_serie
 and file_acq.ti_scopo_file_input_ver_serie = 'ACQUISIRE_CONTENUTO')
left join IAM_USER user_file
 on (user_file.id_user_iam = file_acq.id_user_iam)

left join SER_CONTENUTO_VER_SERIE conten_eff
 on (conten_eff.id_ver_serie = ver_serie.id_ver_serie
 and conten_eff.ti_contenuto_ver_serie = 'EFFETTIVO')
left join ARO_UD_APPART_VER_SERIE ud_conten_eff_first
 on (ud_conten_eff_first.id_ud_appart_ver_serie = conten_eff.id_first_ud_appart_ver_serie)
left join ARO_UD_APPART_VER_SERIE ud_conten_eff_last
 on (ud_conten_eff_last.id_ud_appart_ver_serie = conten_eff.id_last_ud_appart_ver_serie)

left join SER_FILE_VER_SERIE file_ix_aip_unisincro
 on (file_ix_aip_unisincro.id_ver_serie = ver_serie.id_ver_serie
 and ti_file_ver_serie = 'IX_AIP_UNISINCRO');

-- changeset root:1751897635013-899
COMMENT ON COLUMN SER_V_VIS_SERIE_UD.ID_VER_SERIE IS 'PK.1';

-- changeset root:1751897635013-900
CREATE OR REPLACE FORCE VIEW "SER_V_VIS_SERIE_SINTETICO" ("ID_SERIE", "ID_STRUT", "CD_COMPOSITO_SERIE", "AA_SERIE", "DS_SERIE", "ID_TIPO_SERIE", "NM_TIPO_SERIE", "ID_VER_SERIE", "CD_VER_SERIE", "ID_STATO_VER_SERIE_COR", "TI_STATO_VER_SERIE_COR") AS select
 serie.id_serie, serie.id_strut, serie.cd_composito_serie, serie.aa_serie, serie.ds_serie, serie.id_tipo_serie,
 ti_serie.nm_tipo_serie,
 
 ver_serie.id_ver_serie, ver_serie.cd_ver_serie, 
 ver_serie.id_stato_ver_serie_cor,
 stato_ver_serie.ti_stato_ver_serie
 
from SER_VER_SERIE ver_serie

join SER_STATO_VER_SERIE stato_ver_serie
 on (stato_ver_serie.id_stato_ver_serie = ver_serie.id_stato_ver_serie_cor)
join SER_SERIE serie
 on (serie.id_serie = ver_serie.id_serie)
join DEC_TIPO_SERIE ti_serie
 on (ti_serie.id_tipo_serie = serie.id_tipo_serie);

-- changeset root:1751897635013-901
COMMENT ON COLUMN SER_V_VIS_SERIE_SINTETICO.ID_VER_SERIE IS 'PK.1';

-- changeset root:1751897635013-902
CREATE OR REPLACE FORCE VIEW "SER_V_VIS_CONSIST_SERIE_UD" ("ID_SERIE", "ID_STRUT", "CD_COMPOSITO_SERIE", "AA_SERIE", "DS_SERIE", "ID_TIPO_SERIE", "NM_STRUT", "ID_ENTE", "NM_ENTE", "ID_AMBIENTE", "NM_AMBIENTE", "NM_TIPO_SERIE", "ID_VER_SERIE", "CD_VER_SERIE", "ID_STATO_VER_SERIE_COR", "TI_STATO_VER_SERIE", "TI_STATO_SERIE", "ID_CONSIST_VER_SERIE", "CD_DOC_CONSIST_VER_SERIE", "DS_DOC_CONSIST_VER_SERIE", "NI_UNITA_DOC_ATTESE", "TI_MOD_CONSIST_FIRST_LAST", "CD_FIRST_UNITA_DOC_ATTESA", "CD_LAST_UNITA_DOC_ATTESA", "ID_USER_IAM_CONSIST", "NM_USERID_CONSIST", "DS_MSG_SERIE_DA_RIGENERA", "DT_COMUNIC_CONSIST_VER_SERIE", "CD_REGISTRO_FIRST", "AA_UNITA_DOC_FIRST", "CD_UNITA_DOC_FIRST", "CD_REGISTRO_LAST", "AA_UNITA_DOC_LAST", "CD_UNITA_DOC_LAST", "ID_LACUNA_MANCANTI", "DL_LACUNA_MANCANTI", "DL_NOTA_LACUNA_MANCANTI", "ID_LACUNA_NON_PRODOTTE", "DL_LACUNA_NON_PRODOTTE", "DL_NOTA_LACUNA_NON_PRODOTTE") AS select
 serie.id_serie, serie.id_strut, serie.cd_composito_serie, serie.aa_serie, serie.ds_serie, serie.id_tipo_serie,
 
 strut.nm_strut, ente.id_ente, ente.nm_ente, amb.id_ambiente, amb.nm_ambiente,
 
 ti_serie.nm_tipo_serie,
 
 ver_serie.id_ver_serie, ver_serie.cd_ver_serie, 
 ver_serie.id_stato_ver_serie_cor,
 stato_ver_serie.ti_stato_ver_serie, 
 
 stato_serie.ti_stato_serie,
 
 consist.id_consist_ver_serie, consist.cd_doc_consist_ver_serie, consist.ds_doc_consist_ver_serie, consist.ni_unita_doc_attese, 
 consist.ti_mod_consist_first_last,
 case
	when consist.id_consist_ver_serie is not null
    then
      case
        when consist.ti_mod_consist_first_last in ('CODICE', 'CHIAVE_UD') then cd_first_unita_doc_attesa else to_char(ni_first_unita_doc_attesa)
      end
    else null
 end cd_first_unita_doc_attesa,
 case
  when consist.id_consist_ver_serie is not null
    then
      case
        when consist.ti_mod_consist_first_last in ('CODICE', 'CHIAVE_UD') then cd_last_unita_doc_attesa else to_char(ni_last_unita_doc_attesa)
      end
    else null
 end cd_last_unita_doc_attesa,
 usr_consist.id_user_iam id_user_iam_consist, usr_consist.nm_userid nm_userid_consist,

 case
	when (select fl_ver_serie_da_rigenera
		  from SER_V_CHK_SERIE_UD_DA_RIGENERA chk
		  where chk.id_ver_serie = ver_serie.id_ver_serie) = '1'
			then
				case
					when (select fl_consist_da_ridef
						  from SER_V_CHK_SERIE_UD_DA_RIGENERA chk
						  where chk.id_ver_serie = ver_serie.id_ver_serie) = '1'
						then 'Il tipo della serie e'' stato modificato e, quindi, la serie deve essere nuovamente calcolata e/o acquisita e la consistenza deve essere ridefinita'
						else 'Il tipo della serie e'' stato modificato e, quindi, la serie deve essere nuovamente calcolata e/o acquisita'
				end
			else null
 end ds_msg_serie_da_rigenera,
 
 consist.dt_comunic_consist_ver_serie,
 consist.cd_registro_first, consist.aa_unita_doc_first, consist.cd_unita_doc_first,
 consist.cd_registro_last, consist.aa_unita_doc_last, consist.cd_unita_doc_last,
 case
	when (select count(*) 
		  from SER_LACUNA_CONSIST_VER_SERIE lacuna 
		  where lacuna.id_consist_ver_serie = consist.id_consist_ver_serie
		  and lacuna.ti_lacuna = 'MANCANTI'
		  and lacuna.ti_mod_lacuna = 'DESCRIZIONE') = 1
		then (select id_lacuna_consist_ver_serie
			  from SER_LACUNA_CONSIST_VER_SERIE lacuna 
			  where lacuna.id_consist_ver_serie = consist.id_consist_ver_serie
			  and lacuna.ti_lacuna = 'MANCANTI'
			  and lacuna.ti_mod_lacuna = 'DESCRIZIONE')
		else null
 end id_lacuna_mancanti,
 case
	when (select count(*) 
		  from SER_LACUNA_CONSIST_VER_SERIE lacuna 
		  where lacuna.id_consist_ver_serie = consist.id_consist_ver_serie
		  and lacuna.ti_lacuna = 'MANCANTI'
		  and lacuna.ti_mod_lacuna = 'DESCRIZIONE') = 1
		then (select dl_lacuna
			  from SER_LACUNA_CONSIST_VER_SERIE lacuna 
			  where lacuna.id_consist_ver_serie = consist.id_consist_ver_serie
			  and lacuna.ti_lacuna = 'MANCANTI'
			  and lacuna.ti_mod_lacuna = 'DESCRIZIONE')
		else null
 end dl_lacuna_mancanti,
case
	when (select count(*) 
		  from SER_LACUNA_CONSIST_VER_SERIE lacuna 
		  where lacuna.id_consist_ver_serie = consist.id_consist_ver_serie
		  and lacuna.ti_lacuna = 'MANCANTI'
		  and lacuna.ti_mod_lacuna = 'DESCRIZIONE') = 1
		then (select dl_nota_lacuna
			  from SER_LACUNA_CONSIST_VER_SERIE lacuna 
			  where lacuna.id_consist_ver_serie = consist.id_consist_ver_serie
			  and lacuna.ti_lacuna = 'MANCANTI'
			  and lacuna.ti_mod_lacuna = 'DESCRIZIONE')
		else null
 end dl_nota_lacuna_mancanti,
 
 case
	when (select count(*) 
		  from SER_LACUNA_CONSIST_VER_SERIE lacuna 
		  where lacuna.id_consist_ver_serie = consist.id_consist_ver_serie
		  and lacuna.ti_lacuna = 'NON_PRODOTTE'
		  and lacuna.ti_mod_lacuna = 'DESCRIZIONE') = 1
		then (select id_lacuna_consist_ver_serie
			  from SER_LACUNA_CONSIST_VER_SERIE lacuna 
			  where lacuna.id_consist_ver_serie = consist.id_consist_ver_serie
			  and lacuna.ti_lacuna = 'NON_PRODOTTE'
			  and lacuna.ti_mod_lacuna = 'DESCRIZIONE')
		else null
 end id_lacuna_non_prodotte,
 case
	when (select count(*) 
		  from SER_LACUNA_CONSIST_VER_SERIE lacuna 
		  where lacuna.id_consist_ver_serie = consist.id_consist_ver_serie
		  and lacuna.ti_lacuna = 'NON_PRODOTTE'
		  and lacuna.ti_mod_lacuna = 'DESCRIZIONE') = 1
		then (select dl_lacuna
			  from SER_LACUNA_CONSIST_VER_SERIE lacuna 
			  where lacuna.id_consist_ver_serie = consist.id_consist_ver_serie
			  and lacuna.ti_lacuna = 'NON_PRODOTTE'
			  and lacuna.ti_mod_lacuna = 'DESCRIZIONE')
		else null
 end dl_lacuna_non_prodotte,
case
	when (select count(*) 
		  from SER_LACUNA_CONSIST_VER_SERIE lacuna 
		  where lacuna.id_consist_ver_serie = consist.id_consist_ver_serie
		  and lacuna.ti_lacuna = 'NON_PRODOTTE'
		  and lacuna.ti_mod_lacuna = 'DESCRIZIONE') = 1
		then (select dl_nota_lacuna
			  from SER_LACUNA_CONSIST_VER_SERIE lacuna 
			  where lacuna.id_consist_ver_serie = consist.id_consist_ver_serie
			  and lacuna.ti_lacuna = 'NON_PRODOTTE'
			  and lacuna.ti_mod_lacuna = 'DESCRIZIONE')
		else null
 end dl_nota_lacuna_non_prodotte
 
from SER_CONSIST_VER_SERIE consist

join SER_VER_SERIE ver_serie
 on (ver_serie.id_ver_serie = consist.id_ver_serie)
join SER_STATO_VER_SERIE stato_ver_serie
 on (stato_ver_serie.id_stato_ver_serie = ver_serie.id_stato_ver_serie_cor)
join SER_SERIE serie
 on (serie.id_serie = ver_serie.id_serie)
join DEC_TIPO_SERIE ti_serie
 on (ti_serie.id_tipo_serie = serie.id_tipo_serie)

join ORG_STRUT strut
 on (strut.id_strut = serie.id_strut)
join ORG_ENTE ente
 on (ente.id_ente = strut.id_ente)
join ORG_AMBIENTE amb
 on (amb.id_ambiente = ente.id_ambiente)
 
left join SER_STATO_SERIE stato_serie
 on (stato_serie.id_stato_serie = serie.id_stato_serie_cor)

join IAM_USER usr_consist
 on (usr_consist.id_user_iam = consist.id_user_iam);

-- changeset root:1751897635013-903
COMMENT ON COLUMN SER_V_VIS_CONSIST_SERIE_UD.ID_CONSIST_VER_SERIE IS 'PK.1';

-- changeset root:1751897635013-904
CREATE OR REPLACE FORCE VIEW "DEC_V_CHK_MODIFICA_TIPO_SERIE" ("ID_TIPO_SERIE", "FL_MODIFICA_TIPO_SERIE") AS select
 tipo_serie.id_tipo_serie,
 case
	when (select nvl(count(*),0)
		  from SER_SERIE serie
		  join SER_VER_SERIE ver_serie
		   on (ver_serie.id_serie = serie.id_serie)
	 	  where serie.id_tipo_serie = tipo_serie.id_tipo_serie
		 ) = 
		 (select count (*)
		  from SER_SERIE serie
		  join SER_VER_SERIE ver_serie
		   on (ver_serie.id_serie = serie.id_serie)
		  join SER_STATO_VER_SERIE stato_ver
		   on (stato_ver.id_stato_ver_serie = ver_serie.id_stato_ver_serie_cor
		   and stato_ver.ti_stato_ver_serie in ('APERTA', 'DA_CONTROLLARE', 'CONTROLLATA', 'DA_VALIDARE', 'ANNULLATA'))
		  where serie.id_tipo_serie = tipo_serie.id_tipo_serie
		  and not exists (select *
						  from SER_CONTENUTO_VER_SERIE conten_ver
						  where conten_ver.id_ver_serie = ver_serie.id_ver_serie
						  and conten_ver.ti_stato_contenuto_ver_serie not in ('CREATO', 'DA_CONTROLLARE_CONSIST', 'CONTROLLATA_CONSIST')
						  )
		  ) +
		  (select nvl(count(*),0)
		  from SER_SERIE serie
		  join SER_VER_SERIE ver_serie
		   on (ver_serie.id_serie = serie.id_serie)
		  join SER_STATO_VER_SERIE stato_ver
		   on (stato_ver.id_stato_ver_serie = ver_serie.id_stato_ver_serie_cor
		   and stato_ver.ti_stato_ver_serie in ('APERTA', 'APERTURA_IN_CORSO'))
		  join SER_CONTENUTO_VER_SERIE conten_ver
		   on (conten_ver.id_ver_serie = ver_serie.id_ver_serie
		   and conten_ver.ti_contenuto_ver_serie = 'CALCOLATO'
		   and conten_ver.ti_stato_contenuto_ver_serie = 'CREAZIONE_IN_CORSO')
		   
		  where serie.id_tipo_serie = tipo_serie.id_tipo_serie
		  and exists (select *
						  from SER_V_JOB_CONTENUTO_BLOCCATO job_contenuto
						  where job_contenuto.id_contenuto_ver_serie = conten_ver.id_contenuto_ver_serie
						  and job_contenuto.nm_job = 'CALCOLO_SERIE'
						  and job_contenuto.fl_job_bloccato = '1'
					 )
		  ) +
		  (select nvl(count(*),0)
		  from SER_SERIE serie
		  join SER_VER_SERIE ver_serie
		   on (ver_serie.id_serie = serie.id_serie)
		  join SER_STATO_VER_SERIE stato_ver
		   on (stato_ver.id_stato_ver_serie = ver_serie.id_stato_ver_serie_cor
		   and stato_ver.ti_stato_ver_serie in ('APERTA', 'APERTURA_IN_CORSO'))
		  join SER_CONTENUTO_VER_SERIE conten_ver
		   on (conten_ver.id_ver_serie = ver_serie.id_ver_serie
		   and conten_ver.ti_contenuto_ver_serie  = 'ACQUISITO'
		   and conten_ver.ti_stato_contenuto_ver_serie = 'CREAZIONE_IN_CORSO')
		   
		  where serie.id_tipo_serie = tipo_serie.id_tipo_serie
		  and exists (select *
						  from SER_V_JOB_CONTENUTO_BLOCCATO job_contenuto
						  where job_contenuto.id_contenuto_ver_serie = conten_ver.id_contenuto_ver_serie
						  and job_contenuto.nm_job = 'INPUT_SERIE'
						  and job_contenuto.fl_job_bloccato = '1'
					 )
		  )

		then '1'
		else '0'
 end fl_modifica_tipo_serie

from DEC_TIPO_SERIE tipo_serie;

-- changeset root:1751897635013-905
COMMENT ON COLUMN DEC_V_CHK_MODIFICA_TIPO_SERIE.ID_TIPO_SERIE IS 'PK.1';

-- changeset root:1751897635013-906
CREATE OR REPLACE FORCE VIEW "ELV_V_CREA_LIS_FASC_ELENCO" ("ID_ELENCO_VERS_FASC", "ID_FASCICOLO", "DS_URN_FASCICOLO", "DS_URN_SIP_FASCICOLO", "DS_HASH_FASCICOLO", "DS_ALGO_HASH_FASCICOLO", "CD_ENCODING_HASH_FASCICOLO", "AA_FASCICOLO", "CD_KEY_FASCICOLO", "TS_INI_SES", "DT_APE_FASCICOLO", "DT_CHIU_FASCICOLO", "NM_TIPO_FASCICOLO", "DS_OGGETTO_FASCICOLO", "DS_URN_RAPP_VERS", "NI_UNITA_DOC") AS select 
fasc.id_elenco_vers_fasc,
fasc.id_fascicolo,

--		tag FascicoloVersato
 'urn:' ||
 (select ds_valore_param_applic || ':'
  from APL_V_GETVAL_PARAM_BY_APL
  where nm_param_applic = 'SISTEMA_CONSERVAZIONE'
  ) ||
 (select ente.nm_ente || ':' || strut.nm_strut
  from ORG_STRUT strut
  join ORG_ENTE ente
	on (ente.id_ente = strut.id_ente)
  where strut.id_strut = fasc.id_strut
  ) || ':' || 
 fasc.aa_fascicolo || '-' || fasc.cd_key_fascicolo  ds_urn_fascicolo,
 
 xml_rich.ds_urn_xml_vers ds_urn_sip_fascicolo, -- urn del sip del fascicolo
 xml_rich.ds_hash_xml_vers ds_hash_fascicolo,
 xml_rich.ds_algo_hash_xml_vers ds_algo_hash_fascicolo,
 xml_rich.cd_encoding_hash_xml_vers cd_encoding_hash_fascicolo,
 
 fasc.aa_fascicolo,
 fasc.cd_key_fascicolo,
 fasc.ts_ini_ses,
 fasc.dt_ape_fascicolo,
 fasc.dt_chiu_fascicolo,
 
 tipo_fasc.nm_tipo_fascicolo,
 fasc.ds_oggetto_fascicolo,
 xml_risp.ds_urn_xml_vers ds_urn_rapp_vers,
 fasc.ni_unita_doc

from FAS_FASCICOLO fasc
join FAS_XML_VERS_FASCICOLO xml_rich
	on (xml_rich.id_fascicolo = fasc.id_fascicolo
	and xml_rich.ti_xml_vers = 'RICHIESTA')
join FAS_XML_VERS_FASCICOLO xml_risp
	on (xml_risp.id_fascicolo = fasc.id_fascicolo
	and xml_risp.ti_xml_vers = 'RISPOSTA')
join DEC_TIPO_FASCICOLO tipo_fasc
	on (tipo_fasc.id_tipo_fascicolo = fasc.id_tipo_fascicolo);

-- changeset root:1751897635013-907
COMMENT ON COLUMN ELV_V_CREA_LIS_FASC_ELENCO.ID_FASCICOLO IS 'PK.1';

-- changeset root:1751897635013-908
CREATE OR REPLACE FORCE VIEW "SER_V_CHK_NOTA_OBBLIG" ("ID_VER_SERIE", "FL_OK_NOTE_OBBLIG") AS select
id_ver_serie,
case
	when exists (select *
				 from DEC_TIPO_NOTA_SERIE tipo_nota
				 where tipo_nota.fl_obblig = '1'
				 and not exists (select *
								 from SER_NOTA_VER_SERIE nota
								 where nota.id_ver_serie = ver_serie.id_ver_serie
								 and nota.id_tipo_nota_serie = tipo_nota.id_tipo_nota_serie))
		then '0'
        else '1'
end fl_ok_note_obblig
from SER_VER_SERIE ver_serie;

-- changeset root:1751897635013-909
COMMENT ON COLUMN SER_V_CHK_NOTA_OBBLIG.ID_VER_SERIE IS 'PK.1';

-- changeset root:1751897635013-910
CREATE OR REPLACE FORCE VIEW "SER_V_CHK_CONSERVAZIONE_UD" ("ID_VER_SERIE", "FL_OK_STATO_CONSERVAZIONE") AS select
ver_serie.id_ver_serie,
case
	when exists (select *
				 from ARO_UD_APPART_VER_SERIE app_ud, ARO_UNITA_DOC ud
				 where app_ud.id_contenuto_ver_serie = conten.id_contenuto_ver_serie
				 and ud.id_unita_doc = app_ud.id_unita_doc
				 and ud.ti_stato_conservazione not in ('AIP_GENERATO', 'VERSAMENTO_IN_ARCHIVIO', 'IN_ARCHIVIO', 'IN_CUSTODIA', 'IN_VOLUME_DI_CONSERVAZIONE', 'AIP_FIRMATO', 'ANNULLATA'))
		then '0'
        else '1'
end fl_ok_stato_conservazione
from SER_VER_SERIE ver_serie
join SER_CONTENUTO_VER_SERIE conten
 on (conten.id_ver_serie = ver_serie.id_ver_serie
 and conten.ti_contenuto_ver_serie = 'EFFETTIVO');

-- changeset root:1751897635013-911
COMMENT ON COLUMN SER_V_CHK_CONSERVAZIONE_UD.ID_VER_SERIE IS 'PK.1';

-- changeset root:1751897635013-912
CREATE OR REPLACE FORCE VIEW "SER_V_LIS_UD_APPART_SERIE" ("ID_UD_APPART_VER_SERIE", "ID_CONTENUTO_VER_SERIE", "ID_UNITA_DOC", "CD_UD_SERIE", "DT_UD_SERIE", "INFO_UD_SERIE", "DS_KEY_ORD_UD_SERIE", "PG_UD_SERIE", "ID_VOL_VER_SERIE", "CD_KEY_UNITA_DOC", "FL_UNITA_DOC_ANNUL", "FL_PRESENTE_CONTENUTO_1", "FL_PRESENTE_CONTENUTO_2", "FL_PRESENTE_ALTRA_SERIE", "TI_STATO_CONSERVAZIONE") AS select 
 ud_serie.id_ud_appart_ver_serie, 
 ud_serie.id_contenuto_ver_serie, 
 ud_serie.id_unita_doc,
case
	when (ud.dt_annul != to_date('31/12/2444', 'dd/mm/yyyy')or (ud.ti_stato_conservazione = 'ANNULLATA'))
		then '---'
		else ud_serie.cd_ud_serie
 end cd_ud_serie,  
 ud_serie.dt_ud_serie,
case
	when (ud.dt_annul != to_date('31/12/2444', 'dd/mm/yyyy')or (ud.ti_stato_conservazione = 'ANNULLATA'))
		then '---'
		else ud_serie.info_ud_serie
 end info_ud_serie,   

 ud_serie.ds_key_ord_ud_serie, ud_serie.pg_ud_serie, 
 ud_serie.id_vol_ver_serie,

 ud.cd_registro_key_unita_doc || '-' || ud.aa_key_unita_doc || '-' || ud.cd_key_unita_doc cd_key_unita_doc,
 case
	when ud.dt_annul != to_date('31/12/2444', 'dd/mm/yyyy')
		then '1'
		else '0'
 end fl_unita_doc_annul,

 case
	when conten.ti_contenuto_ver_serie = 'CALCOLATO'
		then
			case
				when conten_acq.id_contenuto_ver_serie is not null
					then 
						case
							when exists (select *
										 from ARO_UD_APPART_VER_SERIE ud_serie_acq
										 where ud_serie_acq.id_contenuto_ver_serie = conten_acq.id_contenuto_ver_serie
										 and ud_serie_acq.id_unita_doc = ud_serie.id_unita_doc)
								then '1' 
								else '0'
						end
					else null
			end

	when conten.ti_contenuto_ver_serie in ('ACQUISITO', 'EFFETTIVO')
		then
			case
				when conten_calc.id_contenuto_ver_serie is not null
					then 
						case
							when exists (select *
										 from ARO_UD_APPART_VER_SERIE ud_serie_calc
										 where ud_serie_calc.id_contenuto_ver_serie = conten_calc.id_contenuto_ver_serie
										 and ud_serie_calc.id_unita_doc = ud_serie.id_unita_doc)
								then '1' 
								else '0'
						end
					else null
			end
 end fl_presente_contenuto_1,

 case
	when conten.ti_contenuto_ver_serie in ('CALCOLATO', 'ACQUISITO')
		then
			case
				when conten_eff.id_contenuto_ver_serie is not null
					then 
						case
							when exists (select *
										 from ARO_UD_APPART_VER_SERIE ud_serie_eff
										 where ud_serie_eff.id_contenuto_ver_serie = conten_eff.id_contenuto_ver_serie
										 and ud_serie_eff.id_unita_doc = ud_serie.id_unita_doc)
								then '1' 
								else '0'
						end
					else null
			end

	when conten.ti_contenuto_ver_serie = 'EFFETTIVO'
		then
			case
				when conten_acq.id_contenuto_ver_serie is not null
					then 
						case
							when exists (select *
										 from ARO_UD_APPART_VER_SERIE ud_serie_acq
										 where ud_serie_acq.id_contenuto_ver_serie = conten_acq.id_contenuto_ver_serie
										 and ud_serie_acq.id_unita_doc = ud_serie.id_unita_doc)
								then '1' 
								else '0'
						end
					else null
			end
 end fl_presente_contenuto_2,

 case
	when exists (select *
				 from ARO_UD_APPART_VER_SERIE ud_altra_serie, SER_CONTENUTO_VER_SERIE conten_altra_serie, SER_VER_SERIE ver_altra_serie, SER_SERIE altra_serie
				 where ud_altra_serie.id_unita_doc = ud_serie.id_unita_doc
				 and conten_altra_serie.id_contenuto_ver_serie = ud_altra_serie.id_contenuto_ver_serie
				 and ver_altra_serie.id_ver_serie = conten_altra_serie.id_ver_serie
				 and altra_serie.id_serie = ver_altra_serie.id_serie

				 and altra_serie.id_serie != ver_serie.id_serie
				 and altra_serie.dt_annul = to_date('31/12/2444 00:00:00', 'dd/mm/yyyy hh24:mi:ss')
				 )
		then '1'
		else '0'
 end fl_presente_altra_serie,
 ud.ti_stato_conservazione

from ARO_UD_APPART_VER_SERIE ud_serie
join ARO_UNITA_DOC ud
 on (ud.id_unita_doc = ud_serie.id_unita_doc)
join SER_CONTENUTO_VER_SERIE conten
 on (conten.id_contenuto_ver_serie = ud_serie.id_contenuto_ver_serie)
join SER_VER_SERIE ver_serie
 on (ver_serie.id_ver_serie = conten.id_ver_serie)

left join SER_CONTENUTO_VER_SERIE conten_calc
 on (conten_calc.id_ver_serie = conten.id_ver_serie
 and conten_calc.ti_contenuto_ver_serie = 'CALCOLATO')

left join SER_CONTENUTO_VER_SERIE conten_acq
 on (conten_acq.id_ver_serie = conten.id_ver_serie
 and conten_acq.ti_contenuto_ver_serie = 'ACQUISITO')

left join SER_CONTENUTO_VER_SERIE conten_eff
 on (conten_eff.id_ver_serie = conten.id_ver_serie
 and conten_eff.ti_contenuto_ver_serie = 'EFFETTIVO');

-- changeset root:1751897635013-913
COMMENT ON COLUMN SER_V_LIS_UD_APPART_SERIE.ID_UD_APPART_VER_SERIE IS 'PK.1';

-- changeset root:1751897635013-914
CREATE OR REPLACE FORCE VIEW "SER_V_LIS_VERSER_BY_UPD_UD" ("ID_UNITA_DOC", "ID_VER_SERIE") AS select distinct
 ud_app_ver.id_unita_doc,
 ver_serie.id_ver_serie

from ARO_UD_APPART_VER_SERIE ud_app_ver
 
join SER_CONTENUTO_VER_SERIE conten_eff
 on (conten_eff.id_contenuto_ver_serie = ud_app_ver.id_contenuto_ver_serie
 and conten_eff.ti_contenuto_ver_serie = 'EFFETTIVO')
join SER_VER_SERIE ver_serie
 on (ver_serie.id_ver_serie = conten_eff.id_ver_serie)
join SER_STATO_VER_SERIE stato_ver_serie
 on (stato_ver_serie.id_stato_ver_serie = ver_serie.id_stato_ver_serie_cor)
 
where stato_ver_serie.ti_stato_ver_serie in ('CONTROLLATA', 'DA_FIRMARE', 'FIRMATA', 'IN_CUSTODIA', 'VALIDATA', 'VALIDAZIONE_IN_CORSO')
or (stato_ver_serie.ti_stato_ver_serie = 'DA_CONTROLLARE'
and conten_eff.ti_stato_contenuto_ver_serie = 'CONTROLLO_CONSIST_IN_CORSO');

-- changeset root:1751897635013-915
COMMENT ON COLUMN SER_V_LIS_VERSER_BY_UPD_UD.ID_UNITA_DOC IS 'PK.1';

-- changeset root:1751897635013-916
COMMENT ON COLUMN SER_V_LIS_VERSER_BY_UPD_UD.ID_VER_SERIE IS 'PK.1';

-- changeset root:1751897635013-917
CREATE OR REPLACE FORCE VIEW "SER_V_LIS_VER_SERIE_PREC" ("ID_VER_SERIE_INPUT", "ID_VER_SERIE", "PG_VER_SERIE", "CD_VER_SERIE", "DT_INIZIO_SEL_SERIE", "DT_FINE_SEL_SERIE", "DT_FIRMA_VER_SERIE", "NI_UNITA_DOC_EFF", "CD_FIRST_UNITA_DOC_EFF", "CD_LAST_UNITA_DOC_EFF") AS select
 ver_serie_cor.id_ver_serie id_ver_serie_input,
 
 ver_serie_prec.id_ver_serie, ver_serie_prec.pg_ver_serie, ver_serie_prec.cd_ver_serie, ver_serie_prec.dt_inizio_sel_serie, ver_serie_prec.dt_fine_sel_serie,
 stato_ver_serie_prec.dt_reg_stato_ver_serie dt_firma_ver_serie,
 
 conten_eff.ni_ud_contenuto_ver_serie ni_unita_doc_eff, ud_conten_eff_first.cd_ud_serie cd_first_unita_doc_eff, ud_conten_eff_last.cd_ud_serie cd_last_unita_doc_eff
 
from SER_VER_SERIE ver_serie_cor
join SER_VER_SERIE ver_serie_prec
 on (ver_serie_prec.id_serie = ver_serie_cor.id_serie
 and ver_serie_prec.pg_ver_serie < ver_serie_cor.pg_ver_serie)

join SER_STATO_VER_SERIE stato_ver_serie_prec
 on (stato_ver_serie_prec.id_ver_serie = ver_serie_prec.id_ver_serie
 and stato_ver_serie_prec.ti_stato_ver_serie = 'FIRMATA')

join SER_CONTENUTO_VER_SERIE conten_eff
 on (conten_eff.id_ver_serie = ver_serie_prec.id_ver_serie
 and conten_eff.ti_contenuto_ver_serie = 'EFFETTIVO')
join ARO_UD_APPART_VER_SERIE ud_conten_eff_first
 on (ud_conten_eff_first.id_ud_appart_ver_serie = conten_eff.id_first_ud_appart_ver_serie)
join ARO_UD_APPART_VER_SERIE ud_conten_eff_last
 on (ud_conten_eff_last.id_ud_appart_ver_serie = conten_eff.id_last_ud_appart_ver_serie);

-- changeset root:1751897635013-918
COMMENT ON COLUMN SER_V_LIS_VER_SERIE_PREC.ID_VER_SERIE IS 'PK.1';

-- changeset root:1751897635013-919
CREATE OR REPLACE FORCE VIEW "SER_V_UD_INIZIO_BUCO" ("ID_CONTENUTO_VER_SERIE", "PG_UD_SERIE") AS select
 ud_inizio_buco.id_contenuto_ver_serie,
 ud_inizio_buco.pg_ud_serie

from ARO_UD_APPART_VER_SERIE ud_inizio_buco
join SER_CONTENUTO_VER_SERIE conten
 on (conten.id_contenuto_ver_serie = ud_inizio_buco.id_contenuto_ver_serie)
where not exists (select *
				 from ARO_UD_APPART_VER_SERIE ud_suc
				 where ud_suc.id_contenuto_ver_serie = ud_inizio_buco.id_contenuto_ver_serie
				 and ud_suc.pg_ud_serie = ud_inizio_buco.pg_ud_serie + 1)
and ud_inizio_buco.pg_ud_serie is not null
and ud_inizio_buco.id_ud_appart_ver_serie != conten.id_last_ud_appart_ver_serie;

-- changeset root:1751897635013-920
CREATE OR REPLACE FORCE VIEW "SER_V_CREA_IX_AIP_SERIE_UD" ("ID_VER_SERIE", "NI_UNITA_DOC", "CD_FIRST_UNITA_DOC", "DT_FIRST_UNITA_DOC", "CD_LAST_UNITA_DOC", "DT_LAST_UNITA_DOC", "DS_NOTA_ACQ_INFO", "DT_NOTA_ACQ_INFO", "DS_AUTORE_ACQ_INFO", "DS_NOTA_AMB_CONTEN", "DT_NOTA_AMB_CONTEN", "DS_AUTORE_AMB_CONTEN", "DS_NOTA_CRIT_ORD", "DT_NOTA_CRIT_ORD", "DS_AUTORE_CRIT_ORD", "DS_NOTA_CONSERV", "DT_NOTA_CONSERV", "DS_AUTORE_CONSERV", "TI_SELEZIONE_UD", "AA_SELEZIONE_UD", "DT_INIZIO_SEL_SERIE", "DT_FINE_SEL_SERIE", "NI_PERIODO_SEL_SERIE", "TI_PERIODO_SEL_SERIE", "TI_CONSERV", "NI_ANNI_CONSERV", "DT_SCARTO") AS select
 ver_serie_cor.id_ver_serie,
 
 conten.ni_ud_contenuto_ver_serie ni_unita_doc, 
 ud_conten_first.cd_ud_serie cd_first_unita_doc, ud_conten_first.dt_ud_serie dt_first_unita_doc , 
 ud_conten_last.cd_ud_serie cd_last_unita_doc, ud_conten_last.dt_ud_serie dt_last_unita_doc ,
  
 nota_acq_info.ds_nota_ver_serie ds_nota_acq_info, 
 nota_acq_info.dt_nota_ver_serie dt_nota_acq_info , 
 nota_acq_info.nm_userid ds_autore_acq_info,

 nota_amb_conten.ds_nota_ver_serie ds_nota_amb_conten, 
 nota_amb_conten.dt_nota_ver_serie dt_nota_amb_conten, 
 nota_amb_conten.nm_userid ds_autore_amb_conten,
 
 nota_crit_ord.ds_nota_ver_serie ds_nota_crit_ord, 
 nota_crit_ord.dt_nota_ver_serie dt_nota_crit_ord, 
 nota_crit_ord.nm_userid ds_autore_crit_ord,
 
 nota_conserv.ds_nota_ver_serie ds_nota_conserv, 
 nota_conserv.dt_nota_ver_serie dt_nota_conserv, 
 nota_conserv.nm_userid ds_autore_conserv,

 case
	when dt_inizio_sel_serie is null
		then 'Annuale'
		else
			case
				when ni_periodo_sel_serie is not null
					then 'Infra_annuale'
					else 'Range_date'
			end
 end ti_selezione_ud,
 serie.aa_serie aa_selezione_ud,
 ver_serie_cor.dt_inizio_sel_serie, ver_serie_cor.dt_fine_sel_serie,
 ver_serie_cor.ni_periodo_sel_serie, ver_serie_cor.ti_periodo_sel_serie,
 
 case
	when serie.ni_anni_conserv != 9999
		then 'Serie a conservazione limitata'
		else 'Serie a conservazione illimitata'
 end ti_conserv,
 serie.ni_anni_conserv,
 case
	when serie.ni_anni_conserv != 9999
		then add_months ((select max (dt_ud_serie)
					     from ARO_UD_APPART_VER_SERIE ud_ver_serie
					     where ud_ver_serie.id_contenuto_ver_serie = conten.id_contenuto_ver_serie), serie.ni_anni_conserv * 12)
			  
		else null
 end dt_scarto

from SER_VER_SERIE ver_serie_cor

join SER_SERIE serie
 on (serie.id_serie = ver_serie_cor.id_serie)
 
join SER_CONTENUTO_VER_SERIE conten
 on (conten.id_ver_serie = ver_serie_cor.id_ver_serie
 and conten.ti_contenuto_ver_serie = 'EFFETTIVO')
join ARO_UD_APPART_VER_SERIE ud_conten_first
 on (ud_conten_first.id_ud_appart_ver_serie = conten.id_first_ud_appart_ver_serie)
join ARO_UD_APPART_VER_SERIE ud_conten_last
 on (ud_conten_last.id_ud_appart_ver_serie = conten.id_last_ud_appart_ver_serie)

left join SER_V_LIS_NOTA_SERIE nota_acq_info
 on (nota_acq_info.id_ver_serie = ver_serie_cor.id_ver_serie
 and nota_acq_info.cd_tipo_nota_serie = 'ACQUISIZIONE_INFO')

left join SER_V_LIS_NOTA_SERIE nota_amb_conten
 on (nota_amb_conten.id_ver_serie = ver_serie_cor.id_ver_serie
 and nota_amb_conten.cd_tipo_nota_serie = 'AMBITI_CONTENUTO')

left join SER_V_LIS_NOTA_SERIE nota_crit_ord
 on (nota_crit_ord.id_ver_serie = ver_serie_cor.id_ver_serie
 and nota_crit_ord.cd_tipo_nota_serie = 'CRITERI_ORDINAMENTO')

left join SER_V_LIS_NOTA_SERIE nota_conserv
 on (nota_conserv.id_ver_serie = ver_serie_cor.id_ver_serie
 and nota_conserv.cd_tipo_nota_serie = 'NOTE_CONSERVAZIONE');

-- changeset root:1751897635013-921
COMMENT ON COLUMN SER_V_CREA_IX_AIP_SERIE_UD.ID_VER_SERIE IS 'PK.1';

-- changeset root:1751897635013-922
CREATE OR REPLACE FORCE VIEW "SER_V_LIS_SER_DA_VALIDARE" ("ID_USER_IAM", "ID_VER_SERIE", "ID_SERIE", "ID_STRUT", "NM_STRUT", "ID_ENTE", "NM_ENTE", "ID_AMBIENTE", "NM_AMBIENTE", "CD_COMPOSITO_SERIE", "AA_SERIE", "DS_SERIE", "NM_TIPO_SERIE", "CD_VER_SERIE", "DT_INIZIO_SEL_SERIE", "DT_FINE_SEL_SERIE", "FL_ERR_CONTENUTO_EFF", "ID_CONTENUTO_VER_SERIE") AS select
 abil_org.id_user_iam,
 ver_serie_da_elab.id_ver_serie,
 ver_serie.id_serie,
 ver_serie_da_elab.id_strut,
 strut.nm_strut,
 ente.id_ente,
 ente.nm_ente,
 amb.id_ambiente,
 amb.nm_ambiente,
 
 serie.cd_composito_serie, serie.aa_serie, serie.ds_serie,
 ti_serie.nm_tipo_serie,
 
 ver_serie.cd_ver_serie, ver_serie.dt_inizio_sel_serie, ver_serie.dt_fine_sel_serie,

 case
	when exists (select * 
				from SER_ERR_CONTENUTO_VER_SERIE err_conten_eff 
				where err_conten_eff.id_contenuto_ver_serie = conten_eff.id_contenuto_ver_serie)
		then '1'
		else '0'
 end fl_err_contenuto_eff,
 conten_eff.id_contenuto_ver_serie

from SER_VER_SERIE_DA_ELAB ver_serie_da_elab

join ORG_STRUT strut
 on (strut.id_strut = ver_serie_da_elab.id_strut and strut.fl_cessato = 0)
join ORG_ENTE ente
 on (ente.id_ente = strut.id_ente and ente.fl_cessato = 0)
join ORG_AMBIENTE amb 
 on (amb.id_ambiente = ente.id_ambiente)
 
join IAM_ABIL_ORGANIZ abil_org 
 on (abil_org.id_organiz_applic = ver_serie_da_elab.id_strut)

join SER_VER_SERIE ver_serie
 on (ver_serie.id_ver_serie = ver_serie_da_elab.id_ver_serie)
join SER_SERIE serie
 on (serie.id_serie = ver_serie.id_serie)
join DEC_TIPO_SERIE ti_serie
 on (ti_serie.id_tipo_serie = serie.id_tipo_serie)
 
join SER_CONTENUTO_VER_SERIE conten_eff
 on (conten_eff.id_ver_serie = ver_serie.id_ver_serie
 and conten_eff.ti_contenuto_ver_serie = 'EFFETTIVO')

where ver_serie_da_elab.ti_stato_ver_serie = 'DA_VALIDARE'
and not exists (select *
				from SER_V_CHK_NOTA_OBBLIG nota_obblig
				where nota_obblig.id_ver_serie = ver_serie_da_elab.id_ver_serie
				and nota_obblig.fl_ok_note_obblig = '0')
and not exists (select *
				from SER_V_CHK_CONSERVAZIONE_UD conserv
				where conserv.id_ver_serie = ver_serie_da_elab.id_ver_serie
				and conserv.fl_ok_stato_conservazione = '0')
and not exists (select *
				from SER_V_CHK_SERIE_UD_DA_RIGENERA da_rigenera
				where da_rigenera.id_ver_serie = ver_serie_da_elab.id_ver_serie
				and da_rigenera.fl_ver_serie_da_rigenera = '1')
and not exists (select *
				from SER_ERR_CONTENUTO_VER_SERIE err_conten_eff
				where err_conten_eff.id_contenuto_ver_serie = conten_eff.id_contenuto_ver_serie
				and err_conten_eff.ti_origine_err = 'VALIDAZIONE');

-- changeset root:1751897635013-923
COMMENT ON COLUMN SER_V_LIS_SER_DA_VALIDARE.ID_USER_IAM IS 'PK.1';

-- changeset root:1751897635013-924
COMMENT ON COLUMN SER_V_LIS_SER_DA_VALIDARE.ID_VER_SERIE IS 'PK.2';

-- changeset root:1751897635013-925
CREATE OR REPLACE FORCE VIEW "SER_V_CHK_DEF_UD_NOVERS" ("ID_VER_SERIE", "ID_SERIE", "FL_DEF_UD_NON_VERS") AS select 
 ver_serie.id_ver_serie,
 ver_serie.id_serie,
 case
	when exists (select *
				 from DEC_V_TISER_CHK_UD_NOVERS chk_ti_serie
				 where chk_ti_serie.id_tipo_serie = serie.id_tipo_serie
			     and chk_ti_serie.fl_def_ud_non_vers = '0')
		then '0'
		else '1'
 end fl_def_ud_non_vers
 
from SER_VER_SERIE ver_serie
join SER_SERIE serie
 on (serie.id_serie = ver_serie.id_serie);

-- changeset root:1751897635013-926
COMMENT ON COLUMN SER_V_CHK_DEF_UD_NOVERS.ID_VER_SERIE IS 'PK.1';

-- changeset root:1751897635013-927
CREATE OR REPLACE FORCE VIEW "SER_V_CHK_DEF_UD_NOVERS_BUCO" ("ID_VER_SERIE", "ID_SERIE", "FL_DEF_UD_NON_VERS") AS select 
 ver_serie.id_ver_serie,
 ver_serie.id_serie,
 case
	when exists (select *
				 from DEC_V_TISER_CHK_UD_NOVERS_BUCO chk_ti_serie
				 where chk_ti_serie.id_tipo_serie = serie.id_tipo_serie
			     and chk_ti_serie.fl_def_ud_non_vers = '0')
		then '0'
		else '1'
 end fl_def_ud_non_vers
 
from SER_VER_SERIE ver_serie
join SER_SERIE serie
 on (serie.id_serie = ver_serie.id_serie);

-- changeset root:1751897635013-928
COMMENT ON COLUMN SER_V_CHK_DEF_UD_NOVERS_BUCO.ID_VER_SERIE IS 'PK.1';

-- changeset root:1751897635013-929
CREATE OR REPLACE FORCE VIEW "SER_V_LIS_UD_ERR_FILE_INPUT" ("ID_UD_ERR_FILE_INPUT", "ID_ERR_FILE_INPUT", "ID_UNITA_DOC", "CD_UD_SERIE", "DT_UD_SERIE", "INFO_UD_SERIE", "DS_KEY_ORD_UD_SERIE", "PG_UD_SERIE", "CD_KEY_UNITA_DOC", "FL_UNITA_DOC_ANNUL") AS select
 ud_err.id_ud_err_file_input, 
 ud_err.id_err_file_input, 
 ud_err.id_unita_doc, 
 ud_err.cd_ud_serie, 
 ud_err.dt_ud_serie, 
 ud_err.info_ud_serie, 
 ud_err.ds_key_ord_ud_serie, 
 ud_err.pg_ud_serie,
 
 ud.cd_registro_key_unita_doc || '-' || ud.aa_key_unita_doc || '-' || ud.cd_key_unita_doc cd_key_unita_doc,
 case
	when ud.dt_annul != to_date('31/12/2444', 'dd/mm/yyyy')
		then '1'
		else '0'
 end fl_unita_doc_annul 

from SER_UD_ERR_FILE_INPUT ud_err
join ARO_UNITA_DOC ud
 on (ud_err.id_unita_doc = ud.id_unita_doc);

-- changeset root:1751897635013-930
COMMENT ON COLUMN SER_V_LIS_UD_ERR_FILE_INPUT.ID_UD_ERR_FILE_INPUT IS 'PK.1';

-- changeset root:1751897635013-931
CREATE OR REPLACE FORCE VIEW "ARO_V_RIC_DATI_SPEC_MIGRAZ" ("ID_UNITA_DOC", "ID_DOC", "ID_COMP_DOC", "NM_SISTEMA_MIGRAZ", "TI_ENTITA_SACER", "ID_VALORE_ATTRIB_DATI_SPEC", "ID_ATTRIB_DATI_SPEC", "DL_VALORE") AS select
-- info uso xsd
 uso_xsd.id_unita_doc,
 uso_xsd.id_doc,
 uso_xsd.id_comp_doc,
 xsd_spec.nm_sistema_migraz,
 xsd_spec.ti_entita_sacer,
 
-- info valore dato specifico
 val.id_valore_attrib_dati_spec,
 val.id_attrib_dati_spec,
 upper(val.dl_valore)

from ARO_USO_XSD_DATI_SPEC uso_xsd

join DEC_XSD_DATI_SPEC xsd_spec
 on (xsd_spec.id_xsd_dati_spec = uso_xsd.id_xsd_dati_spec)

join ARO_VALORE_ATTRIB_DATI_SPEC val
 on (val.id_uso_xsd_dati_spec = uso_xsd.id_uso_xsd_dati_spec)
where uso_xsd.ti_uso_xsd = 'MIGRAZ';

-- changeset root:1751897635013-932
CREATE OR REPLACE FORCE VIEW "ELV_V_SEL_UD_DOC_UPD_BY_CRIT" ("ID_CRITERIO_RAGGR", "TI_ELE", "ID_STRUT", "AA_KEY_UNITA_DOC", "DT_CREAZIONE", "ID_UNITA_DOC", "ID_DOC", "ID_UPD_UNITA_DOC") AS select distinct
 crit.id_criterio_raggr, 
 da_elab.ti_ele, da_elab.id_strut, da_elab.aa_key_unita_doc, da_elab.dt_creazione, da_elab.id_unita_doc, da_elab.id_doc, da_elab.id_upd_unita_doc
from DEC_CRITERIO_RAGGR crit
join ELV_V_SEL_UD_DOC_UPD_DA_ELAB da_elab
on (da_elab.id_strut = crit.id_strut)

where
--					filtro sul tipo unita doc
((crit.fl_filtro_tipo_unita_doc = '1'
 and exists (select *
			from DEC_CRITERIO_FILTRO_MULTIPLO mult
			where mult.id_criterio_raggr = crit.id_criterio_raggr
			and mult.ti_filtro_multiplo = 'TIPO_UNI_DOC'
			and mult.id_tipo_unita_doc = da_elab.id_tipo_unita_doc))
 or crit.fl_filtro_tipo_unita_doc = '0')

--					filtro su registro chiave
and
((crit.fl_filtro_registro_key = '1'
 and exists (select *
			from DEC_CRITERIO_FILTRO_MULTIPLO mult
			where mult.id_criterio_raggr = crit.id_criterio_raggr
			and mult.ti_filtro_multiplo = 'REGISTRO_UNI_DOC'
			and mult.id_registro_unita_doc = da_elab.id_registro_unita_doc))
 or crit.fl_filtro_registro_key = '0')
 

--					filtro su numero chiave
and
((crit.cd_key_unita_doc is not null
  and crit.cd_key_unita_doc = da_elab.cd_key_unita_doc)
  or crit.cd_key_unita_doc is null)

--					filtro su range registro chiave
and
((crit.fl_filtro_range_registro_key = '1'
 and exists (select *
			from DEC_CRITERIO_FILTRO_MULTIPLO mult
			where mult.id_criterio_raggr = crit.id_criterio_raggr
			and mult.ti_filtro_multiplo = 'RANGE_REGISTRO_UNI_DOC'
			and mult.id_registro_range_unita_doc = da_elab.id_registro_unita_doc))
 or crit.fl_filtro_range_registro_key = '0')
 
 
--					filtro su range numero chiave
and
((crit.cd_key_unita_doc_da is not null and crit.cd_key_unita_doc_a is not null
 and lpad(crit.cd_key_unita_doc_da, 12, '0') <= lpad(da_elab.cd_key_unita_doc, 12, '0') and lpad(crit.cd_key_unita_doc_a, 12, '0') >= lpad(da_elab.cd_key_unita_doc, 12, '0'))
 or
 (crit.cd_key_unita_doc_da is not null and crit.cd_key_unita_doc_a is null
 and lpad(crit.cd_key_unita_doc_da, 12, '0') <= lpad(da_elab.cd_key_unita_doc, 12, '0') and 'zzzzzzzzzzzz' >= lpad(da_elab.cd_key_unita_doc, 12, '0'))
 or
 (crit.cd_key_unita_doc_da is null and crit.cd_key_unita_doc_a is not null
 and '000000000000' <= lpad(da_elab.cd_key_unita_doc, 12, '0') and lpad(crit.cd_key_unita_doc_a, 12, '0') >= lpad(da_elab.cd_key_unita_doc, 12, '0'))
 or 
 (crit.cd_key_unita_doc_da is null and crit.cd_key_unita_doc_a is null))
 
 
--					filtro su firmato
and
((crit.fl_unita_doc_firmato is not null 
 and crit.fl_unita_doc_firmato = da_elab.fl_unita_doc_firmato)
 or crit.fl_unita_doc_firmato is null)

--					filtro su esito verifica firme
and
((crit.fl_filtro_ti_esito_verif_firme = '1'
 and exists (select *
			from DEC_CRITERIO_FILTRO_MULTIPLO mult
			where mult.id_criterio_raggr = crit.id_criterio_raggr
			and mult.ti_filtro_multiplo = 'TIPO_ESITO_VERIF_FIRME'
			and mult.ti_esito_verif_firme = da_elab.ti_esito_verif_firme))
 or crit.fl_filtro_ti_esito_verif_firme = '0')
 
--					filtro su data creazione
and
((crit.dt_creazione_unita_doc_da is not null and crit.dt_creazione_unita_doc_a is not null
 and to_char(crit.dt_creazione_unita_doc_a, 'hh24:mi:ss') != '00:00:00'
 and da_elab.dt_creazione between crit.dt_creazione_unita_doc_da and crit.dt_creazione_unita_doc_a)
 or
 (crit.dt_creazione_unita_doc_da is not null and crit.dt_creazione_unita_doc_a is not null
 and to_char(crit.dt_creazione_unita_doc_a, 'hh24:mi:ss') = '00:00:00' 
 and crit.dt_creazione_unita_doc_da <= da_elab.dt_creazione
 and to_date(to_char(crit.dt_creazione_unita_doc_a, 'yyyy/mm/dd') || '23:59:59', 'yyyy/mm/dd hh24:mi:ss') >= da_elab.dt_creazione)
 or
 (crit.dt_creazione_unita_doc_da is not null and crit.dt_creazione_unita_doc_a is null
 and crit.dt_creazione_unita_doc_da <= da_elab.dt_creazione
 and sysdate >= da_elab.dt_creazione)
  or
 (crit.dt_creazione_unita_doc_da is null and crit.dt_creazione_unita_doc_a is not null
 and to_char(crit.dt_creazione_unita_doc_a, 'hh24:mi:ss') != '00:00:00'
 and to_date('2000/01/01', 'yyyy/dd/mm') <= da_elab.dt_creazione
 and crit.dt_creazione_unita_doc_a >= da_elab.dt_creazione)
 or
 (crit.dt_creazione_unita_doc_da is null and crit.dt_creazione_unita_doc_a is not null
 and to_char(crit.dt_creazione_unita_doc_a, 'hh24:mi:ss') = '00:00:00'
 and to_date('2000/01/01', 'yyyy/dd/mm') <= da_elab.dt_creazione
 and to_date(to_char(crit.dt_creazione_unita_doc_a, 'yyyy/mm/dd') || '23:59:59', 'yyyy/mm/dd hh24:mi:ss') >= da_elab.dt_creazione)
 or
 (crit.dt_creazione_unita_doc_da is null and crit.dt_creazione_unita_doc_a is null))

--					filtro su tipo conservazione
and
((crit.ti_conservazione is not null  
 and crit.ti_conservazione = da_elab.ti_conservazione)
 or crit.ti_conservazione is null)

--					filtro su sistema di migrazione
and
((crit.fl_filtro_sistema_migraz = '1'
 and exists (select *
			from DEC_CRITERIO_FILTRO_MULTIPLO mult
			where mult.id_criterio_raggr = crit.id_criterio_raggr
			and mult.ti_filtro_multiplo = 'SISTEMA_MIGRAZ'
			and mult.nm_sistema_migraz = da_elab.nm_sistema_migraz))
 or crit.fl_filtro_sistema_migraz = '0')
 
 
--					filtro su forza accettazione
and
((crit.fl_forza_accettazione is not null  
 and crit.fl_forza_accettazione = da_elab.fl_forza_accettazione)
 or crit.fl_forza_accettazione is null)

--					filtro su forza conservazione
and
((crit.fl_forza_conservazione is not null
 and crit.fl_forza_conservazione = da_elab.fl_forza_conservazione)
 or crit.fl_forza_conservazione is null)
 
--					filtro su oggetto unità doc
and
((crit.dl_oggetto_unita_doc is not null
 and da_elab.dl_oggetto_unita_doc like '%' || crit.dl_oggetto_unita_doc || '%')
 or crit.dl_oggetto_unita_doc is null)

--					filtro su data registrazione unita doc
and
((crit.dt_reg_unita_doc_da is not null and crit.dt_reg_unita_doc_a is not null
 and da_elab.dt_reg_unita_doc between crit.dt_reg_unita_doc_da and crit.dt_reg_unita_doc_a)
 or (crit.dt_reg_unita_doc_da is null and crit.dt_reg_unita_doc_a is null))

--					filtro su tipo documento
and
((crit.fl_filtro_tipo_doc = '1'
 and exists (select *
			from DEC_CRITERIO_FILTRO_MULTIPLO mult
			where mult.id_criterio_raggr = crit.id_criterio_raggr
			and mult.ti_filtro_multiplo = 'TIPO_DOC'
			and mult.id_tipo_doc = da_elab.id_tipo_doc))
 or crit.fl_filtro_tipo_doc = '0') 
 
--					filtro su descrizione doc
and
((crit.dl_doc is not null
 and da_elab.dl_doc like '%' || crit.dl_doc || '%')
 or crit.dl_doc is null)
 
--					filtro su autore doc
and
((crit.ds_autore_doc is not null
 and da_elab.ds_autore_doc like '%' || crit.ds_autore_doc || '%')
 or crit.ds_autore_doc is null);

-- changeset root:1751897635013-933
COMMENT ON COLUMN ELV_V_SEL_UD_DOC_UPD_BY_CRIT.ID_CRITERIO_RAGGR IS 'PK.1';

-- changeset root:1751897635013-934
COMMENT ON COLUMN ELV_V_SEL_UD_DOC_UPD_BY_CRIT.ID_UNITA_DOC IS 'PK.2';

-- changeset root:1751897635013-935
COMMENT ON COLUMN ELV_V_SEL_UD_DOC_UPD_BY_CRIT.ID_DOC IS 'PK.3';

-- changeset root:1751897635013-936
COMMENT ON COLUMN ELV_V_SEL_UD_DOC_UPD_BY_CRIT.ID_UPD_UNITA_DOC IS 'PK.4';

-- changeset root:1751897635013-937
CREATE OR REPLACE FORCE VIEW "SER_V_LIS_VOL_SERIE_UD" ("ID_VOL_VER_SERIE", "ID_VER_SERIE", "PG_VOL_VER_SERIE", "NI_UNITA_DOC_VOL", "CD_FIRST_UNITA_DOC_VOL", "DT_FIRST_UNITA_DOC_VOL", "CD_LAST_UNITA_DOC_VOL", "DT_LAST_UNITA_DOC_VOL") AS select
 vol_serie.id_vol_ver_serie, vol_serie.id_ver_serie, 
 vol_serie.pg_vol_ver_serie, 
 vol_serie.ni_unita_doc_vol,
 
 ud_vol_first.cd_ud_serie cd_first_unita_doc_vol, ud_vol_first.dt_ud_serie dt_first_unita_doc_vol,
 
 ud_vol_last.cd_ud_serie cd_last_unita_doc_vol, ud_vol_last.dt_ud_serie dt_last_unita_doc_vol

from SER_VOL_VER_SERIE vol_serie

left join ARO_UD_APPART_VER_SERIE ud_vol_first
 on (ud_vol_first.id_ud_appart_ver_serie = vol_serie.id_first_ud_appart_vol)
left join ARO_UD_APPART_VER_SERIE ud_vol_last
 on (ud_vol_last.id_ud_appart_ver_serie = vol_serie.id_last_ud_appart_vol);

-- changeset root:1751897635013-938
COMMENT ON COLUMN SER_V_LIS_VOL_SERIE_UD.ID_VOL_VER_SERIE IS 'PK.1';

-- changeset root:1751897635013-939
CREATE OR REPLACE FORCE VIEW "SER_V_LIS_ERR_CONTEN_SERIE_UD" ("ID_ERR_CONTENUTO_VER_SERIE", "ID_CONTENUTO_VER_SERIE", "PG_ERR", "TI_GRAVITA_ERR", "TI_ERR", "DL_ERR", "TI_ORIGINE_ERR") AS select
 err.id_err_contenuto_ver_serie, 
 err.id_contenuto_ver_serie, 
 err.pg_err, 
 err.ti_gravita_err, 
 err.ti_err, 
 err.dl_err,
 ti_origine_err
from SER_ERR_CONTENUTO_VER_SERIE err;

-- changeset root:1751897635013-940
COMMENT ON COLUMN SER_V_LIS_ERR_CONTEN_SERIE_UD.ID_ERR_CONTENUTO_VER_SERIE IS 'PK.1';

-- changeset root:1751897635013-941
CREATE OR REPLACE FORCE VIEW "MON_V_RIC_CONTA_UD_DOC_COMP" ("ID_CONTA_UD_DOC_COMP", "DT_RIF_CONTA", "ID_STRUT", "ID_SUB_STRUT", "AA_KEY_UNITA_DOC", "ID_REGISTRO_UNITA_DOC", "ID_TIPO_UNITA_DOC", "ID_TIPO_DOC_PRINC", "NI_UNITA_DOC_VERS", "NI_DOC_VERS", "NI_COMP_VERS", "NI_SIZE_VERS", "NI_DOC_AGG", "NI_COMP_AGG", "NI_SIZE_AGG", "NI_UNITA_DOC_ANNUL", "NI_DOC_ANNUL_UD", "NI_COMP_ANNUL_UD", "NI_SIZE_ANNUL_UD") AS SELECT "ID_CONTA_UD_DOC_COMP",
           "DT_RIF_CONTA",
           "ID_STRUT",
           "ID_SUB_STRUT",
           "AA_KEY_UNITA_DOC",
           "ID_REGISTRO_UNITA_DOC",
           "ID_TIPO_UNITA_DOC",
           "ID_TIPO_DOC_PRINC",
           "NI_UNITA_DOC_VERS",
           "NI_DOC_VERS",
           "NI_COMP_VERS",
           "NI_SIZE_VERS",
           "NI_DOC_AGG",
           "NI_COMP_AGG",
           "NI_SIZE_AGG",
           "NI_UNITA_DOC_ANNUL",
           "NI_DOC_ANNUL_UD",
           "NI_COMP_ANNUL_UD",
           "NI_SIZE_ANNUL_UD"
      FROM mon_conta_ud_doc_comp_read_only
    UNION ALL
    SELECT "ID_CONTA_UD_DOC_COMP",
           "DT_RIF_CONTA",
           "ID_STRUT",
           "ID_SUB_STRUT",
           "AA_KEY_UNITA_DOC",
           "ID_REGISTRO_UNITA_DOC",
           "ID_TIPO_UNITA_DOC",
           "ID_TIPO_DOC_PRINC",
           "NI_UNITA_DOC_VERS",
           "NI_DOC_VERS",
           "NI_COMP_VERS",
           "NI_SIZE_VERS",
           "NI_DOC_AGG",
           "NI_COMP_AGG",
           "NI_SIZE_AGG",
           "NI_UNITA_DOC_ANNUL",
           "NI_DOC_ANNUL_UD",
           "NI_COMP_ANNUL_UD",
           "NI_SIZE_ANNUL_UD"
      FROM mon_conta_ud_doc_comp;

-- changeset root:1751897635013-942
CREATE OR REPLACE FORCE VIEW "MON_V_LIS_REGISTRO_DT_VERS" ("ID_REGISTRO_UNITA_DOC", "DT_EROG", "DT_LAST_EROG") AS SELECT tot_registro.id_registro_unita_doc,
             MIN (tot_registro.dt_rif_conta)     dt_erog,
             MAX (tot_registro.dt_rif_conta)     dt_last_erog
        FROM sacer.MON_CONTA_UD_DOC_COMP tot_registro
    GROUP BY tot_registro.id_registro_unita_doc;

-- changeset root:1751897635013-943
COMMENT ON COLUMN MON_V_LIS_REGISTRO_DT_VERS.ID_REGISTRO_UNITA_DOC IS 'PK.1';

-- changeset root:1751897635013-944
CREATE OR REPLACE FORCE VIEW "ELV_V_LIS_UD_MODIF_ELENCO" ("ID_ELENCO_VERS", "ID_UNITA_DOC", "DS_URN_UNITA_DOC", "DT_VERS_MIN", "CD_KEY_UNITA_DOC_NORMALIZ") AS select
 tmp.id_elenco_vers,
 tmp.id_unita_doc,

 'urn:' || 
 tmp.ds_sistema_conserv || ':' ||
 ente.nm_ente || ':' || strut.nm_strut || ':' ||
 ud.cd_registro_key_unita_doc || '-' || ud.aa_key_unita_doc || '-' || ud.cd_key_unita_doc ds_urn_unita_doc,
 
 min (dt_vers),
 cd_key_unita_doc_normaliz

from (	select
		 ele.id_elenco_vers,
		 doc.id_unita_doc,
		 doc.dt_creazione dt_vers,
		 (select ds_valore_param_applic
		  from APL_V_GETVAL_PARAM_BY_APL
		  where nm_param_applic = 'SISTEMA_CONSERVAZIONE'
		  ) ds_sistema_conserv
		from ELV_ELENCO_VERS ele
		join ARO_DOC doc
			on (doc.id_elenco_vers = ele.id_elenco_vers)
			
		UNION

		select
		 ele.id_elenco_vers,
		 upd_ud.id_unita_doc,
		 upd_ud.ts_ini_ses dt_vers,
 		 (select ds_valore_param_applic
		  from APL_V_GETVAL_PARAM_BY_APL
		  where nm_param_applic = 'SISTEMA_CONSERVAZIONE'
		  ) ds_sistema_conserv

		from ELV_ELENCO_VERS ele
		join ARO_UPD_UNITA_DOC upd_ud
			on (upd_ud.id_elenco_vers = ele.id_elenco_vers)
	) tmp
join ARO_UNITA_DOC ud
	on (ud.id_unita_doc = tmp.id_unita_doc)
join ORG_STRUT strut
	on (strut.id_strut = ud.id_strut)
join ORG_ENTE ente
	on (ente.id_ente = strut.id_ente)
		
group by tmp.id_elenco_vers, tmp.id_unita_doc,

		 'urn:' || 
		 tmp.ds_sistema_conserv || ':' ||
		 ente.nm_ente || ':' || strut.nm_strut || ':' ||
		 ud.cd_registro_key_unita_doc || '-' || ud.aa_key_unita_doc || '-' || ud.cd_key_unita_doc,
		 
		 cd_key_unita_doc_normaliz;

-- changeset root:1751897635013-945
COMMENT ON COLUMN ELV_V_LIS_UD_MODIF_ELENCO.ID_ELENCO_VERS IS 'PK.1';

-- changeset root:1751897635013-946
COMMENT ON COLUMN ELV_V_LIS_UD_MODIF_ELENCO.ID_UNITA_DOC IS 'PK.2';

-- changeset root:1751897635013-947
CREATE OR REPLACE FORCE VIEW "ELV_V_CHK_ADD_UPD_DOC_NO_ELE_COR" ("ID_UPD_UNITA_DOC_COR", "ID_UPD_DOC_UNITA_DOC", "FL_ADD_UPD_DOC_OK") AS SELECT upd_cor.id_upd_unita_doc    id_upd_unita_doc_cor,
           upd_doc.id_upd_doc_unita_doc,
           CASE
               WHEN doc.id_elenco_vers IS NOT NULL
                AND ele_doc.ti_stato_elenco IN
                        ('INDICI_AIP_GENERATI',
                         'ELENCO_INDICI_AIP_CREATO',
                         'ELENCO_INDICI_AIP_FIRMATO',
                         'ELENCO_INDICI_AIP_ERR_MARCA',
                         'COMPLETATO') THEN
                   '1'
               ELSE
                   '0'
           END                         fl_add_upd_doc_ok
      FROM ARO_UPD_UNITA_DOC  upd_cor
           JOIN ARO_UPD_DOC_UNITA_DOC upd_doc
               ON (upd_doc.id_upd_unita_doc = upd_cor.id_upd_unita_doc)
           JOIN ARO_DOC doc
               ON (doc.id_doc = upd_doc.id_doc
               AND doc.ti_creazione = 'AGGIUNTA_DOCUMENTO')
           LEFT JOIN ELV_ELENCO_VERS ele_doc
               ON (ele_doc.id_elenco_vers = doc.id_elenco_vers);

-- changeset root:1751897635013-948
CREATE OR REPLACE FORCE VIEW "ELV_V_CHK_UPD_PREC_NO_ELE_COR" ("ID_UPD_UNITA_DOC_COR", "ID_UPD_UNITA_DOC_PREC", "FL_UPD_PREC_OK") AS SELECT upd_cor.id_upd_unita_doc     id_upd_unita_doc_cor,
           upd_prec.id_upd_unita_doc    id_upd_unita_doc_prec,
           CASE
               WHEN upd_prec.id_elenco_vers IS NOT NULL
                AND ele_upd_prec.ti_stato_elenco IN
                        ('IN_CODA_INDICE_AIP',
                         'INDICI_AIP_GENERATI',
                         'ELENCO_INDICI_AIP_CREATO',
                         'ELENCO_INDICI_AIP_FIRMATO',
                         'ELENCO_INDICI_AIP_ERR_MARCA',
                         'COMPLETATO') THEN
                   '1'
               ELSE
                   '0'
           END                          fl_upd_prec_ok
      FROM ARO_UPD_UNITA_DOC  upd_cor
           JOIN ARO_UPD_UNITA_DOC upd_prec
               ON (upd_prec.id_unita_doc = upd_cor.id_unita_doc
               AND upd_prec.pg_upd_unita_doc < upd_cor.pg_upd_unita_doc)
           LEFT JOIN ELV_ELENCO_VERS ele_upd_prec
               ON (ele_upd_prec.id_elenco_vers = upd_prec.id_elenco_vers);

-- changeset root:1751897635013-949
CREATE OR REPLACE FORCE VIEW "ELV_V_CHK_ADD_UPD_UD_NO_ELE_COR" ("ID_UPD_UNITA_DOC", "FL_ADD_UPD_UD_OK", "FL_ALL_ADD_UPD_DOC_OK", "FL_ALL_UPD_PREC_OK") AS SELECT upd.id_upd_unita_doc,
           CASE
               WHEN ud.id_elenco_vers IS NOT NULL
                AND ele_ud.ti_stato_elenco IN ('INDICI_AIP_GENERATI',
                                               'ELENCO_INDICI_AIP_CREATO',
                                               'ELENCO_INDICI_AIP_FIRMATO',
                                               'ELENCO_INDICI_AIP_ERR_MARCA',
                                               'COMPLETATO') THEN
                   '1'
               ELSE
                   '0'
           END    fl_add_upd_ud_ok,
           CASE
               WHEN EXISTS
                        (SELECT *
                           FROM ELV_V_CHK_ADD_UPD_DOC_NO_ELE_COR chk_doc
                          WHERE chk_doc.id_upd_unita_doc_cor =
                                upd.id_upd_unita_doc
                            AND chk_doc.fl_add_upd_doc_ok = '0') THEN
                   '0'
               ELSE
                   '1'
           END    fl_all_add_upd_doc_ok,
           CASE
               WHEN EXISTS
                        (SELECT *
                           FROM ELV_V_CHK_UPD_PREC_NO_ELE_COR chk_upd_prec
                          WHERE chk_upd_prec.id_upd_unita_doc_cor =
                                upd.id_upd_unita_doc
                            AND chk_upd_prec.fl_upd_prec_ok = '0') THEN
                   '0'
               ELSE
                   '1'
           END    fl_all_upd_prec_ok
      FROM ARO_UPD_UNITA_DOC  upd
           JOIN ARO_UNITA_DOC ud ON (ud.id_unita_doc = upd.id_unita_doc)
           LEFT JOIN ELV_ELENCO_VERS ele_ud
               ON (ele_ud.id_elenco_vers = ud.id_elenco_vers);

-- changeset root:1751897635013-950
COMMENT ON COLUMN ELV_V_CHK_ADD_UPD_UD_NO_ELE_COR.ID_UPD_UNITA_DOC IS 'PK.1';

-- changeset root:1751897635013-951
CREATE OR REPLACE FORCE VIEW "ELV_V_CHK_DOC_PREC_NO_ELE_COR" ("ID_DOC_COR", "ID_DOC_PREC", "FL_DOC_PREC_OK") AS SELECT doc_cor.id_doc     id_doc_cor,
           doc_prec.id_doc    id_doc_prec,
           CASE
               WHEN doc_prec.id_elenco_vers IS NOT NULL
                AND ele_doc_prec.ti_stato_elenco IN
                        ('INDICI_AIP_GENERATI',
                         'ELENCO_INDICI_AIP_CREATO',
                         'ELENCO_INDICI_AIP_FIRMATO',
                         'ELENCO_INDICI_AIP_ERR_MARCA',
                         'COMPLETATO') THEN
                   '1'
               ELSE
                   '0'
           END                fl_doc_prec_ok
      FROM ARO_DOC  doc_cor
           JOIN ARO_DOC doc_prec
               ON (doc_prec.id_unita_doc = doc_cor.id_unita_doc
               AND doc_prec.dt_creazione < doc_cor.dt_creazione
               AND doc_prec.ti_creazione = 'AGGIUNTA_DOCUMENTO')
           LEFT JOIN ELV_ELENCO_VERS ele_doc_prec
               ON (ele_doc_prec.id_elenco_vers = doc_prec.id_elenco_vers);

-- changeset root:1751897635013-952
CREATE OR REPLACE FORCE VIEW "ARO_V_LIS_ELV_VERS" ("ID_UNITA_DOC", "ID_ELENCO_VERS", "NM_ELENCO", "DT_CREAZIONE_ELENCO", "TI_STATO_ELENCO", "DT_CREAZIONE_ELENCO_IX_AIP", "DT_FIRMA_ELENCO_IX_AIP", "DT_MARCA_ELENCO_IX_AIP") AS select
 ud.id_unita_doc,
 elenco.id_elenco_vers, elenco.nm_elenco, elenco.dt_creazione_elenco, elenco.ti_stato_elenco,
 
 elenco.dt_creazione_elenco_ix_aip, elenco.dt_firma_elenco_ix_aip, 
 file_ele.dt_creazione_file

from ARO_UNITA_DOC ud
join ELV_ELENCO_VERS elenco
 on (elenco.id_elenco_vers = ud.id_elenco_vers)
left join ELV_FILE_ELENCO_VERS file_ele
 on (file_ele.id_elenco_vers = elenco.id_elenco_vers
 and file_ele.ti_file_elenco_vers = 'MARCA_FIRMA_ELENCO_INDICI_AIP')
 
 
UNION

select
 doc.id_unita_doc,
 elenco.id_elenco_vers, elenco.nm_elenco, elenco.dt_creazione_elenco, elenco.ti_stato_elenco,
 
 elenco.dt_creazione_elenco_ix_aip, elenco.dt_firma_elenco_ix_aip, 
 file_ele.dt_creazione_file

from ARO_DOC doc
join ELV_ELENCO_VERS elenco
 on (elenco.id_elenco_vers = doc.id_elenco_vers)
left join ELV_FILE_ELENCO_VERS file_ele
 on (file_ele.id_elenco_vers = elenco.id_elenco_vers
 and file_ele.ti_file_elenco_vers = 'MARCA_FIRMA_ELENCO_INDICI_AIP')

UNION

select
 upd_ud.id_unita_doc,
 elenco.id_elenco_vers, elenco.nm_elenco, elenco.dt_creazione_elenco, elenco.ti_stato_elenco,
 
 elenco.dt_creazione_elenco_ix_aip, elenco.dt_firma_elenco_ix_aip, 
 file_ele.dt_creazione_file

from ARO_UPD_UNITA_DOC upd_ud
join ELV_ELENCO_VERS elenco
 on (elenco.id_elenco_vers = upd_ud.id_elenco_vers)
left join ELV_FILE_ELENCO_VERS file_ele
 on (file_ele.id_elenco_vers = elenco.id_elenco_vers
 and file_ele.ti_file_elenco_vers = 'MARCA_FIRMA_ELENCO_INDICI_AIP');

-- changeset root:1751897635013-953
COMMENT ON COLUMN ARO_V_LIS_ELV_VERS.ID_UNITA_DOC IS 'PK.1';

-- changeset root:1751897635013-954
COMMENT ON COLUMN ARO_V_LIS_ELV_VERS.ID_ELENCO_VERS IS 'PK.2';

-- changeset root:1751897635013-955
CREATE OR REPLACE FORCE VIEW "ELV_V_LIS_MODIF_BY_UD" ("TI_MODIF", "ID_ELENCO_VERS", "ID_UNITA_DOC", "ID_MODIF", "DT_VERS", "DS_URN_MODIF", "DS_URN_RAPP_VERS", "DS_HASH_RAPP_VERS", "DS_ALGO_HASH_RAPP_VERS", "CD_ENCODING_HASH_RAPP_VERS") AS select
 'DOC_AGG' ti_modif,
 ele.id_elenco_vers,
 doc.id_unita_doc,
 doc.id_doc id_modif,
 doc.dt_creazione dt_vers,
 
 'urn:' || 
 (select ds_valore_param_applic
  from APL_V_GETVAL_PARAM_BY_APL
  where nm_param_applic = 'SISTEMA_CONSERVAZIONE'
  ) || ':' ||
 ente.nm_ente || ':' || strut.nm_strut || ':' ||
 ud.cd_registro_key_unita_doc || '-' || ud.aa_key_unita_doc || '-' || ud.cd_key_unita_doc || ':' ||
 'DOC' || lpad (doc.ni_ord_doc, 5, '0') ds_urn_modif,
 
 case
	when exists (select *
				 from VRS_SESSIONE_VERS ses
				 join VRS_DATI_SESSIONE_VERS dati_ses
					on (dati_ses.id_sessione_vers = ses.id_sessione_vers)
				 join VRS_XML_DATI_SESSIONE_VERS xml_ses
					on (xml_ses.id_dati_sessione_vers = dati_ses.id_dati_sessione_vers
					and xml_ses.ti_xml_dati = 'RAPP_VERS')
				 where ses.id_doc = doc.id_doc
				 )
		then 
			case
				when exists (select *
							  from VRS_SESSIONE_VERS ses
							  join VRS_DATI_SESSIONE_VERS dati_ses
								on (dati_ses.id_sessione_vers = ses.id_sessione_vers
								and dati_ses.ti_dati_sessione_vers = 'XML_DOC')
							  join VRS_XML_DATI_SESSIONE_VERS xml_ses
								on (xml_ses.id_dati_sessione_vers = dati_ses.id_dati_sessione_vers
								and xml_ses.ti_xml_dati = 'RAPP_VERS')
							  join VRS_URN_XML_SESSIONE_VERS urn_xml
								on (urn_xml.id_xml_dati_sessione_vers = xml_ses.id_xml_dati_sessione_vers
								and urn_xml.ti_urn = 'ORIGINALE')
							  where ses.id_doc = doc.id_doc
							)
					then (select ds_urn
						  from VRS_SESSIONE_VERS ses
						  join VRS_DATI_SESSIONE_VERS dati_ses
							on (dati_ses.id_sessione_vers = ses.id_sessione_vers
							and dati_ses.ti_dati_sessione_vers = 'XML_DOC')
						  join VRS_XML_DATI_SESSIONE_VERS xml_ses
							on (xml_ses.id_dati_sessione_vers = dati_ses.id_dati_sessione_vers
							and xml_ses.ti_xml_dati = 'RAPP_VERS')
						  join VRS_URN_XML_SESSIONE_VERS urn_xml
							on (urn_xml.id_xml_dati_sessione_vers = xml_ses.id_xml_dati_sessione_vers
							and urn_xml.ti_urn = 'ORIGINALE')
						  where ses.id_doc = doc.id_doc
						)
					else (select ds_urn_xml_vers
						  from VRS_SESSIONE_VERS ses
						  join VRS_DATI_SESSIONE_VERS dati_ses
							on (dati_ses.id_sessione_vers = ses.id_sessione_vers
							and dati_ses.ti_dati_sessione_vers = 'XML_DOC')
						  join VRS_XML_DATI_SESSIONE_VERS xml_ses
							on (xml_ses.id_dati_sessione_vers = dati_ses.id_dati_sessione_vers
							and xml_ses.ti_xml_dati = 'RAPP_VERS')
						  where ses.id_doc = doc.id_doc
						)
			end
		else
			case
				when exists (select *
							  from VRS_SESSIONE_VERS ses
							  join VRS_DATI_SESSIONE_VERS dati_ses
								on (dati_ses.id_sessione_vers = ses.id_sessione_vers
								and dati_ses.ti_dati_sessione_vers = 'XML_DOC')
							  join VRS_XML_DATI_SESSIONE_VERS xml_ses
								on (xml_ses.id_dati_sessione_vers = dati_ses.id_dati_sessione_vers
								and xml_ses.ti_xml_dati = 'RISPOSTA')
							  join VRS_URN_XML_SESSIONE_VERS urn_xml
								on (urn_xml.id_xml_dati_sessione_vers = xml_ses.id_xml_dati_sessione_vers
								and urn_xml.ti_urn = 'ORIGINALE')
							  where ses.id_doc = doc.id_doc
							)
					then (select ds_urn
						  from VRS_SESSIONE_VERS ses
						  join VRS_DATI_SESSIONE_VERS dati_ses
							on (dati_ses.id_sessione_vers = ses.id_sessione_vers
							and dati_ses.ti_dati_sessione_vers = 'XML_DOC')
						  join VRS_XML_DATI_SESSIONE_VERS xml_ses
							on (xml_ses.id_dati_sessione_vers = dati_ses.id_dati_sessione_vers
							and xml_ses.ti_xml_dati = 'RISPOSTA')
						  join VRS_URN_XML_SESSIONE_VERS urn_xml
							on (urn_xml.id_xml_dati_sessione_vers = xml_ses.id_xml_dati_sessione_vers
							and urn_xml.ti_urn = 'ORIGINALE')
						  where ses.id_doc = doc.id_doc
						)
					else (select ds_urn_xml_vers
						  from VRS_SESSIONE_VERS ses
						  join VRS_DATI_SESSIONE_VERS dati_ses
							on (dati_ses.id_sessione_vers = ses.id_sessione_vers
							and dati_ses.ti_dati_sessione_vers = 'XML_DOC')
						  join VRS_XML_DATI_SESSIONE_VERS xml_ses
							on (xml_ses.id_dati_sessione_vers = dati_ses.id_dati_sessione_vers
							and xml_ses.ti_xml_dati = 'RISPOSTA')
						  where ses.id_doc = doc.id_doc
						)
			end
 end ds_urn_rapp_vers,
 null ds_hash_rapp_vers, null ds_algo_hash_rapp_vers, null cd_encoding_hash_rapp_vers
 
from ELV_ELENCO_VERS ele
join ARO_DOC doc
	on (doc.id_elenco_vers = ele.id_elenco_vers)
join ARO_UNITA_DOC ud
	on (ud.id_unita_doc = doc.id_unita_doc)
	
join ORG_STRUT strut
	on (strut.id_strut = ud.id_strut)
join ORG_ENTE ente
	on (ente.id_ente = strut.id_ente)
			
UNION

select
 'UPD_UD' ti_modif,
 ele.id_elenco_vers,
 upd_ud.id_unita_doc,
 upd_ud.id_upd_unita_doc id_modif,
 upd_ud.ts_ini_ses dt_vers,

 'urn:' || 
 (select ds_valore_param_applic
  from APL_V_GETVAL_PARAM_BY_APL
  where nm_param_applic = 'SISTEMA_CONSERVAZIONE'
  ) || ':' ||
 ente.nm_ente || ':' || strut.nm_strut || ':' ||
 ud.cd_registro_key_unita_doc || '-' || ud.aa_key_unita_doc || '-' || ud.cd_key_unita_doc || ':' ||
 'UPD' || lpad (upd_ud.pg_upd_unita_doc, 5, '0') ds_urn_modif,
 
 xml_risp.ds_urn_xml ds_urn_rapp_vers,
 xml_risp.ds_hash_xml ds_hash_rapp_vers, xml_risp.ds_algo_hash_xml ds_algo_hash_rapp_vers, xml_risp.cd_encoding_hash_xml cd_encoding_hash_rapp_vers
 
from ELV_ELENCO_VERS ele
join ARO_UPD_UNITA_DOC upd_ud
	on (upd_ud.id_elenco_vers = ele.id_elenco_vers)
join ARO_UNITA_DOC ud
	on (ud.id_unita_doc = upd_ud.id_unita_doc)
join ARO_XML_UPD_UNITA_DOC xml_risp
	on (xml_risp.id_upd_unita_doc = upd_ud.id_upd_unita_doc
	and xml_risp.ti_xml_upd_unita_doc = 'RISPOSTA')
	
join ORG_STRUT strut
	on (strut.id_strut = ud.id_strut)
join ORG_ENTE ente
	on (ente.id_ente = strut.id_ente);

-- changeset root:1751897635013-956
COMMENT ON COLUMN ELV_V_LIS_MODIF_BY_UD.TI_MODIF IS 'PK.1';

-- changeset root:1751897635013-957
COMMENT ON COLUMN ELV_V_LIS_MODIF_BY_UD.ID_MODIF IS 'PK.2';

-- changeset root:1751897635013-958
CREATE OR REPLACE FORCE VIEW "ELV_V_CHK_ADD_UPD_DOC" ("ID_UPD_UNITA_DOC_COR", "ID_UPD_DOC_UNITA_DOC", "ID_ELENCO_VERS_COR", "FL_ADD_UPD_DOC_OK") AS select
 upd_cor.id_upd_unita_doc id_upd_unita_doc_cor,
 upd_doc.id_upd_doc_unita_doc,
 ele_cor.id_elenco_vers id_elenco_vers_cor,
 
 case
	when doc.id_elenco_vers = ele_cor.id_elenco_vers
		then '1'
		else
			case
				when doc.id_elenco_vers is not null
				and  ele_doc.ti_stato_elenco in ('INDICI_AIP_GENERATI', 'ELENCO_INDICI_AIP_CREATO',
												'ELENCO_INDICI_AIP_FIRMATO', 'ELENCO_INDICI_AIP_ERR_MARCA', 'COMPLETATO')
					then '1'
					else '0'
			end
 end fl_add_upd_doc_ok

from ARO_UPD_UNITA_DOC upd_cor
join ARO_UPD_DOC_UNITA_DOC upd_doc
	on (upd_doc.id_upd_unita_doc = upd_cor.id_upd_unita_doc)
join ARO_DOC doc
	on (doc.id_doc = upd_doc.id_doc
	and doc.ti_creazione = 'AGGIUNTA_DOCUMENTO')
left join ELV_ELENCO_VERS ele_doc
	on (ele_doc.id_elenco_vers = doc.id_elenco_vers)

join ELV_ELENCO_VERS ele_cor
 on (ele_cor.id_elenco_vers > 0);

-- changeset root:1751897635013-959
CREATE OR REPLACE FORCE VIEW "ELV_V_CHK_DOC_PREC" ("ID_DOC_COR", "ID_DOC_PREC", "ID_ELENCO_VERS_COR", "FL_DOC_PREC_OK") AS select
 doc_cor.id_doc id_doc_cor,
 doc_prec.id_doc id_doc_prec,
 ele_cor.id_elenco_vers id_elenco_vers_cor,
 
 case
	when doc_prec.id_elenco_vers = ele_cor.id_elenco_vers
		then '1'
		else
			case
				when doc_prec.id_elenco_vers is not null
				and  ele_doc_prec.ti_stato_elenco in ('INDICI_AIP_GENERATI', 'ELENCO_INDICI_AIP_CREATO',
													  'ELENCO_INDICI_AIP_FIRMATO', 'ELENCO_INDICI_AIP_ERR_MARCA', 'COMPLETATO')
					then '1'
					else '0'
			end
 end fl_doc_prec_ok

from ARO_DOC doc_cor
join ARO_DOC doc_prec
	on (doc_prec.id_unita_doc = doc_cor.id_unita_doc
	and doc_prec.dt_creazione < doc_cor.dt_creazione
	and doc_prec.ti_creazione = 'AGGIUNTA_DOCUMENTO')
left join ELV_ELENCO_VERS ele_doc_prec
	on (ele_doc_prec.id_elenco_vers = doc_prec.id_elenco_vers)

join ELV_ELENCO_VERS ele_cor
 on (ele_cor.id_elenco_vers > 0);

-- changeset root:1751897635013-960
CREATE OR REPLACE FORCE VIEW "ELV_V_CHK_SOLO_UD_ANNUL" ("ID_ELENCO_VERS", "FL_SOLO_UD_ANNUL", "FL_SOLO_DOC_ANNUL", "FL_SOLO_UPD_UD_ANNUL") AS select 
 ele.id_elenco_vers,
 case
  when ele.ni_unita_doc_vers_elenco != 0
    then
		case
           when not exists (select *
							from ARO_UNITA_DOC ud
							where ud.id_elenco_vers = ele.id_elenco_vers
							--and ud.dt_annul != to_date('31/12/2444 00:00:00', 'dd/mm/yyyy hh24:mi:ss')
							and ud.TI_STATO_CONSERVAZIONE != 'ANNULLATA'
							)
            then '1'
            else '0'
		end
    else
      '1'
 end fl_solo_ud_annul,

 case
  when ele.ni_doc_agg_elenco != 0
    then
		case
           when not exists (select *
							from ARO_DOC doc
							join ARO_UNITA_DOC ud
							 on (ud.id_unita_doc = doc.id_unita_doc)
							where doc.id_elenco_vers = ele.id_elenco_vers
							and ud.TI_STATO_CONSERVAZIONE != 'ANNULLATA'
							)
            then '1'
            else '0'
		end
    else
      '1'
 end fl_solo_doc_annul,
 
 case
  when ele.ni_upd_unita_doc != 0
    then
		case
           when not exists (select *
							from ARO_UPD_UNITA_DOC upd
							join ARO_UNITA_DOC ud
							 on (ud.id_unita_doc = upd.id_unita_doc)
							where upd.id_elenco_vers = ele.id_elenco_vers
							and ud.TI_STATO_CONSERVAZIONE != 'ANNULLATA'
							)
            then '1'
            else '0'
		end
    else
      '1'
 end fl_solo_upd_ud_annul
 
from elv_elenco_vers ele

/*
where ele.id_elenco_vers in (select distinct id_elenco_vers
                          from tmp_ver_ix_aip_da_elim_fisc)
*/;

-- changeset root:1751897635013-961
COMMENT ON COLUMN ELV_V_CHK_SOLO_UD_ANNUL.ID_ELENCO_VERS IS 'PK.1';

-- changeset root:1751897635013-962
CREATE OR REPLACE FORCE VIEW "ELV_V_CHK_UNA_UD_ANNUL" ("ID_ELENCO_VERS", "FL_UNA_UD_VERS_ANNUL", "FL_UNA_UD_DOC_AGG_ANNUL", "FL_UNA_UD_UPD_UD_ANNUL") AS select 
 ele.id_elenco_vers,
 case
  when ele.ni_unita_doc_vers_elenco != 0
    then
		case
           when exists (select *
						from ARO_UNITA_DOC ud
						where ud.id_elenco_vers = ele.id_elenco_vers
						--and ud.dt_annul != to_date('31/12/2444 00:00:00', 'dd/mm/yyyy hh24:mi:ss')
						and ud.TI_STATO_CONSERVAZIONE = 'ANNULLATA'
						)
            then '1'
            else '0'
		end
    else '0'
 end fl_una_ud_vers_annul,

 case
  when ele.ni_doc_agg_elenco != 0
    then
		case
           when exists (select *
						from ARO_DOC doc
						join ARO_UNITA_DOC ud
						 on (ud.id_unita_doc = doc.id_unita_doc)
						where doc.id_elenco_vers = ele.id_elenco_vers
						--and ud.dt_annul != to_date('31/12/2444 00:00:00', 'dd/mm/yyyy hh24:mi:ss')
						and ud.TI_STATO_CONSERVAZIONE = 'ANNULLATA'
						)
            then '1'
            else '0'
		end
    else '0'
 end fl_una_ud_doc_agg_annul,
 
 case
  when ele.ni_upd_unita_doc != 0
    then
		case
           when exists (select *
						from ARO_UPD_UNITA_DOC upd
						join ARO_UNITA_DOC ud
						 on (ud.id_unita_doc = upd.id_unita_doc)
						where upd.id_elenco_vers = ele.id_elenco_vers
						and ud.TI_STATO_CONSERVAZIONE = 'ANNULLATA'
						)
            then '1'
            else '0'
		end
    else '0'
 end fl_una_ud_upd_ud_annul
 
from elv_elenco_vers ele;

-- changeset root:1751897635013-963
COMMENT ON COLUMN ELV_V_CHK_UNA_UD_ANNUL.ID_ELENCO_VERS IS 'PK.1';

-- changeset root:1751897635013-964
CREATE OR REPLACE FORCE VIEW "ELV_V_CHK_UPD_PREC" ("ID_UPD_UNITA_DOC_COR", "ID_UPD_UNITA_DOC_PREC", "ID_ELENCO_VERS_COR", "FL_UPD_PREC_OK") AS select
 upd_cor.id_upd_unita_doc id_upd_unita_doc_cor,
 upd_prec.id_upd_unita_doc id_upd_unita_doc_prec,
 ele_cor.id_elenco_vers id_elenco_vers_cor,
 
 case
	when upd_prec.id_elenco_vers = ele_cor.id_elenco_vers
		then '1'
		else
			case
				when upd_prec.id_elenco_vers is not null
				and  ele_upd_prec.ti_stato_elenco in ('IN_CODA_INDICE_AIP', 'INDICI_AIP_GENERATI', 'ELENCO_INDICI_AIP_CREATO',
												'ELENCO_INDICI_AIP_FIRMATO', 'ELENCO_INDICI_AIP_ERR_MARCA', 'COMPLETATO')
					then '1'
					else '0'
			end
 end fl_upd_prec_ok

from ARO_UPD_UNITA_DOC upd_cor
join ARO_UPD_UNITA_DOC upd_prec
	on (upd_prec.id_unita_doc = upd_cor.id_unita_doc
	and upd_prec.pg_upd_unita_doc < upd_cor.pg_upd_unita_doc)
left join ELV_ELENCO_VERS ele_upd_prec
	on (ele_upd_prec.id_elenco_vers = upd_prec.id_elenco_vers)


join ELV_ELENCO_VERS ele_cor
 on (ele_cor.id_elenco_vers > 0);

-- changeset root:1751897635013-965
CREATE OR REPLACE FORCE VIEW "ELV_V_COUNT_UD_MODIF" ("ID_ELENCO_VERS", "NI_UNITA_DOC_MOD_ELENCO") AS select
 ele.id_elenco_vers,
 (select count (distinct id_unita_doc)
  from ((select doc.id_unita_doc
		from ARO_DOC doc
		where doc.id_elenco_vers = ele.id_elenco_vers
	   )
	   UNION
	   (select upd.id_unita_doc
		from ARO_UPD_UNITA_DOC upd
		where upd.id_elenco_vers = ele.id_elenco_vers
	   )) tmp
  ) ni_unita_doc_mod_elenco

from ELV_ELENCO_VERS ele;

-- changeset root:1751897635013-966
COMMENT ON COLUMN ELV_V_COUNT_UD_MODIF.ID_ELENCO_VERS IS 'PK.1';

-- changeset root:1751897635013-967
CREATE OR REPLACE FORCE VIEW "ELV_V_LIS_UD_BY_STATO" ("ID_ELENCO_VERS", "ID_UNITA_DOC", "TI_STATO_ELENCO_VERS", "TI_MOTIVO", "TI_STATO_UD", "TS_LAST_RESET_STATO") AS select 
 ele.id_elenco_vers, 
 ud.id_unita_doc, ele.ti_stato_elenco ti_stato_elenco_vers, 'VERS_UD' ti_motivo, ud.ti_stato_ud_elenco_vers ti_stato_ud,
 ud.ts_last_reset_stato
from elv_elenco_vers ele
join ARO_UNITA_DOC ud
	on (ud.id_elenco_vers = ele.id_elenco_vers)
where ud.TI_STATO_CONSERVAZIONE != 'ANNULLATA'

UNION

select distinct 
 ele.id_elenco_vers, 
 doc.id_unita_doc, ele.ti_stato_elenco ti_stato_elenco_vers, 'MODIF_DOC' ti_motivo, doc.ti_stato_doc_elenco_vers ti_stato_ud,
 doc.ts_last_reset_stato
from elv_elenco_vers ele
join ARO_DOC doc
	on (doc.id_elenco_vers = ele.id_elenco_vers)
join ARO_UNITA_DOC ud
	on (ud.id_unita_doc = doc.id_unita_doc)
where ud.TI_STATO_CONSERVAZIONE != 'ANNULLATA'
and ud.id_elenco_vers != ele.id_elenco_vers

UNION

select distinct 
 ele.id_elenco_vers, 
 upd.id_unita_doc, ele.ti_stato_elenco ti_stato_elenco_vers, 'MODIF_DOC' ti_motivo, upd.ti_stato_upd_elenco_vers ti_stato_ud,
 upd.ts_last_reset_stato
from elv_elenco_vers ele
join ARO_UPD_UNITA_DOC upd
	on (upd.id_elenco_vers = ele.id_elenco_vers)
join ARO_UNITA_DOC ud
	on (ud.id_unita_doc = upd.id_unita_doc)
where ud.TI_STATO_CONSERVAZIONE != 'ANNULLATA'
and ud.id_elenco_vers != ele.id_elenco_vers;

-- changeset root:1751897635013-968
COMMENT ON COLUMN ELV_V_LIS_UD_BY_STATO.ID_ELENCO_VERS IS 'PK.1';

-- changeset root:1751897635013-969
COMMENT ON COLUMN ELV_V_LIS_UD_BY_STATO.ID_UNITA_DOC IS 'PK.2';

-- changeset root:1751897635013-970
CREATE OR REPLACE FORCE VIEW "ELV_V_LIS_UPD_UD" ("ID_ELENCO_VERS", "ID_UNITA_DOC", "ID_STRUT_UNITA_DOC", "CD_REGISTRO_KEY_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "DS_KEY_ORD", "TI_STATO_UPD_ELENCO_VERS", "TI_STATO_CONSERVAZIONE", "ID_UPD_UNITA_DOC", "PG_UPD_UNITA_DOC", "TS_INI_SES", "DS_URN_UPD_UNITA_DOC") AS select
 upd.id_elenco_vers,
 ud.id_unita_doc, 
 ud.id_strut id_strut_unita_doc, ud.cd_registro_key_unita_doc, ud.aa_key_unita_doc, ud.cd_key_unita_doc, 
 ud.ds_key_ord,
 upd.ti_stato_upd_elenco_vers,
 ud.ti_stato_conservazione,
 upd.id_upd_unita_doc,
 upd.pg_upd_unita_doc,
 upd.ts_ini_ses,

 'urn:' || 
 (select ds_valore_param_applic
  from APL_V_GETVAL_PARAM_BY_APL
  where nm_param_applic = 'SISTEMA_CONSERVAZIONE'
  ) || ':' ||
 ente.nm_ente || ':' || strut.nm_strut || ':' ||
 ud.cd_registro_key_unita_doc || '-' || ud.aa_key_unita_doc || '-' || ud.cd_key_unita_doc || ':' ||
 'AGG_MD' || lpad(upd.pg_upd_unita_doc, 5, '0') ds_urn_upd_unita_doc

from ARO_UPD_UNITA_DOC upd
join ARO_UNITA_DOC ud 
 on (ud.id_unita_doc = upd.id_unita_doc)
join ORG_STRUT strut
	on (strut.id_strut = ud.id_strut)
join ORG_ENTE ente
	on (ente.id_ente = strut.id_ente);

-- changeset root:1751897635013-971
COMMENT ON COLUMN ELV_V_LIS_UPD_UD.ID_UPD_UNITA_DOC IS 'PK.1';

-- changeset root:1751897635013-972
CREATE OR REPLACE FORCE VIEW "ARO_V_DT_VERS_MAX_BY_UNITA_DOC" ("ID_UNITA_DOC", "DT_VERS_MAX") AS select 
 tmp.id_unita_doc, 
 max(tmp.dt_vers) dt_vers_max
from (
	select 
		id_unita_doc, trunc(dt_creazione) dt_vers
	from ARO_UNITA_DOC

	UNION

	select
		id_unita_doc, trunc(dt_creazione) dt_vers
	from ARO_DOC

	UNION

	select 
		id_unita_doc, trunc(ts_ini_ses) dt_vers
	from ARO_UPD_UNITA_DOC
) tmp

group by tmp.id_unita_doc;

-- changeset root:1751897635013-973
COMMENT ON COLUMN ARO_V_DT_VERS_MAX_BY_UNITA_DOC.ID_UNITA_DOC IS 'PK.1';

-- changeset root:1751897635013-974
CREATE OR REPLACE FORCE VIEW "ELV_V_CHK_IX_AIP_UD_GEN" ("ID_ELENCO_VERS", "FL_IX_AIP_UD_GEN_OK") AS select
 ele.id_elenco_vers,
 case
	when exists (select *
					 from ARO_UNITA_DOC ud
					 where ud.id_elenco_vers = ele.id_elenco_vers
					 and ud.ti_stato_conservazione != 'ANNULLATA'
					 and ud.ti_stato_ud_elenco_vers != 'IN_ELENCO_CON_INDICI_AIP_GENERATI'
					 )
	or exists (select *
					 from ARO_DOC doc
					 join ARO_UNITA_DOC ud
					  on (ud.id_unita_doc = doc.id_unita_doc
					  and ud.ti_stato_conservazione != 'ANNULLATA')
					 where doc.id_elenco_vers = ele.id_elenco_vers
					 and doc.ti_stato_doc_elenco_vers != 'IN_ELENCO_CON_INDICI_AIP_GENERATI'
					 )
	or exists (select *
					 from ARO_UPD_UNITA_DOC upd
					 join ARO_UNITA_DOC ud
					  on (ud.id_unita_doc = upd.id_unita_doc
					  and ud.ti_stato_conservazione != 'ANNULLATA')
					 where upd.id_elenco_vers = ele.id_elenco_vers
					 and upd.ti_stato_upd_elenco_vers != 'IN_ELENCO_CON_INDICI_AIP_GENERATI'
					 )	
		then '0'
		else '1'
 end fl_ix_aip_ud_gen_ok

from ELV_ELENCO_VERS_DA_ELAB ele;

-- changeset root:1751897635013-975
COMMENT ON COLUMN ELV_V_CHK_IX_AIP_UD_GEN.ID_ELENCO_VERS IS 'PK.1';

-- changeset root:1751897635013-976
CREATE OR REPLACE FORCE VIEW "ELV_V_CHK_ADD_UPD_UD" ("ID_UPD_UNITA_DOC", "ID_ELENCO_VERS_COR", "FL_ADD_UPD_UD_OK", "FL_ALL_ADD_UPD_DOC_OK", "FL_ALL_UPD_PREC_OK") AS select
 upd.id_upd_unita_doc,
 ele_cor.id_elenco_vers id_elenco_vers_cor,
 
 case
	when ud.id_elenco_vers = ele_cor.id_elenco_vers
		then '1'
		else
			case
				when ud.id_elenco_vers is not null
				and  ele_ud.ti_stato_elenco in ('INDICI_AIP_GENERATI', 'ELENCO_INDICI_AIP_CREATO',
												'ELENCO_INDICI_AIP_FIRMATO', 'ELENCO_INDICI_AIP_ERR_MARCA', 'COMPLETATO')
					then '1'
					else '0'
			end
 end fl_add_upd_ud_ok,
 
 case
	when exists (select *
				 from ELV_V_CHK_ADD_UPD_DOC chk_doc
				 where chk_doc.id_upd_unita_doc_cor = upd.id_upd_unita_doc
				 and chk_doc.id_elenco_vers_cor = ele_cor.id_elenco_vers
				 and chk_doc.fl_add_upd_doc_ok = '0'
				 )
		then '0'
		else '1'
 end fl_all_add_upd_doc_ok,
 
 case
	when exists (select *
				 from ELV_V_CHK_UPD_PREC chk_upd_prec
				 where chk_upd_prec.id_upd_unita_doc_cor = upd.id_upd_unita_doc
				 and chk_upd_prec.id_elenco_vers_cor = ele_cor.id_elenco_vers
				 and chk_upd_prec.fl_upd_prec_ok = '0'
				 )
		then '0'
		else '1'
 end fl_all_upd_prec_ok

from ARO_UPD_UNITA_DOC upd
join ARO_UNITA_DOC ud
	on (ud.id_unita_doc = upd.id_unita_doc)
left join ELV_ELENCO_VERS ele_ud
	on (ele_ud.id_elenco_vers = ud.id_elenco_vers)

join ELV_ELENCO_VERS ele_cor
 on (ele_cor.id_elenco_vers > 0);

-- changeset root:1751897635013-977
COMMENT ON COLUMN ELV_V_CHK_ADD_UPD_UD.ID_UPD_UNITA_DOC IS 'PK.1';

-- changeset root:1751897635013-978
COMMENT ON COLUMN ELV_V_CHK_ADD_UPD_UD.ID_ELENCO_VERS_COR IS 'PK.2';

-- changeset root:1751897635013-979
CREATE OR REPLACE FORCE VIEW "ELV_V_LIS_ALL_UD_BY_ELENCO" ("ID_UNITA_DOC", "ID_ELENCO_VERS", "DT_VERS_MAX", "CD_KEY_UNITA_DOC_NORMALIZ") AS select
 tmp.id_unita_doc,
 tmp.id_elenco_vers,
 
 (select dt_max.dt_vers_max
  from ARO_V_DT_VERS_MAX_BY_UNITA_DOC dt_max
  where dt_max.id_unita_doc = tmp.id_unita_doc
  ) dt_vers_max,
  
 (select cd_key_unita_doc_normaliz
 from ARO_UNITA_DOC ud
 where ud.id_unita_doc = tmp.id_unita_doc
 ) cd_key_unita_doc_normaliz
 
from (
	select
	 ud.id_unita_doc,
	 ud.id_elenco_vers
	from ARO_UNITA_DOC ud

	UNION

	select 
	 doc.id_unita_doc,
	 doc.id_elenco_vers
	from ARO_DOC doc

	UNION

	select 
	 upd_ud.id_unita_doc,
	 upd_ud.id_elenco_vers
	from ARO_UPD_UNITA_DOC upd_ud
	) tmp;

-- changeset root:1751897635013-980
COMMENT ON COLUMN ELV_V_LIS_ALL_UD_BY_ELENCO.ID_UNITA_DOC IS 'PK.1';

-- changeset root:1751897635013-981
COMMENT ON COLUMN ELV_V_LIS_ALL_UD_BY_ELENCO.ID_ELENCO_VERS IS 'PK.2';

-- changeset root:1751897635013-982
CREATE OR REPLACE FORCE VIEW "ELV_V_LIS_UD_ANNUL_BY_ELENCO" ("ID_RICH_ANNUL_VERS", "ID_ELENCO_VERS", "ID_UNITA_DOC", "DS_URN_UNITA_DOC_ANNUL") AS select 
 rich_ann.id_rich_annul_vers,
 ud.id_elenco_vers,
 ud.id_unita_doc,
 
 case
	when ud.cd_key_unita_doc_normaliz is not null
		then 'urn:' || 
			 (select ds_valore_param_applic
			  from APL_V_GETVAL_PARAM_BY_APL
			  where nm_param_applic = 'SISTEMA_CONSERVAZIONE') || ':' ||
			 ente.nm_ente || ':' || strut.nm_strut || ':' ||
			 ud.cd_registro_key_unita_doc || '-' || ud.aa_key_unita_doc || '-' || ud.cd_key_unita_doc 
		else 'urn:' || 
			 amb.nm_ambiente || ':' || ente.nm_ente || ':' || strut.nm_strut || ':' ||
			 ud.cd_registro_key_unita_doc || '-' || ud.aa_key_unita_doc || '-' || ud.cd_key_unita_doc
 end ds_urn_unita_doc_annul

from ARO_RICH_ANNUL_VERS rich_ann
join ARO_ITEM_RICH_ANNUL_VERS item
 on (item.id_rich_annul_vers = rich_ann.id_rich_annul_vers
  and item.ti_item_rich_annul_vers = 'UNI_DOC')
join ARO_UNITA_DOC ud
 on (ud.id_unita_doc = item.id_unita_doc)
 
join org_strut strut
 on (strut.id_strut = ud.id_strut)
join org_ente ente
 on (ente.id_ente = strut.id_ente)
join org_ambiente amb
 on (amb.id_ambiente = ente.id_ambiente)
 
UNION

select distinct
 rich_ann.id_rich_annul_vers,
 doc.id_elenco_vers,
 ud.id_unita_doc,
 
 case
	when ud.cd_key_unita_doc_normaliz is not null
		then 'urn:' || 
			 (select ds_valore_param_applic
			  from APL_V_GETVAL_PARAM_BY_APL
			  where nm_param_applic = 'SISTEMA_CONSERVAZIONE') || ':' ||
			 ente.nm_ente || ':' || strut.nm_strut || ':' ||
			 ud.cd_registro_key_unita_doc || '-' || ud.aa_key_unita_doc || '-' || ud.cd_key_unita_doc 
		else 'urn:' || 
			 amb.nm_ambiente || ':' || ente.nm_ente || ':' || strut.nm_strut || ':' ||
			 ud.cd_registro_key_unita_doc || '-' || ud.aa_key_unita_doc || '-' || ud.cd_key_unita_doc
 end ds_urn_unita_doc_annul

from ARO_RICH_ANNUL_VERS rich_ann
join ARO_ITEM_RICH_ANNUL_VERS item
 on (item.id_rich_annul_vers = rich_ann.id_rich_annul_vers
 and item.ti_item_rich_annul_vers = 'UNI_DOC')
join ARO_UNITA_DOC ud
 on (ud.id_unita_doc = item.id_unita_doc)
join ARO_DOC doc
 on (doc.id_unita_doc = ud.id_unita_doc
 and doc.ti_creazione = 'AGGIUNTA_DOCUMENTO')
 
join org_strut strut
 on (strut.id_strut = ud.id_strut)
join org_ente ente
 on (ente.id_ente = strut.id_ente)
join org_ambiente amb
 on (amb.id_ambiente = ente.id_ambiente)
 
UNION

select distinct
 rich_ann.id_rich_annul_vers,
 upd.id_elenco_vers,
 ud.id_unita_doc,
 
 case
	when ud.cd_key_unita_doc_normaliz is not null
		then 'urn:' || 
			 (select ds_valore_param_applic
			  from APL_V_GETVAL_PARAM_BY_APL
			  where nm_param_applic = 'SISTEMA_CONSERVAZIONE') || ':' ||
			 ente.nm_ente || ':' || strut.nm_strut || ':' ||
			 ud.cd_registro_key_unita_doc || '-' || ud.aa_key_unita_doc || '-' || ud.cd_key_unita_doc 
		else 'urn:' || 
			 amb.nm_ambiente || ':' || ente.nm_ente || ':' || strut.nm_strut || ':' ||
			 ud.cd_registro_key_unita_doc || '-' || ud.aa_key_unita_doc || '-' || ud.cd_key_unita_doc
 end ds_urn_unita_doc_annul

from ARO_RICH_ANNUL_VERS rich_ann
join ARO_ITEM_RICH_ANNUL_VERS item
 on (item.id_rich_annul_vers = rich_ann.id_rich_annul_vers
 and item.ti_item_rich_annul_vers = 'UNI_DOC')
join ARO_UNITA_DOC ud
 on (ud.id_unita_doc = item.id_unita_doc)
join ARO_UPD_UNITA_DOC upd
 on (upd.id_unita_doc = ud.id_unita_doc)
 
join org_strut strut
 on (strut.id_strut = ud.id_strut)
join org_ente ente
 on (ente.id_ente = strut.id_ente)
join org_ambiente amb
 on (amb.id_ambiente = ente.id_ambiente);

-- changeset root:1751897635013-983
COMMENT ON COLUMN ELV_V_LIS_UD_ANNUL_BY_ELENCO.ID_UNITA_DOC IS 'PK.1';

-- changeset root:1751897635013-984
CREATE OR REPLACE FORCE VIEW "ARO_V_LIS_ARCHIV_UNITA_DOC" ("ID_UNITA_DOC", "ID_ARCHIV_SEC", "DS_CLASSIF", "CD_FASCIC", "DS_OGGETTO_FASCIC", "CD_SOTTOFASCIC", "DS_OGGETTO_SOTTOFASCIC") AS select
-- info unita documentaria
 ud.id_unita_doc,

-- info archiviazione secondaria
 archiv.id_archiv_sec,
 archiv.ds_classif, 
 archiv.cd_fascic,
 archiv.ds_oggetto_fascic, 
 archiv.cd_sottofascic,
 archiv.ds_oggetto_sottofascic

from ARO_UNITA_DOC ud
 
join ARO_ARCHIV_SEC archiv
 on (archiv.id_unita_doc = ud.id_unita_doc);

-- changeset root:1751897635013-985
COMMENT ON COLUMN ARO_V_LIS_ARCHIV_UNITA_DOC.ID_ARCHIV_SEC IS 'PK.1 relativa a tabella ARO_ARCHIV_SEC';

-- changeset root:1751897635013-986
CREATE OR REPLACE FORCE VIEW "MON_V_CONTA_BY_STATO_CONSERV_NEW" ("DT_CREAZIONE", "ID_STRUT", "ID_SUB_STRUT", "AA_KEY_UNITA_DOC", "ID_REGISTRO_UNITA_DOC", "ID_TIPO_UNITA_DOC", "ID_TIPO_DOC", "NI_COMP_AIP_GENERATO", "NI_COMP_AIP_IN_AGG", "NI_COMP_PRESA_IN_CARICO", "NI_COMP_VOLUME", "NI_COMP_ANNUL") AS SELECT /*+ parallel (12) */
             TRUNC (t0.dt_creazione)    AS dt_creazione,
             t3.id_strut,
             t3.id_sub_strut,
             t3.aa_key_unita_doc,
             t3.id_registro_unita_doc,
             t3.id_tipo_unita_doc,
             ''                         AS id_tipo_doc,
             COUNT (
                 CASE
                     WHEN t3.ti_stato_conservazione IN
                              ('AIP_GENERATO',
                               'AIP_FIRMATO',
                               'VERSAMENTO_IN_ARCHIVIO',
                               'IN_ARCHIVIO',
                               'IN_CUSTODIA') THEN
                         1
                     ELSE
                         NULL
                 END)                   ni_comp_aip_generato,
             COUNT (
                 CASE
                     WHEN t3.ti_stato_conservazione IN ('AIP_IN_AGGIORNAMENTO') THEN
                         1
                     ELSE
                         NULL
                 END)                   ni_comp_aip_in_agg,
             COUNT (
                 CASE
                     WHEN t3.ti_stato_conservazione IN ('PRESA_IN_CARICO') THEN
                         1
                     ELSE
                         NULL
                 END)                   ni_comp_presa_in_carico,
             COUNT (
                 CASE
                     WHEN t3.ti_stato_conservazione IN
                              ('IN_VOLUME_DI_CONSERVAZIONE', 'AIP_DA_GENERARE') THEN
                         1
                     ELSE
                         NULL
                 END)                   ni_comp_volume,
             COUNT (
                 CASE
                     WHEN t3.ti_stato_conservazione IN ('ANNULLATA') THEN 1
                     ELSE NULL
                 END)                   ni_comp_annul
        FROM sacer.aro_unita_doc t3
             JOIN sacer.aro_doc t0 ON t3.id_unita_doc = t0.id_unita_doc
             JOIN sacer.aro_strut_doc t1 ON t0.id_doc = t1.id_doc
             JOIN sacer.aro_comp_doc t2 ON t1.id_strut_doc = t2.id_strut_doc
       WHERE t1.ni_ord_strut_doc = 1
    GROUP BY TRUNC (t0.dt_creazione),
             t3.id_strut,
             t3.id_sub_strut,
             t3.aa_key_unita_doc,
             t3.id_registro_unita_doc,
             t3.id_tipo_unita_doc;

-- changeset root:1751897635013-987
CREATE OR REPLACE FORCE VIEW "OST_V_PAYLOAD_MIGRAZ_FILE_BLOB" ("ID_COMP_DOC", "NI_SIZE_FILE_CALC", "DT_CREAZIONE", "DS_URN_INIZIALE", "DS_URN_ORIGINALE", "DS_URN_NORMALIZ") AS select
comp.id_comp_doc, comp.ni_size_file_calc, 
doc.dt_creazione,
urn_iniziale.ds_urn ds_urn_iniziale, urn_originale.ds_urn ds_urn_originale, urn_normaliz.ds_urn ds_urn_normaliz

from ARO_COMP_DOC comp
join ARO_STRUT_DOC strut_doc
	on (strut_doc.id_strut_doc = comp.id_strut_doc)
join ARO_DOC doc
	on (doc.id_doc = strut_doc.id_doc)
-- con la MAC 24114 e la MAC 24670 urn_iniziale ¿¿ opzionale
left outer join ARO_COMP_URN_CALC urn_iniziale
	on (urn_iniziale.id_comp_doc = comp.id_comp_doc
	and urn_iniziale.ti_urn = 'INIZIALE')

join ARO_COMP_URN_CALC urn_originale
	on (urn_originale.id_comp_doc = comp.id_comp_doc
	and urn_originale.ti_urn = 'ORIGINALE')

join ARO_COMP_URN_CALC urn_normaliz
	on (urn_normaliz.id_comp_doc = comp.id_comp_doc
	and urn_normaliz.ti_urn = 'NORMALIZZATO');

-- changeset root:1751897635013-988
COMMENT ON COLUMN OST_V_PAYLOAD_MIGRAZ_FILE_BLOB.ID_COMP_DOC IS 'PK.1';

-- changeset root:1751897635013-989
CREATE OR REPLACE FORCE VIEW "SER_V_CALC_DIM_SERIE" ("ID_CONTENUTO_VER_SERIE", "NI_MB_SIZE_CONTENUTO_EFF") AS select  
 app_ud.id_contenuto_ver_serie,
 round (sum(comp.ni_size_file_calc) / (1024 *1024), 2) ni_mb_size_contenuto_eff

from ARO_UD_APPART_VER_SERIE app_ud
join ARO_UNITA_DOC ud
on (ud.id_unita_doc = app_ud.id_unita_doc)

join ARO_DOC doc
on (doc.id_unita_doc = ud.id_unita_doc)

join ARO_STRUT_DOC strut_doc
on (strut_doc.id_doc = doc.id_doc)
join ARO_COMP_DOC comp
on (comp.id_strut_doc = strut_doc.id_strut_doc)

group by app_ud.id_contenuto_ver_serie;

-- changeset root:1751897635013-990
COMMENT ON COLUMN SER_V_CALC_DIM_SERIE.ID_CONTENUTO_VER_SERIE IS 'PK.1';

-- changeset root:1751897635013-991
CREATE OR REPLACE FORCE VIEW "ELV_V_CHK_ADD_DOC_AGG_NO_ELE_COR" ("ID_DOC", "FL_ADD_DOC_UD_OK", "FL_ALL_ADD_DOC_PREC_OK") AS SELECT doc.id_doc,
           CASE
               WHEN ud.id_elenco_vers IS NOT NULL
                AND ele_ud.ti_stato_elenco IN ('INDICI_AIP_GENERATI',
                                               'ELENCO_INDICI_AIP_CREATO',
                                               'ELENCO_INDICI_AIP_FIRMATO',
                                               'ELENCO_INDICI_AIP_ERR_MARCA',
                                               'COMPLETATO') THEN
                   '1'
               ELSE
                   '0'
           END    fl_add_doc_ud_ok,
           CASE
               WHEN EXISTS
                        (SELECT *
                           FROM ELV_V_CHK_DOC_PREC_NO_ELE_COR chk_doc_prec
                          WHERE chk_doc_prec.id_doc_cor = doc.id_doc
                            AND chk_doc_prec.fl_doc_prec_ok = '0') THEN
                   '0'
               ELSE
                   '1'
           END    fl_all_add_doc_prec_ok
      FROM ARO_DOC  doc
           JOIN ARO_UNITA_DOC ud ON (ud.id_unita_doc = doc.id_unita_doc)
           LEFT JOIN ELV_ELENCO_VERS ele_ud
               ON (ele_ud.id_elenco_vers = ud.id_elenco_vers);

-- changeset root:1751897635013-992
COMMENT ON COLUMN ELV_V_CHK_ADD_DOC_AGG_NO_ELE_COR.ID_DOC IS 'PK.1';

-- changeset root:1751897635013-993
CREATE OR REPLACE FORCE VIEW "ARO_V_LIS_DOC_ORDER_BY_VERS" ("ID_UNITA_DOC", "DT_CREAZIONE", "TI_DOC", "NI_PESO_ORDER", "PG_DOC") AS select
 id_unita_doc, 
 dt_creazione, 
 ti_doc, 
 case
	when ti_doc = 'PRINCIPALE'
		then 1
	when ti_doc = 'ALLEGATO'
		then 2
	when ti_doc = 'ANNESSO'
		then 3
	when ti_doc = 'ANNOTAZIONE'
		then 4
 end ni_peso_order, 
 pg_doc
from ARO_DOC

order by dt_creazione,
		case
			when ti_doc = 'PRINCIPALE'
				then 1
			when ti_doc = 'ALLEGATO'
				then 2
			when ti_doc = 'ANNESSO'
				then 3
			when ti_doc = 'ANNOTAZIONE'
				then 4
		 end, 
		 pg_doc;

-- changeset root:1751897635013-994
COMMENT ON COLUMN ARO_V_LIS_DOC_ORDER_BY_VERS.ID_UNITA_DOC IS 'PK.1';

-- changeset root:1751897635013-995
CREATE OR REPLACE FORCE VIEW "ARO_V_DOC_RANGE_DT" ("ID_STRUT", "TI_DOC", "TI_STATO_DOC", "TI_DT_CREAZIONE") AS select
doc.id_strut, doc.ti_doc, doc.ti_stato_doc,
case
	when doc.dt_creazione between trunc(sysdate) and sysdate + 1/24 then 'CORR'
	when doc.dt_creazione between trunc(sysdate - 6) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss') then '6_GG_PREC_CORR'
	else 'PREC_6_GG_PREC_CORR'
end ti_dt_creazione
from ARO_DOC doc;

-- changeset root:1751897635013-996
CREATE OR REPLACE FORCE VIEW "ARO_V_DOC_TI_UD_RANGE_DT" ("ID_STRUT", "TI_DOC", "TI_STATO_DOC", "ID_TIPO_UNITA_DOC", "TI_DT_CREAZIONE") AS select
doc.id_strut, doc.ti_doc, doc.ti_stato_doc, ud.id_tipo_unita_doc,
case
	when doc.dt_creazione between trunc(sysdate) and sysdate + 1/24 then 'CORR'
	when doc.dt_creazione between trunc(sysdate - 6) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss') then '6_GG_PREC_CORR'
	else 'PREC_6_GG_PREC_CORR'
end ti_dt_creazione
from ARO_DOC doc
join ARO_UNITA_DOC ud
 on (ud.id_unita_doc = doc.id_unita_doc);

-- changeset root:1751897635013-997
CREATE OR REPLACE FORCE VIEW "TMP_V_STRUT_CALC_CONSIST_NEW" ("ID_STRUT", "DA_ELABORARE", "DT_CREAZIONE", "ANNO", "ID_SUB_STRUT") AS SELECT unita_doc.id_Strut             AS id_strut,
           'DA_ELABORARE'                 AS da_elaborare,
           TRUNC (doc.dt_Creazione)       AS dt_creazione,
           unita_doc.AA_KEY_UNITA_DOC     AS ANNO,
           unita_doc.id_sub_strut         AS id_Sub_Strut
      FROM ARO_UNITA_DOC  unita_doc
           JOIN ARO_DOC doc ON (unita_doc.id_unita_doc = doc.id_unita_doc)
  

    UNION
    SELECT unita_doc.id_Strut             AS id_strut,
           'DA_ELABORARE'                 AS da_elaborare,
           TRUNC (unita_doc.dt_annul)     AS dt_creazione,
           unita_doc.AA_KEY_UNITA_DOC     AS ANNO,
           unita_doc.id_sub_strut         AS id_sub_strut
      FROM ARO_UNITA_DOC unita_doc
     WHERE  unita_doc.TI_ANNUL = 'ANNULLAMENTO';

-- changeset root:1751897635013-998
CREATE OR REPLACE FORCE VIEW "STAT_V_CONTA_UD_DOC_COMP" ("ID_STRUT", "ID_REGISTRO_UNITA_DOC", "AA_KEY_UNITA_DOC", "ID_CATEG_TIPO_UNITA_DOC", "DT_CONTA", "NUM_UD", "NUM_DOC", "NUM_COMP", "NUM_BYTE") AS select
conta_ud.id_strut, conta_ud.id_registro_unita_doc, conta_ud.aa_key_unita_doc, conta_ud.id_categ_tipo_unita_doc, conta_ud.dt_conta,
num_ud, num_doc, num_comp, num_byte

from STAT_V_CONTA_UD conta_ud
join STAT_V_CONTA_DOC conta_doc
 on (conta_doc.id_strut = conta_ud.id_strut
 and conta_doc.id_registro_unita_doc = conta_ud.id_registro_unita_doc 
 and conta_doc.aa_key_unita_doc = conta_ud.aa_key_unita_doc
 and conta_doc.id_categ_tipo_unita_doc = conta_ud.id_categ_tipo_unita_doc
 and conta_doc.dt_conta = conta_ud.dt_conta)

join STAT_V_CONTA_COMP conta_comp
 on (conta_comp.id_strut = conta_ud.id_strut
 and conta_comp.id_registro_unita_doc = conta_ud.id_registro_unita_doc 
 and conta_comp.aa_key_unita_doc = conta_ud.aa_key_unita_doc
 and conta_comp.id_categ_tipo_unita_doc = conta_ud.id_categ_tipo_unita_doc
 and conta_comp.dt_conta = conta_ud.dt_conta);

-- changeset root:1751897635013-999
CREATE OR REPLACE FORCE VIEW "STAT_V_CONTA_UD_DOC_COMP_PRINC" ("ID_STRUT", "ID_REGISTRO_UNITA_DOC", "AA_KEY_UNITA_DOC", "ID_CATEG_TIPO_UNITA_DOC", "ID_TIPO_UNITA_DOC", "ID_TIPO_DOC_PRINCIPALE", "DT_CONTA", "NUM_UD", "NUM_DOC", "NUM_COMP", "NUM_BYTE") AS select
conta_doc.id_strut, conta_doc.id_registro_unita_doc, conta_doc.aa_key_unita_doc, conta_doc.id_categ_tipo_unita_doc, conta_doc.id_tipo_unita_doc, conta_doc.id_tipo_doc_principale, conta_doc.dt_conta,
nvl(conta_ud.num_ud, 0), conta_doc.num_doc, conta_comp.num_comp, conta_comp.num_byte

from STAT_V_CONTA_DOC_PRINC conta_doc

join STAT_V_CONTA_COMP_PRINC conta_comp
 on (conta_comp.id_strut = conta_doc.id_strut
 and conta_comp.id_registro_unita_doc = conta_doc.id_registro_unita_doc 
 and conta_comp.aa_key_unita_doc = conta_doc.aa_key_unita_doc
 and conta_comp.id_categ_tipo_unita_doc = conta_doc.id_categ_tipo_unita_doc
 and conta_comp.id_tipo_unita_doc = conta_doc.id_tipo_unita_doc
 and conta_comp.id_tipo_doc_principale = conta_doc.id_tipo_doc_principale
 and conta_comp.dt_conta = conta_doc.dt_conta)

left join STAT_V_CONTA_UD_PRINC conta_ud					-- in una data e' possibile che siano stati solo aggiunti doc e non versate ud
 on (conta_ud.id_strut = conta_doc.id_strut
 and conta_ud.id_registro_unita_doc = conta_doc.id_registro_unita_doc
 and conta_ud.aa_key_unita_doc = conta_doc.aa_key_unita_doc
 and conta_ud.id_categ_tipo_unita_doc = conta_doc.id_categ_tipo_unita_doc
 and conta_ud.id_tipo_unita_doc = conta_doc.id_tipo_unita_doc
 and conta_ud.id_tipo_doc_principale = conta_doc.id_tipo_doc_principale
 and conta_ud.dt_conta = conta_doc.dt_conta);

-- changeset root:1751897635013-1000
CREATE OR REPLACE FORCE VIEW "ARO_V_LIS_FIRMA_COMP" ("ID_COMP_DOC", "ID_FIRMA_COMP", "PG_FIRMA", "CD_FIRMATARIO", "NM_COGNOME_FIRMATARIO", "NM_FIRMATARIO", "TI_FORMATO_FIRMA", "TI_ESITO_CONTR_CONFORME", "TM_RIF_TEMP_USATO", "TI_RIF_TEMP_USATO", "TI_ESITO_VERIF_FIRMA", "DS_MSG_ESITO_VERIF_FIRMA", "TI_ESITO_VERIF_FIRMA_DT_VERS", "DS_MSG_VERIF_FIRMA_DT_VERS") AS select
-- info componente
 comp_doc.id_comp_doc,

-- info firma
 firma.id_firma_comp, 
 firma.pg_firma,
 firma.cd_firmatario, 
 case
	when firma.nm_cognome_firmatario is null and firma.dl_dn_firmatario is not null
		then firma.dl_dn_firmatario
		else firma.nm_cognome_firmatario
 end nm_cognome_firmatario,
 firma.nm_firmatario, 
 firma.ti_formato_firma, 
 firma.ti_esito_contr_conforme,   
 firma.tm_rif_temp_usato,
 firma.ti_rif_temp_usato,
 firma.ti_esito_verif_firma,
 firma.ds_msg_esito_verif_firma,

-- info verifica firma a data versamento
 ver_firma_dt_vers.ti_esito_verif_firma ti_esito_verif_firma_dt_vers, ver_firma_dt_vers.ds_msg_esito_verif_firma ds_msg_verif_firma_dt_vers
 
from ARO_COMP_DOC comp_doc

join ARO_STRUT_DOC strut_doc
 on (strut_doc.id_strut_doc = comp_doc.id_strut_doc
 and strut_doc.fl_strut_orig = '1')
join ARO_DOC doc
 on (doc.id_doc = strut_doc.id_doc)

join ARO_FIRMA_COMP firma
 on (firma.id_comp_doc = comp_doc.id_comp_doc)
 
left join ARO_VERIF_FIRMA_DT_VERS ver_firma_dt_vers
 on (ver_firma_dt_vers.id_firma_comp = firma.id_firma_comp);

-- changeset root:1751897635013-1001
COMMENT ON COLUMN ARO_V_LIS_FIRMA_COMP.ID_FIRMA_COMP IS 'PK.1 relativa a tabella ARO_FIRMA_COMP';

-- changeset root:1751897635013-1002
CREATE OR REPLACE FORCE VIEW "ELV_V_CHK_ADD_DOC_AGG" ("ID_DOC", "ID_ELENCO_VERS_COR", "FL_ADD_DOC_UD_OK", "FL_ALL_ADD_DOC_PREC_OK") AS select
 doc.id_doc,
 ele_cor.id_elenco_vers id_elenco_vers_cor,
 
 case
	when ud.id_elenco_vers = ele_cor.id_elenco_vers
		then '1'
		else
			case
				when ud.id_elenco_vers is not null
				and  ele_ud.ti_stato_elenco in ('INDICI_AIP_GENERATI', 'ELENCO_INDICI_AIP_CREATO',
												'ELENCO_INDICI_AIP_FIRMATO', 'ELENCO_INDICI_AIP_ERR_MARCA', 'COMPLETATO')
					then '1'
					else '0'
			end
 end fl_add_doc_ud_ok,
 
 
 case
	when exists (select *
				 from ELV_V_CHK_DOC_PREC chk_doc_prec
				 where chk_doc_prec.id_doc_cor = doc.id_doc
				 and chk_doc_prec.id_elenco_vers_cor = ele_cor.id_elenco_vers
				 and chk_doc_prec.fl_doc_prec_ok = '0'
				 )
		then '0'
		else '1'
 end fl_all_add_doc_prec_ok

from ARO_DOC doc
join ARO_UNITA_DOC ud
	on (ud.id_unita_doc = doc.id_unita_doc)
left join ELV_ELENCO_VERS ele_ud
	on (ele_ud.id_elenco_vers = ud.id_elenco_vers)

join ELV_ELENCO_VERS ele_cor
 on (ele_cor.id_elenco_vers > 0);

-- changeset root:1751897635013-1003
COMMENT ON COLUMN ELV_V_CHK_ADD_DOC_AGG.ID_DOC IS 'PK.1';

-- changeset root:1751897635013-1004
COMMENT ON COLUMN ELV_V_CHK_ADD_DOC_AGG.ID_ELENCO_VERS_COR IS 'PK.2';

-- changeset root:1751897635013-1005
CREATE OR REPLACE FORCE VIEW "ELV_V_LIS_DOC_BY_ELENCO" ("ID_ELENCO_VERS", "ID_UNITA_DOC", "ID_STRUT_UNITA_DOC", "CD_REGISTRO_KEY_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "ID_TIPO_UNITA_DOC", "ID_REGISTRO_UNITA_DOC", "ID_SUB_STRUT", "DS_KEY_ORD", "TI_STATO_ELENCO_VERS", "TI_STATO_CONSERVAZIONE", "ID_DOC", "ID_STRUT_DOC", "DT_CREAZIONE_DOC", "FL_FORZA_ACCETTAZIONE", "FL_FORZA_CONSERVAZIONE", "ID_TIPO_DOC", "TI_DOC", "PG_DOC", "NI_ORD_DOC") AS select
 ud.id_elenco_vers,
 
-- ===============================================================================
-- colonne unità documentaria
 ud.id_unita_doc id_unita_doc, 
 ud.id_strut id_strut_unita_doc, ud.cd_registro_key_unita_doc cd_registro_key_unita_doc, ud.aa_key_unita_doc, ud.cd_key_unita_doc cd_key_unita_doc, 
 ud.id_tipo_unita_doc,
 ud.id_registro_unita_doc,
 ud.id_sub_strut,
 ud.ds_key_ord,
 
 ud.ti_stato_ud_elenco_vers ti_stato_elenco_vers,
 ud.ti_stato_conservazione,

-- ===============================================================================
-- colonne documento
 doc.id_doc id_doc,
 doc.id_strut id_strut_doc, doc.dt_creazione dt_creazione_doc,
 doc.fl_forza_accettazione, doc.fl_forza_conservazione,
 doc.id_tipo_doc,
 doc.ti_doc,
 doc.pg_doc,
 doc.ni_ord_doc

from ARO_UNITA_DOC ud
join ARO_DOC doc
 on (doc.id_unita_doc = ud.id_unita_doc)

where doc.ti_creazione = 'VERSAMENTO_UNITA_DOC' 

UNION

select
 doc.id_elenco_vers,
 
-- ===============================================================================
-- colonne unità documentaria
 ud.id_unita_doc id_unita_doc, 
 ud.id_strut id_strut_unita_doc, ud.cd_registro_key_unita_doc cd_registro_key_unita_doc, ud.aa_key_unita_doc, ud.cd_key_unita_doc cd_key_unita_doc, 
 ud.id_tipo_unita_doc,
 ud.id_registro_unita_doc,
 ud.id_sub_strut,
 ud.ds_key_ord,
 
 case
	when doc.ti_stato_doc_elenco_vers is null
		then ud.ti_stato_ud_elenco_vers
		else doc.ti_stato_doc_elenco_vers
 end ti_stato_elenco_vers,
 ud.ti_stato_conservazione,
 
-- ===============================================================================
-- colonne documento
 doc.id_doc id_doc,
 doc.id_strut id_strut_doc, doc.dt_creazione dt_creazione_doc,
 doc.fl_forza_accettazione, doc.fl_forza_conservazione,
 doc.id_tipo_doc,
 doc.ti_doc,
 doc.pg_doc,
 doc.ni_ord_doc

from ARO_DOC doc
join ARO_UNITA_DOC ud 
 on (ud.id_unita_doc = doc.id_unita_doc)

where doc.ti_creazione = 'AGGIUNTA_DOCUMENTO';

-- changeset root:1751897635013-1006
COMMENT ON COLUMN ELV_V_LIS_DOC_BY_ELENCO.ID_DOC IS 'PK.1';

-- changeset root:1751897635013-1007
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_AGG_STRUT" ("ID_STRUT", "TI_STATO_VERS", "TI_DT_CREAZIONE", "NI_AGG") AS SELECT id_strut,
             ti_stato_vers,
             ti_dt_creazione,
             COUNT (1)     ni_agg
        FROM (SELECT ses.id_strut,
                     CASE
                         WHEN EXISTS
                                  (SELECT 1
                                     FROM VRS_DATI_SESSIONE_VERS_ko dato_ses
                                          JOIN VRS_ERR_SESSIONE_VERS_ko err
                                              ON (err.id_dati_sessione_vers_ko =
                                                  dato_ses.id_dati_sessione_vers_ko
                                              AND err.cd_err IN
                                                      ('UD-005', 'UD-005-001'))
                                    WHERE dato_ses.id_sessione_vers_ko =
                                          ses.id_sessione_vers_ko
                                      AND EXISTS
                                              (SELECT 1
                                                 FROM ARO_UNITA_DOC ud
                                                WHERE ud.id_strut =
                                                      ses.id_strut
                                                  AND ud.cd_registro_key_unita_doc =
                                                      ses.cd_registro_key_unita_doc
                                                  AND ud.aa_key_unita_doc =
                                                      ses.aa_key_unita_doc
                                                  AND ud.cd_key_unita_doc =
                                                      ses.cd_key_unita_doc
                                                  AND ud.dt_annul >=
                                                      ses.dt_apertura)) THEN
                             'RISOLTO'
                         WHEN EXISTS
                                  (SELECT 1
                                     FROM ARO_UNITA_DOC ud, ARO_DOC doc
                                    WHERE ud.id_strut = ses.id_strut
                                      AND ud.cd_registro_key_unita_doc =
                                          ses.cd_registro_key_unita_doc
                                      AND ud.aa_key_unita_doc =
                                          ses.aa_key_unita_doc
                                      AND ud.cd_key_unita_doc =
                                          ses.cd_key_unita_doc
                                      AND ud.dt_annul =
                                          TO_DATE ('31/12/2444', 'dd/mm/yyyy')
                                      AND doc.id_unita_doc = ud.id_unita_doc
                                      AND doc.cd_key_doc_vers =
                                          ses.cd_key_doc_vers
                                      AND doc.dt_annul >= ses.dt_apertura) THEN
                             'RISOLTO'
                         ELSE
                             CASE
                                 WHEN ses.fl_sessione_err_verif = '0' THEN
                                     'NO_VERIF'
                                 WHEN ses.fl_sessione_err_verif = '1'
                                  AND ses.fl_sessione_err_non_risolub = '0' THEN
                                     'VERIF'
                                 WHEN ses.fl_sessione_err_verif = '1'
                                  AND ses.fl_sessione_err_non_risolub = '1' THEN
                                     'NO_RISOLUB'
                                 ELSE
                                     '??'
                             END
                     END    ti_stato_vers,
                     CASE
                         WHEN ses.dt_apertura BETWEEN TRUNC (SYSDATE)
                                                  AND SYSDATE + 1 / 24 THEN
                             'OGGI'
                         ELSE
                             '30gg'
                     END    ti_dt_creazione
                FROM VRS_SESSIONE_VERS_ko ses
               WHERE ses.ti_sessione_vers = 'AGGIUNGI_DOCUMENTO'
                -- AND ses.ti_stato_sessione_vers = 'CHIUSA_ERR'
                 AND ses.dt_apertura BETWEEN TRUNC (SYSDATE - 30)
                                         AND SYSDATE + 1 / 24)
    GROUP BY id_strut, ti_stato_vers, ti_dt_creazione;

-- changeset root:1751897635013-1008
COMMENT ON COLUMN MON_V_CNT_AGG_STRUT.ID_STRUT IS 'PK.1 relativa a tabella ORG_STRUT';

-- changeset root:1751897635013-1009
COMMENT ON COLUMN MON_V_CNT_AGG_STRUT.TI_STATO_VERS IS 'PK.2';

-- changeset root:1751897635013-1010
COMMENT ON COLUMN MON_V_CNT_AGG_STRUT.TI_DT_CREAZIONE IS 'PK.3';

-- changeset root:1751897635013-1011
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_AGG_STRUT_B30" ("ID_STRUT", "TI_STATO_VERS", "NI_AGG") AS SELECT id_strut, ti_stato_vers, COUNT (1) ni_agg
        FROM (SELECT ses.id_strut,
                     CASE
                         WHEN EXISTS
                                  (SELECT 1
                                     FROM VRS_DATI_SESSIONE_VERS_ko dato_ses
                                          JOIN VRS_ERR_SESSIONE_VERS_ko err
                                              ON (err.id_dati_sessione_vers_ko =
                                                  dato_ses.id_dati_sessione_vers_ko
                                              AND err.cd_err IN
                                                      ('UD-005', 'UD-005-001'))
                                    WHERE dato_ses.id_sessione_vers_ko =
                                          ses.id_sessione_vers_ko
                                      AND EXISTS
                                              (SELECT 1
                                                 FROM ARO_UNITA_DOC ud
                                                WHERE ud.id_strut =
                                                      ses.id_strut
                                                  AND ud.cd_registro_key_unita_doc =
                                                      ses.cd_registro_key_unita_doc
                                                  AND ud.aa_key_unita_doc =
                                                      ses.aa_key_unita_doc
                                                  AND ud.cd_key_unita_doc =
                                                      ses.cd_key_unita_doc
                                                  AND ud.dt_annul >=
                                                      ses.dt_apertura)) THEN
                             'RISOLTO'
                         WHEN EXISTS
                                  (SELECT 1
                                     FROM ARO_UNITA_DOC ud, ARO_DOC doc
                                    WHERE ud.id_strut = ses.id_strut
                                      AND ud.cd_registro_key_unita_doc =
                                          ses.cd_registro_key_unita_doc
                                      AND ud.aa_key_unita_doc =
                                          ses.aa_key_unita_doc
                                      AND ud.cd_key_unita_doc =
                                          ses.cd_key_unita_doc
                                      AND ud.dt_annul =
                                          TO_DATE ('31/12/2444', 'dd/mm/yyyy')
                                      AND doc.id_unita_doc = ud.id_unita_doc
                                      AND doc.cd_key_doc_vers =
                                          ses.cd_key_doc_vers
                                      AND doc.dt_annul >= ses.dt_apertura) THEN
                             'RISOLTO'
                         ELSE
                             CASE
                                 WHEN ses.fl_sessione_err_verif = '0' THEN
                                     'NO_VERIF'
                                 WHEN ses.fl_sessione_err_verif = '1'
                                  AND ses.fl_sessione_err_non_risolub = '0' THEN
                                     'VERIF'
                                 WHEN ses.fl_sessione_err_verif = '1'
                                  AND ses.fl_sessione_err_non_risolub = '1' THEN
                                     'NO_RISOLUB'
                                 ELSE
                                     '??'
                             END
                     END    ti_stato_vers
                FROM VRS_SESSIONE_VERS_ko ses
               WHERE ses.ti_sessione_vers = 'AGGIUNGI_DOCUMENTO'
                 AND ses.ti_stato_sessione_vers = 'CHIUSA_ERR'
                 AND ses.dt_apertura BETWEEN TO_DATE ('01-01-2000',
                                                      'dd-mm-yyyy')
                                         AND TO_DATE (
                                                    TO_CHAR (
                                                        TRUNC (SYSDATE - 31),
                                                        'dd-mm-yyyy')
                                                 || '23:59:59',
                                                 'dd-mm-yyyy hh24:mi:ss'))
    GROUP BY id_strut, ti_stato_vers;

-- changeset root:1751897635013-1012
COMMENT ON COLUMN MON_V_CNT_AGG_STRUT_B30.ID_STRUT IS 'PK.1';

-- changeset root:1751897635013-1013
COMMENT ON COLUMN MON_V_CNT_AGG_STRUT_B30.TI_STATO_VERS IS 'PK.2';

-- changeset root:1751897635013-1014
CREATE OR REPLACE FORCE VIEW "VRS_V_AGG_FALLITI_RISOLTO" ("ID_STRUT", "ID_SESSIONE_VERS", "DT_APERTURA", "CD_REGISTRO_KEY_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "CD_KEY_DOC_VERS", "FL_RISOLTO", "FL_SESSIONE_ERR_VERIF", "FL_SESSIONE_ERR_NON_RISOLUB") AS SELECT id_strut,
           id_sessione_vers_ko,
           dt_apertura,
           cd_registro_key_unita_doc,
           aa_key_unita_doc,
           cd_key_unita_doc,
           cd_key_doc_vers,
           CASE
               WHEN EXISTS
                        (SELECT 1
                           FROM VRS_DATI_SESSIONE_VERS_ko  dato_ses
                                JOIN VRS_ERR_SESSIONE_VERS_ko err
                                    ON (err.id_dati_sessione_vers_ko =
                                        dato_ses.id_dati_sessione_vers_ko
                                    AND err.cd_err IN
                                            ('UD-005', 'UD-005-001'))
                          WHERE dato_ses.id_sessione_vers_ko =
                                ses.id_sessione_vers_ko) THEN
                   CASE
                       WHEN EXISTS
                                (SELECT 1
                                   FROM ARO_UNITA_DOC ud
                                  WHERE ud.id_strut = ses.id_strut
                                    AND ud.cd_registro_key_unita_doc =
                                        ses.cd_registro_key_unita_doc
                                    AND ud.aa_key_unita_doc =
                                        ses.aa_key_unita_doc
                                    AND ud.cd_key_unita_doc =
                                        ses.cd_key_unita_doc
                                    AND ud.dt_annul >=
                                        TRUNC (ses.dt_apertura)) THEN
                           '1'
                       ELSE
                           '0'
                   END
               ELSE
                   CASE
                       WHEN EXISTS
                                (SELECT 1
                                   FROM ARO_UNITA_DOC ud, ARO_DOC doc
                                  WHERE ud.id_strut = ses.id_strut
                                    AND ud.cd_registro_key_unita_doc =
                                        ses.cd_registro_key_unita_doc
                                    AND ud.aa_key_unita_doc =
                                        ses.aa_key_unita_doc
                                    AND ud.cd_key_unita_doc =
                                        ses.cd_key_unita_doc
                                    AND doc.id_unita_doc = ud.id_unita_doc
                                    AND doc.cd_key_doc_vers =
                                        ses.cd_key_doc_vers
                                    AND doc.dt_annul >=
                                        TRUNC (ses.dt_apertura)) THEN
                           '1'
                       ELSE
                           '0'
                   END
           END    fl_risolto,
           fl_sessione_err_verif,
           fl_sessione_err_non_risolub
      FROM VRS_SESSIONE_VERS_ko ses
     WHERE ses.ti_sessione_vers = 'AGGIUNGI_DOCUMENTO';

-- changeset root:1751897635013-1015
COMMENT ON COLUMN VRS_V_AGG_FALLITI_RISOLTO.ID_SESSIONE_VERS IS 'PK.1 relativa a tabella VRS_SESSIONE_VERS_KO';

-- changeset root:1751897635013-1016
CREATE OR REPLACE FORCE VIEW "VRS_V_SESSIONE_AGG_RISOLTA" ("ID_STRUT", "TI_SESSIONE_VERS", "TI_STATO_SESSIONE_VERS", "DT_CHIUSURA", "FL_SES_RISOLTA", "FL_SES_NON_RISOLUB", "TI_DT_CREAZIONE", "FL_VERIF") AS SELECT ses.id_strut,
           ses.ti_sessione_vers,
           ses.ti_stato_sessione_vers,
           ses.dt_chiusura,
           CASE
               WHEN (EXISTS
                         (SELECT 1
                            FROM VRS_DATI_SESSIONE_VERS_ko  dato_ses,
                                 VRS_ERR_SESSIONE_VERS_ko   err
                           WHERE dato_ses.id_sessione_vers_ko =
                                 ses.id_sessione_vers_ko
                             AND err.id_dati_sessione_vers_ko =
                                 dato_ses.id_dati_sessione_vers_ko
                             AND err.cd_err IN ('UD-005', 'UD-005-001'))
                 AND EXISTS
                         (SELECT 1
                            FROM ARO_UNITA_DOC ud
                           WHERE ud.id_strut = ses.id_strut
                             AND ud.cd_registro_key_unita_doc =
                                 ses.cd_registro_key_unita_doc
                             AND ud.aa_key_unita_doc = ses.aa_key_unita_doc
                             AND ud.cd_key_unita_doc = ses.cd_key_unita_doc))
                 OR EXISTS
                        (SELECT 1
                           FROM ARO_UNITA_DOC ud, ARO_DOC doc
                          WHERE ud.id_strut = ses.id_strut
                            AND ud.cd_registro_key_unita_doc =
                                ses.cd_registro_key_unita_doc
                            AND ud.aa_key_unita_doc = ses.aa_key_unita_doc
                            AND ud.cd_key_unita_doc = ses.cd_key_unita_doc
                            AND doc.id_unita_doc = ud.id_unita_doc
                            AND doc.cd_key_doc_vers = ses.cd_key_doc_vers) THEN
                   '1'
               ELSE
                   '0'
           END                                fl_ses_risolta,
           ses.fl_sessione_err_non_risolub    fl_ses_non_risolub,
           CASE
               WHEN ses.dt_chiusura BETWEEN TRUNC (SYSDATE) AND SYSDATE THEN
                   'CORR'
               WHEN ses.dt_chiusura BETWEEN TRUNC (SYSDATE - 6)
                                        AND TO_DATE (
                                                   TO_CHAR (
                                                       TRUNC (SYSDATE - 1),
                                                       'dd-mm-yyyy')
                                                || ' 23:59:59',
                                                'dd-mm-yyyy HH24:mi:ss') THEN
                   '6_GG_PREC_CORR'
               ELSE
                   'PREC_6_GG_PREC_CORR'
           END                                ti_dt_creazione,
           ses.fl_sessione_err_verif
      FROM VRS_SESSIONE_VERS_ko ses
     WHERE ses.ti_sessione_vers = 'AGGIUNGI_DOCUMENTO';

-- changeset root:1751897635013-1017
CREATE OR REPLACE FORCE VIEW "ARO_V_RIC_DATI_SPEC" ("ID_UNITA_DOC", "ID_DOC", "ID_COMP_DOC", "TI_ENTITA_SACER", "ID_VALORE_ATTRIB_DATI_SPEC", "ID_ATTRIB_DATI_SPEC", "DL_VALORE") AS select
-- info uso xsd
 uso_xsd.id_unita_doc,
 uso_xsd.id_doc,
 uso_xsd.id_comp_doc,
 uso_xsd.ti_entita_sacer,
 
-- info valore dato specifico
 val.id_valore_attrib_dati_spec,
 val.id_attrib_dati_spec,
 upper(val.dl_valore)

from ARO_USO_XSD_DATI_SPEC uso_xsd

join ARO_VALORE_ATTRIB_DATI_SPEC val
 on (val.id_uso_xsd_dati_spec = uso_xsd.id_uso_xsd_dati_spec)
where uso_xsd.ti_uso_xsd = 'VERS';

-- changeset root:1751897635013-1018
CREATE OR REPLACE FORCE VIEW "VRS_V_UPD_FASCICOLO_KO" ("ID_FASCICOLO_KO", "TS_INI_FIRST_SES", "TS_INI_LAST_SES", "ID_ERR_SACER_PRINC", "DS_ERR_PRINC", "ID_TIPO_FASCICOLO_LAST", "TI_STATO_FASCICOLO_KO", "ID_SES_FASCICOLO_KO_FIRST", "ID_SES_FASCICOLO_KO_LAST") AS select
 tmp.id_fascicolo_ko,
 prima_ses_ko.ts_ini_ses ts_ini_first_ses,
 ultima_ses_ko.ts_ini_ses ts_ini_last_ses,
 case
	when (select count(distinct id_err_sacer_princ)
		  from VRS_SES_FASCICOLO_KO ses_err
		  where ses_err.id_fascicolo_ko = tmp.id_fascicolo_ko
		  ) = 1
			then ultima_ses_ko.id_err_sacer_princ
			else null
 end id_err_sacer_princ,
 case
	when (select count(distinct id_err_sacer_princ)
		  from VRS_SES_FASCICOLO_KO ses_err
		  where ses_err.id_fascicolo_ko = tmp.id_fascicolo_ko
		  ) = 1
			then ultima_ses_ko.ds_err_princ
			else null
 end ds_err_princ,
 ultima_ses_ko.id_tipo_fascicolo id_tipo_fascicolo_last,
 
 case
	when exists (select *												-- esiste almeno una sessione NON_VERIFICATO
				 from VRS_SES_FASCICOLO_KO ses_stato
				 where ses_stato.id_fascicolo_ko = tmp.id_fascicolo_ko
				 and ses_stato.ti_stato_ses = 'NON_VERIFICATO'
				 )
		then 'NON_VERIFICATO'

	when not exists (select *											-- tutte le sessioni sono NON_RISOLUBILE
				 from VRS_SES_FASCICOLO_KO ses_stato
				 where ses_stato.id_fascicolo_ko = tmp.id_fascicolo_ko
				 and ses_stato.ti_stato_ses != 'NON_RISOLUBILE'
				 )
		then 'NON_RISOLUBILE'	
		else 'VERIFICATO'												-- tutte le sessioni sono VERIFICATO o NON_RISOLUBILE
 end ti_stato_fascicolo_ko,
 
 tmp.id_ses_fascicolo_ko_first,
 tmp.id_ses_fascicolo_ko_last
 
from (
		select										-- determina per fascicolo prima ed ultima sessione fallita
		 fasc_ko.id_fascicolo_ko, 
		 min(first_ses_ko.id_ses_fascicolo_ko) id_ses_fascicolo_ko_first, 
		 max(last_ses_ko.id_ses_fascicolo_ko) id_ses_fascicolo_ko_last
		from VRS_FASCICOLO_KO fasc_ko
		join VRS_SES_FASCICOLO_KO first_ses_ko
		 on (first_ses_ko.id_fascicolo_ko = fasc_ko.id_fascicolo_ko)
		join VRS_SES_FASCICOLO_KO last_ses_ko
		 on (last_ses_ko.id_fascicolo_ko = fasc_ko.id_fascicolo_ko)
		 
		where first_ses_ko.ts_ini_ses = (select min (min_ses_ko.ts_ini_ses)
										 from VRS_SES_FASCICOLO_KO min_ses_ko
										 where min_ses_ko.id_fascicolo_ko = fasc_ko.id_fascicolo_ko
										)
		and last_ses_ko.ts_ini_ses = (select max (max_ses_ko.ts_ini_ses)
									  from VRS_SES_FASCICOLO_KO max_ses_ko
									  where max_ses_ko.id_fascicolo_ko = fasc_ko.id_fascicolo_ko
									 )
		group by fasc_ko.id_fascicolo_ko
	) tmp
join VRS_SES_FASCICOLO_KO prima_ses_ko
	on (prima_ses_ko.id_ses_fascicolo_ko = tmp.id_ses_fascicolo_ko_first)
join VRS_SES_FASCICOLO_KO ultima_ses_ko
	on (ultima_ses_ko.id_ses_fascicolo_ko = tmp.id_ses_fascicolo_ko_last);

-- changeset root:1751897635013-1019
COMMENT ON COLUMN VRS_V_UPD_FASCICOLO_KO.ID_FASCICOLO_KO IS 'PK.1';

-- changeset root:1751897635013-1020
CREATE OR REPLACE FORCE VIEW "SER_V_BUCO_NUMERAZIONE_UD" ("ID_CONTENUTO_VER_SERIE", "PG_UD_SER_INI_BUCO", "PG_UD_SER_FIN_BUCO") AS select
id_contenuto_ver_serie, 
pg_ud_ser_ini_buco, 
pg_ud_ser_fin_buco

from (
	 select
	 ud_inizio_buco.id_contenuto_ver_serie,
	 ud_inizio_buco.pg_ud_serie + 1 pg_ud_ser_ini_buco,
	 
	 (select min (ud_min_sup.pg_ud_serie) - 1
	  from ARO_UD_APPART_VER_SERIE ud_min_sup
	  where ud_min_sup.id_contenuto_ver_serie = ud_inizio_buco.id_contenuto_ver_serie
	  and ud_min_sup.pg_ud_serie > ud_inizio_buco.pg_ud_serie
	 ) pg_ud_ser_fin_buco
	 
	-- ud_fine_buco.pg_ud_serie - 1 pg_ud_ser_fin_buco
	 
	from SER_V_UD_INIZIO_BUCO ud_inizio_buco
	--join ARO_UD_APPART_VER_SERIE ud_fine_buco
	-- on (ud_fine_buco.id_contenuto_ver_serie = ud_inizio_buco.id_contenuto_ver_serie
	-- and ud_fine_buco.pg_ud_serie > ud_inizio_buco.pg_ud_serie)
	/*
	where ud_fine_buco.pg_ud_serie = (select min (ud_min_sup.pg_ud_serie)
									  from ARO_UD_APPART_VER_SERIE ud_min_sup
									  where ud_min_sup.id_contenuto_ver_serie = ud_inizio_buco.id_contenuto_ver_serie
									  and ud_min_sup.pg_ud_serie > ud_inizio_buco.pg_ud_serie
									 )
	*/
	) tmp
where tmp.pg_ud_ser_fin_buco is not null;

-- changeset root:1751897635013-1021
CREATE OR REPLACE FORCE VIEW "ELV_V_LIS_FASC_ANNUL_BY_ELENCO" ("ID_RICH_ANNUL_VERS", "ID_ELENCO_VERS_FASC", "ID_FASCICOLO", "DS_URN_FASCICOLO_ANNUL") AS select 
 rich_ann.id_rich_annul_vers,
 fasc.id_elenco_vers_fasc,
 fasc.id_fascicolo,
 
 'urn:' ||
 (select ds_valore_param_applic || ':'
  from APL_V_GETVAL_PARAM_BY_APL
  where nm_param_applic = 'SISTEMA_CONSERVAZIONE'
  ) ||
 (select ente.nm_ente || ':' || strut.nm_strut
  from ORG_STRUT strut
  join ORG_ENTE ente
	on (ente.id_ente = strut.id_ente)
  where strut.id_strut = fasc.id_fascicolo
  )  || ':' ||
 fasc.aa_fascicolo || '-' || fasc.cd_key_fascicolo ds_urn_fascicolo_annul

from ARO_RICH_ANNUL_VERS rich_ann
join ARO_ITEM_RICH_ANNUL_VERS item
 on (item.id_rich_annul_vers = rich_ann.id_rich_annul_vers
  and item.ti_item_rich_annul_vers = 'FASC')
join FAS_FASCICOLO fasc
 on (fasc.id_fascicolo = item.id_fascicolo)
 
join org_strut strut
 on (strut.id_strut = fasc.id_strut and strut.fl_cessato = 0)
join org_ente ente
 on (ente.id_ente = strut.id_ente and ente.fl_cessato = 0)
join org_ambiente amb
 on (amb.id_ambiente = ente.id_ambiente);

-- changeset root:1751897635013-1022
COMMENT ON COLUMN ELV_V_LIS_FASC_ANNUL_BY_ELENCO.ID_FASCICOLO IS 'PK.1';

-- changeset root:1751897635013-1023
CREATE OR REPLACE FORCE VIEW "ARO_V_LIS_ITEM_RICH_ANNVRS" ("ID_ITEM_RICH_ANNUL_VERS", "ID_RICH_ANNUL_VERS", "PG_ITEM_RICH_ANNUL_VERS", "DS_KEY_ITEM", "TI_STATO_ITEM", "DT_CREAZIONE", "ID_UNITA_DOC", "DS_LISTA_ERR", "TI_ITEM_RICH_ANNUL_VERS", "CD_REGISTRO_KEY_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "AA_FASCICOLO", "CD_KEY_FASCICOLO") AS select 
item_rich.id_item_rich_annul_vers,
item_rich.id_rich_annul_vers,
item_rich.pg_item_rich_annul_vers,

--item_rich.cd_registro_key_unita_doc || '-' || item_rich.aa_key_unita_doc || '-' || item_rich.cd_key_unita_doc ds_key_unita_doc
case
	when item_rich.ti_item_rich_annul_vers = 'UNI_DOC'
		then item_rich.cd_registro_key_unita_doc || '-' || item_rich.aa_key_unita_doc || '-' || item_rich.cd_key_unita_doc
		else item_rich.aa_fascicolo || '-' || item_rich.cd_key_fascicolo
end ds_key_item,

item_rich.ti_stato_item,
ud.dt_creazione,
item_rich.id_unita_doc,

case
	when exists (select *
				 from ARO_ERR_RICH_ANNUL_VERS err_rich
				 where err_rich.id_item_rich_annul_vers = item_rich.id_item_rich_annul_vers
				)
		then (select listagg (err_rich.ti_err || '-' || err_rich.ds_err, '; ') within group (order by err_rich.ti_err) 
			  from ARO_ERR_RICH_ANNUL_VERS err_rich
			  where err_rich.id_item_rich_annul_vers = item_rich.id_item_rich_annul_vers
			  )
end ds_lista_err,
item_rich.ti_item_rich_annul_vers,
item_rich.cd_registro_key_unita_doc,
item_rich.aa_key_unita_doc,
item_rich.cd_key_unita_doc,

item_rich.aa_fascicolo,
item_rich.cd_key_fascicolo

from ARO_ITEM_RICH_ANNUL_VERS item_rich
left join ARO_UNITA_DOC ud
 on (ud.id_unita_doc = item_rich.id_unita_doc)
 
where item_rich.ti_item_rich_annul_vers in ('UNI_DOC', 'FASC');

-- changeset root:1751897635013-1024
COMMENT ON COLUMN ARO_V_LIS_ITEM_RICH_ANNVRS.ID_ITEM_RICH_ANNUL_VERS IS 'PK.1';

-- changeset root:1751897635013-1025
CREATE OR REPLACE FORCE VIEW "MON_V_CHK_AGG_AMB" ("ID_AMBIENTE", "ID_USER_IAM", "FL_AGG_RISOLTI_CORR", "FL_AGG_RISOLTI_30GG", "FL_AGG_NOVERIF_CORR", "FL_AGG_NOVERIF_30GG", "FL_AGG_VERIF_CORR", "FL_AGG_VERIF_30GG", "FL_AGG_NORISOLUB_CORR", "FL_AGG_NORISOLUB_30GG") AS select
amb.id_ambiente,
utente.id_user_iam,

--
--			RISOLTI
--

case
	when exists (select *
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_AGG_FALLITI_RISOLTO ses
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ses.id_strut = abil.id_organiz_applic
				and ses.dt_apertura between trunc(sysdate) and sysdate + 1/24
				and ses.fl_risolto = '1'
				)
		then '1'
		else '0'
end fl_agg_risolti_corr,
case
	when exists (select *
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_AGG_FALLITI_RISOLTO ses
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ses.id_strut = abil.id_organiz_applic
				and ses.dt_apertura between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss') 
				and ses.fl_risolto = '1'
				)
		then '1'
		else '0'
end fl_agg_risolti_30gg ,

--
--			NON VERIFICATI
--

case
	when exists (select *
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_AGG_FALLITI_RISOLTO ses
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ses.id_strut = abil.id_organiz_applic
				and ses.dt_apertura between trunc(sysdate) and sysdate + 1/24
				and ses.fl_risolto = '0'
				and ses.fl_sessione_err_verif = '0'
				)
		then '1'
		else '0'
end fl_agg_noverif_corr,
case
	when exists (select *
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_AGG_FALLITI_RISOLTO ses
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ses.id_strut = abil.id_organiz_applic
				and ses.dt_apertura between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss') 
				and ses.fl_risolto = '0'
				and ses.fl_sessione_err_verif = '0'
				)
		then '1'
		else '0'
end fl_agg_noverif_30gg,

--
--			VERIFICATI
--

case
	when exists (select *
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_AGG_FALLITI_RISOLTO ses
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ses.id_strut = abil.id_organiz_applic
				and ses.dt_apertura between trunc(sysdate) and sysdate + 1/24
				and ses.fl_risolto = '0'
				and ses.fl_sessione_err_verif = '1'
				)
		then '1'
		else '0'
end fl_agg_verif_corr,
case
	when exists (select *
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_AGG_FALLITI_RISOLTO ses
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ses.id_strut = abil.id_organiz_applic
				and ses.dt_apertura between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss') 
				and ses.fl_risolto = '0'
				and ses.fl_sessione_err_verif = '1'
				and ses.fl_sessione_err_non_risolub = '0'
				)
		then '1'
		else '0'
end fl_agg_verif_30gg,

--
--			NON RISOLUBILI
--

case
	when exists (select *
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_AGG_FALLITI_RISOLTO ses
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ses.id_strut = abil.id_organiz_applic
				and ses.dt_apertura between trunc(sysdate) and sysdate + 1/24
				and ses.fl_risolto = '0'
				and ses.fl_sessione_err_verif = '1'
				and ses.fl_sessione_err_non_risolub = '1'
				)
		then '1'
		else '0'
end fl_agg_norisolub_corr,
case
	when exists (select *
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_AGG_FALLITI_RISOLTO ses
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ses.id_strut = abil.id_organiz_applic
				and ses.dt_apertura between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss') 
				and ses.fl_risolto = '0'
				and ses.fl_sessione_err_verif = '1'
				and ses.fl_sessione_err_non_risolub = '1'
				)
		then '1'
		else '0'
end fl_agg_norisolub_30gg


from ORG_AMBIENTE amb
join IAM_USER utente
 on (utente.id_user_iam > 0);

-- changeset root:1751897635013-1026
COMMENT ON COLUMN MON_V_CHK_AGG_AMB.ID_AMBIENTE IS 'PK.1 relativa a tabella ORG_AMBIENTE';

-- changeset root:1751897635013-1027
COMMENT ON COLUMN MON_V_CHK_AGG_AMB.ID_USER_IAM IS 'PK.2 relativa a tabella IAM_USER';

-- changeset root:1751897635013-1028
CREATE OR REPLACE FORCE VIEW "MON_V_CHK_AGG_ENTE" ("ID_ENTE", "ID_USER_IAM", "FL_AGG_RISOLTI_CORR", "FL_AGG_RISOLTI_30GG", "FL_AGG_NOVERIF_CORR", "FL_AGG_NOVERIF_30GG", "FL_AGG_VERIF_CORR", "FL_AGG_VERIF_30GG", "FL_AGG_NORISOLUB_CORR", "FL_AGG_NORISOLUB_30GG") AS select
ente.id_ente,
utente.id_user_iam,

--
--			RISOLTI
--


case
	when exists (select *
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_AGG_FALLITI_RISOLTO ses
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ses.id_strut = abil.id_organiz_applic
				and ses.dt_apertura between trunc(sysdate) and sysdate + 1/24
				and ses.fl_risolto = '1'
				)
		then '1'
		else '0'
end fl_agg_risolti_corr,
case
	when exists (select *
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_AGG_FALLITI_RISOLTO ses
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ses.id_strut = abil.id_organiz_applic
				and ses.dt_apertura between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
				and ses.fl_risolto = '1'
				)
		then '1'
		else '0'
end fl_agg_risolti_30gg,

--
--			NON VERIFICATI
--

case
	when exists (select *
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_AGG_FALLITI_RISOLTO ses
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ses.id_strut = abil.id_organiz_applic
				and ses.dt_apertura between trunc(sysdate) and sysdate + 1/24
				and ses.fl_risolto = '0'
				and ses.fl_sessione_err_verif = '0'
				)
		then '1'
		else '0'
end fl_agg_noverif_corr,
case
	when exists (select *
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_AGG_FALLITI_RISOLTO ses
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ses.id_strut = abil.id_organiz_applic
				and ses.dt_apertura between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
				and ses.fl_risolto = '0'
				and ses.fl_sessione_err_verif = '0'
				)
		then '1'
		else '0'
end fl_agg_noverif_30gg,

--
--			VERIFICATI
--

case
	when exists (select *
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_AGG_FALLITI_RISOLTO ses
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ses.id_strut = abil.id_organiz_applic
				and ses.dt_apertura between trunc(sysdate) and sysdate + 1/24
				and ses.fl_risolto = '0'
				and ses.fl_sessione_err_verif = '1'
				and ses.fl_sessione_err_non_risolub = '0'
				)
		then '1'
		else '0'
end fl_agg_verif_corr,
case
	when exists (select *
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_AGG_FALLITI_RISOLTO ses
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ses.id_strut = abil.id_organiz_applic
				and ses.dt_apertura between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
				and ses.fl_risolto = '0'
				and ses.fl_sessione_err_verif = '1'
				and ses.fl_sessione_err_non_risolub = '0'
				)
		then '1'
		else '0'
end fl_agg_verif_30gg,

--
--			NON RISOLUBILI
--

case
	when exists (select *
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_AGG_FALLITI_RISOLTO ses
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ses.id_strut = abil.id_organiz_applic
				and ses.dt_apertura between trunc(sysdate) and sysdate + 1/24
				and ses.fl_risolto = '0'
				and ses.fl_sessione_err_verif = '1'
				and ses.fl_sessione_err_non_risolub = '1'
				)
		then '1'
		else '0'
end fl_agg_norisolub_corr,
case
	when exists (select *
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_AGG_FALLITI_RISOLTO ses
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ses.id_strut = abil.id_organiz_applic
				and ses.dt_apertura between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
				and ses.fl_risolto = '0'
				and ses.fl_sessione_err_verif = '1'
				and ses.fl_sessione_err_non_risolub = '1'
				)
		then '1'
		else '0'
end fl_agg_norisolub_30gg


from ORG_ENTE ente
join IAM_USER utente
 on (utente.id_user_iam > 0);

-- changeset root:1751897635013-1029
COMMENT ON COLUMN MON_V_CHK_AGG_ENTE.ID_ENTE IS 'PK.1 relativa a tabella ORG_ENTE';

-- changeset root:1751897635013-1030
COMMENT ON COLUMN MON_V_CHK_AGG_ENTE.ID_USER_IAM IS 'PK.2 relativa a tabella IAM_USER';

-- changeset root:1751897635013-1031
CREATE OR REPLACE FORCE VIEW "MON_V_CHK_AGG_STRUT" ("ID_STRUT", "FL_AGG_RISOLTI_CORR", "FL_AGG_RISOLTI_30GG", "FL_AGG_NOVERIF_CORR", "FL_AGG_NOVERIF_30GG", "FL_AGG_VERIF_CORR", "FL_AGG_VERIF_30GG", "FL_AGG_NORISOLUB_CORR", "FL_AGG_NORISOLUB_30GG") AS select
strut.id_strut,
--
--			RISOLTI
--

case
	when exists (select *
				from VRS_V_AGG_FALLITI_RISOLTO ses
				where ses.id_strut = strut.id_strut
				and ses.dt_apertura between trunc(sysdate) and sysdate + 1/24
				and ses.fl_risolto = '1'
				)
		then '1'
		else '0'
end fl_agg_risolti_corr,
case
	when exists (select *
				from VRS_V_AGG_FALLITI_RISOLTO ses
				where ses.id_strut = strut.id_strut
				and ses.dt_apertura between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss') 
				and ses.fl_risolto = '1'
				)
		then '1'
		else '0'
end fl_agg_risolti_30gg ,

--
--			NON VERIFICATI
--

case
	when exists (select *
				from VRS_V_AGG_FALLITI_RISOLTO ses
				where ses.id_strut = strut.id_strut
				and ses.dt_apertura between trunc(sysdate) and sysdate + 1/24
				and ses.fl_risolto = '0'
				and ses.fl_sessione_err_verif = '0'
				)
		then '1'
		else '0'
end fl_agg_noverif_corr,
case
	when exists (select *
				from VRS_V_AGG_FALLITI_RISOLTO ses
				where ses.id_strut = strut.id_strut
				and ses.dt_apertura between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')  
				and ses.fl_risolto = '0'
				and ses.fl_sessione_err_verif = '0'
				)
		then '1'
		else '0'
end fl_agg_noverif_30gg,

--
--			VERIFICATI
--

case
	when exists (select *
				from VRS_V_AGG_FALLITI_RISOLTO ses
				where ses.id_strut = strut.id_strut
				and ses.dt_apertura between trunc(sysdate) and sysdate + 1/24
				and ses.fl_risolto = '0'
				and ses.fl_sessione_err_verif = '1'
				and ses.fl_sessione_err_non_risolub = '0'
				)
		then '1'
		else '0'
end fl_agg_verif_corr,
case
	when exists (select *
				from VRS_V_AGG_FALLITI_RISOLTO ses
				where ses.id_strut = strut.id_strut
				and ses.dt_apertura between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')  
				and ses.fl_risolto = '0'
				and ses.fl_sessione_err_verif = '1'
				and ses.fl_sessione_err_non_risolub = '0'
				)
		then '1'
		else '0'
end fl_agg_verif_30gg,

--
--			NON RISOLUBILI
--

case
	when exists (select *
				from VRS_V_AGG_FALLITI_RISOLTO ses
				where ses.id_strut = strut.id_strut
				and ses.dt_apertura between trunc(sysdate) and sysdate + 1/24
				and ses.fl_risolto = '0'
				and ses.fl_sessione_err_verif = '1'
				and ses.fl_sessione_err_non_risolub = '1'
				)
		then '1'
		else '0'
end fl_agg_norisolub_corr,
case
	when exists (select *
				from VRS_V_AGG_FALLITI_RISOLTO ses
				where ses.id_strut = strut.id_strut
				and ses.dt_apertura between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')  
				and ses.fl_risolto = '0'
				and ses.fl_sessione_err_verif = '1'
				and ses.fl_sessione_err_non_risolub = '1'
				)
		then '1'
		else '0'
end fl_agg_norisolub_30gg

from ORG_STRUT strut;

-- changeset root:1751897635013-1032
COMMENT ON COLUMN MON_V_CHK_AGG_STRUT.ID_STRUT IS 'PK.1 relativa a tabella ORG_STRUT';

-- changeset root:1751897635013-1033
CREATE OR REPLACE FORCE VIEW "MON_V_LIS_VERS_DOC_NON_VERS" ("ID_SESSIONE_VERS", "DT_APERTURA", "DT_CHIUSURA", "ID_STRUT", "CD_REGISTRO_KEY_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "CD_KEY_DOC_VERS", "TI_SESSIONE_VERS", "FL_SESSIONE_ERR_VERIF", "FL_SESSIONE_ERR_NON_RISOLUB", "CD_ERR", "DS_ERR") AS SELECT -- info sessione
           ses.id_sessione_vers_ko,
           ses.dt_apertura,
           ses.dt_chiusura,
           ses.id_strut,
           ses.cd_registro_key_unita_doc,
           ses.aa_key_unita_doc,
           ses.cd_key_unita_doc,
           ses.cd_key_doc_vers,
           ses.ti_sessione_vers,
           ses.fl_sessione_err_verif,
           ses.fl_sessione_err_non_risolub,
           -- info errore

           ses.cd_err_princ,
           ses.ds_err_princ
      FROM VRS_SESSIONE_VERS_ko ses
     WHERE ses.ti_sessione_vers = 'AGGIUNGI_DOCUMENTO'
      -- AND ses.ti_stato_sessione_vers = 'CHIUSA_ERR'
       --  il predicato serve per escludere versamenti falliti risolti su DOC che poi viene annullato e poi si ri-versa il DOC fallendo
       AND NOT EXISTS
               (SELECT 1
                  FROM VRS_V_AGG_FALLITI_RISOLTO ses_risolte
                 WHERE ses_risolte.id_sessione_vers = ses.id_sessione_vers_ko
                   AND ses_risolte.fl_risolto = '1');

-- changeset root:1751897635013-1034
COMMENT ON COLUMN MON_V_LIS_VERS_DOC_NON_VERS.ID_SESSIONE_VERS IS 'PK.1';

-- changeset root:1751897635013-1035
CREATE OR REPLACE FORCE VIEW "ARO_V_LIS_LINK_UNITA_DOC" ("ID_UNITA_DOC", "ID_LINK_UNITA_DOC", "CD_REGISTRO_KEY_UNITA_DOC_LINK", "AA_KEY_UNITA_DOC_LINK", "CD_KEY_UNITA_DOC_LINK", "DS_LINK_UNITA_DOC", "FL_RISOLTO", "ID_UNITA_DOC_COLLEG", "DT_REG_UNITA_DOC", "ID_STRUT") AS select
-- collegamento che "parte" da UD corrente
-- info unita documentaria
 ud_cor.id_unita_doc,
-- info collegamento 
 colleg.id_link_unita_doc,
 colleg.cd_registro_key_unita_doc_link, colleg.aa_key_unita_doc_link, colleg.cd_key_unita_doc_link,
 colleg.ds_link_unita_doc,
 case
	when colleg.id_unita_doc_link is not null 
		then '1'
     else '0'
 end fl_risolto,
 colleg.id_unita_doc_link id_unita_doc_colleg,
 ud_colleg.dt_reg_unita_doc dt_reg_unita_doc,
 ud_cor.id_strut
from ARO_UNITA_DOC ud_cor
join ARO_LINK_UNITA_DOC colleg
 on (colleg.id_unita_doc = ud_cor.id_unita_doc)
left join ARO_UNITA_DOC ud_colleg
 on (ud_colleg.id_unita_doc = colleg.id_unita_doc_link)
UNION

select 
-- collegamento che "arriva" ad UD corrente
-- info unita documentaria
 ud_cor.id_unita_doc,
-- info collegamento 
 colleg.id_link_unita_doc,
 ud_colleg.cd_registro_key_unita_doc, ud_colleg.aa_key_unita_doc, ud_colleg.cd_key_unita_doc,
 colleg.ds_link_unita_doc, 
 '1' fl_risolto,
 colleg.id_unita_doc id_unita_doc_colleg,
 ud_colleg.dt_reg_unita_doc dt_reg_unita_doc,
 ud_cor.id_strut

from ARO_UNITA_DOC ud_cor
join ARO_LINK_UNITA_DOC colleg
 on (colleg.id_strut = ud_cor.id_strut
 and colleg.cd_registro_key_unita_doc_link = ud_cor.cd_registro_key_unita_doc
 and colleg.aa_key_unita_doc_link = ud_cor.aa_key_unita_doc
 and colleg.cd_key_unita_doc_link = ud_cor.cd_key_unita_doc)
join ARO_UNITA_DOC ud_colleg
 on (ud_colleg.id_unita_doc = colleg.id_unita_doc)
 -- sto navigando la relazione al contrario, quindi se id_unita_doc_link è nullo si tratta di una situazione anomala che 
 -- va sanata con un update della ARO_LINK_UNITA_DOC
 where colleg.id_unita_doc_link is not null;

-- changeset root:1751897635013-1036
COMMENT ON COLUMN ARO_V_LIS_LINK_UNITA_DOC.ID_LINK_UNITA_DOC IS 'PK.1 relativa a tabella ARO_LINK_UNITA_DOC';

-- changeset root:1751897635013-1037
CREATE OR REPLACE FORCE VIEW "ARO_V_CHK_NOTA_OBBLIG" ("ID_VER_INDICE_AIP", "FL_OK_NOTE_OBBLIG") AS select
id_ver_indice_aip,
case
	when exists (select *
				 from DEC_TIPO_NOTA_UNITA_DOC tipo_nota
				 where tipo_nota.fl_obblig = '1'
				 and not exists (select *
								 from ARO_NOTA_UNITA_DOC nota
								 where nota.id_ver_indice_aip = ver_indice_aip.id_ver_indice_aip
								 and nota.id_tipo_nota_unita_doc = tipo_nota.id_tipo_nota_unita_doc))
		then '0'
        else '1'
end fl_ok_note_obblig
from ARO_VER_INDICE_AIP_UD ver_indice_aip;

-- changeset root:1751897635013-1038
COMMENT ON COLUMN ARO_V_CHK_NOTA_OBBLIG.ID_VER_INDICE_AIP IS 'PK.1';

-- changeset root:1751897635013-1039
CREATE OR REPLACE FORCE VIEW "ELV_V_LISAIPUD_URNDACALC_BYELE" ("ID_ELENCO_VERS", "DT_CREAZIONE", "ID_UNITA_DOC", "DT_VERS_MAX", "CD_KEY_UNITA_DOC_NORMALIZ") AS select
 ver_ix_aip.id_elenco_vers,
 ver_ix_aip.dt_creazione,
 
 ud.id_unita_doc,
 
 (select dt_max.dt_vers_max
  from ARO_V_DT_VERS_MAX_BY_UNITA_DOC dt_max
  where dt_max.id_unita_doc = ud.id_unita_doc
 ) dt_vers_max,
 ud.cd_key_unita_doc_normaliz
 
from ARO_VER_INDICE_AIP_UD ver_ix_aip
join ARO_INDICE_AIP_UD ix_aip
	on (ix_aip.id_indice_aip = ver_ix_aip.id_indice_aip)
join ARO_UNITA_DOC ud
	on (ud.id_unita_doc = ix_aip.id_unita_doc);

-- changeset root:1751897635013-1040
COMMENT ON COLUMN ELV_V_LISAIPUD_URNDACALC_BYELE.ID_ELENCO_VERS IS 'PK.1';

-- changeset root:1751897635013-1041
COMMENT ON COLUMN ELV_V_LISAIPUD_URNDACALC_BYELE.ID_UNITA_DOC IS 'PK.2';

-- changeset root:1751897635013-1042
CREATE OR REPLACE FORCE VIEW "ELV_V_LISTA_COMP_ELV" ("ID_ELENCO_VERS", "ID_UNITA_DOC", "ID_STRUT_UNITA_DOC", "CD_REGISTRO_KEY_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "ID_TIPO_UNITA_DOC", "ID_REGISTRO_UNITA_DOC", "ID_SUB_STRUT", "TI_STATO_CONSERVAZIONE", "ID_DOC", "ID_STRUT_DOC", "DT_CREAZIONE_DOC", "FL_FORZA_ACCETTAZIONE", "FL_FORZA_CONSERVAZIONE", "ID_TIPO_DOC", "ID_COMP_DOC", "DS_URN_COMP_CALC", "DS_URN_COMP_CALC_SHORT", "DS_NOME_COMP_VERS", "TI_SUPPORTO_COMP", "NI_SIZE_FILE_CALC", "FL_COMP_FIRMATO", "TI_ESITO_VERIF_FIRME_VERS", "DS_HASH_FILE_VERS", "DL_URN_COMP_VERS", "TI_ESITO_CONTR_FORMATO_FILE", "DS_FORMATO_RAPPR_CALC", "DS_FORMATO_RAPPR_ESTESO_CALC", "DS_HASH_FILE_CALC", "DS_ALGO_HASH_FILE_CALC", "CD_ENCODING_HASH_FILE_CALC", "ID_TIPO_STRUT_DOC", "ID_STRUT_TIPO_STRUT", "NM_TIPO_STRUT_DOC", "ID_TIPO_COMP_DOC", "NM_TIPO_COMP_DOC", "ID_FORMATO_FILE_DOC_VERS", "ID_STRUT_FORMATO_FILE_VERS", "NM_FORMATO_FILE_DOC_VERS", "NM_MIMETYPE_FILE", "ID_FIRMA_COMP", "TI_ESITO_CONTR_CONFORME", "DT_SCAD_CERTIF_FIRMATARIO", "DS_ORD_COMP", "TI_STATO_ELENCO_VERS") AS select
 lis_doc.id_elenco_vers,
 
-- ===============================================================================
-- colonne unità documentaria
 lis_doc.id_unita_doc id_unita_doc, 
 lis_doc.id_strut_unita_doc, lis_doc.cd_registro_key_unita_doc, lis_doc.aa_key_unita_doc, lis_doc.cd_key_unita_doc, 
 lis_doc.id_tipo_unita_doc,
 lis_doc.id_registro_unita_doc,
 lis_doc.id_sub_strut,
 lis_doc.ti_stato_conservazione,

-- ===============================================================================
-- colonne documento
 lis_doc.id_doc,
 lis_doc.id_strut_doc, lis_doc.dt_creazione_doc,
 lis_doc.fl_forza_accettazione, lis_doc.fl_forza_conservazione,
 lis_doc.id_tipo_doc,

-- ===============================================================================
-- colonne componente
 comp_doc.id_comp_doc id_comp_doc, 
 case
	when exists (select *
				 from ARO_COMP_URN_CALC urn
				 where urn.id_comp_doc = comp_doc.id_comp_doc
				 )
		then (select ds_urn
			 from ARO_COMP_URN_CALC urn
			 where urn.id_comp_doc = comp_doc.id_comp_doc
			 and ti_urn = 'ORIGINALE'
			 )
		else comp_doc.ds_urn_comp_calc
 end ds_urn_comp_calc, 
 case
	when exists (select *
				 from ARO_COMP_URN_CALC urn
				 where urn.id_comp_doc = comp_doc.id_comp_doc
				 )
		then lis_doc.cd_registro_key_unita_doc || '-' || to_char(lis_doc.aa_key_unita_doc) || '-' || lis_doc.cd_key_unita_doc || ':' || 
			 'DOC' || lpad(lis_doc.ni_ord_doc, 5, '0') || ':' || 
			 case
				when comp_doc.id_comp_doc_padre is null
					then lpad(comp_doc.ni_ord_comp_doc, 5, '0')
					else (select lpad (comp_padre.ni_ord_comp_doc, 5, '0')
						  from ARO_COMP_DOC comp_padre
						  where comp_padre.id_comp_doc = comp_doc.id_comp_doc_padre
						 )
			 end ||
			 case
				when comp_doc.id_comp_doc_padre is null
					then ''
					else ':' || lpad (comp_doc.ni_ord_comp_doc, 5, '0')
			 end
		else
			case
				when lis_doc.ti_doc = 'PRINCIPALE'
					then lis_doc.cd_registro_key_unita_doc || '-' || to_char(lis_doc.aa_key_unita_doc) || '-' || lis_doc.cd_key_unita_doc || '-' || lis_doc.ti_doc || ':' || 
						to_char(strut_doc.ni_ord_strut_doc) || ':' || to_char(comp_doc.ni_ord_comp_doc)
					else lis_doc.cd_registro_key_unita_doc || '-' || to_char(lis_doc.aa_key_unita_doc) || '-' || lis_doc.cd_key_unita_doc || '-' || lis_doc.ti_doc || '-' || to_char(lis_doc.pg_doc) || ':' || 
						to_char(strut_doc.ni_ord_strut_doc) || ':' || to_char(comp_doc.ni_ord_comp_doc)
			end
 end ds_urn_comp_calc_short,
 comp_doc.ds_nome_comp_vers ds_nome_comp_vers,
 comp_doc.ti_supporto_comp ti_supporto_comp,
 comp_doc.ni_size_file_calc ni_size_file_calc,
 comp_doc.fl_comp_firmato fl_comp_firmato,
 comp_doc.ti_esito_verif_firme ti_esito_verif_firme_vers,
 
 comp_doc.ds_hash_file_vers, comp_doc.dl_urn_comp_vers, 
 comp_doc.ti_esito_contr_formato_file, comp_doc.ds_formato_rappr_calc, comp_doc.ds_formato_rappr_esteso_calc, 
 comp_doc.ds_hash_file_calc, comp_doc.ds_algo_hash_file_calc, comp_doc.cd_encoding_hash_file_calc,
 
-- ======================================================================================
-- colonne tipo struttura e tipo componente 
 tipo_strut.id_tipo_strut_doc, 
 tipo_strut.id_strut id_strut_tipo_strut, tipo_strut.nm_tipo_strut_doc,
 tipo_comp.id_tipo_comp_doc, tipo_comp.nm_tipo_comp_doc,
 
-- ======================================================================================
-- colonne formato file versato 
 formato_vers.id_formato_file_doc id_formato_file_doc_vers, 
 formato_vers.id_strut id_strut_formato_file_vers, formato_vers.nm_formato_file_doc nm_formato_file_doc_vers,

-- ======================================================================================
-- colonne formato file calcolato
 formato_std.nm_mimetype_file,
 
-- ======================================================================================
-- colonne firme su componente
 firma_comp.id_firma_comp, firma_comp.ti_esito_contr_conforme ti_esito_contr_conforme,

-- ======================================================================================
-- colonne certificati firmatari delle firme su componente
 certif_firmatario.dt_fin_val_certif_firmatario dt_scad_certif_firmatario,

-- ======================================================================================
-- colonna per ordinamento lista componenti 
 lis_doc.ds_key_ord || '-' ||
 case
   when lis_doc.ti_doc = 'PRINCIPALE' then 'A'
   when lis_doc.ti_doc = 'ALLEGATO' then 'B'
   when lis_doc.ti_doc = 'ANNESSO' then 'C'
   else 'D'
 end || '-' ||
 lpad(to_char(lis_doc.pg_doc), 4, '0') || '-' || lpad(to_char(strut_doc.ni_ord_strut_doc), 4, '0') || '-' || lpad(to_char(comp_doc.ni_ord_comp_doc), 4, '0') ds_ord_comp,
 
 lis_doc.ti_stato_elenco_vers

from ELV_V_LIS_DOC_BY_ELENCO lis_doc
join ARO_STRUT_DOC strut_doc
 on (strut_doc.id_doc = lis_doc.id_doc)
join ARO_COMP_DOC comp_doc 
 on (comp_doc.id_strut_doc = strut_doc.id_strut_doc)

join DEC_TIPO_COMP_DOC tipo_comp
 on (tipo_comp.id_tipo_comp_doc = comp_doc.id_tipo_comp_doc)
join DEC_TIPO_STRUT_DOC tipo_strut
 on (tipo_strut.id_tipo_strut_doc = tipo_comp.id_tipo_strut_doc) 

left join DEC_FORMATO_FILE_DOC formato_vers
 on (formato_vers.id_formato_file_doc = comp_doc.id_formato_file_vers)

left join DEC_FORMATO_FILE_STANDARD formato_std
 on (formato_std.id_formato_file_standard = comp_doc.id_formato_file_calc)

left join ARO_FIRMA_COMP firma_comp
 on (firma_comp.id_comp_doc = comp_doc.id_comp_doc) 
left join FIR_CERTIF_FIRMATARIO certif_firmatario
 on (certif_firmatario.id_certif_firmatario = firma_comp.id_certif_firmatario);

-- changeset root:1751897635013-1043
COMMENT ON COLUMN ELV_V_LISTA_COMP_ELV.ID_COMP_DOC IS 'PK.1';

-- changeset root:1751897635013-1044
COMMENT ON COLUMN ELV_V_LISTA_COMP_ELV.ID_FIRMA_COMP IS 'PK.2';

-- changeset root:1751897635013-1045 splitStatements:true
CREATE OR REPLACE FORCE VIEW "ARO_V_LIS_CONTROFIRMA_FIRMA" ("ID_FIRMA_COMP", "ID_CONTROFIRMA_FIRMA", "NM_COGNOME_FIRMATARIO", "NM_FIRMATARIO", "CD_FIRMATARIO") AS select
 firma.id_firma_comp,
 contr_firma.id_controfirma_firma,

 case
    when firma_figlio.nm_cognome_firmatario is null and firma_figlio.dl_dn_firmatario is not null
       then firma_figlio.dl_dn_firmatario
       else firma_figlio.nm_cognome_firmatario
 end nm_cognome_firmatario,
 firma_figlio.nm_firmatario,
 firma_figlio.cd_firmatario

from ARO_FIRMA_COMP firma

join ARO_CONTROFIRMA_FIRMA contr_firma
 on (contr_firma.id_firma_padre = firma.id_firma_comp)

join ARO_FIRMA_COMP firma_figlio
 on (firma_figlio.id_firma_comp = contr_firma.id_firma_figlio);
COMMENT ON TABLE ARO_V_LIS_CONTROFIRMA_FIRMA IS 'La vista e'' utilizzata per visualizzare la lista dei contro-firmatari di una determinata firma. Va acceduta utilizzando l''id_firma_comp del PADRE';

-- changeset root:1751897635013-1046
COMMENT ON COLUMN ARO_V_LIS_CONTROFIRMA_FIRMA.ID_CONTROFIRMA_FIRMA IS 'PK.1 relativa a tabella ARO_CONTROFIRMA_FIRMA';

-- changeset root:1751897635013-1047
CREATE OR REPLACE FORCE VIEW "ARO_V_LISAIPUD_SISTEMA_MIGRAZ" ("ID_AMBIENTE", "NM_AMBIENTE", "ID_ENTE", "NM_ENTE", "ID_STRUT", "NM_STRUT", "ID_UNITA_DOC", "NM_SISTEMA_MIGRAZ", "ID_LINK_UNITA_DOC", "DS_LINK_UNITA_DOC", "ID_UNITA_DOC_AIP", "CD_REGISTRO_KEY_UNITA_DOC_AIP", "AA_KEY_UNITA_DOC_AIP", "CD_KEY_UNITA_DOC_AIP") AS select 
-- info di organizzazione
 amb.id_ambiente, amb.nm_ambiente, 
 ente.id_ente, ente.nm_ente, 
 strut.id_strut, strut.nm_strut,

-- collegamento risolto che "parte" o "arriva" ad UD corrente:
-- info unita documentaria
 ud_cor.id_unita_doc,
 ud_cor.nm_sistema_migraz,

-- info collegamento
 colleg.id_link_unita_doc,
 colleg.ds_link_unita_doc,
 
-- info unita doc aip 
 ud_colleg_aip.id_unita_doc id_unita_doc_aip,
 ud_colleg_aip.cd_registro_key_unita_doc cd_registro_key_unita_doc_aip, 
 ud_colleg_aip.aa_key_unita_doc aa_key_unita_doc_aip, 
 ud_colleg_aip.cd_key_unita_doc cd_key_unita_doc_aip 

from ARO_UNITA_DOC ud_cor
join ARO_V_LIS_LINK_UNITA_DOC colleg
 on (colleg.id_unita_doc = ud_cor.id_unita_doc and colleg.fl_risolto = '1')
join ARO_UNITA_DOC ud_colleg_aip
 on (ud_colleg_aip.id_unita_doc = colleg.id_unita_doc_colleg)
 
join ORG_STRUT strut
 on (strut.id_strut = ud_colleg_aip.id_strut)
join ORG_ENTE ente 
 on (ente.id_ente = strut.id_ente)
join ORG_AMBIENTE amb
 on (amb.id_ambiente = ente.id_ambiente)
 
join DEC_TIPO_UNITA_DOC tipo_ud 
 on (tipo_ud.id_tipo_unita_doc = ud_colleg_aip.id_tipo_unita_doc)
join DEC_CATEG_TIPO_UNITA_DOC categ_tipo_ud
 on (categ_tipo_ud.id_categ_tipo_unita_doc = tipo_ud.id_categ_tipo_unita_doc and categ_tipo_ud.cd_categ_tipo_unita_doc = 'precedente_indice_aip');

-- changeset root:1751897635013-1048
COMMENT ON COLUMN ARO_V_LISAIPUD_SISTEMA_MIGRAZ.ID_LINK_UNITA_DOC IS 'PK.1 relativa a tabella ARO_LINK_UNITA_DOC';

-- changeset root:1751897635013-1049
CREATE OR REPLACE FORCE VIEW "FAS_V_LIS_UD_BY_FASC" ("ID_UNITA_DOC", "ID_FASCICOLO", "DT_VERS_MAX", "CD_KEY_UNITA_DOC_NORMALIZ") AS select
 ud_fasc.id_unita_doc,
 ud_fasc.id_fascicolo,
 
 (select dt_max.dt_vers_max
  from ARO_V_DT_VERS_MAX_BY_UNITA_DOC dt_max
  where dt_max.id_unita_doc = ud_fasc.id_unita_doc
  ) dt_vers_max,
  
 cd_key_unita_doc_normaliz
  
from FAS_UNITA_DOC_FASCICOLO ud_fasc
join ARO_UNITA_DOC ud
	on (ud.id_unita_doc = ud_fasc.id_unita_doc);

-- changeset root:1751897635013-1050
COMMENT ON COLUMN FAS_V_LIS_UD_BY_FASC.ID_UNITA_DOC IS 'PK.1';

-- changeset root:1751897635013-1051
COMMENT ON COLUMN FAS_V_LIS_UD_BY_FASC.ID_FASCICOLO IS 'PK.2';

-- changeset root:1751897635013-1052
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_VERS_STRUT" ("ID_STRUT", "TI_STATO_VERS", "TI_DT_CREAZIONE", "NI_VERS") AS SELECT id_strut,
             ti_stato_vers,
             ti_dt_creazione,
             COUNT (1)     ni_vers
        FROM (SELECT ses.id_strut,
                     CASE
                         WHEN EXISTS
                                  (SELECT 1
                                     FROM ARO_UNITA_DOC ud
                                    WHERE ud.id_strut = ses.id_strut
                                      AND ud.cd_registro_key_unita_doc =
                                          ses.cd_registro_key_unita_doc
                                      AND ud.aa_key_unita_doc =
                                          ses.aa_key_unita_doc
                                      AND ud.cd_key_unita_doc =
                                          ses.cd_key_unita_doc
                                      AND ud.dt_annul >= ses.dt_apertura) THEN
                             'RISOLTO'
                         ELSE
                             CASE
                                 WHEN ses.fl_sessione_err_verif = '0' THEN
                                     'NO_VERIF'
                                 WHEN ses.fl_sessione_err_verif = '1'
                                  AND ses.fl_sessione_err_non_risolub = '0' THEN
                                     'VERIF'
                                 WHEN ses.fl_sessione_err_verif = '1'
                                  AND ses.fl_sessione_err_non_risolub = '1' THEN
                                     'NO_RISOLUB'
                                 ELSE
                                     '??'
                             END
                     END    ti_stato_vers,
                     CASE
                         WHEN ses.dt_apertura BETWEEN TRUNC (SYSDATE)
                                                  AND SYSDATE + 1 / 24 THEN
                             'OGGI'
                         ELSE
                             '30gg'
                     END    ti_dt_creazione
                FROM VRS_SESSIONE_VERS_ko ses
               WHERE ses.ti_sessione_vers = 'VERSAMENTO'
                 --AND ses.ti_stato_sessione_vers = 'CHIUSA_ERR'
                 AND ses.dt_apertura BETWEEN TRUNC (SYSDATE - 30)
                                         AND SYSDATE + 1 / 24)
    GROUP BY id_strut, ti_stato_vers, ti_dt_creazione;

-- changeset root:1751897635013-1053
COMMENT ON COLUMN MON_V_CNT_VERS_STRUT.ID_STRUT IS 'PK.1 relativa a tabella ORG_STRUT';

-- changeset root:1751897635013-1054
COMMENT ON COLUMN MON_V_CNT_VERS_STRUT.TI_STATO_VERS IS 'PK.2';

-- changeset root:1751897635013-1055
COMMENT ON COLUMN MON_V_CNT_VERS_STRUT.TI_DT_CREAZIONE IS 'PK.3';

-- changeset root:1751897635013-1056
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_VERS_STRUT_B30" ("ID_STRUT", "TI_STATO_VERS", "NI_VERS") AS SELECT id_strut, ti_stato_vers, COUNT (1) ni_vers
        FROM (SELECT ses.id_strut,
                     CASE
                         WHEN EXISTS
                                  (SELECT 1
                                     FROM ARO_UNITA_DOC ud
                                    WHERE ud.id_strut = ses.id_strut
                                      AND ud.cd_registro_key_unita_doc =
                                          ses.cd_registro_key_unita_doc
                                      AND ud.aa_key_unita_doc =
                                          ses.aa_key_unita_doc
                                      AND ud.cd_key_unita_doc =
                                          ses.cd_key_unita_doc
                                      AND ud.dt_annul >= ses.dt_apertura) THEN
                             'RISOLTO'
                         ELSE
                             CASE
                                 WHEN ses.fl_sessione_err_verif = '0' THEN
                                     'NO_VERIF'
                                 WHEN ses.fl_sessione_err_verif = '1'
                                  AND ses.fl_sessione_err_non_risolub = '0' THEN
                                     'VERIF'
                                 WHEN ses.fl_sessione_err_verif = '1'
                                  AND ses.fl_sessione_err_non_risolub = '1' THEN
                                     'NO_RISOLUB'
                                 ELSE
                                     '??'
                             END
                     END    ti_stato_vers
                FROM VRS_SESSIONE_VERS_ko ses
               WHERE ses.ti_sessione_vers = 'VERSAMENTO'
                 --AND ses.ti_stato_sessione_vers = 'CHIUSA_ERR'
                 AND ses.dt_apertura BETWEEN TO_DATE ('01-01-2000',
                                                      'dd-mm-yyyy')
                                         AND TO_DATE (
                                                    TO_CHAR (
                                                        TRUNC (SYSDATE - 31),
                                                        'dd-mm-yyyy')
                                                 || '23:59:59',
                                                 'dd-mm-yyyy hh24:mi:ss'))
    GROUP BY id_strut, ti_stato_vers;

-- changeset root:1751897635013-1057
COMMENT ON COLUMN MON_V_CNT_VERS_STRUT_B30.ID_STRUT IS 'PK.1';

-- changeset root:1751897635013-1058
COMMENT ON COLUMN MON_V_CNT_VERS_STRUT_B30.TI_STATO_VERS IS 'PK.2';

-- changeset root:1751897635013-1059
CREATE OR REPLACE FORCE VIEW "VRS_V_SESSIONE_VERS_RISOLTA" ("ID_STRUT", "TI_SESSIONE_VERS", "TI_STATO_SESSIONE_VERS", "DT_CHIUSURA", "FL_SES_RISOLTA", "FL_SES_NON_RISOLUB", "TI_DT_CREAZIONE", "FL_VERIF") AS SELECT ses.id_strut,
           ses.ti_sessione_vers,
           ses.ti_stato_sessione_vers,
           ses.dt_chiusura,
           CASE
               WHEN EXISTS
                        (SELECT 1
                           FROM ARO_UNITA_DOC ud
                          WHERE ud.id_strut = ses.id_strut
                            AND ud.cd_registro_key_unita_doc =
                                ses.cd_registro_key_unita_doc
                            AND ud.aa_key_unita_doc = ses.aa_key_unita_doc
                            AND ud.cd_key_unita_doc = ses.cd_key_unita_doc) THEN
                   '1'
               ELSE
                   '0'
           END                                fl_ses_risolta,
           ses.fl_sessione_err_non_risolub    fl_ses_non_risolub,
           CASE
               WHEN ses.dt_chiusura BETWEEN TRUNC (SYSDATE) AND SYSDATE THEN
                   'CORR'
               WHEN ses.dt_chiusura BETWEEN TRUNC (SYSDATE - 6)
                                        AND TO_DATE (
                                                   TO_CHAR (
                                                       TRUNC (SYSDATE - 1),
                                                       'dd-mm-yyyy')
                                                || ' 23:59:59',
                                                'dd-mm-yyyy HH24:mi:ss') THEN
                   '6_GG_PREC_CORR'
               ELSE
                   'PREC_6_GG_PREC_CORR'
           END                                ti_dt_creazione,
           ses.fl_sessione_err_verif
      FROM VRS_SESSIONE_VERS_ko ses
     WHERE ses.ti_sessione_vers = 'VERSAMENTO';

-- changeset root:1751897635013-1060
CREATE OR REPLACE FORCE VIEW "VRS_V_VERS_FALLITI_RISOLTO" ("ID_STRUT", "ID_SESSIONE_VERS", "DT_APERTURA", "CD_REGISTRO_KEY_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "FL_RISOLTO", "FL_SESSIONE_ERR_VERIF", "FL_SESSIONE_ERR_NON_RISOLUB") AS SELECT id_strut,
           id_sessione_vers_ko,
           dt_apertura,
           cd_registro_key_unita_doc,
           aa_key_unita_doc,
           cd_key_unita_doc,
           CASE
               WHEN EXISTS
                        (SELECT 1
                           FROM ARO_UNITA_DOC ud
                          WHERE ud.id_strut = ses.id_strut
                            AND ud.cd_registro_key_unita_doc =
                                ses.cd_registro_key_unita_doc
                            AND ud.aa_key_unita_doc = ses.aa_key_unita_doc
                            AND ud.cd_key_unita_doc = ses.cd_key_unita_doc
                            AND ud.dt_annul >= ses.dt_apertura) THEN
                   '1'
               ELSE
                   '0'
           END    fl_risolto,
           fl_sessione_err_verif,
           fl_sessione_err_non_risolub
      FROM VRS_SESSIONE_VERS_ko ses
     WHERE ses.ti_sessione_vers = 'VERSAMENTO';

-- changeset root:1751897635013-1061
COMMENT ON COLUMN VRS_V_VERS_FALLITI_RISOLTO.ID_SESSIONE_VERS IS 'PK.1 relativa a tabella VRS_SESSIONE_VERS';

-- changeset root:1751897635013-1062
CREATE OR REPLACE FORCE VIEW "VRS_V_MODIF_UPD_UD_KO" ("ID_UPD_UNITA_DOC_KO", "TS_INI_FIRST_SES", "TS_INI_LAST_SES", "ID_ERR_SACER_PRINC", "DS_ERR_PRINC", "ID_CONTROLLO_WS_PRINC", "ID_TIPO_UNITA_DOC_LAST", "ID_REGISTRO_UNITA_DOC_LAST", "ID_TIPO_DOC_PRINC_LAST", "TI_STATO_UPD_UD_KO", "ID_SES_UPD_UD_KO_FIRST", "ID_SES_UPD_UD_KO_LAST") AS select
 tmp.id_upd_unita_doc_ko,
 prima_ses_ko.ts_ini_ses ts_ini_first_ses,
 ultima_ses_ko.ts_ini_ses ts_ini_last_ses,
 
 case
	when (select count(distinct id_err_sacer_princ)
		  from VRS_SES_UPD_UNITA_DOC_KO ses_ko
		  where ses_ko.id_upd_unita_doc_ko = tmp.id_upd_unita_doc_ko
		  ) = 1
			then ultima_ses_ko.id_err_sacer_princ
			else null
 end id_err_sacer_princ,
 case
	when (select count(distinct id_err_sacer_princ)
		  from VRS_SES_UPD_UNITA_DOC_KO ses_ko
		  where ses_ko.id_upd_unita_doc_ko = tmp.id_upd_unita_doc_ko
		  ) = 1
			then ultima_ses_ko.ds_err_princ
			else 'Diversi'
 end ds_err_princ,
 case
	when (select count(distinct id_err_sacer_princ)
		  from VRS_SES_UPD_UNITA_DOC_KO ses_ko
		  where ses_ko.id_upd_unita_doc_ko = tmp.id_upd_unita_doc_ko
		  ) = 1
			then ultima_ses_ko.id_controllo_ws_princ
			else null
 end id_controllo_ws_princ,
 
 ultima_ses_ko.id_tipo_unita_doc id_tipo_unita_doc_last,
 ultima_ses_ko.id_registro_unita_doc id_registro_unita_doc_last,
 ultima_ses_ko.id_tipo_doc_princ id_tipo_doc_princ_last,
 
 case
	when exists (select *												-- esiste almeno una sessione NON_VERIFICATO
				 from VRS_SES_UPD_UNITA_DOC_KO ses_stato
				 where ses_stato.id_upd_unita_doc_ko = tmp.id_upd_unita_doc_ko
				 and ses_stato.ti_stato_ses_upd_ko = 'NON_VERIFICATO'
				 )
		then 'NON_VERIFICATO'

	when not exists (select *											-- tutte le sessioni sono NON_RISOLUBILE
				 from VRS_SES_UPD_UNITA_DOC_KO ses_stato
				 where ses_stato.id_upd_unita_doc_ko = tmp.id_upd_unita_doc_ko
				 and ses_stato.ti_stato_ses_upd_ko != 'NON_RISOLUBILE'
				 )
		then 'NON_RISOLUBILE'	
		else 'VERIFICATO'												-- tutte le sessioni sono VERIFICATO o NON_RISOLUBILE
 end ti_stato_upd_ud_ko,
 
 tmp.id_ses_upd_ud_ko_first,
 tmp.id_ses_upd_ud_ko_last
 
from (
		select	distinct									-- determina per unita doc aggiornata prima ed ultima sessione fallita
		 upd_ko.id_upd_unita_doc_ko, 
		 min(first_ses_ko.id_ses_upd_unita_doc_ko) id_ses_upd_ud_ko_first, 
		 max(last_ses_ko.id_ses_upd_unita_doc_ko) id_ses_upd_ud_ko_last
		from VRS_UPD_UNITA_DOC_KO upd_ko
		join VRS_SES_UPD_UNITA_DOC_KO first_ses_ko
		 on (first_ses_ko.id_upd_unita_doc_ko = upd_ko.id_upd_unita_doc_ko)
		join VRS_SES_UPD_UNITA_DOC_KO last_ses_ko
		 on (last_ses_ko.id_upd_unita_doc_ko = upd_ko.id_upd_unita_doc_ko)
		 
		where first_ses_ko.ts_ini_ses = (select min (min_ses_ko.ts_ini_ses)
										 from VRS_SES_UPD_UNITA_DOC_KO min_ses_ko
										 where min_ses_ko.id_upd_unita_doc_ko = upd_ko.id_upd_unita_doc_ko
										)
		and last_ses_ko.ts_ini_ses = (select max (max_ses_ko.ts_ini_ses)
									  from VRS_SES_UPD_UNITA_DOC_KO max_ses_ko
									  where max_ses_ko.id_upd_unita_doc_ko = upd_ko.id_upd_unita_doc_ko
									 )
		group by upd_ko.id_upd_unita_doc_ko
	) tmp
join VRS_SES_UPD_UNITA_DOC_KO prima_ses_ko
	on (prima_ses_ko.id_ses_upd_unita_doc_ko = tmp.id_ses_upd_ud_ko_first)
join VRS_SES_UPD_UNITA_DOC_KO ultima_ses_ko
	on (ultima_ses_ko.id_ses_upd_unita_doc_ko = tmp.id_ses_upd_ud_ko_last);

-- changeset root:1751897635013-1063
COMMENT ON COLUMN VRS_V_MODIF_UPD_UD_KO.ID_UPD_UNITA_DOC_KO IS 'PK.1';

-- changeset root:1751897635013-1064
CREATE OR REPLACE FORCE VIEW "VRS_V_LIS_SES_ERRATE" ("ID_SESSIONE_VERS", "DT_CHIUSURA", "FL_SESSIONE_ERR_VERIF", "DS_ERR", "CD_ERR") AS SELECT VRS_SESSIONE_VERS_ko.ID_SESSIONE_VERS_ko,
           VRS_SESSIONE_VERS_ko.DT_CHIUSURA,
           VRS_SESSIONE_VERS_ko.FL_SESSIONE_ERR_VERIF,
           vrserrsess2_.ds_Err,
           vrserrsess2_.cd_Err
      FROM VRS_SESSIONE_VERS_ko PARTITION (ID_STRUT_SES_VRS_KO)
           INNER JOIN
           VRS_DATI_SESSIONE_VERS_ko PARTITION (ID_STRUT_DATI_SES_KO) vrsdatises1_
               ON VRS_SESSIONE_VERS_ko.ID_SESSIONE_VERS_ko =
                  vrsdatises1_.ID_SESSIONE_VERS_ko
           INNER JOIN
           VRS_ERR_SESSIONE_VERS_ko PARTITION (ID_STRUT_VRS_ERR_SESSIONE_VERS_KO) vrserrsess2_
               ON vrsdatises1_.ID_DATI_SESSIONE_VERS_ko =
                  vrserrsess2_.ID_DATI_SESSIONE_VERS_ko;

-- changeset root:1751897635013-1065
CREATE OR REPLACE FORCE VIEW "ORG_V_CHK_STRUT_PARTITION_FASC_DA_DROPPARE" ("ID_STRUT", "FL_PART_OK", "FL_PART_FASC_OK", "CD_PARTITION_FASC", "FL_PART_FASC_ANNO_OK", "FL_PART_FASCKO_OK", "CD_PARTITION_FASCKO", "FL_PART_FASCKO_ANNO_OK", "FL_PART_SESFASCKO_OK", "CD_PARTITION_SESFASCKO", "FL_PART_SESFASCKO_ANNO_OK", "FL_PART_XMLVERSFASC_OK", "CD_PARTITION_XMLVERSFASC", "FL_PART_XMLVERSFASC_DATA_OK", "FL_PART_XMLFASC_OK", "CD_PARTITION_XMLFASC", "FL_PART_XMLFASC_DATA_OK", "FL_PART_XMLSESFASCKO_OK", "CD_PARTITION_XMLSESFASCKO", "FL_PART_XMLSESFASCKO_DATA_OK", "FL_PART_FILEELEVRSFASC_OK", "CD_PARTITION_FILEELEVRSFASC", "FL_PART_FILEELEVRSFASC_DATA_OK", "FL_PART_SESFASCERR_OK", "CD_PARTITION_SESFASCERR") AS select
 id_strut,
 case
	when fl_part_fasc_ok = '1' and fl_part_fasc_anno_ok = '1'
	and fl_part_fascko_ok = '1' and fl_part_fascko_anno_ok = '1'
	and fl_part_sesfascko_ok = '1' and fl_part_sesfascko_anno_ok = '1'
	and fl_part_xmlversfasc_ok = '1' and fl_part_xmlversfasc_data_ok = '1'
	and fl_part_xmlfasc_ok = '1' and fl_part_xmlfasc_data_ok = '1'
	and fl_part_xmlsesfascko_ok = '1' and fl_part_xmlsesfascko_data_ok = '1'
	and fl_part_fileelevrsfasc_ok = '1' and fl_part_fileelevrsfasc_data_ok = '1'
	and fl_part_sesfascerr_ok = '1'
		then '1'
		else '0'
 end fl_part_ok,
 
 fl_part_fasc_ok,
 cd_partition_fasc,
 fl_part_fasc_anno_ok,
 
 fl_part_fascko_ok,
 cd_partition_fascko, 
 fl_part_fascko_anno_ok,

 fl_part_sesfascko_ok,
 cd_partition_sesfascko, 
 fl_part_sesfascko_anno_ok,
 
 fl_part_xmlversfasc_ok,
 cd_partition_xmlversfasc, 
 fl_part_xmlversfasc_data_ok,

 fl_part_xmlfasc_ok,
 cd_partition_xmlfasc, 
 fl_part_xmlfasc_data_ok,
 
 fl_part_xmlsesfascko_ok,
 cd_partition_xmlsesfascko, 
 fl_part_xmlsesfascko_data_ok,
 
 fl_part_fileelevrsfasc_ok,
 cd_partition_fileelevrsfasc, 
 fl_part_fileelevrsfasc_data_ok,
 
 fl_part_sesfascerr_ok,
 cd_partition_sesfascerr
 
from ORG_V_CHK_TIME_PARTITION_FASC;

-- changeset root:1751897635013-1066
COMMENT ON COLUMN ORG_V_CHK_STRUT_PARTITION_FASC_DA_DROPPARE.ID_STRUT IS 'PK.1';

-- changeset root:1751897635013-1067
CREATE OR REPLACE FORCE VIEW "ORG_V_CHK_STRUT_PARTITION_UPD_DA_DROPPARE" ("ID_STRUT", "FL_PART_OK", "FL_PART_VERSINIDATISPEC_OK", "CD_PARTITION_VERSINIDATISPEC", "FL_PART_VERSINIDATISPEC_AA_OK", "FL_PART_UPDDATISPEC_OK", "CD_PARTITION_UPDDATISPEC", "FL_PART_UPDDATISPEC_AA_OK", "FL_PART_XMLUPD_OK", "CD_PARTITION_XMLUPD", "FL_PART_XMLUPD_AA_OK", "FL_PART_UPDKO_OK", "CD_PARTITION_UPDKO", "FL_PART_UPDKO_AA_OK", "FL_PART_SESUPDKO_OK", "CD_PARTITION_SESUPDKO", "FL_PART_SESUPDKO_AA_OK", "FL_PART_XMLSESUPDKO_OK", "CD_PARTITION_XMLSESUPDKO", "FL_PART_XMLSESUPDKO_AA_OK", "FL_PART_SESUPDERR_OK", "CD_PARTITION_SESUPDERR") AS select
 id_strut,
 case
	when fl_part_versinidatispec_ok = '1' and fl_part_versinidatispec_aa_ok = '1'
    and fl_part_upddatispec_ok = '1' and fl_part_upddatispec_aa_ok = '1'
    and fl_part_xmlupd_ok = '1' and fl_part_xmlupd_aa_ok = '1'
    and fl_part_updko_ok = '1' and fl_part_updko_aa_ok = '1'
    and fl_part_sesupdko_ok = '1' and fl_part_sesupdko_aa_ok = '1'
    and fl_part_xmlsesupdko_ok = '1' and fl_part_xmlsesupdko_aa_ok = '1'
	and fl_part_sesupderr_ok = '1'
		then '1'
		else '0'
 end fl_part_ok,
 
 fl_part_versinidatispec_ok,
 cd_partition_versinidatispec, 
 fl_part_versinidatispec_aa_ok,
 
 fl_part_upddatispec_ok,
 cd_partition_upddatispec, 
 fl_part_upddatispec_aa_ok,
 
 fl_part_xmlupd_ok,
 cd_partition_xmlupd, 
 fl_part_xmlupd_aa_ok,
 
 fl_part_updko_ok,
 cd_partition_updko, 
 fl_part_updko_aa_ok, 
 
 fl_part_sesupdko_ok,
 cd_partition_sesupdko,
 fl_part_sesupdko_aa_ok,
 
 fl_part_xmlsesupdko_ok,
 cd_partition_xmlsesupdko, 
 fl_part_xmlsesupdko_aa_ok,

 fl_part_sesupderr_ok,
 cd_partition_sesupderr
 
from ORG_V_CHK_TIME_PARTITION_UPD;

-- changeset root:1751897635013-1068
COMMENT ON COLUMN ORG_V_CHK_STRUT_PARTITION_UPD_DA_DROPPARE.ID_STRUT IS 'PK.1';

-- changeset root:1751897635013-1069
CREATE OR REPLACE FORCE VIEW "MON_V_LIS_VERS_UD_NON_VERS" ("ID_SESSIONE_VERS", "DT_APERTURA", "DT_CHIUSURA", "ID_STRUT", "CD_REGISTRO_KEY_UNITA_DOC", "AA_KEY_UNITA_DOC", "CD_KEY_UNITA_DOC", "TI_SESSIONE_VERS", "FL_SESSIONE_ERR_VERIF", "FL_SESSIONE_ERR_NON_RISOLUB", "CD_ERR", "DS_ERR") AS SELECT -- info sessione
           ses.id_sessione_vers_ko,
           ses.dt_apertura,
           ses.dt_chiusura,
           ses.id_strut,
           ses.cd_registro_key_unita_doc,
           ses.aa_key_unita_doc,
           ses.cd_key_unita_doc,
           ses.ti_sessione_vers,
           ses.fl_sessione_err_verif,
           ses.fl_sessione_err_non_risolub,
           -- info errore

           ses.cd_err_princ,
           ses.ds_err_princ
      FROM VRS_SESSIONE_VERS_ko ses
     WHERE ses.ti_sessione_vers = 'VERSAMENTO'
       --AND ses.ti_stato_sessione_vers = 'CHIUSA_ERR'
       --  il predicato serve per escludere versamenti falliti risolti su UD che poi viene annullata e poi si ri-versa la UD fallendo
       AND NOT EXISTS
               (SELECT 1
                  FROM VRS_V_VERS_FALLITI_RISOLTO ses_risolte
                 WHERE ses_risolte.id_sessione_vers = ses.id_sessione_vers_ko
                   AND ses_risolte.fl_risolto = '1');

-- changeset root:1751897635013-1070
COMMENT ON COLUMN MON_V_LIS_VERS_UD_NON_VERS.ID_SESSIONE_VERS IS 'PK.1';

-- changeset root:1751897635013-1071
CREATE OR REPLACE FORCE VIEW "FAS_V_LIS_FASC_BY_UPD_UD" ("ID_UNITA_DOC", "ID_FASCICOLO") AS select distinct
 ud_fasc.id_unita_doc,
 fasc.id_fascicolo 
 
from FAS_UNITA_DOC_FASCICOLO ud_fasc
join FAS_FASCICOLO fasc
	on (fasc.id_fascicolo = ud_fasc.id_fascicolo
	and fasc.ti_stato_fasc_elenco_vers in ('IN_ELENCO_IN_CODA_CREAZIONE_AIP', 'IN_ELENCO_CON_AIP_CREATO', 
										   'IN_ELENCO_CON_ELENCO_INDICI_AIP_CREATO', 'IN_ELENCO_COMPLETATO'));

-- changeset root:1751897635013-1072
COMMENT ON COLUMN FAS_V_LIS_FASC_BY_UPD_UD.ID_UNITA_DOC IS 'PK.1';

-- changeset root:1751897635013-1073
COMMENT ON COLUMN FAS_V_LIS_FASC_BY_UPD_UD.ID_FASCICOLO IS 'PK.2';

-- changeset root:1751897635013-1074
CREATE OR REPLACE FORCE VIEW "ORG_V_RIC_AMBIENTE" ("ID_USER_IAM", "ID_AMBIENTE", "NM_AMBIENTE", "DS_AMBIENTE", "DT_INI_VAL", "DT_FIN_VAL", "ID_ENTE_CONVERV", "ID_ENTE_GESTORE", "NM_ENTE_CONSERV", "NM_ENTE_GESTORE") AS select distinct 
 abil.id_user_iam, amb.id_ambiente, amb.nm_ambiente, amb.ds_ambiente, amb.dt_ini_val, amb.dt_fin_val,
 amb.id_ente_conserv, amb.id_ente_gestore, 
 enteconserv.nm_ente_siam, entegestore.nm_ente_siam
 
from iam_abil_organiz abil
join ORG_STRUT strut
 on (strut.id_strut = abil.id_organiz_applic)
join ORG_ENTE ente
 on (ente.id_ente = strut.id_ente)
join ORG_AMBIENTE amb
 on (amb.id_ambiente = ente.id_ambiente)
 join SACER_IAM.ORG_ENTE_SIAM enteconserv on (enteconserv.id_ente_siam = amb.id_ente_conserv)
 join SACER_IAM.ORG_ENTE_SIAM entegestore on (entegestore.id_ente_siam = amb.id_ente_gestore)

UNION

select 
 id_user_iam, id_organiz_applic, nm_organiz, ds_organiz,  amb.dt_ini_val, amb.dt_fin_val,
 amb.id_ente_conserv, amb.id_ente_gestore, 
 enteconserv.nm_ente_siam, entegestore.nm_ente_siam
from USR_V_ABIL_AMB_SACER_XENTE abilsacer
join ORG_AMBIENTE amb
 on (amb.id_ambiente = abilsacer.id_organiz_applic)
  join SACER_IAM.ORG_ENTE_SIAM enteconserv on (enteconserv.id_ente_siam = amb.id_ente_conserv)
 join SACER_IAM.ORG_ENTE_SIAM entegestore on (entegestore.id_ente_siam = amb.id_ente_gestore)
where nm_applic = 'SACER' and id_organiz_applic not in (select  amb.id_ambiente 
from iam_abil_organiz abil
join ORG_STRUT strut
 on (strut.id_strut = abil.id_organiz_applic)
join ORG_ENTE ente
 on (ente.id_ente = strut.id_ente)
join ORG_AMBIENTE amb
 on (amb.id_ambiente = ente.id_ambiente)
);

-- changeset root:1751897635013-1075
COMMENT ON COLUMN ORG_V_RIC_AMBIENTE.ID_USER_IAM IS 'PK.1';

-- changeset root:1751897635013-1076
COMMENT ON COLUMN ORG_V_RIC_AMBIENTE.ID_AMBIENTE IS 'PK.1';

-- changeset root:1751897635013-1077
CREATE OR REPLACE FORCE VIEW "ORG_V_RIC_ENTE" ("ID_USER_IAM", "ID_AMBIENTE", "NM_AMBIENTE", "DS_AMBIENTE", "ID_ENTE", "NM_ENTE", "DS_ENTE", "ID_CATEG_ENTE", "TIPO_DEF_TEMPLATE_ENTE") AS select distinct 
 abil.id_user_iam,
 amb.id_ambiente, amb.nm_ambiente, amb.ds_ambiente, 
 ente.id_ente, ente.nm_ente, ente.ds_ente,  ente.id_categ_ente, 
 ente.tipo_def_template_ente
 
from iam_abil_organiz abil
join ORG_STRUT strut
 on (strut.id_strut = abil.id_organiz_applic)
join ORG_ENTE ente
 on (ente.id_ente = strut.id_ente)
join ORG_AMBIENTE amb
 on (amb.id_ambiente = ente.id_ambiente)
 
UNION

select
 abil.id_user_iam,
 amb.id_ambiente, amb.nm_ambiente, amb.ds_ambiente, 
 ente.id_ente, ente.nm_ente, ente.ds_ente,  ente.id_categ_ente, 
 ente.tipo_def_template_ente
 
from USR_V_ABIL_ENTE_SACER_XSTRUT abil
join ORG_ENTE ente
 on (ente.id_ente = abil.id_organiz_applic)
join ORG_AMBIENTE amb
 on (amb.id_ambiente = ente.id_ambiente)
 
where abil.nm_applic= 'SACER';

-- changeset root:1751897635013-1078
COMMENT ON COLUMN ORG_V_RIC_ENTE.ID_USER_IAM IS 'PK.1';

-- changeset root:1751897635013-1079
COMMENT ON COLUMN ORG_V_RIC_ENTE.ID_ENTE IS 'PK.1';

-- changeset root:1751897635013-1080
CREATE OR REPLACE FORCE VIEW "SER_V_RIC_CONSIST_SERIE_UD" ("ID_SERIE", "ID_STRUT", "CD_COMPOSITO_SERIE", "AA_SERIE", "DS_SERIE", "ID_TIPO_SERIE", "NM_STRUT", "ID_ENTE", "NM_ENTE", "ID_AMBIENTE", "NM_AMBIENTE", "NM_TIPO_SERIE", "ID_TIPO_UNITA_DOC", "ID_REGISTRO_UNITA_DOC", "ID_VER_SERIE", "CD_VER_SERIE", "TI_STATO_VER_SERIE", "ID_CONTENUTO_CALC", "TI_STATO_CONTENUTO_CALC", "ID_CONTENUTO_ACQ", "TI_STATO_CONTENUTO_ACQ", "ID_CONTENUTO_EFF", "TI_STATO_CONTENUTO_EFF", "NI_UNITA_DOC", "ID_CONSIST_VER_SERIE", "FL_PRESENZA_CONSIST_ATTESA", "NI_UNITA_DOC_ATTESE", "TI_MOD_CONSIST_FIRST_LAST", "NI_LACUNE_MANCANTI", "NI_LACUNE_NON_PRODOTTE", "DT_COMUNIC_CONSIST_VER_SERIE", "FL_PRESENZA_CONTEN_EFF") AS select
 id_serie, id_strut, cd_composito_serie, aa_serie, ds_serie, id_tipo_serie,
 
 nm_strut, id_ente, nm_ente, id_ambiente, nm_ambiente,
 
 nm_tipo_serie,
 id_tipo_unita_doc, id_registro_unita_doc,
  
 id_ver_serie, cd_ver_serie, 
 ti_stato_ver_serie,

 id_contenuto_calc, ti_stato_contenuto_calc,
 id_contenuto_acq, ti_stato_contenuto_acq,
 id_contenuto_eff, ti_stato_contenuto_eff,
 ni_unita_doc,

 id_consist_ver_serie,
 fl_presenza_consist_attesa,
 ni_unita_doc_attese,
 ti_mod_consist_first_last,
 ni_lacune_mancanti,
 ni_lacune_non_prodotte,
 dt_comunic_consist_ver_serie,
 fl_presenza_conten_eff
 
from SER_V_COMUNIC_CONSIST_SERIE_UD
where (ti_stato_contenuto_calc is null or ti_stato_contenuto_calc in ('CREATO', 'CONTROLLATA_CONSIST', 'DA_CONTROLLARE_CONSIST'))
and (ti_stato_contenuto_acq is null or ti_stato_contenuto_acq in ('CREATO', 'CONTROLLATA_CONSIST', 'DA_CONTROLLARE_CONSIST'))
and (ti_stato_contenuto_eff is null or ti_stato_contenuto_eff in ('CREATO', 'CONTROLLATA_CONSIST', 'DA_CONTROLLARE_CONSIST'))
and (ti_mod_consist_first_last is null or ti_mod_consist_first_last = 'CHIAVE_UD')
and (ni_lacune_mancanti = 0 or ni_lacune_mancanti = 1)
and (ni_lacune_non_prodotte = 0 or ni_lacune_non_prodotte = 1);

-- changeset root:1751897635013-1081
COMMENT ON COLUMN SER_V_RIC_CONSIST_SERIE_UD.ID_VER_SERIE IS 'PK.1';

-- changeset root:1751897635013-1082
CREATE OR REPLACE FORCE VIEW "MON_V_CHK_VERS_AMB" ("ID_AMBIENTE", "ID_USER_IAM", "FL_VERS_RISOLTI_CORR", "FL_VERS_RISOLTI_30GG", "FL_VERS_NOVERIF_CORR", "FL_VERS_NOVERIF_30GG", "FL_VERS_VERIF_CORR", "FL_VERS_VERIF_30GG", "FL_VERS_NORISOLUB_CORR", "FL_VERS_NORISOLUB_30GG") AS select
amb.id_ambiente,
utente.id_user_iam,

--
--			RISOLTI
--
case
	when exists (select *
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_VERS_FALLITI_RISOLTO ses
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ses.id_strut = abil.id_organiz_applic
				and ses.dt_apertura between trunc(sysdate) and sysdate + 1/24
				and ses.fl_risolto = '1'
				)
		then '1'
		else '0'
end fl_vers_risolti_corr,
case
	when exists (select *
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_VERS_FALLITI_RISOLTO ses
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ses.id_strut = abil.id_organiz_applic
				and ses.dt_apertura between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss') 
				and ses.fl_risolto = '1'
				)
		then '1'
		else '0'
end fl_vers_risolti_30gg,

--
--			NON VERIFICATI
--
case
	when exists (select *
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_VERS_FALLITI_RISOLTO ses
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ses.id_strut = abil.id_organiz_applic
				and ses.dt_apertura between trunc(sysdate) and sysdate + 1/24 
				and ses.fl_risolto = '0'
				and ses.fl_sessione_err_verif = '0'
				)
		then '1'
		else '0'
end fl_vers_noverif_corr,
case
	when exists (select *
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_VERS_FALLITI_RISOLTO ses
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ses.id_strut = abil.id_organiz_applic
				and ses.dt_apertura between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss') 
				and ses.fl_risolto = '0'
				and ses.fl_sessione_err_verif = '0'
				)
		then '1'
		else '0'
end fl_vers_noverif_30gg,
--
--			VERIFICATI
--
case
	when exists (select *
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_VERS_FALLITI_RISOLTO ses
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ses.id_strut = abil.id_organiz_applic
				and ses.dt_apertura between trunc(sysdate) and sysdate + 1/24 
				and ses.fl_risolto = '0'
				and ses.fl_sessione_err_verif = '1'
				and ses.fl_sessione_err_non_risolub = '0'
				)
		then '1'
		else '0'
end fl_vers_verif_corr,
case
	when exists (select *
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_VERS_FALLITI_RISOLTO ses
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ses.id_strut = abil.id_organiz_applic
				and ses.dt_apertura between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss') 
				and ses.fl_risolto = '0'
				and ses.fl_sessione_err_verif = '1'
				and ses.fl_sessione_err_non_risolub = '0'
				)
		then '1'
end fl_vers_verif_30gg,
--
--			NON RISOLUBILI
--
case
	when exists (select *
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_VERS_FALLITI_RISOLTO ses
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ses.id_strut = abil.id_organiz_applic
				and ses.dt_apertura between trunc(sysdate) and sysdate + 1/24 
				and ses.fl_risolto = '0'
				and ses.fl_sessione_err_verif = '1'
				and ses.fl_sessione_err_non_risolub = '1'
				)
		then '1'
		else '0'
end fl_vers_norisolub_corr,
case
	when exists (select *
				from ORG_ENTE ente, ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_VERS_FALLITI_RISOLTO ses
				where ente.id_ambiente = amb.id_ambiente
				and strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ses.id_strut = abil.id_organiz_applic
				and ses.dt_apertura between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss') 
				and ses.fl_risolto = '0'
				and ses.fl_sessione_err_verif = '1'
				and ses.fl_sessione_err_non_risolub = '1'
				)
		then '1'
		else '0'
end fl_vers_norisolub_30gg

from ORG_AMBIENTE amb
join IAM_USER utente
 on (utente.id_user_iam > 0);

-- changeset root:1751897635013-1083
COMMENT ON COLUMN MON_V_CHK_VERS_AMB.ID_AMBIENTE IS 'PK.1 relativa a tabella ORG_AMBIENTE';

-- changeset root:1751897635013-1084
COMMENT ON COLUMN MON_V_CHK_VERS_AMB.ID_USER_IAM IS 'PK.2 relativa a tabella IAM_USER';

-- changeset root:1751897635013-1085
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_DOC_NONVERS_STRUT" ("ID_STRUT", "TI_STATO_DOC_NONVERS", "NI_DOC_NONVERS") AS select 
 id_strut, ti_stato_doc_nonvers, count(*) ni_doc_nonvers
from (select 
	 doc_nonvers.id_strut, 
	 case
		when doc_nonvers.fl_verif = '0' then 'NO_VERIF'
		when doc_nonvers.fl_verif = '1' and doc_nonvers.fl_non_risolub = '0' then 'VERIF'
		when doc_nonvers.fl_verif = '1' and doc_nonvers.fl_non_risolub = '1' then 'NO_RISOLUB'
		else '??'
	 end ti_stato_doc_nonvers

	from VRS_V_DOC_NON_VERS doc_nonvers
	)

group by id_strut, ti_stato_doc_nonvers;

-- changeset root:1751897635013-1086
COMMENT ON COLUMN MON_V_CNT_DOC_NONVERS_STRUT.ID_STRUT IS 'PK.1 relativa a tabella ORG_STRUT';

-- changeset root:1751897635013-1087
COMMENT ON COLUMN MON_V_CNT_DOC_NONVERS_STRUT.TI_STATO_DOC_NONVERS IS 'PK.2';

-- changeset root:1751897635013-1088
CREATE OR REPLACE FORCE VIEW "MON_V_CHK_VERS_ENTE" ("ID_ENTE", "ID_USER_IAM", "FL_VERS_RISOLTI_CORR", "FL_VERS_RISOLTI_30GG", "FL_VERS_NOVERIF_CORR", "FL_VERS_NOVERIF_30GG", "FL_VERS_VERIF_CORR", "FL_VERS_VERIF_30GG", "FL_VERS_NORISOLUB_CORR", "FL_VERS_NORISOLUB_30GG") AS select
ente.id_ente,
utente.id_user_iam,

--
--			RISOLTI
--
case
	when exists (select *
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_VERS_FALLITI_RISOLTO ses
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ses.id_strut = abil.id_organiz_applic
				and ses.dt_apertura between trunc(sysdate) and sysdate + 1/24
				and ses.fl_risolto = '1'
				)
		then '1'
		else '0'
end fl_vers_risolti_corr,
case
	when exists (select *
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_VERS_FALLITI_RISOLTO ses
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ses.id_strut = abil.id_organiz_applic
				and ses.dt_apertura between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss') 
				and ses.fl_risolto = '1'
				)
		then '1'
		else '0'
end fl_vers_risolti_30gg,
--
--			NON VERIFICATI
--
case
	when exists (select *
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_VERS_FALLITI_RISOLTO ses
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ses.id_strut = abil.id_organiz_applic
				and ses.dt_apertura between trunc(sysdate) and sysdate + 1/24
				and ses.fl_risolto = '0'
				and ses.fl_sessione_err_verif = '0'
				)
		then '1'
		else '0'
end fl_vers_noverif_corr,
case
	when exists (select *
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_VERS_FALLITI_RISOLTO ses
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ses.id_strut = abil.id_organiz_applic
				and ses.dt_apertura between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss') 
				and ses.fl_risolto = '0'
				and ses.fl_sessione_err_verif = '0'
				)
		then '1'
		else '0'
end fl_vers_noverif_30gg,
--
--			VERIFICATI
--
case
	when exists (select *
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_VERS_FALLITI_RISOLTO ses
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ses.id_strut = abil.id_organiz_applic
				and ses.dt_apertura between trunc(sysdate) and sysdate + 1/24 
				and ses.fl_risolto = '0'
				and ses.fl_sessione_err_verif = '1'
				and ses.fl_sessione_err_non_risolub = '0'
				)
		then '1'
		else '0'
end fl_vers_verif_corr,
case
	when exists (select *
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_VERS_FALLITI_RISOLTO ses
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ses.id_strut = abil.id_organiz_applic
				and ses.dt_apertura between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss') 
				and ses.fl_risolto = '0'
				and ses.fl_sessione_err_verif = '1'
				and ses.fl_sessione_err_non_risolub = '0'
				)
		then '1'
		else '0'
end fl_vers_verif_30gg,

--
--			NON RISOLUBILI
--
case
	when exists (select *
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_VERS_FALLITI_RISOLTO ses
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ses.id_strut = abil.id_organiz_applic
				and ses.dt_apertura between trunc(sysdate) and sysdate + 1/24
				and ses.fl_risolto = '0'
				and ses.fl_sessione_err_verif = '1'
				and ses.fl_sessione_err_non_risolub = '1'
				)
		then '1'
		else '0'
end fl_vers_norisolub_corr,
case
	when exists (select *
				from ORG_STRUT strut, IAM_ABIL_ORGANIZ abil, VRS_V_VERS_FALLITI_RISOLTO ses
				where strut.id_ente = ente.id_ente
				and abil.id_organiz_applic = strut.id_strut
				and abil.id_user_iam = utente.id_user_iam
				and ses.id_strut = abil.id_organiz_applic
				and ses.dt_apertura between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss') 
				and ses.fl_risolto = '0'
				and ses.fl_sessione_err_verif = '1'
				and ses.fl_sessione_err_non_risolub = '1'
				)
		then '1'
		else '0'
end fl_vers_norisolub_30gg

from ORG_ENTE ente
join IAM_USER utente
 on (utente.id_user_iam > 0);

-- changeset root:1751897635013-1089
COMMENT ON COLUMN MON_V_CHK_VERS_ENTE.ID_ENTE IS 'PK.1 relativa a tabella ORG_ENTE';

-- changeset root:1751897635013-1090
COMMENT ON COLUMN MON_V_CHK_VERS_ENTE.ID_USER_IAM IS 'PK.2 relativa a tabella IAM_USER';

-- changeset root:1751897635013-1091
CREATE OR REPLACE FORCE VIEW "MON_V_CNT_UD_NONVERS_STRUT" ("ID_STRUT", "TI_STATO_UD_NONVERS", "NI_UD_NONVERS") AS select 
 id_strut, ti_stato_ud_nonvers, count(*) ni_ud_nonvers
from (select 
	 ud_nonvers.id_strut, 
	 case
		when ud_nonvers.fl_verif = '0' then 'NO_VERIF'
		when ud_nonvers.fl_verif = '1' and ud_nonvers.fl_non_risolub = '0' then 'VERIF'
		when ud_nonvers.fl_verif = '1' and ud_nonvers.fl_non_risolub = '1' then 'NO_RISOLUB'
		else '??'
	 end ti_stato_ud_nonvers

	from VRS_V_UNITA_DOC_NON_VERS ud_nonvers
	)

group by id_strut, ti_stato_ud_nonvers;

-- changeset root:1751897635013-1092
COMMENT ON COLUMN MON_V_CNT_UD_NONVERS_STRUT.ID_STRUT IS 'PK.1 relativa a tabella ORG_STRUT';

-- changeset root:1751897635013-1093
COMMENT ON COLUMN MON_V_CNT_UD_NONVERS_STRUT.TI_STATO_UD_NONVERS IS 'PK.2';

-- changeset root:1751897635013-1094
CREATE OR REPLACE FORCE VIEW "MON_V_CHK_VERS_STRUT" ("ID_STRUT", "FL_VERS_RISOLTI_CORR", "FL_VERS_RISOLTI_30GG", "FL_VERS_NOVERIF_CORR", "FL_VERS_NOVERIF_30GG", "FL_VERS_VERIF_CORR", "FL_VERS_VERIF_30GG", "FL_VERS_NORISOLUB_CORR", "FL_VERS_NORISOLUB_30GG") AS select
strut.id_strut,
--
--			RISOLTI
--
case
	when exists (select *
				from VRS_V_VERS_FALLITI_RISOLTO ses
				where ses.id_strut = strut.id_strut
				and ses.dt_apertura between trunc(sysdate) and sysdate + 1/24
				and ses.fl_risolto = '1'
				)
		then '1'
		else '0'
end fl_vers_risolti_corr,
case
	when exists (select *
				from VRS_V_VERS_FALLITI_RISOLTO ses
				where ses.id_strut = strut.id_strut
				and ses.dt_apertura between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
				and ses.fl_risolto = '1'
				)
		then '1'
		else '0'
end fl_vers_risolti_30gg,
--
--			NON VERIFICATI
--
case
	when exists (select *
				from VRS_V_VERS_FALLITI_RISOLTO ses
				where ses.id_strut = strut.id_strut
				and ses.dt_apertura between trunc(sysdate) and sysdate + 1/24 
				and ses.fl_risolto = '0'
				and ses.fl_sessione_err_verif = '0'
				)
		then '1'
		else '0'
end fl_vers_noverif_corr,
case
	when exists (select *
				from VRS_V_VERS_FALLITI_RISOLTO ses
				where ses.id_strut = strut.id_strut
				and ses.dt_apertura between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
				and ses.fl_risolto = '0'
				and ses.fl_sessione_err_verif = '0'
				)
		then '1'
		else '0'
end fl_vers_noverif_30gg,
--
--			VERIFICATI
--
case
	when exists (select *
				from VRS_V_VERS_FALLITI_RISOLTO ses
				where ses.id_strut = strut.id_strut
				and ses.dt_apertura between trunc(sysdate) and sysdate + 1/24
				and ses.fl_risolto = '0'
				and ses.fl_sessione_err_verif = '1'
				and ses.fl_sessione_err_non_risolub = '0'
				)
		then '1'
		else '0'
end fl_vers_verif_corr,
case
	when exists (select *
				from VRS_V_VERS_FALLITI_RISOLTO ses
				where ses.id_strut = strut.id_strut
				and ses.dt_apertura between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
				and ses.fl_risolto = '0'
				and ses.fl_sessione_err_verif = '1'
				and ses.fl_sessione_err_non_risolub = '0'
				)
		then '1'
		else '0'
end fl_vers_verif_30gg,

--
--			NON RISOLUBILI
--
case
	when exists (select *
				from VRS_V_VERS_FALLITI_RISOLTO ses
				where ses.id_strut = strut.id_strut
				and ses.dt_apertura between trunc(sysdate) and sysdate + 1/24
				and ses.fl_risolto = '0'
				and ses.fl_sessione_err_verif = '1'
				and ses.fl_sessione_err_non_risolub = '1'
				)
		then '1'
		else '0'
end fl_vers_norisolub_corr,
case
	when exists (select *
				from VRS_V_VERS_FALLITI_RISOLTO ses
				where ses.id_strut = strut.id_strut
				and ses.dt_apertura between trunc(sysdate - 30) and to_date(to_char(trunc(sysdate - 1), 'dd-mm-yyyy') || ' 23:59:59', 'dd-mm-yyyy HH24:mi:ss')
				and ses.fl_risolto = '0'
				and ses.fl_sessione_err_verif = '1'
				and ses.fl_sessione_err_non_risolub = '1'
				)
		then '1'
		else '0'
end fl_vers_norisolub_30gg

from ORG_STRUT strut;

-- changeset root:1751897635013-1095
COMMENT ON COLUMN MON_V_CHK_VERS_STRUT.ID_STRUT IS 'PK.1 relativa a tabella ORG_STRUT';

-- changeset root:1751897635013-1096
CREATE SEQUENCE SAPL_APPLIC START WITH 21 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1097
CREATE SEQUENCE SAPL_AZIONE_PAGINA START WITH 714 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1098
CREATE SEQUENCE SAPL_ENTRY_MENU START WITH 116 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1099
CREATE SEQUENCE SAPL_NEWS START WITH 21 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1100
CREATE SEQUENCE SAPL_PAGINA_WEB START WITH 188 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1101
CREATE SEQUENCE SAPL_PARAM_APPLIC START WITH 1485 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1102
CREATE SEQUENCE SAPL_SERVIZIO_WEB START WITH 81 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1103
CREATE SEQUENCE SAPL_SISTEMA_MIGRAZ START WITH 101 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1104
CREATE SEQUENCE SAPL_VALORE_PARAM_APPLIC START WITH 18983 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1105
CREATE SEQUENCE SAPL_VAL_PARAM_APPLIC_MULTI START WITH 243 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1106
CREATE SEQUENCE SARO_AIP_RESTITUZIONE_ARCHIVIO START WITH 226 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 1000 NOORDER;

-- changeset root:1751897635013-1107
CREATE SEQUENCE SARO_ARCHIV_SEC START WITH 75223 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 1000 NOORDER;

-- changeset root:1751897635013-1108
CREATE SEQUENCE SARO_BUSTA_CRITTOG START WITH 4765543 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 1000 NOORDER;

-- changeset root:1751897635013-1109
CREATE SEQUENCE SARO_COMP_DOC START WITH 7 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 NOCACHE NOORDER CYCLE;

-- changeset root:1751897635013-1110
CREATE SEQUENCE SARO_COMP_HASH_CALC START WITH 1228005 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1111
CREATE SEQUENCE SARO_COMP_INDICE_AIP_DA_ELAB START WITH 5041661 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 1000 NOORDER;

-- changeset root:1751897635013-1112
CREATE SEQUENCE SARO_COMP_OBJECT_STORAGE START WITH 532211 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1113
CREATE SEQUENCE SARO_COMP_VER_INDICE_AIP_UD START WITH 5139625 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 1000 NOORDER;

-- changeset root:1751897635013-1114
CREATE SEQUENCE SARO_CONTENUTO_COMP START WITH 5336487 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 1000 NOORDER;

-- changeset root:1751897635013-1115
CREATE SEQUENCE SARO_CONTROFIRMA_FIRMA START WITH 21150 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 1000 NOORDER;

-- changeset root:1751897635013-1116
CREATE SEQUENCE SARO_CONTR_FIRMA_COMP START WITH 23560625 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 1000 NOORDER;

-- changeset root:1751897635013-1117
CREATE SEQUENCE SARO_CONTR_MARCA_COMP START WITH 1343161 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 1000 NOORDER;

-- changeset root:1751897635013-1118
CREATE SEQUENCE SARO_CONTR_VERIF_FIRMA_DT_VERS START WITH 13256345 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1119
CREATE SEQUENCE SARO_DATI_FISC_DOC START WITH 2004 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 1000 NOORDER;

-- changeset root:1751897635013-1120
CREATE SEQUENCE SARO_DOC START WITH 6106135 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 1000 NOORDER;

-- changeset root:1751897635013-1121
CREATE SEQUENCE SARO_DOC_ANNUL START WITH 21 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1122
CREATE SEQUENCE SARO_DOC_ANNUL_DA_ELAB START WITH 21 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1123
CREATE SEQUENCE SARO_DOC_DA_ELAB START WITH 353712 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 1000 NOORDER;

-- changeset root:1751897635013-1124
CREATE SEQUENCE SARO_ERR_RICH_ANNUL_VERS START WITH 186284 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1125
CREATE SEQUENCE SARO_FILE_COMP START WITH 50576 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 1000 NOORDER;

-- changeset root:1751897635013-1126
CREATE SEQUENCE SARO_FILE_RICH_ANNUL_VERS START WITH 701 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1127
CREATE SEQUENCE SARO_FILE_VER_INDICE_AIP_UD START WITH 3985122 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 1000 NOORDER;

-- changeset root:1751897635013-1128
CREATE SEQUENCE SARO_FIRMA_COMP START WITH 4546248 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 1000 NOORDER;

-- changeset root:1751897635013-1129
CREATE SEQUENCE SARO_INDICE_AIP_UD START WITH 3677913 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 1000 NOORDER;

-- changeset root:1751897635013-1130
CREATE SEQUENCE SARO_INDICE_AIP_UD_DA_ELAB START WITH 3514543 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1131
CREATE SEQUENCE SARO_ITEM_RICH_ANNUL_VERS START WITH 108713 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1132
CREATE SEQUENCE SARO_LINK_UNITA_DOC START WITH 3041048 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 1000 NOORDER;

-- changeset root:1751897635013-1133
CREATE SEQUENCE SARO_MARCA_COMP START WITH 639121 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 1000 NOORDER;

-- changeset root:1751897635013-1134
CREATE SEQUENCE SARO_NOTA_UNITA_DOC START WITH 101 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1135
CREATE SEQUENCE SARO_RICHIESTA_RA START WITH 384 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1136
CREATE SEQUENCE SARO_RICH_ANNUL_VERS START WITH 3044 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1137
CREATE SEQUENCE SARO_STATO_RICH_ANNUL_VERS START WITH 3503 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1138
CREATE SEQUENCE SARO_STRUT_DOC START WITH 6099115 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 1000 NOORDER;

-- changeset root:1751897635013-1139
CREATE SEQUENCE SARO_UD_ANNUL_DA_ELAB START WITH 21 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1140
CREATE SEQUENCE SARO_UD_APPART_VER_SERIE START WITH 635911 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1141
CREATE SEQUENCE SARO_UNITA_DOC START WITH 4932409 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 1000 NOORDER;

-- changeset root:1751897635013-1142
CREATE SEQUENCE SARO_UNITA_DOC_ANNUL START WITH 21 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1143
CREATE SEQUENCE SARO_UPD_ARCHIV_SEC START WITH 763 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1144
CREATE SEQUENCE SARO_UPD_COMP_UNITA_DOC START WITH 201 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1145
CREATE SEQUENCE SARO_UPD_DATI_SPEC_UNITA_DOC START WITH 681 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1146
CREATE SEQUENCE SARO_UPD_DOC_UNITA_DOC START WITH 221 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1147
CREATE SEQUENCE SARO_UPD_LINK_UNITA_DOC START WITH 583 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1148
CREATE SEQUENCE SARO_UPD_UD_INDICE_AIP_DA_ELAB START WITH 581 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1149
CREATE SEQUENCE SARO_UPD_UD_VER_INDICE_AIP_UD START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1150
CREATE SEQUENCE SARO_UPD_UNITA_DOC START WITH 883 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1151
CREATE SEQUENCE SARO_URN_VER_INDICE_AIP_UD START WITH 636681 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1152
CREATE SEQUENCE SARO_USO_CERTIF_CA_CONTR_COMP START WITH 4552248 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 1000 NOORDER;

-- changeset root:1751897635013-1153
CREATE SEQUENCE SARO_USO_CERTIF_CA_CONTR_MARCA START WITH 636121 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 1000 NOORDER;

-- changeset root:1751897635013-1154
CREATE SEQUENCE SARO_USO_XSD_DATI_SPEC START WITH 3747444 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 1000 NOORDER;

-- changeset root:1751897635013-1155
CREATE SEQUENCE SARO_VALORE_ATTRIB_DATI_SPEC START WITH 23224173 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 1000 NOORDER;

-- changeset root:1751897635013-1156
CREATE SEQUENCE SARO_VERIF_FIRMA_DT_VERS START WITH 3316157 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1157
CREATE SEQUENCE SARO_VERS_INI_ARCHIV_SEC START WITH 263 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1158
CREATE SEQUENCE SARO_VERS_INI_COMP START WITH 141 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1159
CREATE SEQUENCE SARO_VERS_INI_DATI_SPEC START WITH 421 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1160
CREATE SEQUENCE SARO_VERS_INI_DOC START WITH 141 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1161
CREATE SEQUENCE SARO_VERS_INI_LINK_UNITA_DOC START WITH 243 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1162
CREATE SEQUENCE SARO_VERS_INI_UNITA_DOC START WITH 583 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1163
CREATE SEQUENCE SARO_VER_INDICE_AIP_UD START WITH 3790628 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 1000 NOORDER;

-- changeset root:1751897635013-1164
CREATE SEQUENCE SARO_WARN_UNITA_DOC START WITH 5157782 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 1000 NOORDER;

-- changeset root:1751897635013-1165
CREATE SEQUENCE SARO_WARN_UPD_UNITA_DOC START WITH 183 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1166
CREATE SEQUENCE SARO_XML_RICH_ANNUL_VERS START WITH 2341 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1167
CREATE SEQUENCE SARO_XML_UPD_UNITA_DOC START WITH 985 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1168
CREATE SEQUENCE SDEC_AA_REGISTRO_UNITA_DOC START WITH 11096 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1169
CREATE SEQUENCE SDEC_AA_TIPO_FASCICOLO START WITH 609 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1170
CREATE SEQUENCE SDEC_AA_VAL START WITH 181 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1171
CREATE SEQUENCE SDEC_AMS_FMT_FIR_EIDAS_CRYPTO START WITH 106 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1172
CREATE SEQUENCE SDEC_ATTRIB_DATI_SPEC START WITH 46287 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1173
CREATE SEQUENCE SDEC_ATTRIB_FASCICOLO START WITH 201 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1174
CREATE SEQUENCE SDEC_CAMPO_ATTRIB_FASC_VETTOR START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1175
CREATE SEQUENCE SDEC_CAMPO_INP_UD START WITH 192 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1176
CREATE SEQUENCE SDEC_CAMPO_OUT_SEL_UD START WITH 3122 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1177
CREATE SEQUENCE SDEC_CATEG_TIPO_UNITA_DOC START WITH 190 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1178
CREATE SEQUENCE SDEC_CLASSE_ERR_SACER START WITH 141 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1179
CREATE SEQUENCE SDEC_CONTROLLO_WS START WITH 81 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1180
CREATE SEQUENCE SDEC_CRITERIO_ATTRIB START WITH 43 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1181
CREATE SEQUENCE SDEC_CRITERIO_DATI_SPEC START WITH 43 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1182
CREATE SEQUENCE SDEC_CRITERIO_FILTRO_MULTIPLO START WITH 6710 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1183
CREATE SEQUENCE SDEC_CRITERIO_RAGGR START WITH 6374 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1184
CREATE SEQUENCE SDEC_CRITERIO_RAGGR_FASC START WITH 461 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1185
CREATE SEQUENCE SDEC_ERR_AA_REGISTRO_UNITA_DOC START WITH 321 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1186
CREATE SEQUENCE SDEC_ERR_AA_TIPO_FASCICOLO START WITH 141 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1187
CREATE SEQUENCE SDEC_ERR_SACER START WITH 741 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1188
CREATE SEQUENCE SDEC_ESTENSIONE_FILE START WITH 1742 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1189
CREATE SEQUENCE SDEC_FILTRO_SEL_UD START WITH 302 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1190
CREATE SEQUENCE SDEC_FILTRO_SEL_UD_ATTB START WITH 285 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1191
CREATE SEQUENCE SDEC_FILTRO_SEL_UD_DATO START WITH 269 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1192
CREATE SEQUENCE SDEC_FMT_FIR_CRYPTO START WITH 20 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1193
CREATE SEQUENCE SDEC_FMT_FIR_EIDAS START WITH 28 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1194
CREATE SEQUENCE SDEC_FORMATO_FILE_BUSTA START WITH 481 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1195
CREATE SEQUENCE SDEC_FORMATO_FILE_STANDARD START WITH 1742 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1196
CREATE SEQUENCE SDEC_FORMATO_GRUPPO_PROPRIETA START WITH 10 INCREMENT BY 1 MINVALUE 1 MAXVALUE 999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1197
CREATE SEQUENCE SDEC_FORMATO_PROPRIETA START WITH 25 INCREMENT BY 1 MINVALUE 1 MAXVALUE 999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1198
CREATE SEQUENCE SDEC_FORMATO_VALUTAZIONE START WITH 1721 INCREMENT BY 1 MINVALUE 1 MAXVALUE 999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1199
CREATE SEQUENCE SDEC_IMAGE_TRASFORM START WITH 141 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1200
CREATE SEQUENCE SDEC_JOB START WITH 383 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1201
CREATE SEQUENCE SDEC_LINK_TIPO_SERIE START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1202
CREATE SEQUENCE SDEC_LIVELLO_TITOL START WITH 221 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1203
CREATE SEQUENCE SDEC_MODELLO_CAMPO_INP_UD START WITH 101 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1204
CREATE SEQUENCE SDEC_MODELLO_CAMPO_OUT_SEL_UD START WITH 221 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1205
CREATE SEQUENCE SDEC_MODELLO_FILTRO_SEL_UDATTB START WITH 44 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1206
CREATE SEQUENCE SDEC_MODELLO_FILTRO_TI_DOC START WITH 21 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1207
CREATE SEQUENCE SDEC_MODELLO_OUT_SEL_UD START WITH 181 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1208
CREATE SEQUENCE SDEC_MODELLO_TIPO_SERIE START WITH 403 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1209
CREATE SEQUENCE SDEC_MODELLO_XSD_ATTRIB_FASC START WITH 201 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1210
CREATE SEQUENCE SDEC_MODELLO_XSD_FASCICOLO START WITH 241 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1211
CREATE SEQUENCE SDEC_MODELLO_XSD_UD START WITH 101 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1212
CREATE SEQUENCE SDEC_NOTA_MODELLO_TIPO_SERIE START WITH 101 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1213
CREATE SEQUENCE SDEC_NOTA_TIPO_SERIE START WITH 821 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1214
CREATE SEQUENCE SDEC_OUT_SEL_UD START WITH 2072 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1215
CREATE SEQUENCE SDEC_PARTE_NUMERO_FASCICOLO START WITH 692 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1216
CREATE SEQUENCE SDEC_PARTE_NUMERO_REGISTRO START WITH 10902 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1217
CREATE SEQUENCE SDEC_REGISTRO_UNITA_DOC START WITH 10005 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1218
CREATE SEQUENCE SDEC_REPORT_SERVIZIO_VERIFICA_COMP_DOC START WITH 221 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1219
CREATE SEQUENCE SDEC_SEL_CRITERIO_RAGGR_FASC START WITH 461 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1220
CREATE SEQUENCE SDEC_SERVIZIO_VERIFICA_COMP_DOC START WITH 241 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1221
CREATE SEQUENCE SDEC_TIPO_COMP_DOC START WITH 5062 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1222
CREATE SEQUENCE SDEC_TIPO_DOC START WITH 9052 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1223
CREATE SEQUENCE SDEC_TIPO_DOC_AMMESSO START WITH 10062 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1224
CREATE SEQUENCE SDEC_TIPO_FASCICOLO START WITH 528 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1225
CREATE SEQUENCE SDEC_TIPO_NOTA_SERIE START WITH 61 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1226
CREATE SEQUENCE SDEC_TIPO_NOTA_UNITA_DOC START WITH 21 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1227
CREATE SEQUENCE SDEC_TIPO_RAPPR_AMMESSO START WITH 2239 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1228
CREATE SEQUENCE SDEC_TIPO_RAPPR_COMP START WITH 2544 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1229
CREATE SEQUENCE SDEC_TIPO_SERIE START WITH 1561 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1230
CREATE SEQUENCE SDEC_TIPO_SERIE_CREATA_AUTOM START WITH 1103 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1231
CREATE SEQUENCE SDEC_TIPO_SERIE_UD START WITH 1461 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1232
CREATE SEQUENCE SDEC_TIPO_STRUT_DOC START WITH 3686 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1233
CREATE SEQUENCE SDEC_TIPO_STRUT_DOC_AMMESSO START WITH 5445 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1234
CREATE SEQUENCE SDEC_TIPO_STRUT_UD_REG START WITH 1808 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1235
CREATE SEQUENCE SDEC_TIPO_STRUT_UD_SIS_VERS START WITH 610 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1236
CREATE SEQUENCE SDEC_TIPO_STRUT_UD_XSD START WITH 561 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1237
CREATE SEQUENCE SDEC_TIPO_STRUT_UNITA_DOC START WITH 5731 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1238
CREATE SEQUENCE SDEC_TIPO_UNITA_DOC START WITH 7023 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1239
CREATE SEQUENCE SDEC_TIPO_UNITA_DOC_AMMESSO START WITH 10122 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1240
CREATE SEQUENCE SDEC_TITOL START WITH 221 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1241
CREATE SEQUENCE SDEC_TI_EVE_STATO_ELENCO_VERS START WITH 21 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1242
CREATE SEQUENCE SDEC_TRASFORM_TIPO_RAPPR START WITH 313 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1243
CREATE SEQUENCE SDEC_USO_MODELLO_TIPO_SERIE START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1244
CREATE SEQUENCE SDEC_USO_MODELLO_XSD_COMP_DOC START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1245
CREATE SEQUENCE SDEC_USO_MODELLO_XSD_DOC START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1246
CREATE SEQUENCE SDEC_USO_MODELLO_XSD_FASC START WITH 641 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1247
CREATE SEQUENCE SDEC_USO_MODELLO_XSD_UNI_DOC START WITH 81 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1248
CREATE SEQUENCE SDEC_VAL_VOCE_TITOL START WITH 421 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1249
CREATE SEQUENCE SDEC_VOCE_TITOL START WITH 381 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1250
CREATE SEQUENCE SDEC_WARN_AA_REGISTRO_UD START WITH 1562 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1251
CREATE SEQUENCE SDEC_WARN_AA_TIPO_FASCICOLO START WITH 81 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1252
CREATE SEQUENCE SDEC_XSD_ATTRIB_DATI_SPEC START WITH 45644 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1253
CREATE SEQUENCE SDEC_XSD_DATI_SPEC START WITH 7711 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1254
CREATE SEQUENCE SELV_DOC_AGG_DA_ELAB_ELENCO START WITH 2112 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1255
CREATE SEQUENCE SELV_ELENCO_VERS START WITH 31004 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1256
CREATE SEQUENCE SELV_ELENCO_VERS_FASC START WITH 821 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1257
CREATE SEQUENCE SELV_ELENCO_VERS_FASC_ANNUL START WITH 322 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1258
CREATE SEQUENCE SELV_ELENCO_VERS_FASC_DA_ELAB START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1259
CREATE SEQUENCE SELV_ELENCO_VERS_UD_ANNUL START WITH 13403 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1260
CREATE SEQUENCE SELV_FASC_DA_ELAB_ELENCO START WITH 247503 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1261
CREATE SEQUENCE SELV_FILE_ELENCO_VERS START WITH 20945 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1262
CREATE SEQUENCE SELV_FILE_ELENCO_VERS_FASC START WITH 863 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1263
CREATE SEQUENCE SELV_LOG_ELENCO_VERS START WITH 95278 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1264
CREATE SEQUENCE SELV_STATO_ELENCO_VERS START WITH 199401 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1265
CREATE SEQUENCE SELV_STATO_ELENCO_VERS_FASC START WITH 1644 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1266
CREATE SEQUENCE SELV_UD_VERS_DA_ELAB_ELENCO START WITH 4336383 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1267
CREATE SEQUENCE SELV_UPD_UD_DA_ELAB_ELENCO START WITH 883 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1268
CREATE SEQUENCE SEQ_PG_ABIL_DATI START WITH 5261 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1269
CREATE SEQUENCE SEQ_PG_DICH_ABIL_DATI START WITH 15020 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1270
CREATE SEQUENCE SFAS_AIP_FASCICOLO_DA_ELAB START WITH 462 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1271
CREATE SEQUENCE SFAS_AMMIN_PARTEC START WITH 921 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1272
CREATE SEQUENCE SFAS_COD_IDE_SOG START WITH 2462861 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1273
CREATE SEQUENCE SFAS_CONTEN_VER_AIP_FASCICOLO START WITH 361 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1274
CREATE SEQUENCE SFAS_EVENTO_FASCICOLO START WITH 494125 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1275
CREATE SEQUENCE SFAS_EVENTO_SOG START WITH 985209 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1276
CREATE SEQUENCE SFAS_FASCICOLO START WITH 248243 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1277
CREATE SEQUENCE SFAS_FILE_META_VER_AIP_FASC START WITH 401 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1278
CREATE SEQUENCE SFAS_IND_RIF_SOG START WITH 1231491 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1279
CREATE SEQUENCE SFAS_LINK_FASCICOLO START WITH 739707 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1280
CREATE SEQUENCE SFAS_META_VER_AIP_FASCICOLO START WITH 401 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1281
CREATE SEQUENCE SFAS_RESP_FASCICOLO START WITH 901 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1282
CREATE SEQUENCE SFAS_SIP_VER_AIP_FASCICOLO START WITH 341 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1283
CREATE SEQUENCE SFAS_SOG_FASCICOLO START WITH 1971257 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1284
CREATE SEQUENCE SFAS_STATO_CONSERV_FASCICOLO START WITH 247646 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1285
CREATE SEQUENCE SFAS_STATO_FASCICOLO_ELENCO START WITH 987247 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1286
CREATE SEQUENCE SFAS_UD_AIP_FASCICOLO_DA_ELAB START WITH 382 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1287
CREATE SEQUENCE SFAS_UNITA_DOC_FASCICOLO START WITH 247603 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1288
CREATE SEQUENCE SFAS_UNI_ORG_RESP_FASCICOLO START WITH 861 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1289
CREATE SEQUENCE SFAS_VALORE_ATTRIB_FASCICOLO START WITH 492705 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1290
CREATE SEQUENCE SFAS_VER_AIP_FASCICOLO START WITH 361 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1291
CREATE SEQUENCE SFAS_VOCE_CLASSIF START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1292
CREATE SEQUENCE SFAS_WARN_FASCICOLO START WITH 985629 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1293
CREATE SEQUENCE SFAS_XML_FASCICOLO START WITH 986149 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1294
CREATE SEQUENCE SFAS_XML_VERS_FASCICOLO START WITH 493665 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1295
CREATE SEQUENCE SFAS_XSD_META_VER_AIP_FASC START WITH 441 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1296
CREATE SEQUENCE SFIR_CERTIF_CA START WITH 132209 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 1000 NOORDER;

-- changeset root:1751897635013-1297
CREATE SEQUENCE SFIR_CERTIF_FIRMATARIO START WITH 289262 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 1000 NOORDER;

-- changeset root:1751897635013-1298
CREATE SEQUENCE SFIR_CERTIF_OCSP START WITH 721 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1299
CREATE SEQUENCE SFIR_CRL START WITH 331822 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 1000 NOORDER;

-- changeset root:1751897635013-1300
CREATE SEQUENCE SFIR_FILE_PER_FIRMA START WITH 386074 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 1000 NOORDER;

-- changeset root:1751897635013-1301
CREATE SEQUENCE SFIR_ISSUER START WITH 1869 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1302
CREATE SEQUENCE SFIR_METADATI_REPORT START WITH 41 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1303
CREATE SEQUENCE SFIR_OCSP START WITH 721 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1304
CREATE SEQUENCE SFIR_REPORT START WITH 33781 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1305
CREATE SEQUENCE SFIR_REPORT_EIDAS START WITH 14151340 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1306
CREATE SEQUENCE SFIR_URL_DISTRIB_CRL START WITH 2543 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1307
CREATE SEQUENCE SFIR_URL_DISTRIB_OCSP START WITH 921 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1308
CREATE SEQUENCE SFIR_URN_REPORT START WITH 51201 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1309
CREATE SEQUENCE SHSM_ELENCO_FASC_SES_FIRMA START WITH 542 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1310
CREATE SEQUENCE SHSM_ELENCO_SESSIONE_FIRMA START WITH 2224 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1311
CREATE SEQUENCE SHSM_SESSIONE_FIRMA START WITH 1765 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1312
CREATE SEQUENCE SHSM_VER_SERIE_SESSIONE_FIRMA START WITH 341 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1313
CREATE SEQUENCE SIAM_ABIL_ORGANIZ START WITH 35265 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1314
CREATE SEQUENCE SIAM_ABIL_TIPO_DATO START WITH 666658 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1315
CREATE SEQUENCE SIAM_AUTOR_SERV START WITH 546395 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1316
CREATE SEQUENCE SIAM_ENTE_CONVENZ_DA_ALLINEA START WITH 1102 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1317
CREATE SEQUENCE SIAM_IND_IP_USER START WITH 402 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1318
CREATE SEQUENCE SIAM_ORGANIZ_DA_REPLIC START WITH 7489 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1319
CREATE SEQUENCE SIAM_USER START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1320
CREATE SEQUENCE SLOG_ELAB_CONSIST START WITH 461 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1321
CREATE SEQUENCE SLOG_LOCK_ELAB START WITH 1234 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1322
CREATE SEQUENCE SLOG_OPER START WITH 206763 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1323
CREATE SEQUENCE SMON_AA_UNITA_DOC_REGISTRO START WITH 5554 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1324
CREATE SEQUENCE SMON_CONTA_BY_STATO_CONSERV_NEW START WITH 988041 INCREMENT BY 1 MINVALUE 0 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1325
CREATE SEQUENCE SMON_CONTA_FASCICOLI START WITH 281 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1326
CREATE SEQUENCE SMON_CONTA_FASCICOLI_KO START WITH 281 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1327
CREATE SEQUENCE SMON_CONTA_SES_UPD_UD START WITH 201 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1328
CREATE SEQUENCE SMON_CONTA_SES_UPD_UD_KO START WITH 201 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1329
CREATE SEQUENCE SMON_CONTA_UD_DOC_COMP START WITH 9954 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1330
CREATE SEQUENCE SMON_KEY_TOTAL_UD START WITH 381 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1331
CREATE SEQUENCE SMON_KEY_TOTAL_UD_KO START WITH 381 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1332
CREATE SEQUENCE SMON_TIPO_UNITA_DOC_USER_VERS START WITH 5685 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1333
CREATE SEQUENCE SMON_TOT_SACER START WITH 65258 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1334
CREATE SEQUENCE SORG_AMBIENTE START WITH 261 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1335
CREATE SEQUENCE SORG_AMBITO_TERRIT START WITH 345 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1336
CREATE SEQUENCE SORG_CAMPO_VAL_SUB_STRUT START WITH 5331 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1337
CREATE SEQUENCE SORG_CATEG_ENTE START WITH 103 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1338
CREATE SEQUENCE SORG_CATEG_STRUT START WITH 91 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1339
CREATE SEQUENCE SORG_ENTE START WITH 1565 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1340
CREATE SEQUENCE SORG_OPER_TITOL START WITH 301 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1341
CREATE SEQUENCE SORG_OPER_VOCE_TITOL START WITH 461 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1342
CREATE SEQUENCE SORG_PARTITION START WITH 341 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1343
CREATE SEQUENCE SORG_PARTITION_STRUT START WITH 3268 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1344
CREATE SEQUENCE SORG_PARTITION_SUB_STRUT START WITH 876 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1345
CREATE SEQUENCE SORG_REGOLA_VAL_SUB_STRUT START WITH 6145 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1346
CREATE SEQUENCE SORG_STORICO_ENTE_AMBIENTE START WITH 141 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1347
CREATE SEQUENCE SORG_STRUT START WITH 2697 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1348
CREATE SEQUENCE SORG_STRUT_CONFIG_FASCICOLO START WITH 101 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1349
CREATE SEQUENCE SORG_SUB_PARTITION START WITH 941 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1350
CREATE SEQUENCE SORG_SUB_STRUT START WITH 2586 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1351
CREATE SEQUENCE SORG_USO_SISTEMA_MIGRAZ START WITH 282 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1352
CREATE SEQUENCE SORG_VAL_SUB_PARTITION START WITH 1601 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1353
CREATE SEQUENCE SOST_MIGRAZ_FILE START WITH 664764 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1354
CREATE SEQUENCE SOST_MIGRAZ_FILE_ERR START WITH 39161 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1355
CREATE SEQUENCE SOST_MIGRAZ_STRUT_MESE START WITH 12801 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1356
CREATE SEQUENCE SOST_MIGRAZ_SUB_PART START WITH 124 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1357
CREATE SEQUENCE SOST_STATO_MIGRAZ_SUB_PART START WITH 484 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1358
CREATE SEQUENCE SPRF_AUTOR START WITH 26630 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1359
CREATE SEQUENCE SPRF_DICH_AUTOR START WITH 310 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1360
CREATE SEQUENCE SPRF_RUOLO START WITH 64 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1361
CREATE SEQUENCE SPRF_USO_RUOLO_APPLIC START WITH 68 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1362
CREATE SEQUENCE SPROVA_NO_SECUREFILE START WITH 41 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1363
CREATE SEQUENCE SPROVA_SECUREFILE START WITH 41 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1364
CREATE SEQUENCE SREC_DT_VERS_RECUP START WITH 12120 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1365
CREATE SEQUENCE SREC_SESSIONE_RECUP START WITH 12178 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1366
CREATE SEQUENCE SREC_UNITA_DOC_RECUP START WITH 10907 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1367
CREATE SEQUENCE SRIS_ABIL_DATI START WITH 49374 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1368
CREATE SEQUENCE SRIS_ABIL_STRUT START WITH 18036 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1369
CREATE SEQUENCE SRIS_DICH_ABIL_DATI START WITH 394 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1370
CREATE SEQUENCE SRIS_DICH_ABIL_STRUT START WITH 268 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1371
CREATE SEQUENCE SRIS_USO_RUOLO_DICH START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1372
CREATE SEQUENCE SRIS_USO_RUOLO_STRUT START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1373
CREATE SEQUENCE SSEQ_CUSTODE_SEQUESTRO START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1374
CREATE SEQUENCE SSEQ_DOC_PROVVED_SEQUESTRO START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1375
CREATE SEQUENCE SSEQ_ELENCO_SEQUESTRO START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1376
CREATE SEQUENCE SSEQ_NOTA_ELENCO_SEQUESTRO START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1377
CREATE SEQUENCE SSEQ_NOTA_SEQUESTRO START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1378
CREATE SEQUENCE SSEQ_SEQUESTRO START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1379
CREATE SEQUENCE SSEQ_STATO_ELENCO_SEQUESTRO START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1380
CREATE SEQUENCE SSEQ_STATO_SEQUESTRO START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1381
CREATE SEQUENCE SSEQ_STATO_TRASM_ELENCO START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1382
CREATE SEQUENCE SSEQ_UD_APPART_SEQUESTRO START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1383
CREATE SEQUENCE SSEQ_VAL_CUSTODE_SEQUESTRO START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1384
CREATE SEQUENCE SSEQ_VOL_ELENCO_SEQUESTRO START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1385
CREATE SEQUENCE SSER_CONSIST_VER_SERIE START WITH 381 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1386
CREATE SEQUENCE SSER_CONTENUTO_VER_SERIE START WITH 18523 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1387
CREATE SEQUENCE SSER_ERR_CONTENUTO_VER_SERIE START WITH 14137 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1388
CREATE SEQUENCE SSER_ERR_FILE_INPUT START WITH 441 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1389
CREATE SEQUENCE SSER_FILE_INPUT_VER_SERIE START WITH 161 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1390
CREATE SEQUENCE SSER_FILE_VER_SERIE START WITH 641 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1391
CREATE SEQUENCE SSER_IX_VOL_VER_SERIE START WITH 481 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1392
CREATE SEQUENCE SSER_LACUNA_CONSIST_VER_SERIE START WITH 141 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1393
CREATE SEQUENCE SSER_LINK_SERIE START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1394
CREATE SEQUENCE SSER_NOTA_VER_SERIE START WITH 1982 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1395
CREATE SEQUENCE SSER_QUERY_CONTENUTO_VER_SERIE START WITH 4386 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1396
CREATE SEQUENCE SSER_SERIE START WITH 3822 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1397
CREATE SEQUENCE SSER_STATO_SERIE START WITH 961 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1398
CREATE SEQUENCE SSER_STATO_VER_SERIE START WITH 13586 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1399
CREATE SEQUENCE SSER_UD_ERR_FILE_INPUT START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1400
CREATE SEQUENCE SSER_UD_NON_VERS_ERR START WITH 2459 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1401
CREATE SEQUENCE SSER_URN_FILE_VER_SERIE START WITH 441 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1402
CREATE SEQUENCE SSER_URN_IX_VOL_VER_SERIE START WITH 341 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1403
CREATE SEQUENCE SSER_VER_SERIE START WITH 4025 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1404
CREATE SEQUENCE SSER_VER_SERIE_DA_ELAB START WITH 3621 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1405
CREATE SEQUENCE SSER_VOL_VER_SERIE START WITH 501 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1406
CREATE SEQUENCE STMP_ITEM_RICH START WITH 21 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1407
CREATE SEQUENCE STMP_STATO_RICH START WITH 21 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1408
CREATE SEQUENCE STMP_STRUT_CALC_CONSIST_NEW START WITH 2501 INCREMENT BY 1 MINVALUE 0 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1409
CREATE SEQUENCE STMP_VERIF_COMP_COPIATO START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1410
CREATE SEQUENCE STPI_DT_SCHED START WITH 3484 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1411
CREATE SEQUENCE STPI_ERR_ARK START WITH 18608 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1412
CREATE SEQUENCE STPI_PATH_ELAB START WITH 6769 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1413
CREATE SEQUENCE STPI_SCHED_JOB START WITH 39201 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1414
CREATE SEQUENCE SUSR_USER START WITH 247 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1415
CREATE SEQUENCE SUSR_USO_RUOLO_USER_DEFAULT START WITH 292 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1416
CREATE SEQUENCE SUSR_USO_USER_APPLIC START WITH 286 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1417
CREATE SEQUENCE SVOL_APPART_COMP_VOLUME START WITH 304379 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1418
CREATE SEQUENCE SVOL_APPART_DOC_VOLUME START WITH 257339 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1419
CREATE SEQUENCE SVOL_APPART_FIRMA_VOLUME START WITH 234380 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1420
CREATE SEQUENCE SVOL_APPART_UNITA_DOC_VOLUME START WITH 148676 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1421
CREATE SEQUENCE SVOL_CONTR_VERIF_FIRMA_VOLUME START WITH 936957 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1422
CREATE SEQUENCE SVOL_FILE_VOLUME_CONSERV START WITH 5379 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1423
CREATE SEQUENCE SVOL_VERIF_FIRMA_VOLUME START WITH 234380 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1424
CREATE SEQUENCE SVOL_VOLUME_CONSERV START WITH 37107 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1425
CREATE SEQUENCE SVOL_VOLUME_DA_ELAB START WITH 2793 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1426
CREATE SEQUENCE SVOL_VOLUME_VERS_UD_ANNUL START WITH 121 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1427
CREATE SEQUENCE SVRS_ARK_PATH_DT_VERS START WITH 2689 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1428
CREATE SEQUENCE SVRS_CONTENUTO_FILE START WITH 572615 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 1000 NOORDER;

-- changeset root:1751897635013-1429
CREATE SEQUENCE SVRS_DATI_SESSIONE_VERS START WITH 7772733 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 1000 NOORDER;

-- changeset root:1751897635013-1430
CREATE SEQUENCE SVRS_DOC_NON_VERS START WITH 921 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1431
CREATE SEQUENCE SVRS_DT_VERS START WITH 1721 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1432
CREATE SEQUENCE SVRS_ERR_SESSIONE_VERS START WITH 8308953 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 1000 NOORDER;

-- changeset root:1751897635013-1433
CREATE SEQUENCE SVRS_ERR_SES_FASCICOLO_KO START WITH 10581 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1434
CREATE SEQUENCE SVRS_ERR_SES_UPD_UNITA_DOC_ERR START WITH 684 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1435
CREATE SEQUENCE SVRS_ERR_SES_UPD_UNITA_DOC_KO START WITH 983 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1436
CREATE SEQUENCE SVRS_FASCICOLO_KO START WITH 981 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1437
CREATE SEQUENCE SVRS_FILE_NOARK_PATH_DT_VERS START WITH 941 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1438
CREATE SEQUENCE SVRS_FILE_SESSIONE START WITH 5788001 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 1000 NOORDER;

-- changeset root:1751897635013-1439
CREATE SEQUENCE SVRS_PATH_DT_VERS START WITH 1762 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1440
CREATE SEQUENCE SVRS_SESSIONE_VERS START WITH 7774734 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 1000 NOORDER;

-- changeset root:1751897635013-1441
CREATE SEQUENCE SVRS_SESSIONE_VERS_SOSP START WITH 1 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1442
CREATE SEQUENCE SVRS_SES_FASCICOLO_ERR START WITH 1581 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1443
CREATE SEQUENCE SVRS_SES_FASCICOLO_KO START WITH 10261 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1444
CREATE SEQUENCE SVRS_SES_UPD_UNITA_DOC_ERR START WITH 588 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1445
CREATE SEQUENCE SVRS_SES_UPD_UNITA_DOC_KO START WITH 802 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1446
CREATE SEQUENCE SVRS_UNITA_DOC_NON_VERS START WITH 970420 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1447
CREATE SEQUENCE SVRS_UPD_UNITA_DOC_KO START WITH 682 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1448
CREATE SEQUENCE SVRS_URN_XML_SESSIONE_VERS START WITH 7486761 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1449
CREATE SEQUENCE SVRS_XML_DATI_SESSIONE_VERS START WITH 25275070 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 1000 NOORDER;

-- changeset root:1751897635013-1450
CREATE SEQUENCE SVRS_XML_MODELLO_SESSIONE_VERS START WITH 221 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1451
CREATE SEQUENCE SVRS_XML_SES_FASCICOLO_ERR START WITH 2481 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1452
CREATE SEQUENCE SVRS_XML_SES_FASCICOLO_KO START WITH 19681 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1453
CREATE SEQUENCE SVRS_XML_SES_UPD_UNITA_DOC_ERR START WITH 721 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1454
CREATE SEQUENCE SVRS_XML_SES_UPD_UNITA_DOC_KO START WITH 1023 INCREMENT BY 1 MINVALUE 1 MAXVALUE 9999999999999999999999999999 CACHE 20 NOORDER;

-- changeset root:1751897635013-1455
CREATE TABLE A0_AUDIT (C1 NUMBER);

-- changeset root:1751897635013-1456
CREATE TABLE APL_APPLIC (ID_APPLIC NUMBER NOT NULL, NM_APPLIC VARCHAR2(100 BYTE) NOT NULL, DS_APPLIC VARCHAR2(254 BYTE) NOT NULL, CONSTRAINT PK_APL PRIMARY KEY (ID_APPLIC));

-- changeset root:1751897635013-1457
CREATE TABLE APL_SISTEMA_MIGRAZ (ID_SISTEMA_MIGRAZ NUMBER NOT NULL, NM_SISTEMA_MIGRAZ VARCHAR2(100 BYTE) NOT NULL, DS_SISTEMA_MIGRAZ VARCHAR2(254 BYTE) NOT NULL, CONSTRAINT PK_SIS_MGZ PRIMARY KEY (ID_SISTEMA_MIGRAZ));

-- changeset root:1751897635013-1458
CREATE TABLE APL_VAL_PARAM_APPLIC_MULTI (ID_VAL_PARAM_APPLIC_MULTI NUMBER NOT NULL, ID_PARAM_APPLIC NUMBER NOT NULL, ID_AMBIENTE NUMBER NOT NULL, DS_VALORE_PARAM_APPLIC VARCHAR2(254 BYTE) NOT NULL, CONSTRAINT PK_VAL_PAR_APL_MULTI PRIMARY KEY (ID_VAL_PARAM_APPLIC_MULTI));

-- changeset root:1751897635013-1459
CREATE TABLE ARO_COMP_INDICE_AIP_DA_ELAB (ID_COMP_INDICE_AIP_DA_ELAB NUMBER NOT NULL, ID_INDICE_AIP_DA_ELAB NUMBER NOT NULL, ID_COMP_DOC NUMBER NOT NULL, CONSTRAINT PK_COMP_IX_AIP_DA_ELAB PRIMARY KEY (ID_COMP_INDICE_AIP_DA_ELAB));

-- changeset root:1751897635013-1460
CREATE TABLE ARO_FILE_COMP (ID_CONTEN_COMP NUMBER NOT NULL, ID_COMP_STRUT_DOC NUMBER NOT NULL, BL_CONTEN_COMP BLOB NOT NULL, ID_STRUT NUMBER NOT NULL, AA_KEY_UNITA_DOC NUMBER(4, 0) NOT NULL, MM_VERS NUMBER(6, 0) NOT NULL, CONSTRAINT PK_FILE_COMP PRIMARY KEY (ID_CONTEN_COMP));

-- changeset root:1751897635013-1461
CREATE TABLE ARO_FILE_RICH_ANNUL_VERS (ID_FILE_RICH_ANNUL_VERS NUMBER NOT NULL, ID_RICH_ANNUL_VERS NUMBER NOT NULL, TI_FILE VARCHAR2(30 BYTE) NOT NULL, BL_FILE CLOB NOT NULL, CONSTRAINT PK_FILE_RICH_ANN_VRS PRIMARY KEY (ID_FILE_RICH_ANNUL_VERS));

-- changeset root:1751897635013-1462
CREATE TABLE ARO_FILE_VER_INDICE_AIP_UD (ID_FILE_VER_INDICE_AIP NUMBER NOT NULL, ID_VER_INDICE_AIP NUMBER NOT NULL, BL_FILE_VER_INDICE_AIP CLOB NOT NULL, ID_STRUT NUMBER NOT NULL, MM_CREAZIONE NUMBER(6, 0) NOT NULL, CONSTRAINT PK_FILE_VER_IX_AIP_UD_NEW PRIMARY KEY (ID_FILE_VER_INDICE_AIP));

-- changeset root:1751897635013-1463
CREATE TABLE ARO_INDICE_AIP_UD_DA_ELAB (ID_INDICE_AIP_DA_ELAB NUMBER NOT NULL, ID_UNITA_DOC NUMBER NOT NULL, DT_CREAZIONE_DA_ELAB date NOT NULL, DS_CAUSALE VARCHAR2(254 BYTE) NOT NULL, TI_CREAZIONE VARCHAR2(20 BYTE) NOT NULL, PG_CREAZIONE_DA_ELAB NUMBER NOT NULL, ID_ELENCO_VERS NUMBER, FL_IN_CODA CHAR(1 BYTE) DEFAULT '0' NOT NULL, TS_IN_CODA TIMESTAMP(6), CONSTRAINT PK_IX_AIP_UD_DA_ELAB PRIMARY KEY (ID_INDICE_AIP_DA_ELAB));

-- changeset root:1751897635013-1464
CREATE TABLE ARO_LOG_STATO_CONSERV_UD (ID_LOG_STATO_CONSERV_UD NUMBER GENERATED ALWAYS AS IDENTITY NOT NULL, ID_UNITA_DOC NUMBER NOT NULL, ID_SUB_STRUT NUMBER NOT NULL, DT_STATO TIMESTAMP(3) NOT NULL, TI_EVENTO VARCHAR2(256 CHAR) NOT NULL, TI_STATO_CONSERVAZIONE VARCHAR2(30 CHAR) NOT NULL, NM_AGENTE VARCHAR2(256 CHAR) NOT NULL, TI_MOD VARCHAR2(256 CHAR) NOT NULL, AA_KEY_UNITA_DOC NUMBER(4, 0) NOT NULL, CONSTRAINT ARO_LOG_STATO_CONSERV_UD_PK PRIMARY KEY (ID_LOG_STATO_CONSERV_UD));

-- changeset root:1751897635013-1465
CREATE TABLE ARO_UPD_ARCHIV_SEC (ID_UPD_ARCHIV_SEC NUMBER NOT NULL, ID_UPD_UNITA_DOC NUMBER NOT NULL, DS_CLASSIF VARCHAR2(254 BYTE), CD_FASCIC VARCHAR2(4000 BYTE), DS_OGGETTO_FASCIC VARCHAR2(4000 BYTE), CD_SOTTOFASCIC VARCHAR2(4000 BYTE), DS_OGGETTO_SOTTOFASCIC VARCHAR2(4000 BYTE), CONSTRAINT PK_UPD_ARC_SEC PRIMARY KEY (ID_UPD_ARCHIV_SEC));

-- changeset root:1751897635013-1466 splitStatements:true
CREATE TABLE ARO_UPD_DATI_SPEC_UD_OBJECT_STORAGE (ID_UPD_DATI_SPEC_UD_OBJECT_STORAGE NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL, ID_UPD_UNITA_DOC NUMBER NOT NULL, ID_UPD_DOC_UNITA_DOC NUMBER, ID_UPD_COMP_UNITA_DOC NUMBER, TI_ENTITA_SACER VARCHAR2(20 BYTE) NOT NULL, ID_DEC_BACKEND NUMBER NOT NULL, NM_TENANT VARCHAR2(100 BYTE) NOT NULL, NM_BUCKET VARCHAR2(100 BYTE) NOT NULL, CD_KEY_FILE VARCHAR2(254 BYTE) NOT NULL, ID_STRUT NUMBER NOT NULL, CONSTRAINT PK_UPD_DATI_SPEC_UD_OBJECT_STORAGE PRIMARY KEY (ID_UPD_DATI_SPEC_UD_OBJECT_STORAGE));
COMMENT ON TABLE ARO_UPD_DATI_SPEC_UD_OBJECT_STORAGE IS 'Tabella di collegamento tra l''aggiornamento metadati e i dati specifici salvati su object storage. Modellata come ARO_COMP_OBJECT_STORAGE';
COMMENT ON COLUMN ARO_UPD_DATI_SPEC_UD_OBJECT_STORAGE.ID_UPD_DATI_SPEC_UD_OBJECT_STORAGE IS 'PK riporta la chiave della ARO_UPD_DATI_SPEC_UD_OBJECT_STORAGE';
COMMENT ON COLUMN ARO_UPD_DATI_SPEC_UD_OBJECT_STORAGE.ID_UPD_UNITA_DOC IS 'FK verso ARO_UPD_UNITA_DOC';
COMMENT ON COLUMN ARO_UPD_DATI_SPEC_UD_OBJECT_STORAGE.ID_UPD_DOC_UNITA_DOC IS 'FK verso ARO_UPD_DOC_UNITA_DOC';
COMMENT ON COLUMN ARO_UPD_DATI_SPEC_UD_OBJECT_STORAGE.ID_UPD_COMP_UNITA_DOC IS 'Id della ARO_UPD_COMP_UNITA_DOC';
COMMENT ON COLUMN ARO_UPD_DATI_SPEC_UD_OBJECT_STORAGE.ID_DEC_BACKEND IS 'FK verso DEC_BACKEND sull''id del backend utilizzato (sicuramente di tipo OS)';
COMMENT ON COLUMN ARO_UPD_DATI_SPEC_UD_OBJECT_STORAGE.NM_TENANT IS 'Tenant dell''OS a cui ci si collega (inutilizzato)';
COMMENT ON COLUMN ARO_UPD_DATI_SPEC_UD_OBJECT_STORAGE.NM_BUCKET IS 'Bucket su cui viene scritto il file zip';
COMMENT ON COLUMN ARO_UPD_DATI_SPEC_UD_OBJECT_STORAGE.CD_KEY_FILE IS 'Chiave univoca su cui viene scritto il file zip';

-- changeset root:1751897635013-1467
CREATE TABLE ARO_UPD_DATI_SPEC_UNITA_DOC (ID_UPD_DATI_SPEC_UNITA_DOC NUMBER NOT NULL, TI_USO_XSD VARCHAR2(20 BYTE) NOT NULL, TI_ENTITA_SACER VARCHAR2(20 BYTE) NOT NULL, ID_UPD_UNITA_DOC NUMBER NOT NULL, ID_UPD_DOC_UNITA_DOC NUMBER, ID_UPD_COMP_UNITA_DOC NUMBER, ID_XSD_DATI_SPEC NUMBER NOT NULL, BL_XML_DATI_SPEC CLOB, ID_STRUT NUMBER NOT NULL, DT_INI_SES date NOT NULL, AA_INI_SES NUMBER(4, 0), CONSTRAINT PK_UPD_DATI_SPEC PRIMARY KEY (ID_UPD_DATI_SPEC_UNITA_DOC));

-- changeset root:1751897635013-1468
CREATE TABLE ARO_UPD_LINK_UNITA_DOC (ID_UPD_LINK_UNITA_DOC NUMBER NOT NULL, ID_UPD_UNITA_DOC NUMBER NOT NULL, CD_REGISTRO_KEY_UNITA_DOC_LINK VARCHAR2(100 BYTE) NOT NULL, AA_KEY_UNITA_DOC_LINK NUMBER(4, 0) NOT NULL, CD_KEY_UNITA_DOC_LINK VARCHAR2(100 BYTE) NOT NULL, DS_LINK_UNITA_DOC VARCHAR2(254 BYTE), ID_UNITA_DOC_LINK NUMBER, CONSTRAINT PK_UPD_LNK_UD PRIMARY KEY (ID_UPD_LINK_UNITA_DOC));

-- changeset root:1751897635013-1469
CREATE TABLE ARO_UPD_UD_INDICE_AIP_DA_ELAB (ID_UPD_UD_INDICE_AIP_DA_ELAB NUMBER NOT NULL, ID_INDICE_AIP_DA_ELAB NUMBER NOT NULL, ID_UPD_UNITA_DOC NUMBER NOT NULL, CONSTRAINT PK_UPD_UD_IX_AIP_DA_ELAB PRIMARY KEY (ID_UPD_UD_INDICE_AIP_DA_ELAB));

-- changeset root:1751897635013-1470
CREATE TABLE ARO_UPD_UD_VER_INDICE_AIP_UD (ID_UPD_UD_VER_INDICE_AIP_UD NUMBER NOT NULL, ID_VER_INDICE_AIP NUMBER NOT NULL, ID_UPD_UNITA_DOC NUMBER NOT NULL, CONSTRAINT PK_UPD_UD_VER_IX_AIP_UD PRIMARY KEY (ID_UPD_UD_VER_INDICE_AIP_UD));

-- changeset root:1751897635013-1471
CREATE TABLE ARO_VALORE_ATTRIB_DATI_SPEC_RIC_DS (ID_VALORE_ATTRIB_DATI_SPEC NUMBER NOT NULL, ID_USO_XSD_DATI_SPEC NUMBER NOT NULL, ID_ATTRIB_DATI_SPEC NUMBER NOT NULL, DL_VALORE VARCHAR2(4000 BYTE), ID_STRUT NUMBER NOT NULL, ID_UNITA_DOC NUMBER NOT NULL, TI_USO_XSD VARCHAR2(20 BYTE) NOT NULL, DL_VALORE_ORI VARCHAR2(4000 BYTE), ID_DOC NUMBER, TI_ENTITA_SACER VARCHAR2(20 BYTE), NM_SISTEMA_MIGRAZ VARCHAR2(100 BYTE), CD_VERSIONE_XSD_UD VARCHAR2(100 BYTE), CD_VERSIONE_XSD_DOC VARCHAR2(100 BYTE), AA_KEY_UNITA_DOC NUMBER(4, 0) NOT NULL, CONSTRAINT ARO_VALORE_ATTRIB_DATI_SPEC_RIC_DS_2 PRIMARY KEY (ID_VALORE_ATTRIB_DATI_SPEC));

-- changeset root:1751897635013-1472
CREATE TABLE ARO_VERS_INI_ARCHIV_SEC (ID_VERS_INI_ARCHIV_SEC NUMBER NOT NULL, ID_VERS_INI_UNITA_DOC NUMBER NOT NULL, DS_CLASSIF VARCHAR2(254 BYTE), CD_FASCIC VARCHAR2(4000 BYTE), DS_OGGETTO_FASCIC VARCHAR2(4000 BYTE), CD_SOTTOFASCIC VARCHAR2(4000 BYTE), DS_OGGETTO_SOTTOFASCIC VARCHAR2(4000 BYTE), CONSTRAINT PK_VERS_INI_ARC_SEC PRIMARY KEY (ID_VERS_INI_ARCHIV_SEC));

-- changeset root:1751897635013-1473
CREATE TABLE ARO_VERS_INI_COMP (ID_VERS_INI_COMP NUMBER NOT NULL, ID_VERS_INI_DOC NUMBER NOT NULL, ID_COMP_DOC NUMBER NOT NULL, DS_NOME_COMP_VERS VARCHAR2(254 BYTE), DL_URN_COMP_VERS VARCHAR2(1024 BYTE), DS_ID_COMP_VERS VARCHAR2(254 BYTE), CONSTRAINT PK_VERS_INI_COMP PRIMARY KEY (ID_VERS_INI_COMP));

-- changeset root:1751897635013-1474
CREATE TABLE ARO_VERS_INI_DATI_SPEC (ID_VERS_INI_DATI_SPEC NUMBER NOT NULL, TI_USO_XSD VARCHAR2(20 BYTE) NOT NULL, TI_ENTITA_SACER VARCHAR2(20 BYTE) NOT NULL, ID_VERS_INI_UNITA_DOC NUMBER NOT NULL, ID_VERS_INI_DOC NUMBER, ID_VERS_INI_COMP NUMBER, ID_XSD_DATI_SPEC NUMBER NOT NULL, BL_XML_DATI_SPEC CLOB, ID_STRUT NUMBER NOT NULL, DT_REG date NOT NULL, AA_DT_REG NUMBER(4, 0), CONSTRAINT PK_VERS_INI_SPEC PRIMARY KEY (ID_VERS_INI_DATI_SPEC));

-- changeset root:1751897635013-1475 splitStatements:true
CREATE TABLE ARO_VERS_INI_DATI_SPEC_OBJECT_STORAGE (ID_VERS_INI_DATI_SPEC_OBJECT_STORAGE NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL, ID_VERS_INI_UNITA_DOC NUMBER NOT NULL, ID_VERS_INI_DOC NUMBER, ID_VERS_INI_COMP NUMBER, TI_ENTITA_SACER VARCHAR2(20 BYTE) NOT NULL, ID_DEC_BACKEND NUMBER NOT NULL, NM_TENANT VARCHAR2(100 BYTE) NOT NULL, NM_BUCKET VARCHAR2(100 BYTE) NOT NULL, CD_KEY_FILE VARCHAR2(254 BYTE) NOT NULL, ID_STRUT NUMBER NOT NULL, CONSTRAINT PK_VERS_INI_DATI_SPEC_OBJECT_STORAGE PRIMARY KEY (ID_VERS_INI_DATI_SPEC_OBJECT_STORAGE));
COMMENT ON TABLE ARO_VERS_INI_DATI_SPEC_OBJECT_STORAGE IS 'Tabella di collegamento tra l''aggiornamento metadati e i dati specifici relativi ai metadati iniziali salvati su object storage. Modellata come ARO_COMP_OBJECT_STORAGE';
COMMENT ON COLUMN ARO_VERS_INI_DATI_SPEC_OBJECT_STORAGE.ID_VERS_INI_DATI_SPEC_OBJECT_STORAGE IS 'PK riporta la chiave della ARO_VERS_INI_DATI_SPEC_OBJECT_STORAGE';
COMMENT ON COLUMN ARO_VERS_INI_DATI_SPEC_OBJECT_STORAGE.ID_VERS_INI_UNITA_DOC IS 'Id della ARO_VERS_INI_UNITA_DOC';
COMMENT ON COLUMN ARO_VERS_INI_DATI_SPEC_OBJECT_STORAGE.ID_VERS_INI_DOC IS 'Id della ARO_VERS_INI_DOC';
COMMENT ON COLUMN ARO_VERS_INI_DATI_SPEC_OBJECT_STORAGE.ID_VERS_INI_COMP IS 'Id della ARO_VERS_INI_COMP';
COMMENT ON COLUMN ARO_VERS_INI_DATI_SPEC_OBJECT_STORAGE.ID_DEC_BACKEND IS 'FK verso DEC_BACKEND sull''id del backend utilizzato (sicuramente di tipo OS)';
COMMENT ON COLUMN ARO_VERS_INI_DATI_SPEC_OBJECT_STORAGE.NM_TENANT IS 'Tenant dell''OS a cui ci si collega (inutilizzato)';
COMMENT ON COLUMN ARO_VERS_INI_DATI_SPEC_OBJECT_STORAGE.NM_BUCKET IS 'Bucket su cui viene scritto il file zip';
COMMENT ON COLUMN ARO_VERS_INI_DATI_SPEC_OBJECT_STORAGE.CD_KEY_FILE IS 'Chiave univoca su cui viene scritto il file zip';

-- changeset root:1751897635013-1476
CREATE TABLE ARO_VERS_INI_DOC (ID_VERS_INI_DOC NUMBER NOT NULL, ID_VERS_INI_UNITA_DOC NUMBER NOT NULL, ID_DOC NUMBER NOT NULL, DL_DOC VARCHAR2(4000 BYTE), DS_AUTORE_DOC VARCHAR2(4000 BYTE), CONSTRAINT PK_VERS_INI_DOC PRIMARY KEY (ID_VERS_INI_DOC));

-- changeset root:1751897635013-1477
CREATE TABLE ARO_VERS_INI_LINK_UNITA_DOC (ID_VERS_INI_LINK_UNITA_DOC NUMBER NOT NULL, ID_VERS_INI_UNITA_DOC NUMBER NOT NULL, CD_REGISTRO_KEY_UNITA_DOC_LINK VARCHAR2(100 BYTE) NOT NULL, AA_KEY_UNITA_DOC_LINK NUMBER(4, 0) NOT NULL, CD_KEY_UNITA_DOC_LINK VARCHAR2(100 BYTE) NOT NULL, DS_LINK_UNITA_DOC VARCHAR2(254 BYTE), ID_UNITA_DOC_LINK NUMBER, CONSTRAINT PK_VERS_INI_LNK_UD PRIMARY KEY (ID_VERS_INI_LINK_UNITA_DOC));

-- changeset root:1751897635013-1478
CREATE TABLE ARO_VERS_INI_UNITA_DOC (ID_VERS_INI_UNITA_DOC NUMBER NOT NULL, ID_UNITA_DOC NUMBER NOT NULL, DS_CLASSIF_PRINC VARCHAR2(254 BYTE), CD_FASCIC_PRINC VARCHAR2(4000 BYTE), DS_OGGETTO_FASCIC_PRINC VARCHAR2(4000 BYTE), CD_SOTTOFASCIC_PRINC VARCHAR2(4000 BYTE), DS_OGGETTO_SOTTOFASCIC_PRINC VARCHAR2(4000 BYTE), DL_OGGETTO_UNITA_DOC VARCHAR2(4000 BYTE), DT_REG_UNITA_DOC date, CONSTRAINT PK_VERS_INI_UD PRIMARY KEY (ID_VERS_INI_UNITA_DOC));

-- changeset root:1751897635013-1479 splitStatements:true
CREATE TABLE ARO_VER_INDICE_AIP_UD_OBJECT_STORAGE (ID_VER_INDICE_AIP_UD_OBJECT_STORAGE NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL, ID_SUB_STRUT NUMBER NOT NULL, AA_KEY_UNITA_DOC NUMBER(4, 0) NOT NULL, ID_DEC_BACKEND NUMBER NOT NULL, ID_VER_INDICE_AIP NUMBER NOT NULL, NM_TENANT VARCHAR2(100 BYTE) NOT NULL, NM_BUCKET VARCHAR2(100 BYTE) NOT NULL, CD_KEY_FILE VARCHAR2(254 BYTE) NOT NULL, CONSTRAINT PK_ARO_VER_INDICE_AIP_UD_OBJECT_STORAGE PRIMARY KEY (ID_VER_INDICE_AIP_UD_OBJECT_STORAGE));
COMMENT ON TABLE ARO_VER_INDICE_AIP_UD_OBJECT_STORAGE IS 'Tabella di collegamento tra il dato della sessionetra le versioni di indice aip e l''object storage. Modellata come ARO_COMP_OBJECT_STORAGE';
COMMENT ON COLUMN ARO_VER_INDICE_AIP_UD_OBJECT_STORAGE.ID_VER_INDICE_AIP_UD_OBJECT_STORAGE IS 'PK autogenerata della tabella';
COMMENT ON COLUMN ARO_VER_INDICE_AIP_UD_OBJECT_STORAGE.ID_DEC_BACKEND IS 'FK verso DEC_BACKEND sull''id del backend utilizzato (sicuramente di tipo OS)';
COMMENT ON COLUMN ARO_VER_INDICE_AIP_UD_OBJECT_STORAGE.ID_VER_INDICE_AIP IS 'FK verso ARO_VER_INDICE_AIP_UD sull''id della versione dell''indice aip. Rappresenta la chiave logica della tabella';
COMMENT ON COLUMN ARO_VER_INDICE_AIP_UD_OBJECT_STORAGE.NM_TENANT IS 'Tenant dell''OS a cui ci si collega (inutilizzato)';
COMMENT ON COLUMN ARO_VER_INDICE_AIP_UD_OBJECT_STORAGE.NM_BUCKET IS 'Bucket su cui viene scritto il file xml';
COMMENT ON COLUMN ARO_VER_INDICE_AIP_UD_OBJECT_STORAGE.CD_KEY_FILE IS 'Chiave univoca su cui viene scritto il file xml';

-- changeset root:1751897635013-1480
CREATE TABLE ARO_WARN_UNITA_DOC (ID_WARN_UNITA_DOC NUMBER NOT NULL, ID_UNITA_DOC NUMBER NOT NULL, PG_WARN_UNITA_DOC NUMBER DEFAULT 1 NOT NULL, TI_ENTITA_SACER VARCHAR2(20 BYTE) NOT NULL, ID_DOC NUMBER, CD_WARN VARCHAR2(20 BYTE) NOT NULL, DS_WARN VARCHAR2(1024 BYTE) NOT NULL, CONSTRAINT PK_WARN_UNI_DOC PRIMARY KEY (ID_WARN_UNITA_DOC));

-- changeset root:1751897635013-1481
CREATE TABLE ARO_WARN_UPD_UNITA_DOC (ID_WARN_UPD_UNITA_DOC NUMBER NOT NULL, ID_UPD_UNITA_DOC NUMBER NOT NULL, PG_WARN NUMBER DEFAULT 1 NOT NULL, ID_ERR_SACER NUMBER NOT NULL, DS_ERR VARCHAR2(4000 BYTE) NOT NULL, ID_CONTROLLO_WS NUMBER NOT NULL, CONSTRAINT PK_WARN_UPD_UD PRIMARY KEY (ID_WARN_UPD_UNITA_DOC));

-- changeset root:1751897635013-1482 splitStatements:true
CREATE TABLE ARO_XML_DOC_OBJECT_STORAGE (ID_DOC NUMBER NOT NULL, ID_DEC_BACKEND NUMBER NOT NULL, NM_TENANT VARCHAR2(100 BYTE) NOT NULL, NM_BUCKET VARCHAR2(100 BYTE) NOT NULL, CD_KEY_FILE VARCHAR2(254 BYTE) NOT NULL, CONSTRAINT PK_XML_DOC_OS_DOC PRIMARY KEY (ID_DOC));
COMMENT ON TABLE ARO_XML_DOC_OBJECT_STORAGE IS 'Tabella di collegamento tra unita documentaria e metadati salvati su object storage. Modellata come ARO_COMP_OBJECT_STORAGE';
COMMENT ON COLUMN ARO_XML_DOC_OBJECT_STORAGE.ID_DOC IS 'PK riporta la chiave della ARO_DOC';
COMMENT ON COLUMN ARO_XML_DOC_OBJECT_STORAGE.ID_DEC_BACKEND IS 'FK verso DEC_BACKEND sull''id del backend utilizzato (sicuramente di tipo OS)';
COMMENT ON COLUMN ARO_XML_DOC_OBJECT_STORAGE.NM_TENANT IS 'Tenant dell''OS a cui ci si collega (inutilizzato)';
COMMENT ON COLUMN ARO_XML_DOC_OBJECT_STORAGE.NM_BUCKET IS 'Bucket su cui viene scritto il file xml';
COMMENT ON COLUMN ARO_XML_DOC_OBJECT_STORAGE.CD_KEY_FILE IS 'Chiave univoca su cui viene scritto il file xml';

-- changeset root:1751897635013-1483
CREATE TABLE ARO_XML_RICH_ANNUL_VERS (ID_XML_RICH_ANNUL_VERS NUMBER NOT NULL, ID_RICH_ANNUL_VERS NUMBER NOT NULL, TI_XML_RICH_ANNUL_VERS VARCHAR2(20 BYTE) NOT NULL, BL_XML_RICH_ANNUL_VERS CLOB NOT NULL, CD_VERSIONE_XML VARCHAR2(100 BYTE) NOT NULL, CONSTRAINT PK_XML_RICH_ANN_VRS PRIMARY KEY (ID_XML_RICH_ANNUL_VERS));

-- changeset root:1751897635013-1484 splitStatements:true
CREATE TABLE ARO_XML_UNITA_DOC_OBJECT_STORAGE (ID_UNITA_DOC NUMBER NOT NULL, ID_DEC_BACKEND NUMBER NOT NULL, NM_TENANT VARCHAR2(100 BYTE) NOT NULL, NM_BUCKET VARCHAR2(100 BYTE) NOT NULL, CD_KEY_FILE VARCHAR2(254 BYTE) NOT NULL, CONSTRAINT PK_XML_UD_OS_UD PRIMARY KEY (ID_UNITA_DOC));
COMMENT ON TABLE ARO_XML_UNITA_DOC_OBJECT_STORAGE IS 'Tabella di collegamento tra unita documentaria e metadati salvati su object storage. Modellata come ARO_COMP_OBJECT_STORAGE';
COMMENT ON COLUMN ARO_XML_UNITA_DOC_OBJECT_STORAGE.ID_UNITA_DOC IS 'PK riporta la chiave della ARO_UNITA_DOC';
COMMENT ON COLUMN ARO_XML_UNITA_DOC_OBJECT_STORAGE.ID_DEC_BACKEND IS 'FK verso DEC_BACKEND sull''id del backend utilizzato (sicuramente di tipo OS)';
COMMENT ON COLUMN ARO_XML_UNITA_DOC_OBJECT_STORAGE.NM_TENANT IS 'Tenant dell''OS a cui ci si collega (inutilizzato)';
COMMENT ON COLUMN ARO_XML_UNITA_DOC_OBJECT_STORAGE.NM_BUCKET IS 'Bucket su cui viene scritto il file xml';
COMMENT ON COLUMN ARO_XML_UNITA_DOC_OBJECT_STORAGE.CD_KEY_FILE IS 'Chiave univoca su cui viene scritto il file xml';

-- changeset root:1751897635013-1485 splitStatements:true
CREATE TABLE ARO_XML_UPD_UD_OBJECT_STORAGE (ID_UPD_UNITA_DOC NUMBER NOT NULL, ID_DEC_BACKEND NUMBER NOT NULL, NM_TENANT VARCHAR2(100 BYTE) NOT NULL, NM_BUCKET VARCHAR2(100 BYTE) NOT NULL, CD_KEY_FILE VARCHAR2(254 BYTE) NOT NULL, ID_STRUT NUMBER NOT NULL, CONSTRAINT PK_XML_UPD_UD_OS_UPD PRIMARY KEY (ID_UPD_UNITA_DOC));
COMMENT ON TABLE ARO_XML_UPD_UD_OBJECT_STORAGE IS 'Tabella di collegamento tra l''aggiornamento metadati e il sip salvato su object storage. Modellata come ARO_COMP_OBJECT_STORAGE';
COMMENT ON COLUMN ARO_XML_UPD_UD_OBJECT_STORAGE.ID_UPD_UNITA_DOC IS 'PK riporta la chiave della ARO_UPD_UNITA_DOC';
COMMENT ON COLUMN ARO_XML_UPD_UD_OBJECT_STORAGE.ID_DEC_BACKEND IS 'FK verso DEC_BACKEND sull''id del backend utilizzato (sicuramente di tipo OS)';
COMMENT ON COLUMN ARO_XML_UPD_UD_OBJECT_STORAGE.NM_TENANT IS 'Tenant dell''OS a cui ci si collega (inutilizzato)';
COMMENT ON COLUMN ARO_XML_UPD_UD_OBJECT_STORAGE.NM_BUCKET IS 'Bucket su cui viene scritto il file zip';
COMMENT ON COLUMN ARO_XML_UPD_UD_OBJECT_STORAGE.CD_KEY_FILE IS 'Chiave univoca su cui viene scritto il file zip';

-- changeset root:1751897635013-1486 splitStatements:true
CREATE TABLE DEC_AMS_FMT_FIR_EIDAS_CRYPTO (ID_AMS_FMT_FIR_EIDAS_CRYPTO NUMBER NOT NULL, ID_FMT_FIR_CRYPTO NUMBER NOT NULL, ID_FMT_FIR_EIDAS NUMBER NOT NULL, CONSTRAINT PK_AMS_FMT_FIR_EIDAS_CRYPTO PRIMARY KEY (ID_AMS_FMT_FIR_EIDAS_CRYPTO));
COMMENT ON TABLE DEC_AMS_FMT_FIR_EIDAS_CRYPTO IS 'Tabella dei formati ammissibli dal processo di verifica firma EIDAS rispetto alle firme della cryptolibrary.Realizza una relazione molti a molti tra le tabelle DEC_FMT_FIR_CRYPTO e DEC_FMT_FIR_EIDAS.';
COMMENT ON COLUMN DEC_AMS_FMT_FIR_EIDAS_CRYPTO.ID_AMS_FMT_FIR_EIDAS_CRYPTO IS 'PK della tabella. Gestito dalla sequence SDEC_AMS_FMT_FIR_EIDAS_CRYPTO.';
COMMENT ON COLUMN DEC_AMS_FMT_FIR_EIDAS_CRYPTO.ID_FMT_FIR_CRYPTO IS 'Relazione con i formati di firma attualmente riconosciuti.';
COMMENT ON COLUMN DEC_AMS_FMT_FIR_EIDAS_CRYPTO.ID_FMT_FIR_EIDAS IS 'Relazione con i formati di firma EIDAS.';

-- changeset root:1751897635013-1487
CREATE TABLE DEC_ATTRIB_FASCICOLO (ID_ATTRIB_FASCICOLO NUMBER NOT NULL, ID_AA_TIPO_FASCICOLO NUMBER NOT NULL, TI_USO_ATTRIB VARCHAR2(20 BYTE) NOT NULL, ID_TIPO_FASCICOLO NUMBER, NM_SISTEMA_MIGRAZ VARCHAR2(100 BYTE), NM_ATTRIB_FASCICOLO VARCHAR2(100 BYTE) NOT NULL, DS_ATTRIB_FASCICOLO VARCHAR2(1024 BYTE) NOT NULL, TI_ATTRIB_FASCICOLO VARCHAR2(20 BYTE), TI_VETTOR_SCALARE VARCHAR2(20 BYTE) DEFAULT 'SCALARE' NOT NULL, TI_CHAR_SEP CHAR(1 BYTE), TI_CHAR_FINE_REC CHAR(1 BYTE), ID_GRUPPO_FASCICOLO NUMBER, CONSTRAINT PK_ATTB_FASCICOLO PRIMARY KEY (ID_ATTRIB_FASCICOLO));

-- changeset root:1751897635013-1488
CREATE TABLE DEC_CAMPO_ATTRIB_FASC_VETTOR (ID_CAMPO_ATTRIB_FASC_VETTOR NUMBER NOT NULL, ID_MODELLO_XSD_ATTRIB_FASC NUMBER NOT NULL, NM_CAMPO VARCHAR2(100 BYTE) NOT NULL, DS_CAMPO VARCHAR2(254 BYTE) NOT NULL, TI_CAMPO VARCHAR2(20 BYTE) NOT NULL, NI_ORD NUMBER NOT NULL, FL_OBBL CHAR(1 BYTE) NOT NULL, NI_CHAR_MIN NUMBER NOT NULL, NI_CHAR_MAX NUMBER NOT NULL, DS_VAL_ENUM VARCHAR2(1024 BYTE), DS_REG_EXP VARCHAR2(254 BYTE), CD_LABEL VARCHAR2(100 BYTE) NOT NULL, CONSTRAINT PK_CPO_ATTB_FASC_VETT PRIMARY KEY (ID_CAMPO_ATTRIB_FASC_VETTOR));

-- changeset root:1751897635013-1489
CREATE TABLE DEC_CAMPO_INP_UD (ID_CAMPO_INP_UD NUMBER NOT NULL, ID_TIPO_SERIE NUMBER NOT NULL, PG_ORD_CAMPO NUMBER NOT NULL, NM_CAMPO VARCHAR2(100 BYTE) NOT NULL, TI_CAMPO VARCHAR2(20 BYTE) NOT NULL, TI_TRASFORM_CAMPO VARCHAR2(30 BYTE), ID_ATTRIB_DATI_SPEC NUMBER, CONSTRAINT PK_CPO_INP_UD PRIMARY KEY (ID_CAMPO_INP_UD));

-- changeset root:1751897635013-1490 splitStatements:true
CREATE TABLE DEC_CONFIG_OBJECT_STORAGE (ID_DEC_CONFIG_OBJECT_STORAGE NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL, ID_DEC_BACKEND NUMBER NOT NULL, NM_CONFIG_OBJECT_STORAGE VARCHAR2(100 BYTE) NOT NULL, DS_VALORE_CONFIG_OBJECT_STORAGE VARCHAR2(100 BYTE) NOT NULL, TI_USO_CONFIG_OBJECT_STORAGE VARCHAR2(50 BYTE) NOT NULL, DS_DESCRIZIONE_CONFIG_OBJECT_STORAGE VARCHAR2(500 BYTE), CONSTRAINT PK_DEC_CONFIG_OBJECT_STORAGE PRIMARY KEY (ID_DEC_CONFIG_OBJECT_STORAGE));
COMMENT ON TABLE DEC_CONFIG_OBJECT_STORAGE IS 'La tabella di configurazione dei backend di tipo Object Storage';
COMMENT ON COLUMN DEC_CONFIG_OBJECT_STORAGE.ID_DEC_CONFIG_OBJECT_STORAGE IS 'PK fisica della tabella, autogenerata';
COMMENT ON COLUMN DEC_CONFIG_OBJECT_STORAGE.ID_DEC_BACKEND IS 'FK della tabella DEC_BACKEND';
COMMENT ON COLUMN DEC_CONFIG_OBJECT_STORAGE.NM_CONFIG_OBJECT_STORAGE IS 'Nome delle configurazione: attualmente BUCKET, ACCESS_KEY_ID_SYS_PROP o SECRET_KEY_SYS_PROP. Unito alla colonna TI_USO_CONFIG_OBJECT_STORAGE rappresenta la chiave logica della tabella';
COMMENT ON COLUMN DEC_CONFIG_OBJECT_STORAGE.DS_VALORE_CONFIG_OBJECT_STORAGE IS 'Indica il nome del bucket su cui verranno salvati i dati';
COMMENT ON COLUMN DEC_CONFIG_OBJECT_STORAGE.TI_USO_CONFIG_OBJECT_STORAGE IS 'Tipo d''uso per il parametro. Attualmente WRITE-STAGING,WRITE-COMPONENTI, WRITE-SIP, WRITE-AIP, READ-STAGING, READ-COMPONENTI,READ-SIP, READ-AIP. Bisogna valutare se farlo diventare un vincolo sulla colonna.';
COMMENT ON COLUMN DEC_CONFIG_OBJECT_STORAGE.DS_DESCRIZIONE_CONFIG_OBJECT_STORAGE IS 'Breve descrizione della configurazione';

-- changeset root:1751897635013-1491
CREATE TABLE DEC_ERR_SACER_BCK_DDN_SUE37970 (ID_ERR_SACER NUMBER NOT NULL, ID_CLASSE_ERR_SACER NUMBER NOT NULL, CD_ERR VARCHAR2(100 BYTE) NOT NULL, DS_ERR VARCHAR2(4000 BYTE) NOT NULL, DS_ERR_FILTRO VARCHAR2(4000 BYTE), TI_ERR_SACER VARCHAR2(20 BYTE) NOT NULL);

-- changeset root:1751897635013-1492
CREATE TABLE DEC_ESTENSIONE_FILE (ID_ESTENSIONE_FILE NUMBER NOT NULL, ID_FORMATO_FILE_STANDARD NUMBER NOT NULL, CD_ESTENSIONE_FILE VARCHAR2(100 BYTE) NOT NULL, CONSTRAINT PK_EST_FIL PRIMARY KEY (ID_ESTENSIONE_FILE));

-- changeset root:1751897635013-1493
CREATE TABLE DEC_FILTRO_SEL_UD (ID_FILTRO_SEL_UD NUMBER NOT NULL, ID_TIPO_SERIE_UD NUMBER NOT NULL, TI_FILTRO VARCHAR2(30 BYTE) NOT NULL, PG_FILTRO NUMBER NOT NULL, DT_CREAZIONE_UNITA_DOC_DA date, DT_CREAZIONE_UNITA_DOC_A date, ID_TIPO_DOC_PRINC NUMBER, DT_REG_UNITA_DOC_DA date, DT_REG_UNITA_DOC_A date, CONSTRAINT PK_FILT_SEL_UD PRIMARY KEY (ID_FILTRO_SEL_UD));

-- changeset root:1751897635013-1494
CREATE TABLE DEC_FILTRO_SEL_UD_ATTB (ID_FILTRO_SEL_UD_ATTB NUMBER NOT NULL, ID_TIPO_SERIE_UD NUMBER NOT NULL, NM_ATTRIB_DATI_SPEC VARCHAR2(100 BYTE) NOT NULL, TI_OPER VARCHAR2(20 BYTE) NOT NULL, DL_VALORE VARCHAR2(1024 BYTE), CONSTRAINT PK_FILT_SEL_UD_ATB PRIMARY KEY (ID_FILTRO_SEL_UD_ATTB));

-- changeset root:1751897635013-1495
CREATE TABLE DEC_FILTRO_SEL_UD_DATO (ID_FILTRO_SEL_UD_DATO NUMBER NOT NULL, ID_FILTRO_SEL_UD_ATTB NUMBER NOT NULL, ID_ATTRIB_DATI_SPEC NUMBER NOT NULL, TI_ENTITA_SACER VARCHAR2(20 BYTE) NOT NULL, NM_TIPO_UNITA_DOC VARCHAR2(100 BYTE), NM_TIPO_DOC VARCHAR2(100 BYTE), DS_LISTA_VERSIONI_XSD VARCHAR2(254 BYTE) NOT NULL, CONSTRAINT PK_FLT_SEL_UD_DAT PRIMARY KEY (ID_FILTRO_SEL_UD_DATO));

-- changeset root:1751897635013-1496 splitStatements:true
CREATE TABLE DEC_FMT_FIR_BUSTA (ID_FMT_FIR_BUSTA NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL, TI_FORMATO VARCHAR2(20 BYTE) NOT NULL, DS_FORMATO VARCHAR2(400 BYTE) NOT NULL, CONSTRAINT PK_FMT_FIR_BUSTA PRIMARY KEY (ID_FMT_FIR_BUSTA));
COMMENT ON TABLE DEC_FMT_FIR_BUSTA IS 'Tabella dei formati file busta.';
COMMENT ON COLUMN DEC_FMT_FIR_BUSTA.ID_FMT_FIR_BUSTA IS 'PK della tabella. Gestito dalla sequence SDEC_FMT_FIR_BUSTA.';
COMMENT ON COLUMN DEC_FMT_FIR_BUSTA.TI_FORMATO IS 'Formato firma busta.';
COMMENT ON COLUMN DEC_FMT_FIR_BUSTA.DS_FORMATO IS 'Descrizione formato firma busta.';

-- changeset root:1751897635013-1497 splitStatements:true
CREATE TABLE DEC_FMT_FIR_CRYPTO (ID_FMT_FIR_CRYPTO NUMBER NOT NULL, TI_FORMATO VARCHAR2(20 BYTE) NOT NULL, CONSTRAINT PK_FMT_FIR_CRYPTO PRIMARY KEY (ID_FMT_FIR_CRYPTO));
COMMENT ON TABLE DEC_FMT_FIR_CRYPTO IS 'Tabella dei formati gestiti dall''attuale processo di verifica firma.';
COMMENT ON COLUMN DEC_FMT_FIR_CRYPTO.ID_FMT_FIR_CRYPTO IS 'PK della tabella. Gestito dalla sequence SDEC_FMT_FIR_CRYPTO.';
COMMENT ON COLUMN DEC_FMT_FIR_CRYPTO.TI_FORMATO IS 'Formato dell''attuale procedura di verifica firma.';

-- changeset root:1751897635013-1498 splitStatements:true
CREATE TABLE DEC_FMT_FIR_EIDAS (ID_FMT_FIR_EIDAS NUMBER NOT NULL, TI_FORMATO VARCHAR2(20 BYTE) NOT NULL, PG_ORD_CAMPO NUMBER NOT NULL, CONSTRAINT PK_FMT_FIR_EIDAS PRIMARY KEY (ID_FMT_FIR_EIDAS));
COMMENT ON TABLE DEC_FMT_FIR_EIDAS IS 'Tabella dei formati gestiti dal processo di verifica firma EIDAS.';
COMMENT ON COLUMN DEC_FMT_FIR_EIDAS.ID_FMT_FIR_EIDAS IS 'PK della tabella. Gestito dalla sequence SDEC_FMT_FIR_EIDAS.';
COMMENT ON COLUMN DEC_FMT_FIR_EIDAS.TI_FORMATO IS 'Formato della procedura di verifica firma EIDAS.';
COMMENT ON COLUMN DEC_FMT_FIR_EIDAS.PG_ORD_CAMPO IS 'Ordine del formato EIDAS. EIDAS ha una rappresentazione gerarchica dei formati';

-- changeset root:1751897635013-1499
CREATE TABLE DEC_FORMATO_GRUPPO_PROPRIETA (ID_FORMATO_GRUPPO_PROPRIETA NUMBER NOT NULL, NM_FORMATO_GRUPPO_PROPRIETA VARCHAR2(100 BYTE) NOT NULL, CONSTRAINT DEC_FORMATO_GRUPPO_PROPRIETA_PK PRIMARY KEY (ID_FORMATO_GRUPPO_PROPRIETA));

-- changeset root:1751897635013-1500
CREATE TABLE DEC_FORMATO_PROPRIETA (ID_FORMATO_PROPRIETA NUMBER NOT NULL, NM_FORMATO_PROPRIETA VARCHAR2(100 BYTE) NOT NULL, ID_FORMATO_GRUPPO_PROPRIETA NUMBER NOT NULL, NI_PUNTEGGIO_DEFAULT NUMBER, CONSTRAINT DEC_FROMATO_PROPRIETA_PK PRIMARY KEY (ID_FORMATO_PROPRIETA));

-- changeset root:1751897635013-1501
CREATE TABLE DEC_FORMATO_VALUTAZIONE (ID_FORMATO_VALUTAZIONE NUMBER NOT NULL, ID_FORMATO_PROPRIETA NUMBER NOT NULL, ID_FORMATO_FILE_STANDARD NUMBER NOT NULL, NI_PUNTEGGIO NUMBER, FLG_INTEROPERABILITA NUMBER(1, 0) DEFAULT 1 NOT NULL, NT_PUNTEGGIO_VALUTAZIONE VARCHAR2(500 BYTE), CONSTRAINT DEC_FORMATO_VALUTAZIONE_PK PRIMARY KEY (ID_FORMATO_VALUTAZIONE));

-- changeset root:1751897635013-1502
CREATE TABLE DEC_IMAGE_TRASFORM (ID_IMAGE_TRASFORM NUMBER NOT NULL, ID_TRASFORM_TIPO_RAPPR NUMBER NOT NULL, NM_IMAGE_TRASFORM VARCHAR2(100 BYTE) NOT NULL, BL_IMAGE_TRASFORM BLOB NOT NULL, DT_LAST_MOD_IMAGE_TRASFORM date NOT NULL, DT_LAST_SCARICO_IMAGE_TRASFORM date, CONSTRAINT PK_IMG_TRSF PRIMARY KEY (ID_IMAGE_TRASFORM));

-- changeset root:1751897635013-1503 splitStatements:true
CREATE TABLE DEC_JOB_FOTO (ID_JOB_FOTO NUMBER NOT NULL, NM_JOB_FOTO VARCHAR2(100 BYTE) NOT NULL, TI_SCHED_JOB_FOTO VARCHAR2(20 BYTE) NOT NULL, TI_SCOPO_JOB_FOTO VARCHAR2(40 BYTE) NOT NULL, NM_NODO_ASSEGNATO_FOTO VARCHAR2(100 BYTE), TI_STATO_TIMER_FOTO VARCHAR2(20 BYTE), CD_SCHED_HOUR_FOTO VARCHAR2(100 BYTE), CD_SCHED_MINUTE_FOTO VARCHAR2(100 BYTE), CD_SCHED_DAYOFMONTH_FOTO VARCHAR2(100 BYTE), CD_SCHED_MONTH_FOTO VARCHAR2(100 BYTE), CD_SCHED_DAYOFWEEK_FOTO VARCHAR2(100 BYTE), DT_PROSSIMA_ATTIVAZIONE_FOTO date, FL_DATA_ACCURATA_FOTO VARCHAR2(1 BYTE), DS_JOB_FOTO VARCHAR2(200 BYTE), NM_AMBITO_FOTO VARCHAR2(200 BYTE), NI_ORD_EXEC_FOTO NUMBER, DT_JOB_FOTO date, CONSTRAINT PK_JOB_FOTO PRIMARY KEY (ID_JOB_FOTO));
COMMENT ON TABLE DEC_JOB_FOTO IS 'Tabella per configurare l''esecuzione dei timer. Utilizzata dai job su jboss e dalle sonde Zabbix';
COMMENT ON COLUMN DEC_JOB_FOTO.NM_NODO_ASSEGNATO_FOTO IS 'Nome del nodo del cluster su cui verrà eseguito il job';
COMMENT ON COLUMN DEC_JOB_FOTO.TI_STATO_TIMER_FOTO IS 'Stato del job: ATTIVO, INATTIVO o ESECUZIONE_SINGOLA';
COMMENT ON COLUMN DEC_JOB_FOTO.CD_SCHED_HOUR_FOTO IS 'Campo ''ora'' nella schedulazione del job';
COMMENT ON COLUMN DEC_JOB_FOTO.CD_SCHED_MINUTE_FOTO IS 'Campo ''minuto'' nella schedulazione del job';
COMMENT ON COLUMN DEC_JOB_FOTO.CD_SCHED_DAYOFMONTH_FOTO IS 'Campo ''giorno del mese'' nella schedulazione del job';
COMMENT ON COLUMN DEC_JOB_FOTO.CD_SCHED_MONTH_FOTO IS 'Campo ''mese'' nella schedulazione del job';
COMMENT ON COLUMN DEC_JOB_FOTO.CD_SCHED_DAYOFWEEK_FOTO IS 'Campo ''giorno della settimana'' nella schedulazione del job';
COMMENT ON COLUMN DEC_JOB_FOTO.DT_PROSSIMA_ATTIVAZIONE_FOTO IS 'Quando il job verrà eseguito la prossima volta (se è attivo).';

-- changeset root:1751897635013-1504
CREATE TABLE DEC_LINK_TIPO_SERIE (ID_LINK_TIPO_SERIE NUMBER NOT NULL, ID_TIPO_SERIE_PARTENZA NUMBER NOT NULL, ID_TIPO_SERIE_ARRIVO NUMBER NOT NULL, DS_LINK_TIPO_SERIE VARCHAR2(254 BYTE), CONSTRAINT PK_LNK_TI_SER PRIMARY KEY (ID_LINK_TIPO_SERIE));

-- changeset root:1751897635013-1505
CREATE TABLE DEC_MODELLO_CAMPO_INP_UD (ID_MODELLO_CAMPO_INP_UD NUMBER NOT NULL, ID_MODELLO_TIPO_SERIE NUMBER NOT NULL, PG_ORD_CAMPO NUMBER NOT NULL, NM_CAMPO VARCHAR2(100 BYTE) NOT NULL, TI_CAMPO VARCHAR2(20 BYTE) NOT NULL, TI_TRASFORM_CAMPO VARCHAR2(30 BYTE), CONSTRAINT PK_MODL_CPO_INP_UD PRIMARY KEY (ID_MODELLO_CAMPO_INP_UD));

-- changeset root:1751897635013-1506
CREATE TABLE DEC_MODELLO_CAMPO_OUT_SEL_UD (ID_MODELLO_CAMPO_OUT_SEL_UD NUMBER NOT NULL, ID_MODELLO_OUT_SEL_UD NUMBER NOT NULL, NM_CAMPO VARCHAR2(100 BYTE) NOT NULL, TI_CAMPO VARCHAR2(20 BYTE) NOT NULL, TI_TRASFORM_CAMPO VARCHAR2(30 BYTE), CONSTRAINT PK_MODL_CPO_SEL_UD PRIMARY KEY (ID_MODELLO_CAMPO_OUT_SEL_UD));

-- changeset root:1751897635013-1507
CREATE TABLE DEC_MODELLO_FILTRO_SEL_UDATTB (ID_MODELLO_FILTRO_SEL_UDATTB NUMBER NOT NULL, ID_MODELLO_TIPO_SERIE NUMBER NOT NULL, NM_FILTRO VARCHAR2(100 BYTE) NOT NULL, TI_FILTRO VARCHAR2(20 BYTE) NOT NULL, TI_OPER VARCHAR2(20 BYTE) NOT NULL, DL_VALORE VARCHAR2(1024 BYTE), CONSTRAINT PK_MODL_FILT_SEL_UD_ATB PRIMARY KEY (ID_MODELLO_FILTRO_SEL_UDATTB));

-- changeset root:1751897635013-1508
CREATE TABLE DEC_MODELLO_FILTRO_TI_DOC (ID_MODELLO_FILTRO_TI_DOC NUMBER NOT NULL, ID_MODELLO_TIPO_SERIE NUMBER NOT NULL, NM_TIPO_DOC VARCHAR2(100 BYTE) NOT NULL, CONSTRAINT PK_MODL_FILT_TI_DOC PRIMARY KEY (ID_MODELLO_FILTRO_TI_DOC));

-- changeset root:1751897635013-1509
CREATE TABLE DEC_MODELLO_OUT_SEL_UD (ID_MODELLO_OUT_SEL_UD NUMBER NOT NULL, ID_MODELLO_TIPO_SERIE NUMBER NOT NULL, TI_OUT VARCHAR2(20 BYTE) NOT NULL, DL_FORMATO_OUT VARCHAR2(254 BYTE), CONSTRAINT PK_MODL_OUT_SEL_UD PRIMARY KEY (ID_MODELLO_OUT_SEL_UD));

-- changeset root:1751897635013-1510
CREATE TABLE DEC_MODELLO_XSD_ATTRIB_FASC (ID_MODELLO_XSD_ATTRIB_FASC NUMBER NOT NULL, ID_MODELLO_XSD_FASCICOLO NUMBER NOT NULL, ID_ATTRIB_FASCICOLO NUMBER NOT NULL, NI_ORD_ATTRIB NUMBER NOT NULL, FL_OBBL CHAR(1 BYTE), NI_CHAR_MIN NUMBER, NI_CHAR_MAX NUMBER, DS_VAL_ENUM VARCHAR2(1024 BYTE), DS_REG_EXP VARCHAR2(254 BYTE), CD_LABEL VARCHAR2(100 BYTE), CONSTRAINT PK_MODELLO_XSD_ATTB PRIMARY KEY (ID_MODELLO_XSD_ATTRIB_FASC));

-- changeset root:1751897635013-1511
CREATE TABLE DEC_PARTE_NUMERO_FASCICOLO (ID_PARTE_NUMERO_FASCICOLO NUMBER NOT NULL, ID_AA_TIPO_FASCICOLO NUMBER NOT NULL, NM_PARTE_NUMERO VARCHAR2(100 BYTE) NOT NULL, DS_PARTE_NUMERO VARCHAR2(254 BYTE) NOT NULL, NI_PARTE_NUMERO NUMBER NOT NULL, TI_CHAR_PARTE VARCHAR2(30 BYTE) NOT NULL, NI_MIN_CHAR_PARTE NUMBER NOT NULL, NI_MAX_CHAR_PARTE NUMBER, TI_CHAR_SEP CHAR(1 BYTE), DL_VALORI_PARTE VARCHAR2(1024 BYTE), TI_PARTE VARCHAR2(20 BYTE), TI_PAD_PARTE VARCHAR2(30 BYTE) NOT NULL, CONSTRAINT PK_PARTE_NUM_FASC PRIMARY KEY (ID_PARTE_NUMERO_FASCICOLO));

-- changeset root:1751897635013-1512 splitStatements:true
CREATE TABLE DEC_REPORT_SERVIZIO_VERIFICA_COMP_DOC (ID_REPORT_SERVIZIO_VERIFICA_COMP_DOC NUMBER NOT NULL, ID_SERVIZIO_VERIFICA_COMP_DOC NUMBER NOT NULL, TI_REPORT VARCHAR2(20 BYTE) NOT NULL, TI_FORMATO VARCHAR2(20 BYTE) NOT NULL, BL_XSLT CLOB NOT NULL, CONSTRAINT PK_REPORTSERVIZIOVERIFICACOMDOC PRIMARY KEY (ID_REPORT_SERVIZIO_VERIFICA_COMP_DOC));
COMMENT ON COLUMN DEC_REPORT_SERVIZIO_VERIFICA_COMP_DOC.ID_REPORT_SERVIZIO_VERIFICA_COMP_DOC IS 'Primary key.Pilotata dalla sequence SDEC_SERVIZIO_VERIFICA_COMP_DOC';
COMMENT ON COLUMN DEC_REPORT_SERVIZIO_VERIFICA_COMP_DOC.ID_SERVIZIO_VERIFICA_COMP_DOC IS 'Foreing key alla tabella di decodifica che individua il servizio di verifica';
COMMENT ON COLUMN DEC_REPORT_SERVIZIO_VERIFICA_COMP_DOC.TI_REPORT IS 'Tipo report che individa la tipologia che verra'' generata in fase di trasformazione/rendering del report';
COMMENT ON COLUMN DEC_REPORT_SERVIZIO_VERIFICA_COMP_DOC.TI_FORMATO IS 'Tipo formato generato applicando il foglio di stile';
COMMENT ON COLUMN DEC_REPORT_SERVIZIO_VERIFICA_COMP_DOC.BL_XSLT IS 'Clob contenente il foglio di stile per le trasformazioni da applicare sul report presente su FIR_REPORT';

-- changeset root:1751897635013-1513
CREATE TABLE DEC_TIPO_DOC_AMMESSO (ID_TIPO_DOC_AMMESSO NUMBER NOT NULL, ID_TIPO_STRUT_UNITA_DOC NUMBER NOT NULL, ID_TIPO_DOC NUMBER NOT NULL, TI_DOC VARCHAR2(20 BYTE) NOT NULL, FL_OBBL CHAR(1 BYTE) NOT NULL, CONSTRAINT PK_TIPO_DOC_AMS PRIMARY KEY (ID_TIPO_DOC_AMMESSO));

-- changeset root:1751897635013-1514
CREATE TABLE DEC_TIPO_RAPPR_AMMESSO (ID_TIPO_RAPPR_AMMESSO NUMBER NOT NULL, ID_TIPO_COMP_DOC NUMBER NOT NULL, ID_TIPO_RAPPR_COMP NUMBER NOT NULL, CONSTRAINT PK_TIPO_RAP_AMS PRIMARY KEY (ID_TIPO_RAPPR_AMMESSO));

-- changeset root:1751897635013-1515
CREATE TABLE DEC_TIPO_SERIE_CREATA_AUTOM (ID_TIPO_SERIE_CREATA_AUTOM NUMBER NOT NULL, ID_TIPO_SERIE NUMBER NOT NULL, DT_CREA_AUTOM date NOT NULL, CONSTRAINT PK_TI_SER_AUTOM PRIMARY KEY (ID_TIPO_SERIE_CREATA_AUTOM));

-- changeset root:1751897635013-1516
CREATE TABLE DEC_TIPO_STRUT_DOC_AMMESSO (ID_TIPO_STRUT_DOC_AMMESSO NUMBER NOT NULL, ID_TIPO_DOC NUMBER NOT NULL, ID_TIPO_STRUT_DOC NUMBER NOT NULL, CONSTRAINT PK_TIPO_STRUT_DOC_AMS PRIMARY KEY (ID_TIPO_STRUT_DOC_AMMESSO));

-- changeset root:1751897635013-1517
CREATE TABLE DEC_TIPO_STRUT_UD_REG (ID_TIPO_STRUT_UD_REG NUMBER NOT NULL, ID_REGISTRO_UNITA_DOC NUMBER NOT NULL, ID_TIPO_STRUT_UNITA_DOC NUMBER NOT NULL, CONSTRAINT PK_TIP_STRUT_UD_REG PRIMARY KEY (ID_TIPO_STRUT_UD_REG));

-- changeset root:1751897635013-1518
CREATE TABLE DEC_TIPO_STRUT_UD_SIS_VERS (ID_TIPO_STRUT_UD_SIS_VERS NUMBER NOT NULL, ID_TIPO_STRUT_UNITA_DOC NUMBER NOT NULL, ID_SISTEMA_VERSANTE NUMBER NOT NULL, CONSTRAINT PK_TIP_STRUT_UD_SIS_VERS PRIMARY KEY (ID_TIPO_STRUT_UD_SIS_VERS));

-- changeset root:1751897635013-1519
CREATE TABLE DEC_TIPO_STRUT_UD_XSD (ID_TIPO_STRUT_UD_XSD NUMBER NOT NULL, ID_TIPO_STRUT_UNITA_DOC NUMBER NOT NULL, ID_XSD_DATI_SPEC NUMBER NOT NULL, CONSTRAINT PK_DEC_TIPO_STRUT_UD_XSD PRIMARY KEY (ID_TIPO_STRUT_UD_XSD));

-- changeset root:1751897635013-1520
CREATE TABLE DEC_TIPO_STRUT_UNITA_DOC (ID_TIPO_STRUT_UNITA_DOC NUMBER NOT NULL, ID_TIPO_UNITA_DOC NUMBER NOT NULL, NM_TIPO_STRUT_UNITA_DOC VARCHAR2(100 BYTE) NOT NULL, DS_TIPO_STRUT_UNITA_DOC VARCHAR2(254 BYTE), DT_ISTITUZ date DEFAULT trunc(sysdate) NOT NULL, DT_SOPPRES date DEFAULT to_date('31/12/2444', 'dd/mm/yyyy') NOT NULL, DS_DATA_TIPO_STRUT_UNITA_DOC VARCHAR2(1024 BYTE), DS_OGG_TIPO_STRUT_UNITA_DOC VARCHAR2(1024 BYTE), DS_NUMERO_TIPO_STRUT_UNITA_DOC VARCHAR2(1024 BYTE), DS_ANNO_TIPO_STRUT_UNITA_DOC VARCHAR2(1024 BYTE), AA_MIN_TIPO_STRUT_UNITA_DOC NUMBER(4, 0), AA_MAX_TIPO_STRUT_UNITA_DOC NUMBER(4, 0), DS_RIF_TEMP_TIPO_STRUT_UD VARCHAR2(1024 BYTE), DS_COLLEGAMENTI_UD VARCHAR2(1024 BYTE), DS_PERIODICITA_VERS VARCHAR2(1024 BYTE), DS_FIRMA VARCHAR2(1024 BYTE), CONSTRAINT PK_TIP_STRUT_UNI_DOC PRIMARY KEY (ID_TIPO_STRUT_UNITA_DOC));

-- changeset root:1751897635013-1521
CREATE TABLE DEC_TITOL (ID_TITOL NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, NM_TITOL VARCHAR2(100 BYTE) NOT NULL, DT_ISTITUZ date NOT NULL, DT_SOPPRES date NOT NULL, NI_LIVELLI NUMBER NOT NULL, CD_SEP_FASCICOLO CHAR(1 BYTE) NOT NULL, DL_NOTE VARCHAR2(1024 BYTE), TI_STATO_TITOL VARCHAR2(20 BYTE) NOT NULL, CONSTRAINT PK_TITOL PRIMARY KEY (ID_TITOL));

-- changeset root:1751897635013-1522
CREATE TABLE DEC_TI_EVE_STATO_ELENCO_VERS (ID_TI_EVE_STATO_ELENCO_VERS NUMBER NOT NULL, CD_TI_EVE_STATO_ELENCO_VERS VARCHAR2(100 BYTE) NOT NULL, DS_TI_EVE_STATO_ELENCO_VERS VARCHAR2(254 BYTE) NOT NULL, CONSTRAINT PK_TI_EVE_STATO_ELE_VRS PRIMARY KEY (ID_TI_EVE_STATO_ELENCO_VERS));

-- changeset root:1751897635013-1523
CREATE TABLE DEC_TRASFORM_TIPO_RAPPR (ID_TRASFORM_TIPO_RAPPR NUMBER NOT NULL, ID_TIPO_RAPPR_COMP NUMBER NOT NULL, NM_TRASFORM VARCHAR2(100 BYTE) NOT NULL, CD_VERSIONE_TRASFORM VARCHAR2(100 BYTE) NOT NULL, DS_HASH_FILE_TRASFORM VARCHAR2(254 BYTE) NOT NULL, TI_STATO_FILE_TRASFORM CHAR(20 BYTE) NOT NULL, DT_INS_TRASFORM date NOT NULL, DT_LAST_MOD_TRASFORM date, ID_COMP_DOC_TEST NUMBER NOT NULL, BL_FILE_TRASFORM BLOB NOT NULL, CONSTRAINT PK_TRSF_TIPO_RAP PRIMARY KEY (ID_TRASFORM_TIPO_RAPPR));

-- changeset root:1751897635013-1524
CREATE TABLE DEC_USO_MODELLO_TIPO_SERIE (ID_USO_MODELLO_TIPO_SERIE NUMBER NOT NULL, ID_MODELLO_TIPO_SERIE NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, CONSTRAINT PK_USO_MODL_TI_SER PRIMARY KEY (ID_USO_MODELLO_TIPO_SERIE));

-- changeset root:1751897635013-1525
CREATE TABLE DEC_USO_MODELLO_XSD_COMP_DOC (ID_USO_MODELLO_XSD_COMP_DOC NUMBER NOT NULL, ID_TIPO_COMP_DOC NUMBER NOT NULL, ID_MODELLO_XSD_UD NUMBER NOT NULL, FL_STANDARD CHAR(1 BYTE) NOT NULL, DT_ISTITUZ date DEFAULT trunc(sysdate) NOT NULL, DT_SOPPRES date DEFAULT TO_DATE('31/12/2444', 'dd/mm/yyyy') NOT NULL, CONSTRAINT PK_USO_MDL_XSD_COMPDOC PRIMARY KEY (ID_USO_MODELLO_XSD_COMP_DOC));

-- changeset root:1751897635013-1526
CREATE TABLE DEC_USO_MODELLO_XSD_DOC (ID_USO_MODELLO_XSD_DOC NUMBER NOT NULL, ID_MODELLO_XSD_UD NUMBER NOT NULL, ID_TIPO_DOC NUMBER NOT NULL, FL_STANDARD CHAR(1 BYTE) NOT NULL, DT_ISTITUZ date DEFAULT trunc(sysdate) NOT NULL, DT_SOPPRES date DEFAULT TO_DATE('31/12/2444', 'dd/mm/yyyy') NOT NULL, CONSTRAINT PK_USO_MDL_XSD_DOC PRIMARY KEY (ID_USO_MODELLO_XSD_DOC));

-- changeset root:1751897635013-1527
CREATE TABLE DEC_VERSIONE_WS (ID_VERSIONE_WS NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY NOT NULL, TI_WS VARCHAR2(20 BYTE) NOT NULL, CD_VERSIONE_WS VARCHAR2(20 BYTE));

-- changeset root:1751897635013-1528
CREATE TABLE ELV_ELENCO_VERS_FASC_ANNUL (ID_ELENCO_VERS_FASC_ANNUL NUMBER NOT NULL, ID_ELENCO_VERS_FASC NUMBER NOT NULL, DS_URN_FASCICOLO_ANNUL VARCHAR2(254 BYTE) NOT NULL, ID_FASCICOLO NUMBER, CONSTRAINT PK_ELE_VRS_FASC_ANN PRIMARY KEY (ID_ELENCO_VERS_FASC_ANNUL));

-- changeset root:1751897635013-1529
CREATE TABLE ELV_ELENCO_VERS_UD_ANNUL (ID_ELENCO_VERS_UD_ANNUL NUMBER NOT NULL, ID_ELENCO_VERS NUMBER NOT NULL, DS_URN_UNITA_DOC_ANNUL VARCHAR2(254 BYTE) NOT NULL, ID_UNITA_DOC NUMBER, CONSTRAINT PK_ELE_VRS_UD_ANN PRIMARY KEY (ID_ELENCO_VERS_UD_ANNUL));

-- changeset root:1751897635013-1530
CREATE TABLE ELV_FILE_ELENCO_VERS (ID_FILE_ELENCO_VERS NUMBER NOT NULL, ID_ELENCO_VERS NUMBER NOT NULL, TI_FILE_ELENCO_VERS VARCHAR2(30 BYTE) NOT NULL, BL_FILE_ELENCO_VERS BLOB, ID_STRUT NUMBER NOT NULL, DT_CREAZIONE_FILE date NOT NULL, DS_HASH_FILE VARCHAR2(254 BYTE), DS_ALGO_HASH_FILE VARCHAR2(254 BYTE), CD_ENCODING_HASH_FILE VARCHAR2(20 BYTE), CD_VER_XSD_FILE VARCHAR2(100 BYTE), TI_FIRMA VARCHAR2(30 BYTE), CONSTRAINT PK_FILE_ELE_VRS_NEW PRIMARY KEY (ID_FILE_ELENCO_VERS));

-- changeset root:1751897635013-1531
CREATE TABLE ELV_FILE_ELENCO_VERS_FASC (ID_FILE_ELENCO_VERS_FASC NUMBER NOT NULL, ID_ELENCO_VERS_FASC NUMBER NOT NULL, TI_FILE_ELENCO_VERS VARCHAR2(30 BYTE) NOT NULL, BL_FILE_ELENCO_VERS BLOB, ID_STRUT NUMBER NOT NULL, DT_CREAZIONE_FILE date NOT NULL, DS_HASH_FILE VARCHAR2(254 BYTE) NOT NULL, DS_ALGO_HASH_FILE VARCHAR2(254 BYTE) NOT NULL, CD_ENCODING_HASH_FILE VARCHAR2(20 BYTE) NOT NULL, DS_URN_FILE VARCHAR2(254 BYTE) NOT NULL, CD_VER_XSD_FILE VARCHAR2(100 BYTE), DS_URN_NORMALIZ_FILE VARCHAR2(254 BYTE) NOT NULL, TI_FIRMA VARCHAR2(30 BYTE), CONSTRAINT PK_FILE_ELE_VRS_FASC PRIMARY KEY (ID_FILE_ELENCO_VERS_FASC));

-- changeset root:1751897635013-1532 splitStatements:true
CREATE TABLE ELV_FILE_ELENCO_VERS_FASC_OBJECT_STORAGE (ID_FILE_ELENCO_VERS_FASC_OBJECT_STORAGE NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL, ID_DEC_BACKEND NUMBER NOT NULL, ID_FILE_ELENCO_VERS_FASC NUMBER NOT NULL, NM_TENANT VARCHAR2(100 BYTE) NOT NULL, NM_BUCKET VARCHAR2(100 BYTE) NOT NULL, CD_KEY_FILE VARCHAR2(254 BYTE) NOT NULL, ID_STRUT NUMBER NOT NULL, CONSTRAINT PK_ELV_FILE_ELENCO_VERS_FASC_OBJECT_STORAGE PRIMARY KEY (ID_FILE_ELENCO_VERS_FASC_OBJECT_STORAGE));
COMMENT ON TABLE ELV_FILE_ELENCO_VERS_FASC_OBJECT_STORAGE IS 'Tabella di collegamento tra i file degli elenchi delle unità documentarie e gli xml su OS. Modellata come ARO_COMP_OBJECT_STORAGE';
COMMENT ON COLUMN ELV_FILE_ELENCO_VERS_FASC_OBJECT_STORAGE.ID_FILE_ELENCO_VERS_FASC_OBJECT_STORAGE IS 'PK autogenerata della tabella';
COMMENT ON COLUMN ELV_FILE_ELENCO_VERS_FASC_OBJECT_STORAGE.ID_DEC_BACKEND IS 'FK verso DEC_BACKEND sull''id del backend utilizzato (sicuramente di tipo OS)';
COMMENT ON COLUMN ELV_FILE_ELENCO_VERS_FASC_OBJECT_STORAGE.ID_FILE_ELENCO_VERS_FASC IS 'FK verso ELV_FILE_ELENCO_VERS_FASC sull''id del file generato.Rappresenta la chiave logica della tabella';
COMMENT ON COLUMN ELV_FILE_ELENCO_VERS_FASC_OBJECT_STORAGE.NM_TENANT IS 'Tenant dell''OS a cui ci si collega (inutilizzato)';
COMMENT ON COLUMN ELV_FILE_ELENCO_VERS_FASC_OBJECT_STORAGE.NM_BUCKET IS 'Bucket su cui viene scritto il file zip';
COMMENT ON COLUMN ELV_FILE_ELENCO_VERS_FASC_OBJECT_STORAGE.CD_KEY_FILE IS 'Chiave univoca su cui viene scritto il file zip';

-- changeset root:1751897635013-1533 splitStatements:true
CREATE TABLE ELV_FILE_ELENCO_VERS_OBJECT_STORAGE (ID_FILE_ELENCO_VERS_OBJECT_STORAGE NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL, ID_DEC_BACKEND NUMBER NOT NULL, ID_FILE_ELENCO_VERS NUMBER NOT NULL, NM_TENANT VARCHAR2(100 BYTE) NOT NULL, NM_BUCKET VARCHAR2(100 BYTE) NOT NULL, CD_KEY_FILE VARCHAR2(254 BYTE) NOT NULL, ID_STRUT NUMBER NOT NULL, CONSTRAINT PK_ELV_FILE_ELENCO_VERS_OBJECT_STORAGE PRIMARY KEY (ID_FILE_ELENCO_VERS_OBJECT_STORAGE));
COMMENT ON TABLE ELV_FILE_ELENCO_VERS_OBJECT_STORAGE IS 'Tabella di collegamento tra i file degli elenchi delle unità documentarie e gli xml su OS. Modellata come ARO_COMP_OBJECT_STORAGE';
COMMENT ON COLUMN ELV_FILE_ELENCO_VERS_OBJECT_STORAGE.ID_FILE_ELENCO_VERS_OBJECT_STORAGE IS 'PK autogenerata della tabella';
COMMENT ON COLUMN ELV_FILE_ELENCO_VERS_OBJECT_STORAGE.ID_DEC_BACKEND IS 'FK verso DEC_BACKEND sull''id del backend utilizzato (sicuramente di tipo OS)';
COMMENT ON COLUMN ELV_FILE_ELENCO_VERS_OBJECT_STORAGE.ID_FILE_ELENCO_VERS IS 'FK verso ELV_FILE_ELENCO_VERS sull''id del file generato.Rappresenta la chiave logica della tabella';
COMMENT ON COLUMN ELV_FILE_ELENCO_VERS_OBJECT_STORAGE.NM_TENANT IS 'Tenant dell''OS a cui ci si collega (inutilizzato)';
COMMENT ON COLUMN ELV_FILE_ELENCO_VERS_OBJECT_STORAGE.NM_BUCKET IS 'Bucket su cui viene scritto il file zip';
COMMENT ON COLUMN ELV_FILE_ELENCO_VERS_OBJECT_STORAGE.CD_KEY_FILE IS 'Chiave univoca su cui viene scritto il file zip';

-- changeset root:1751897635013-1534
CREATE TABLE ELV_STATO_ELENCO_VERS (ID_STATO_ELENCO_VERS NUMBER NOT NULL, ID_ELENCO_VERS NUMBER NOT NULL, PG_STATO_ELENCO_VERS NUMBER NOT NULL, TS_STATO_ELENCO_VERS TIMESTAMP(6) NOT NULL, ID_TI_EVE_STATO_ELENCO_VERS NUMBER NOT NULL, DS_COND_STATO_ELENCO_VERS VARCHAR2(1024 BYTE), TI_STATO_ELENCO VARCHAR2(40 BYTE) NOT NULL, ID_USER_IAM NUMBER, CONSTRAINT PK_STATO_ELE_VRS PRIMARY KEY (ID_STATO_ELENCO_VERS));

-- changeset root:1751897635013-1535
CREATE TABLE ELV_URN_FILE_ELENCO_VERS (ID_URN_FILE_ELENCO_VERS NUMBER NOT NULL, ID_FILE_ELENCO_VERS NUMBER NOT NULL, TI_URN VARCHAR2(20 BYTE) NOT NULL, DS_URN VARCHAR2(254 BYTE) NOT NULL, CONSTRAINT PK_URN_FILE_ELE_VRS_NEW PRIMARY KEY (ID_URN_FILE_ELENCO_VERS));

-- changeset root:1751897635013-1536
CREATE TABLE FAS_AIP_FASCICOLO_DA_ELAB (ID_AIP_FASCICOLO_DA_ELAB NUMBER NOT NULL, ID_FASCICOLO NUMBER NOT NULL, PG_CREAZIONE_DA_ELAB NUMBER NOT NULL, DT_CREAZIONE_DA_ELAB date NOT NULL, DS_CAUSALE VARCHAR2(254 BYTE) NOT NULL, TI_CREAZIONE VARCHAR2(20 BYTE) NOT NULL, ID_ELENCO_VERS_FASC NUMBER, CONSTRAINT PK_AIP_FASC_DAELAB PRIMARY KEY (ID_AIP_FASCICOLO_DA_ELAB));

-- changeset root:1751897635013-1537
CREATE TABLE FAS_AMMIN_PARTEC (ID_AMMIN_PARTEC NUMBER NOT NULL, ID_FASCICOLO NUMBER NOT NULL, CD_AMMIN_PARTEC VARCHAR2(100 BYTE) NOT NULL, DS_AMMIN_PARTEC VARCHAR2(254 BYTE) NOT NULL, TI_CODICE_AMMIN_PARTEC VARCHAR2(20 BYTE) NOT NULL, CONSTRAINT PK_AMN_PART PRIMARY KEY (ID_AMMIN_PARTEC));

-- changeset root:1751897635013-1538
CREATE TABLE FAS_COD_IDE_SOG (ID_COD_IDE_SOG NUMBER NOT NULL, ID_SOG_FASCICOLO NUMBER NOT NULL, TI_COD_SOG VARCHAR2(100 BYTE) NOT NULL, NM_COD_SOG VARCHAR2(100 BYTE) NOT NULL, CD_SOG VARCHAR2(100 BYTE) NOT NULL, CONSTRAINT PK_ID_COD_IDE_SOG PRIMARY KEY (ID_COD_IDE_SOG));

-- changeset root:1751897635013-1539
CREATE TABLE FAS_CONTEN_VER_AIP_FASCICOLO (ID_CONTEN_VER_AIP_FASCICOLO NUMBER NOT NULL, ID_VER_AIP_FASCICOLO NUMBER NOT NULL, NM_CONTEN VARCHAR2(254 BYTE) NOT NULL, TI_CONTEN VARCHAR2(30 BYTE) NOT NULL, ID_VER_INDICE_AIP_UD NUMBER, ID_VER_AIP_FASCICOLO_FIGLIO NUMBER, CONSTRAINT PK_CONTEN_VER_AIP_FASC PRIMARY KEY (ID_CONTEN_VER_AIP_FASCICOLO));

-- changeset root:1751897635013-1540
CREATE TABLE FAS_EVENTO_FASCICOLO (ID_EVENTO_FASCICOLO NUMBER NOT NULL, ID_FASCICOLO NUMBER NOT NULL, DS_DENOM_EVENTO VARCHAR2(254 BYTE) NOT NULL, TS_APERTURA TIMESTAMP(0), TS_CHIUSURA TIMESTAMP(0), CONSTRAINT PK_FAS_EVENTO PRIMARY KEY (ID_EVENTO_FASCICOLO));

-- changeset root:1751897635013-1541
CREATE TABLE FAS_EVENTO_SOG (ID_EVENTO_SOG NUMBER NOT NULL, ID_SOG_FASCICOLO NUMBER NOT NULL, DS_DENOM_EVENTO VARCHAR2(254 BYTE) NOT NULL, TS_APERTURA TIMESTAMP(0), TS_CHIUSURA TIMESTAMP(0), CONSTRAINT PK_FAS_EVENTO_SOGGETTO PRIMARY KEY (ID_EVENTO_SOG));

-- changeset root:1751897635013-1542
CREATE TABLE FAS_FILE_META_VER_AIP_FASC (ID_FILE_META_VER_AIP_FASC NUMBER NOT NULL, ID_META_VER_AIP_FASCICOLO NUMBER NOT NULL, BL_FILE_VER_INDICE_AIP CLOB, ID_STRUT NUMBER NOT NULL, DT_CREAZIONE date NOT NULL, CONSTRAINT PK_FILE_META_VER_AIP_FASC PRIMARY KEY (ID_FILE_META_VER_AIP_FASC));

-- changeset root:1751897635013-1543 splitStatements:true
CREATE TABLE FAS_FILE_META_VER_AIP_FASC_OBJECT_STORAGE (ID_FILE_META_VER_AIP_FASC_OBJECT_STORAGE NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL, ID_STRUT NUMBER NOT NULL, ID_DEC_BACKEND NUMBER NOT NULL, ID_VER_AIP_FASCICOLO NUMBER NOT NULL, NM_TENANT VARCHAR2(100 BYTE) NOT NULL, NM_BUCKET VARCHAR2(100 BYTE) NOT NULL, CD_KEY_FILE VARCHAR2(254 BYTE) NOT NULL, CONSTRAINT PK_FAS_FILE_META_VER_AIP_FASC_OBJECT_STORAGE PRIMARY KEY (ID_FILE_META_VER_AIP_FASC_OBJECT_STORAGE));
COMMENT ON TABLE FAS_FILE_META_VER_AIP_FASC_OBJECT_STORAGE IS 'Tabella di collegamento tra il dato della sessione tra le versioni di indice aip e l''object storage. Modellata come ARO_COMP_OBJECT_STORAGE';
COMMENT ON COLUMN FAS_FILE_META_VER_AIP_FASC_OBJECT_STORAGE.ID_DEC_BACKEND IS 'FK verso DEC_BACKEND sull''id del backend utilizzato (sicuramente di tipo OS)';
COMMENT ON COLUMN FAS_FILE_META_VER_AIP_FASC_OBJECT_STORAGE.ID_VER_AIP_FASCICOLO IS 'FK verso FAS_VER_AIP_FASCICOLO sull''id della versione dell''indice aip. Rappresenta la chiave logica della tabella';
COMMENT ON COLUMN FAS_FILE_META_VER_AIP_FASC_OBJECT_STORAGE.NM_TENANT IS 'Tenant dell''OS a cui ci si collega (inutilizzato)';
COMMENT ON COLUMN FAS_FILE_META_VER_AIP_FASC_OBJECT_STORAGE.NM_BUCKET IS 'Bucket su cui viene scritto il file xml';
COMMENT ON COLUMN FAS_FILE_META_VER_AIP_FASC_OBJECT_STORAGE.CD_KEY_FILE IS 'Chiave univoca su cui viene scritto il file xml';

-- changeset root:1751897635013-1544
CREATE TABLE FAS_IND_RIF_SOG (ID_IND_RIF_SOG NUMBER(*, 0) NOT NULL, ID_SOG_FASCICOLO NUMBER NOT NULL, DS_IND_DIF_RIF VARCHAR2(200 BYTE), CONSTRAINT PK_FAS_IND_DIG_RIF_SOG PRIMARY KEY (ID_IND_RIF_SOG));

-- changeset root:1751897635013-1545
CREATE TABLE FAS_LINK_FASCICOLO (ID_LINK_FASCICOLO NUMBER NOT NULL, ID_FASCICOLO NUMBER NOT NULL, AA_FASCICOLO_LINK NUMBER(4, 0) NOT NULL, CD_KEY_FASCICOLO_LINK VARCHAR2(100 BYTE) NOT NULL, DS_LINK VARCHAR2(254 BYTE), ID_FASCICOLO_LINK NUMBER, CONSTRAINT PK_LINK_FASC PRIMARY KEY (ID_LINK_FASCICOLO));

-- changeset root:1751897635013-1546
CREATE TABLE FAS_RESP_FASCICOLO (ID_RESP_FASCICOLO NUMBER NOT NULL, ID_FASCICOLO NUMBER NOT NULL, TI_OGG_RESP VARCHAR2(20 BYTE) NOT NULL, TI_RESP VARCHAR2(30 BYTE) NOT NULL, NM_NOME_RESP VARCHAR2(100 BYTE) NOT NULL, NM_COGN_RESP VARCHAR2(100 BYTE) NOT NULL, CD_RESP VARCHAR2(100 BYTE) NOT NULL, TI_CD_RESP VARCHAR2(30 BYTE) NOT NULL, CONSTRAINT PK_RESP_FASC PRIMARY KEY (ID_RESP_FASCICOLO));

-- changeset root:1751897635013-1547
CREATE TABLE FAS_SIP_VER_AIP_FASCICOLO (ID_SIP_VER_AIP_FASCICOLO NUMBER NOT NULL, ID_VER_AIP_FASCICOLO NUMBER NOT NULL, NM_SIP VARCHAR2(254 BYTE) NOT NULL, TI_SIP VARCHAR2(30 BYTE) NOT NULL, ID_XML_VERS_FASCICOLO_RICH NUMBER, ID_XML_VERS_FASCICOLO_RISP NUMBER, CONSTRAINT PK_SIP_VER_AIP_FASC PRIMARY KEY (ID_SIP_VER_AIP_FASCICOLO));

-- changeset root:1751897635013-1548 splitStatements:true
CREATE TABLE FAS_SOG_FASCICOLO (ID_SOG_FASCICOLO NUMBER NOT NULL, ID_FASCICOLO NUMBER NOT NULL, TI_RAPP VARCHAR2(100 BYTE) NOT NULL, NM_NOME_SOG VARCHAR2(100 BYTE), NM_COGN_SOG VARCHAR2(100 BYTE), DS_DENOM_SOG VARCHAR2(254 BYTE), CD_SOG VARCHAR2(100 BYTE), TI_CD_SOG VARCHAR2(30 BYTE), DT_NAS date, DS_CMN_NSC VARCHAR2(100 BYTE), TI_SES VARCHAR2(2 BYTE), TI_SOG VARCHAR2(100 BYTE), DS_CIT VARCHAR2(100 BYTE), CONSTRAINT PK_SOG_FASC PRIMARY KEY (ID_SOG_FASCICOLO));
COMMENT ON COLUMN FAS_SOG_FASCICOLO.DT_NAS IS 'data nascita - costituzione';
COMMENT ON COLUMN FAS_SOG_FASCICOLO.DS_CMN_NSC IS 'denominazione comune di nascita';
COMMENT ON COLUMN FAS_SOG_FASCICOLO.TI_SOG IS 'natura soggetto (persona fisica, giuridica)';
COMMENT ON COLUMN FAS_SOG_FASCICOLO.DS_CIT IS 'descrizione cittadinanza';

-- changeset root:1751897635013-1549
CREATE TABLE FAS_UD_AIP_FASCICOLO_DA_ELAB (ID_UD_AIP_FASCICOLO_DA_ELAB NUMBER NOT NULL, ID_AIP_FASCICOLO_DA_ELAB NUMBER NOT NULL, ID_VER_INDICE_AIP NUMBER NOT NULL, CONSTRAINT PK_UD_AIP_FASC_DAELAB PRIMARY KEY (ID_UD_AIP_FASCICOLO_DA_ELAB));

-- changeset root:1751897635013-1550
CREATE TABLE FAS_UNI_ORG_RESP_FASCICOLO (ID_UNI_ORG_RESP_FASCICOLO NUMBER NOT NULL, ID_FASCICOLO NUMBER NOT NULL, CD_UNI_ORG_RESP VARCHAR2(100 BYTE) NOT NULL, CONSTRAINT PK_UNI_ORG_RESP_FASC PRIMARY KEY (ID_UNI_ORG_RESP_FASCICOLO));

-- changeset root:1751897635013-1551
CREATE TABLE FAS_VALORE_ATTRIB_FASCICOLO (ID_VALORE_ATTRIB_FASCICOLO NUMBER NOT NULL, ID_USO_MODELLO_XSD_FASC NUMBER NOT NULL, ID_FASCICOLO NUMBER NOT NULL, ID_ATTRIB_FASCICOLO NUMBER NOT NULL, DL_VALORE VARCHAR2(4000 BYTE), ID_AA_TIPO_FASCICOLO NUMBER NOT NULL, CONSTRAINT PK_VL_ATTB_FASCICOLO PRIMARY KEY (ID_VALORE_ATTRIB_FASCICOLO));

-- changeset root:1751897635013-1552
CREATE TABLE FAS_VOCE_CLASSIF (ID_VOCE_CLASSIF NUMBER NOT NULL, ID_FASCICOLO NUMBER NOT NULL, CD_VOCE_CLASSIF VARCHAR2(100 BYTE) NOT NULL, DS_VOCE_CLASSIF VARCHAR2(254 BYTE) NOT NULL, CONSTRAINT PK_VOCE_CLA PRIMARY KEY (ID_VOCE_CLASSIF));

-- changeset root:1751897635013-1553 splitStatements:true
CREATE TABLE FAS_XML_FASC_OBJECT_STORAGE (ID_FASCICOLO NUMBER NOT NULL, ID_DEC_BACKEND NUMBER NOT NULL, NM_TENANT VARCHAR2(100 BYTE) NOT NULL, NM_BUCKET VARCHAR2(100 BYTE) NOT NULL, CD_KEY_FILE VARCHAR2(254 BYTE) NOT NULL, ID_STRUT NUMBER NOT NULL, CONSTRAINT PK_XML_FASC_OS_FASC PRIMARY KEY (ID_FASCICOLO));
COMMENT ON TABLE FAS_XML_FASC_OBJECT_STORAGE IS 'Tabella di collegamento tra fasciolo e profili salvati su object storage. Modellata come ARO_COMP_OBJECT_STORAGE';
COMMENT ON COLUMN FAS_XML_FASC_OBJECT_STORAGE.ID_FASCICOLO IS 'PK riporta la chiave della FAS_FASCICOLO';
COMMENT ON COLUMN FAS_XML_FASC_OBJECT_STORAGE.ID_DEC_BACKEND IS 'FK verso DEC_BACKEND sull''id del backend utilizzato (sicuramente di tipo OS)';
COMMENT ON COLUMN FAS_XML_FASC_OBJECT_STORAGE.NM_TENANT IS 'Tenant dell''OS a cui ci si collega (inutilizzato)';
COMMENT ON COLUMN FAS_XML_FASC_OBJECT_STORAGE.NM_BUCKET IS 'Bucket su cui viene scritto il file zip';
COMMENT ON COLUMN FAS_XML_FASC_OBJECT_STORAGE.CD_KEY_FILE IS 'Chiave univoca su cui viene scritto il file zip';

-- changeset root:1751897635013-1554 splitStatements:true
CREATE TABLE FAS_XML_VERS_FASC_OBJECT_STORAGE (ID_FASCICOLO NUMBER NOT NULL, ID_DEC_BACKEND NUMBER NOT NULL, NM_TENANT VARCHAR2(100 BYTE) NOT NULL, NM_BUCKET VARCHAR2(100 BYTE) NOT NULL, CD_KEY_FILE VARCHAR2(254 BYTE) NOT NULL, ID_STRUT NUMBER NOT NULL, CONSTRAINT PK_XML_VERS_FASC_OS_FASC PRIMARY KEY (ID_FASCICOLO));
COMMENT ON TABLE FAS_XML_VERS_FASC_OBJECT_STORAGE IS 'Tabella di collegamento tra fascicolo e metadati salvati su object storage. Modellata come ARO_COMP_OBJECT_STORAGE';
COMMENT ON COLUMN FAS_XML_VERS_FASC_OBJECT_STORAGE.ID_FASCICOLO IS 'PK riporta la chiave della FAS_FASCICOLO';
COMMENT ON COLUMN FAS_XML_VERS_FASC_OBJECT_STORAGE.ID_DEC_BACKEND IS 'FK verso DEC_BACKEND sull''id del backend utilizzato (sicuramente di tipo OS)';
COMMENT ON COLUMN FAS_XML_VERS_FASC_OBJECT_STORAGE.NM_TENANT IS 'Tenant dell''OS a cui ci si collega (inutilizzato)';
COMMENT ON COLUMN FAS_XML_VERS_FASC_OBJECT_STORAGE.NM_BUCKET IS 'Bucket su cui viene scritto il file zip';
COMMENT ON COLUMN FAS_XML_VERS_FASC_OBJECT_STORAGE.CD_KEY_FILE IS 'Chiave univoca su cui viene scritto il file zip';

-- changeset root:1751897635013-1555
CREATE TABLE FAS_XSD_META_VER_AIP_FASC (ID_XSD_META_VER_AIP_FASC NUMBER NOT NULL, ID_META_VER_AIP_FASCICOLO NUMBER NOT NULL, ID_MODELLO_XSD_FASCICOLO NUMBER NOT NULL, NM_XSD VARCHAR2(254 BYTE) NOT NULL, CONSTRAINT PK_XSD_META_VER_AIP_FASC PRIMARY KEY (ID_XSD_META_VER_AIP_FASC));

-- changeset root:1751897635013-1556 splitStatements:true
CREATE TABLE FIR_REPORT (ID_FIR_REPORT NUMBER NOT NULL, ID_COMP_DOC NUMBER NOT NULL, NM_BUCKET VARCHAR2(100 BYTE), CD_KEY_FILE VARCHAR2(254 BYTE), BL_CONTENUTO_REPORT BLOB, ID_DEC_BACKEND NUMBER, CONSTRAINT PK_FIRREPORT PRIMARY KEY (ID_FIR_REPORT));
COMMENT ON TABLE FIR_REPORT IS 'Tabella per memorizzare i report della validazione attraverso i micro-servizi. Per ogni id_comp_doc saranno presenti piu'' record, uno per tipologia';
COMMENT ON COLUMN FIR_REPORT.ID_FIR_REPORT IS 'Primary key. Pilotata dalla sequence SFIR_REPORT';
COMMENT ON COLUMN FIR_REPORT.ID_COMP_DOC IS 'Foreign key. Punta ad un record della tabella ARO_COMP_DOC';
COMMENT ON COLUMN FIR_REPORT.NM_BUCKET IS 'Nome del bucket presente su Object storage in cui viene depositato il file ZIP con i report.';
COMMENT ON COLUMN FIR_REPORT.CD_KEY_FILE IS 'Chiave del file generato dalla logica e trasferito su bucket in Object storage.';
COMMENT ON COLUMN FIR_REPORT.BL_CONTENUTO_REPORT IS 'In alternativa ad Object storage (in caso di errore), il file ZIP con i report viene persisito su blob.';

-- changeset root:1751897635013-1557 splitStatements:true
CREATE TABLE FIR_URL_DISTRIB_OCSP (ID_URL_DISTRIB_OCSP NUMBER NOT NULL, ID_CERTIF_CA NUMBER NOT NULL, NI_ORD_URL_DISTRIB_OCSP NUMBER NOT NULL, DL_URL_DISTRIB_OCSP VARCHAR2(1024 BYTE), CONSTRAINT PK_URL_DISTR_OCSP PRIMARY KEY (ID_URL_DISTRIB_OCSP));
COMMENT ON TABLE FIR_URL_DISTRIB_OCSP IS 'Tabella per memorizzare gli ocsp access point registrati per una CA';
COMMENT ON COLUMN FIR_URL_DISTRIB_OCSP.ID_URL_DISTRIB_OCSP IS 'Primary key. Pilotata dalla sequence SFIR_URL_DISTRIB_OCSP';
COMMENT ON COLUMN FIR_URL_DISTRIB_OCSP.ID_CERTIF_CA IS 'Foreign key. Punta ad un record della tabella FIR_CERTIF_CA';
COMMENT ON COLUMN FIR_URL_DISTRIB_OCSP.NI_ORD_URL_DISTRIB_OCSP IS 'Numero ordine access point per CA';
COMMENT ON COLUMN FIR_URL_DISTRIB_OCSP.DL_URL_DISTRIB_OCSP IS 'Indirizzo access point';

-- changeset root:1751897635013-1558 splitStatements:true
CREATE TABLE FIR_URN_REPORT (ID_URN_REPORT NUMBER NOT NULL, ID_REPORT NUMBER NOT NULL, TI_URN VARCHAR2(20 BYTE) NOT NULL, DS_URN VARCHAR2(254 BYTE) NOT NULL, CONSTRAINT PK_URN_REPORT PRIMARY KEY (ID_URN_REPORT));
COMMENT ON TABLE FIR_URN_REPORT IS 'Memorizzazione degli URN legati ai report generati';
COMMENT ON COLUMN FIR_URN_REPORT.ID_URN_REPORT IS 'Primary key.Pilotata dalla sequence SFIR_URN_REPORT';
COMMENT ON COLUMN FIR_URN_REPORT.ID_REPORT IS 'Foreing key alla tabella FIR_REPORT';
COMMENT ON COLUMN FIR_URN_REPORT.TI_URN IS 'Tipo URN calcolato';
COMMENT ON COLUMN FIR_URN_REPORT.DS_URN IS 'URN calcolato';

-- changeset root:1751897635013-1559
CREATE TABLE HSM_ELENCO_FASC_SES_FIRMA (ID_ELENCO_FASC_SES_FIRMA NUMBER NOT NULL, ID_SESSIONE_FIRMA NUMBER NOT NULL, ID_ELENCO_VERS_FASC NUMBER NOT NULL, TI_ESITO VARCHAR2(20 BYTE) NOT NULL, TS_ESITO TIMESTAMP(6) NOT NULL, CD_ERR VARCHAR2(100 BYTE), DS_ERR VARCHAR2(4000 BYTE), CONSTRAINT PK_ELE_FASC_SES_FIR PRIMARY KEY (ID_ELENCO_FASC_SES_FIRMA));

-- changeset root:1751897635013-1560
CREATE TABLE HSM_ELENCO_SESSIONE_FIRMA (ID_ELENCO_SESSIONE_FIRMA NUMBER NOT NULL, ID_SESSIONE_FIRMA NUMBER NOT NULL, ID_ELENCO_VERS NUMBER NOT NULL, TI_ESITO VARCHAR2(20 BYTE) NOT NULL, CD_ERR VARCHAR2(100 BYTE), DS_ERR VARCHAR2(4000 BYTE), TS_ESITO TIMESTAMP(6) NOT NULL, CONSTRAINT PK_ELE_SES_FIR PRIMARY KEY (ID_ELENCO_SESSIONE_FIRMA));

-- changeset root:1751897635013-1561
CREATE TABLE HSM_VER_SERIE_SESSIONE_FIRMA (ID_VER_SERIE_SESSIONE_FIRMA NUMBER NOT NULL, ID_SESSIONE_FIRMA NUMBER NOT NULL, ID_VER_SERIE NUMBER NOT NULL, TI_ESITO VARCHAR2(20 BYTE) NOT NULL, CD_ERR VARCHAR2(100 BYTE), DS_ERR VARCHAR2(4000 BYTE), TS_ESITO TIMESTAMP(6) NOT NULL, CONSTRAINT PK_VER_SER_SES_FIR PRIMARY KEY (ID_VER_SERIE_SESSIONE_FIRMA));

-- changeset root:1751897635013-1562
CREATE TABLE IAM_AUTOR_SERV (ID_AUTOR_SERV NUMBER NOT NULL, ID_ABIL_ORGANIZ NUMBER NOT NULL, NM_SERVIZIO_WEB VARCHAR2(100 BYTE) NOT NULL, CONSTRAINT PK_AUT_SERV PRIMARY KEY (ID_AUTOR_SERV));

-- changeset root:1751897635013-1563
CREATE TABLE IAM_ENTE_CONVENZ_DA_ALLINEA (ID_ENTE_CONVENZ_DA_ALLINEA NUMBER NOT NULL, ID_ENTE_CONVENZ NUMBER NOT NULL, NM_ENTE_CONVENZ VARCHAR2(254 BYTE) NOT NULL, TI_OPER_ALLINEA VARCHAR2(20 BYTE) NOT NULL, TI_STATO_ALLINEA VARCHAR2(30 BYTE) NOT NULL, DT_LOG_ENTE_CONVENZ_DA_ALLINEA date NOT NULL, CD_ERR VARCHAR2(100 BYTE), DS_MSG_ERR VARCHAR2(254 BYTE), DT_ERR date, CONSTRAINT PK_ENTE_CONVENZ_DA_ALLINEA PRIMARY KEY (ID_ENTE_CONVENZ_DA_ALLINEA));

-- changeset root:1751897635013-1564
CREATE TABLE IAM_IND_IP_USER (ID_IND_IP_USER NUMBER NOT NULL, ID_USER_IAM NUMBER NOT NULL, CD_IND_IP_USER VARCHAR2(100 BYTE) NOT NULL, CONSTRAINT PK_IND_IP PRIMARY KEY (ID_IND_IP_USER));

-- changeset root:1751897635013-1565
CREATE TABLE IMPORT_XLS_FORMATI (NOME VARCHAR2(26 BYTE), DESCRIZIONE VARCHAR2(128 BYTE), CODICE_VERSIONE VARCHAR2(26 BYTE), COPYRIGHT VARCHAR2(128 BYTE), MIMETYPE VARCHAR2(128 BYTE), IDONEITA VARCHAR2(26 BYTE), TIPOLOGIA_FORMATO VARCHAR2(128 BYTE), DE_FACTO_DE_IURE NUMBER(38, 0), APERTO_CHIUSO NUMBER(38, 0), PROPRIETARIO NUMBER(38, 0), ESTENDIBILE NUMBER(38, 0), LIVELLO_METADATI NUMBER(38, 0), ROBUSTO NUMBER(38, 0), DIPENDENTE_DISP NUMBER(38, 0), RETROCOMPATIBILE NUMBER(38, 0), R_A VARCHAR2(26 BYTE), TESTUALE_BINARIO NUMBER(38, 0), B_T VARCHAR2(26 BYTE), TOTALE NUMBER(38, 0));

-- changeset root:1751897635013-1566
CREATE TABLE LOG_ELAB_CONSIST (ID_ELAB_CONSIST NUMBER NOT NULL, DT_ELAB_CONSIST date NOT NULL, DT_RIF_CONTA_DA date NOT NULL, DT_RIF_CONTA_A date NOT NULL, CONSTRAINT PK_LOG_ELAB_CONSIST PRIMARY KEY (ID_ELAB_CONSIST));

-- changeset root:1751897635013-1567
CREATE TABLE LOG_LOCK_ELAB (ID_LOCK_ELAB NUMBER NOT NULL, NM_ELAB VARCHAR2(100 BYTE) NOT NULL, TI_LOCK_ELAB VARCHAR2(20 BYTE) NOT NULL, ID_STRUT NUMBER, FL_ELAB_ATTIVA CHAR(1 BYTE) NOT NULL, CONSTRAINT PK_LOCK_ELAB PRIMARY KEY (ID_LOCK_ELAB));

-- changeset root:1751897635013-1568
CREATE TABLE MON_AA_UNITA_DOC_REGISTRO (ID_AA_UNITA_DOC_REGISTRO NUMBER NOT NULL, ID_REGISTRO_UNITA_DOC NUMBER NOT NULL, AA_UNITA_DOC_REGISTRO NUMBER NOT NULL, CONSTRAINT PK_AA_UNI_DOC_REG PRIMARY KEY (ID_AA_UNITA_DOC_REGISTRO));

-- changeset root:1751897635013-1569
CREATE TABLE MON_CONTA_BY_STATO_CONSERV_NEW_ANNUL (ID_CONTA_BY_STATO_CONSERV NUMBER NOT NULL, DT_RIF_CONTA date NOT NULL, ID_STRUT NUMBER NOT NULL, ID_SUB_STRUT NUMBER, AA_KEY_UNITA_DOC NUMBER(4, 0) NOT NULL, ID_REGISTRO_UNITA_DOC NUMBER NOT NULL, ID_TIPO_UNITA_DOC NUMBER NOT NULL, ID_TIPO_DOC_PRINC NUMBER, NI_COMP_AIP_GENERATO NUMBER NOT NULL, NI_COMP_AIP_IN_AGGIORN NUMBER NOT NULL, NI_COMP_PRESA_IN_CARICO NUMBER NOT NULL, NI_COMP_IN_VOLUME NUMBER NOT NULL, NI_COMP_ANNUL NUMBER NOT NULL);

-- changeset root:1751897635013-1570
CREATE TABLE MON_CONTA_BY_STATO_CONSERV_NEW_LAST_180 (DT_CREAZIONE date, ID_STRUT NUMBER NOT NULL, ID_SUB_STRUT NUMBER NOT NULL, AA_KEY_UNITA_DOC NUMBER(4, 0) NOT NULL, ID_REGISTRO_UNITA_DOC NUMBER NOT NULL, ID_TIPO_UNITA_DOC NUMBER NOT NULL, ID_TIPO_DOC CHAR(1 BYTE), NI_COMP_AIP_GENERATO NUMBER, NI_COMP_AIP_IN_AGG NUMBER, NI_COMP_PRESA_IN_CARICO NUMBER, NI_COMP_VOLUME NUMBER, NI_COMP_ANNUL NUMBER);

-- changeset root:1751897635013-1571
CREATE TABLE MON_CONTA_SES_UPD_UD (ID_CONTA_SES_UPD_UD NUMBER NOT NULL, ID_KEY_TOTAL_UD NUMBER NOT NULL, TI_STATO_UDP_UD VARCHAR2(20 BYTE) NOT NULL, DT_RIF_CONTA date NOT NULL, NI_SES_UPD_UD NUMBER NOT NULL, CONSTRAINT PK_CNT_SES_UPD_UD PRIMARY KEY (ID_CONTA_SES_UPD_UD));

-- changeset root:1751897635013-1572
CREATE TABLE MON_CONTA_SES_UPD_UD_KO (ID_CONTA_SES_UPD_UD_KO NUMBER NOT NULL, DT_RIF_CONTA date NOT NULL, TI_STATO_UDP_UD_KO VARCHAR2(20 BYTE) NOT NULL, NI_SES_UPD_UD_KO NUMBER(*, 0) NOT NULL, ID_KEY_TOTAL_UD_KO NUMBER NOT NULL, CONSTRAINT PK_CNT_SES_UPD_UD_KO PRIMARY KEY (ID_CONTA_SES_UPD_UD_KO));

-- changeset root:1751897635013-1573
CREATE TABLE ORG_CAMPO_VAL_SUB_STRUT (ID_CAMPO_VAL_SUB_STRUT NUMBER NOT NULL, ID_REGOLA_VAL_SUB_STRUT NUMBER NOT NULL, TI_CAMPO VARCHAR2(20 BYTE) NOT NULL, NM_CAMPO VARCHAR2(100 BYTE) NOT NULL, ID_ATTRIB_DATI_SPEC NUMBER, ID_SUB_STRUT NUMBER, CONSTRAINT PK_CPO_VAL_SUB_STRUT PRIMARY KEY (ID_CAMPO_VAL_SUB_STRUT));

-- changeset root:1751897635013-1574
CREATE TABLE ORG_CATEG_STRUT (ID_CATEG_STRUT NUMBER NOT NULL, CD_CATEG_STRUT VARCHAR2(100 BYTE) NOT NULL, DS_CATEG_STRUT VARCHAR2(254 BYTE) NOT NULL, CONSTRAINT PK_CAT_STRUT PRIMARY KEY (ID_CATEG_STRUT));

-- changeset root:1751897635013-1575
CREATE TABLE ORG_REGOLA_VAL_SUB_STRUT (ID_REGOLA_VAL_SUB_STRUT NUMBER NOT NULL, ID_TIPO_UNITA_DOC NUMBER NOT NULL, ID_TIPO_DOC NUMBER NOT NULL, DT_ISTITUZ date DEFAULT trunc(sysdate) NOT NULL, DT_SOPPRES date DEFAULT to_date('31122444', 'ddmmyyyy') NOT NULL, CONSTRAINT PK_RGL_VAL_SUB_STRUT PRIMARY KEY (ID_REGOLA_VAL_SUB_STRUT));

-- changeset root:1751897635013-1576
CREATE TABLE ORG_STORICO_ENTE_AMBIENTE (ID_STORICO_ENTE_AMBIENTE NUMBER NOT NULL, ID_ENTE NUMBER NOT NULL, DT_INI_VAL date NOT NULL, ID_AMBIENTE NUMBER NOT NULL, DT_FIN_VAL date NOT NULL, CONSTRAINT PK_STO_ENTE_AMB PRIMARY KEY (ID_STORICO_ENTE_AMBIENTE));

-- changeset root:1751897635013-1577
CREATE TABLE ORG_USO_SISTEMA_MIGRAZ (ID_USO_SISTEMA_MIGRAZ NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, ID_SISTEMA_MIGRAZ NUMBER NOT NULL, CONSTRAINT PK_USO_SIS_MGZ PRIMARY KEY (ID_USO_SISTEMA_MIGRAZ));

-- changeset root:1751897635013-1578
CREATE TABLE OST_MIGRAZ_FILE_ERR (ID_MIGRAZ_FILE_ERR NUMBER NOT NULL, ID_MIGRAZ_FILE NUMBER NOT NULL, TS_ERR TIMESTAMP(6) NOT NULL, CD_ERR VARCHAR2(100 BYTE) NOT NULL, DS_ERR VARCHAR2(4000 BYTE) NOT NULL, DS_HASH_FILE_CALC_MIGRAZ VARCHAR2(254 BYTE), TI_ERR VARCHAR2(30 BYTE) NOT NULL, CONSTRAINT PK_MGZ_FILE_ERR PRIMARY KEY (ID_MIGRAZ_FILE_ERR));

-- changeset root:1751897635013-1579
CREATE TABLE REC_DT_VERS_RECUP (ID_DT_VERS_RECUP NUMBER NOT NULL, ID_SESSIONE_RECUP NUMBER NOT NULL, DT_VERS date NOT NULL, TI_STATO_DT_VERS_RECUP VARCHAR2(20 BYTE) NOT NULL, DT_STATO_DT_VERS_RECUP date NOT NULL, FL_MIGRAZ CHAR(1 BYTE) DEFAULT '0' NOT NULL, CONSTRAINT PK_DT_VERS_REC PRIMARY KEY (ID_DT_VERS_RECUP));

-- changeset root:1751897635013-1580
CREATE TABLE SER_FILE_VER_SERIE (ID_FILE_VER_SERIE NUMBER NOT NULL, ID_VER_SERIE NUMBER NOT NULL, TI_FILE_VER_SERIE VARCHAR2(30 BYTE) NOT NULL, BL_FILE BLOB, DS_HASH_FILE VARCHAR2(254 BYTE) NOT NULL, DS_ALGO_HASH_FILE VARCHAR2(254 BYTE) NOT NULL, CD_ENCODING_HASH_FILE VARCHAR2(20 BYTE) NOT NULL, CD_VER_XSD_FILE VARCHAR2(100 BYTE), ID_STRUT NUMBER NOT NULL, DT_CREAZIONE date NOT NULL, ID_ENTE_CONSERV NUMBER, TI_FIRMA VARCHAR2(30 BYTE), CONSTRAINT PK_FILE_VER_SER PRIMARY KEY (ID_FILE_VER_SERIE));

-- changeset root:1751897635013-1581
CREATE TABLE SER_IX_VOL_VER_SERIE (ID_IX_VOL_VER_SERIE NUMBER NOT NULL, ID_VOL_VER_SERIE NUMBER NOT NULL, BL_IX_VOL CLOB NOT NULL, CD_VER_XSD_IX_VOL VARCHAR2(100 BYTE) DEFAULT '1.0' NOT NULL, DS_HASH_IX_VOL VARCHAR2(254 BYTE) NOT NULL, DS_ALGO_HASH_IX_VOL VARCHAR2(254 BYTE) NOT NULL, CD_ENCODING_HASH_IX_VOL VARCHAR2(20 BYTE) NOT NULL, ID_STRUT NUMBER NOT NULL, DT_CREAZIONE date NOT NULL, CONSTRAINT PK_IX_VOL_VER_SER PRIMARY KEY (ID_IX_VOL_VER_SERIE));

-- changeset root:1751897635013-1582
CREATE TABLE SER_LINK_SERIE (ID_LINK_SERIE NUMBER NOT NULL, ID_SERIE_PARTENZA NUMBER NOT NULL, ID_STRUT_ARRIVO NUMBER NOT NULL, CD_COMPOSITO_SERIE_ARRIVO VARCHAR2(100 BYTE) NOT NULL, AA_SERIE_ARRIVO NUMBER(4, 0) NOT NULL, ID_SERIE_ARRIVO NUMBER, DS_LINK_SERIE VARCHAR2(254 BYTE), CONSTRAINT PK_LNK_SER PRIMARY KEY (ID_LINK_SERIE));

-- changeset root:1751897635013-1583
CREATE TABLE SER_QUERY_CONTENUTO_VER_SERIE (ID_QUERY_CONTENUTO_VER_SERIE NUMBER NOT NULL, ID_CONTENUTO_VER_SERIE NUMBER NOT NULL, ID_REGISTRO_UNITA_DOC NUMBER NOT NULL, ID_TIPO_UNITA_DOC NUMBER NOT NULL, BL_QUERY CLOB NOT NULL, CONSTRAINT PK_QRY_CONTEN_VER_SER PRIMARY KEY (ID_QUERY_CONTENUTO_VER_SERIE));

-- changeset root:1751897635013-1584
CREATE TABLE SER_URN_FILE_VER_SERIE (ID_URN_FILE_VER_SERIE NUMBER NOT NULL, ID_FILE_VER_SERIE NUMBER NOT NULL, TI_URN VARCHAR2(20 BYTE) NOT NULL, DS_URN VARCHAR2(254 BYTE) NOT NULL, CONSTRAINT PK_URN_FILE_VER_SER PRIMARY KEY (ID_URN_FILE_VER_SERIE));

-- changeset root:1751897635013-1585
CREATE TABLE SER_URN_IX_VOL_VER_SERIE (ID_URN_IX_VOL_VER_SERIE NUMBER NOT NULL, ID_IX_VOL_VER_SERIE NUMBER NOT NULL, TI_URN VARCHAR2(20 BYTE) NOT NULL, DS_URN VARCHAR2(254 BYTE) NOT NULL, CONSTRAINT PK_URN_IX_VOL_SER PRIMARY KEY (ID_URN_IX_VOL_VER_SERIE));

-- changeset root:1751897635013-1586 splitStatements:true
CREATE TABLE SER_VER_SERIE_OBJECT_STORAGE (ID_VER_SERIE_OBJECT_STORAGE NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL, ID_DEC_BACKEND NUMBER NOT NULL, ID_VER_SERIE NUMBER NOT NULL, TI_FILE_VER_SERIE VARCHAR2(30 BYTE) NOT NULL, NM_TENANT VARCHAR2(100 BYTE) NOT NULL, NM_BUCKET VARCHAR2(100 BYTE) NOT NULL, CD_KEY_FILE VARCHAR2(254 BYTE) NOT NULL, ID_STRUT NUMBER NOT NULL, CONSTRAINT PK_SER_VER_SERIE_OBJECT_STORAGE PRIMARY KEY (ID_VER_SERIE_OBJECT_STORAGE));
COMMENT ON TABLE SER_VER_SERIE_OBJECT_STORAGE IS 'Tabella di collegamento tra il dato della sessionetra le versioni di indice aip e l''object storage. Modellata come ARO_VER_INDICE_AIP_UD_OBJECT_STORAGE';
COMMENT ON COLUMN SER_VER_SERIE_OBJECT_STORAGE.ID_VER_SERIE_OBJECT_STORAGE IS 'PK autogenerata della tabella';
COMMENT ON COLUMN SER_VER_SERIE_OBJECT_STORAGE.ID_DEC_BACKEND IS 'FK verso DEC_BACKEND sull''id del backend utilizzato (sicuramente di tipo OS)';
COMMENT ON COLUMN SER_VER_SERIE_OBJECT_STORAGE.ID_VER_SERIE IS 'FK verso SER_VER_SERIE sull''id della versione dell''indice aip. Rappresenta la chiave logica della tabella';
COMMENT ON COLUMN SER_VER_SERIE_OBJECT_STORAGE.NM_TENANT IS 'Tenant dell''OS a cui ci si collega (inutilizzato)';
COMMENT ON COLUMN SER_VER_SERIE_OBJECT_STORAGE.NM_BUCKET IS 'Bucket su cui viene scritto il file xml';
COMMENT ON COLUMN SER_VER_SERIE_OBJECT_STORAGE.CD_KEY_FILE IS 'Chiave univoca su cui viene scritto il file xml';

-- changeset root:1751897635013-1587
CREATE TABLE TMP_ALLINEA_FORMATI_STRUTTURA (ID_STRUT NUMBER, NM_FORMATO_FILE_DOC VARCHAR2(201 BYTE), DS_FORMATO_FILE_DOC VARCHAR2(254 BYTE), CD_VERSIONE VARCHAR2(100 BYTE), DT_ISTITUZ date, DT_SOPPRES date);

-- changeset root:1751897635013-1588
CREATE TABLE TMP_ARO_DOC_ANNUL (ID_DOC_ANNUL NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, CD_REGISTRO_KEY_UNITA_DOC VARCHAR2(100 BYTE) NOT NULL, AA_KEY_UNITA_DOC NUMBER(4, 0) NOT NULL, CD_KEY_UNITA_DOC VARCHAR2(100 BYTE) NOT NULL, CD_KEY_DOC_VERS VARCHAR2(100 BYTE) NOT NULL, DT_ANNUL date NOT NULL, CONSTRAINT PK_DOC_ANNUL PRIMARY KEY (ID_DOC_ANNUL));

-- changeset root:1751897635013-1589
CREATE TABLE TMP_ARO_DOC_ANNUL_DA_ELAB (ID_DOC_ANNUL_DA_ELAB NUMBER NOT NULL, ID_DOC NUMBER NOT NULL, ID_UD_ANNUL_DA_ELAB NUMBER, ID_STRUT NUMBER NOT NULL, TI_STATO_ANNUL VARCHAR2(20 BYTE) NOT NULL, DT_CREAZIONE date NOT NULL, DT_ANNUL date, ID_VOLUME_CONSERV NUMBER, TI_STATO_VOLUME_CONSERV VARCHAR2(20 BYTE), ID_APPART_UD_VOLUME NUMBER, ID_APPART_DOC_VOLUME NUMBER, ID_VOLUME_CONSERV_PREC NUMBER, ID_APPART_UD_VOLUME_PREC NUMBER, ID_APPART_DOC_VOLUME_PREC NUMBER, CONSTRAINT PK_DOC_ANNUL_DA_ELAB PRIMARY KEY (ID_DOC_ANNUL_DA_ELAB));

-- changeset root:1751897635013-1590
CREATE TABLE TMP_ARO_UD_ANNUL_DA_ELAB (ID_UD_ANNUL_DA_ELAB NUMBER NOT NULL, ID_UNITA_DOC NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, TI_STATO_ANNUL VARCHAR2(20 BYTE) NOT NULL, DT_CREAZIONE date NOT NULL, ID_TIPO_UNITA_DOC NUMBER NOT NULL, ID_REGISTRO_UNITA_DOC NUMBER NOT NULL, DT_ANNUL date, TI_STATO_DT_VERS VARCHAR2(20 BYTE), CONSTRAINT PK_UD_ANNUL_DA_ELAB PRIMARY KEY (ID_UD_ANNUL_DA_ELAB));

-- changeset root:1751897635013-1591
CREATE TABLE TMP_ARO_UNITA_DOC_ANNUL (ID_UNITA_DOC_ANNUL NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, CD_REGISTRO_KEY_UNITA_DOC VARCHAR2(100 BYTE) NOT NULL, AA_KEY_UNITA_DOC NUMBER(4, 0) NOT NULL, CD_KEY_UNITA_DOC VARCHAR2(100 BYTE) NOT NULL, DT_ANNUL date NOT NULL, CONSTRAINT PK_UNI_DOC_ANNUL PRIMARY KEY (ID_UNITA_DOC_ANNUL));

-- changeset root:1751897635013-1592
CREATE TABLE TMP_ATT_DA_SPOSTARE (ID_STRUT_OLD NUMBER, ID_ATTRIB_DATI_SPEC_OLD NUMBER, ID_STRUT_NEW NUMBER, ID_ATTRIB_DATI_SPEC_NEW NUMBER);

-- changeset root:1751897635013-1593
CREATE TABLE TMP_COMP_INDICE_AIP_DA_ELAB (ID_COMP_INDICE_AIP_DA_ELAB NUMBER NOT NULL, ID_INDICE_AIP_DA_ELAB NUMBER NOT NULL, ID_COMP_DOC NUMBER NOT NULL, DS_URN_COMP VARCHAR2(254 BYTE) NOT NULL);

-- changeset root:1751897635013-1594
CREATE TABLE TMP_CREA_STRUT_TEMPLATE (PG_TEMPLATE NUMBER);

-- changeset root:1751897635013-1595
CREATE TABLE TMP_CRITERIO_STD (ID_CRITERIO_RAGGR NUMBER NOT NULL, AA_KEY_UNITA_DOC NUMBER(4, 0), FL_CRITERIO_RAGGR_AUTOM CHAR(1 BYTE) NOT NULL, TI_STANDARD VARCHAR2(12 BYTE), ID_ORIGINE_CRITERIO NUMBER, DT_ISTITUZ date NOT NULL, DT_SOPPRES date NOT NULL);

-- changeset root:1751897635013-1596
CREATE TABLE TMP_CRIT_DA_SPOSTARE (ID_STRUT_OLD NUMBER NOT NULL, ID_CRITERIO_RAGGR_OLD NUMBER NOT NULL, ID_STRUT_NEW NUMBER NOT NULL, ID_CRITERIO_RAGGR_NEW NUMBER NOT NULL);

-- changeset root:1751897635013-1597
CREATE TABLE TMP_DOC_ELENCO (ID_VOLUME_CONSERV NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, NM_VOLUME_CONSERV VARCHAR2(100 BYTE) NOT NULL, TI_STATO_VOLUME_CONSERV VARCHAR2(20 BYTE) NOT NULL, ID_DOC NUMBER NOT NULL);

-- changeset root:1751897635013-1598
CREATE TABLE TMP_DOC_NON_VERS_DT (ID_STRUT NUMBER, CD_REGISTRO_KEY_UNITA_DOC VARCHAR2(100 BYTE), AA_KEY_UNITA_DOC NUMBER(4, 0), CD_KEY_UNITA_DOC VARCHAR2(100 BYTE), CD_KEY_DOC_VERS VARCHAR2(100 BYTE), MIN_DT_APERTURA date, MAX_DT_APERTURA date);

-- changeset root:1751897635013-1599
CREATE TABLE TMP_DOC_NON_VERS_ERR (ID_DOC_NON_VERS NUMBER NOT NULL, CD_ERR_PRINC_MAX VARCHAR2(20 BYTE), DS_ERR_PRINC_MAX VARCHAR2(4000 BYTE));

-- changeset root:1751897635013-1600
CREATE TABLE TMP_ELENCO_DA_CHIUDERE (NM_AMBIENTE VARCHAR2(100 BYTE) NOT NULL, NM_ENTE VARCHAR2(100 BYTE) NOT NULL, NM_STRUT VARCHAR2(100 BYTE) NOT NULL, ID_STRUT NUMBER NOT NULL, ID_ELENCO_VERS NUMBER NOT NULL, NM_ELENCO VARCHAR2(100 BYTE) NOT NULL, NUM_UNITA_DOC NUMBER);

-- changeset root:1751897635013-1601
CREATE TABLE TMP_ELENCO_DA_SPOSTARE (ID_ELENCO_VERS NUMBER NOT NULL);

-- changeset root:1751897635013-1602
CREATE TABLE TMP_ELE_DA_SISTEMARE (ID_ELENCO_VERS_DA_ELAB NUMBER NOT NULL, ID_ELENCO_VERS NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, TI_STATO_ELENCO VARCHAR2(40 BYTE) NOT NULL, ID_CRITERIO_RAGGR NUMBER NOT NULL, AA_KEY_UNITA_DOC NUMBER(4, 0), TS_STATO_ELENCO TIMESTAMP(6));

-- changeset root:1751897635013-1603
CREATE TABLE TMP_ELV_FILE_ELENCO_VERS (ID_FILE_ELENCO_VERS NUMBER NOT NULL, ID_ELENCO_VERS NUMBER NOT NULL, TI_FILE_ELENCO_VERS VARCHAR2(20 BYTE) NOT NULL, BL_FILE_ELENCO_VERS BLOB NOT NULL, ID_STRUT NUMBER NOT NULL, DT_CREAZIONE_FILE date NOT NULL);

-- changeset root:1751897635013-1604
CREATE TABLE TMP_FMT_DOC_DA_SPOSTARE (ID_STRUT_OLD NUMBER NOT NULL, ID_FORMATO_FILE_DOC_OLD NUMBER NOT NULL, ID_STRUT_NEW NUMBER NOT NULL, ID_FORMATO_FILE_DOC_NEW NUMBER NOT NULL);

-- changeset root:1751897635013-1605
CREATE TABLE TMP_ID_ELENCHI_DA_CHIUDERE (ID_ELENCO_VERS NUMBER NOT NULL);

-- changeset root:1751897635013-1606
CREATE TABLE TMP_INDICE_AIP_UD_DA_ELAB (ID_INDICE_AIP_DA_ELAB NUMBER NOT NULL, ID_UNITA_DOC NUMBER NOT NULL, DT_CREAZIONE_DA_ELAB date NOT NULL, DS_CAUSALE VARCHAR2(254 BYTE) NOT NULL, TI_CREAZIONE VARCHAR2(20 BYTE) NOT NULL, PG_CREAZIONE_DA_ELAB NUMBER NOT NULL);

-- changeset root:1751897635013-1607
CREATE TABLE TMP_MESI (NI_MESE VARCHAR2(2 BYTE) NOT NULL, INI_ANNO VARCHAR2(2 BYTE) NOT NULL, FIN_ANNO VARCHAR2(2 BYTE) NOT NULL, TRIMESTRE NUMBER NOT NULL, INI_TRIMESTRE VARCHAR2(2 BYTE) NOT NULL, FIN_TRIMESTRE VARCHAR2(2 BYTE) NOT NULL, GG_SUCC_TRIMESTRE VARCHAR2(5 BYTE) NOT NULL, QUADRIMESTRE NUMBER NOT NULL, INI_QUADRIMESTRE VARCHAR2(2 BYTE) NOT NULL, FIN_QUADRIMESTRE VARCHAR2(2 BYTE) NOT NULL, GG_SUCC_QUADRIMESTRE VARCHAR2(5 BYTE) NOT NULL, SEMESTRE NUMBER NOT NULL, INI_SEMESTRE VARCHAR2(2 BYTE) NOT NULL, FIN_SEMESTRE VARCHAR2(2 BYTE) NOT NULL, GG_SUCC_SEMESTRE VARCHAR2(5 BYTE) NOT NULL, GG_SUCC_ANNO VARCHAR2(5 BYTE) DEFAULT '01/01' NOT NULL);

-- changeset root:1751897635013-1608
CREATE TABLE TMP_ORACLE_PARTITION (TABLE_NAME VARCHAR2(30 BYTE) NOT NULL, PARTITION_NAME VARCHAR2(30 BYTE) NOT NULL, HIGH_VALUE CLOB, CD_VAL_PARTITION VARCHAR2(10 BYTE));

-- changeset root:1751897635013-1609
CREATE TABLE TMP_ORACLE_SUBPARTITION (TABLE_NAME VARCHAR2(30 BYTE) NOT NULL, PARTITION_NAME VARCHAR2(30 BYTE) NOT NULL, SUBPARTITION_NAME VARCHAR2(30 BYTE) NOT NULL, HIGH_VALUE CLOB);

-- changeset root:1751897635013-1610
CREATE TABLE TMP_REG_AA_FMT_GENERICO_ALFA (ID_STRUT NUMBER, CD_REGISTRO_KEY_UNITA_DOC VARCHAR2(100 BYTE) NOT NULL, AA_KEY_UNITA_DOC NUMBER(4, 0) NOT NULL);

-- changeset root:1751897635013-1611
CREATE TABLE TMP_REG_AA_FMT_GENERICO_ERRATO (NM_AMBIENTE VARCHAR2(100 BYTE) NOT NULL, NM_ENTE VARCHAR2(100 BYTE) NOT NULL, NM_STRUT VARCHAR2(100 BYTE) NOT NULL, ID_STRUT NUMBER NOT NULL, CD_REGISTRO_KEY_UNITA_DOC VARCHAR2(100 BYTE) NOT NULL, AA_KEY_UNITA_DOC NUMBER(4, 0) NOT NULL);

-- changeset root:1751897635013-1612
CREATE TABLE TMP_REG_AA_FMT_GENERICO_NUM (ID_STRUT NUMBER, CD_REGISTRO_KEY_UNITA_DOC VARCHAR2(100 BYTE) NOT NULL, AA_KEY_UNITA_DOC NUMBER(4, 0) NOT NULL);

-- changeset root:1751897635013-1613
CREATE TABLE TMP_REG_AA_FMT_STANDARD_ERRATO (NM_AMBIENTE VARCHAR2(100 BYTE) NOT NULL, NM_ENTE VARCHAR2(100 BYTE) NOT NULL, NM_STRUT VARCHAR2(100 BYTE) NOT NULL, ID_STRUT NUMBER, CD_REGISTRO_KEY_UNITA_DOC VARCHAR2(100 BYTE) NOT NULL, AA_KEY_UNITA_DOC NUMBER(4, 0) NOT NULL);

-- changeset root:1751897635013-1614
CREATE TABLE TMP_REG_DA_SPOSTARE (ID_STRUT_OLD NUMBER NOT NULL, ID_REGISTRO_UNITA_DOC_OLD NUMBER NOT NULL, ID_STRUT_NEW NUMBER NOT NULL, ID_REGISTRO_UNITA_DOC_NEW NUMBER NOT NULL);

-- changeset root:1751897635013-1615
CREATE TABLE TMP_SESSIONE_DA_SPOSTARE (ID_SESSIONE_VERS NUMBER NOT NULL);

-- changeset root:1751897635013-1616
CREATE TABLE TMP_STRUT_CALC_CONSIST_NEW (ID_STRUT NUMBER NOT NULL, TI_STATO_ELAB VARCHAR2(30 BYTE), ID_TMP_STRUT_CALC_CONSIST NUMBER NOT NULL, DT_RIF_CONTA date NOT NULL, AA_KEY_UNITA_DOC NUMBER(4, 0), ID_SUB_STRUT NUMBER, DT_EXEC_JOB date, CONSTRAINT TMP_STRUT_CALC_CONSIST_NEW_PK PRIMARY KEY (ID_TMP_STRUT_CALC_CONSIST));

-- changeset root:1751897635013-1617
CREATE TABLE TMP_STRUT_DA_SPOSTARE (ID_STRUT_OLD NUMBER, ID_SUB_STRUT_OLD NUMBER, ID_STRUT_NEW NUMBER, ID_SUB_STRUT_NEW NUMBER);

-- changeset root:1751897635013-1618
CREATE TABLE TMP_STRUT_PRIMO_VERS (ID_STRUT NUMBER NOT NULL, NM_STRUT VARCHAR2(100 BYTE) NOT NULL, DT_PRIMO_VERS date, DT_PRIMO_LOG date);

-- changeset root:1751897635013-1619
CREATE TABLE TMP_TIPO_COMP_DOC_DA_SPOSTARE (ID_STRUT_OLD NUMBER NOT NULL, ID_TIPO_COMP_DOC_OLD NUMBER NOT NULL, ID_STRUT_NEW NUMBER NOT NULL, ID_TIPO_COMP_DOC_NEW NUMBER NOT NULL);

-- changeset root:1751897635013-1620
CREATE TABLE TMP_TIPO_DOC_DA_SPOSTARE (ID_STRUT_OLD NUMBER NOT NULL, ID_TIPO_DOC_OLD NUMBER NOT NULL, ID_STRUT_NEW NUMBER NOT NULL, ID_TIPO_DOC_NEW NUMBER NOT NULL);

-- changeset root:1751897635013-1621
CREATE TABLE TMP_TIPO_RAPPR_DA_SPOSTARE (ID_STRUT_OLD NUMBER NOT NULL, ID_TIPO_RAPPR_COMP_OLD NUMBER NOT NULL, ID_STRUT_NEW NUMBER NOT NULL, ID_TIPO_RAPPR_COMP_NEW NUMBER NOT NULL);

-- changeset root:1751897635013-1622
CREATE TABLE TMP_TIPO_STRUT_DOC_DA_SPOSTARE (ID_STRUT_OLD NUMBER NOT NULL, ID_TIPO_STRUT_DOC_OLD NUMBER NOT NULL, ID_STRUT_NEW NUMBER NOT NULL, ID_TIPO_STRUT_DOC_NEW NUMBER NOT NULL);

-- changeset root:1751897635013-1623
CREATE TABLE TMP_TIPO_UD_DA_SPOSTARE (ID_STRUT_OLD NUMBER NOT NULL, ID_TIPO_UNITA_DOC_OLD NUMBER NOT NULL, ID_STRUT_NEW NUMBER NOT NULL, ID_TIPO_UNITA_DOC_NEW NUMBER NOT NULL);

-- changeset root:1751897635013-1624
CREATE TABLE TMP_TIPO_UD_TIPO_DOC_PRINC (ID_TIPO_UNITA_DOC NUMBER NOT NULL, NM_TIPO_UNITA_DOC VARCHAR2(100 BYTE) NOT NULL, DS_TIPO_UNITA_DOC VARCHAR2(254 BYTE) NOT NULL, ID_TIPO_DOC NUMBER NOT NULL, NM_TIPO_DOC VARCHAR2(100 BYTE) NOT NULL, DS_TIPO_DOC VARCHAR2(254 BYTE) NOT NULL, TI_DOC VARCHAR2(20 BYTE) NOT NULL, NM_TIPO_STRUT_UNITA_DOC VARCHAR2(100 BYTE), DS_TIPO_STRUT_UNITA_DOC VARCHAR2(254 BYTE));

-- changeset root:1751897635013-1625
CREATE TABLE TMP_TIPO_UNITA_DOC_TIPO_DOC (ID_TIPO_UNITA_DOC NUMBER NOT NULL, ID_TIPO_DOC NUMBER NOT NULL);

-- changeset root:1751897635013-1626
CREATE TABLE TMP_UD_AIP_IN_AGGIORNAMENTO (ID_UNITA_DOC NUMBER NOT NULL);

-- changeset root:1751897635013-1627
CREATE TABLE TMP_UD_ELENCO (ID_VOLUME_CONSERV NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, NM_VOLUME_CONSERV VARCHAR2(100 BYTE) NOT NULL, TI_STATO_VOLUME_CONSERV VARCHAR2(20 BYTE) NOT NULL, ID_UNITA_DOC NUMBER NOT NULL);

-- changeset root:1751897635013-1628
CREATE TABLE TMP_UD_NON_VERS_DT (ID_STRUT NUMBER, CD_REGISTRO_KEY_UNITA_DOC VARCHAR2(100 BYTE), AA_KEY_UNITA_DOC NUMBER(4, 0), CD_KEY_UNITA_DOC VARCHAR2(100 BYTE), MIN_DT_APERTURA date, MAX_DT_APERTURA date);

-- changeset root:1751897635013-1629
CREATE TABLE TMP_UD_NON_VERS_ERR (ID_UNITA_DOC_NON_VERS NUMBER NOT NULL, CD_ERR_PRINC_MAX VARCHAR2(20 BYTE), DS_ERR_PRINC_MAX VARCHAR2(4000 BYTE));

-- changeset root:1751897635013-1630
CREATE TABLE TMP_UNITA_DOC_DA_SPOSTARE (ID_UNITA_DOC NUMBER NOT NULL);

-- changeset root:1751897635013-1631
CREATE TABLE TMP_XSD_DA_SPOSTARE (ID_STRUT_OLD NUMBER, ID_XSD_DATI_SPEC_OLD NUMBER, ID_STRUT_NEW NUMBER, ID_XSD_DATI_SPEC_NEW NUMBER);

-- changeset root:1751897635013-1632
CREATE TABLE TPI_ERR_ARK (ID_ERR_ARK NUMBER NOT NULL, ID_SCHED_JOB NUMBER NOT NULL, NI_ERR_ARK NUMBER NOT NULL, TI_ERR_ARK VARCHAR2(20 BYTE) NOT NULL, CD_ERR_ARK VARCHAR2(100 BYTE) NOT NULL, DL_ERR_ARK VARCHAR2(1024 BYTE) NOT NULL, CONSTRAINT PK_ERR_ARK PRIMARY KEY (ID_ERR_ARK));

-- changeset root:1751897635013-1633
CREATE TABLE TPI_PATH_ELAB (ID_PATH_ELAB NUMBER NOT NULL, ID_SCHED_JOB NUMBER NOT NULL, DT_VERS_ELAB date NOT NULL, DL_PATH_ELAB VARCHAR2(254 BYTE) NOT NULL, NI_FILE_DA_ELAB NUMBER NOT NULL, NI_FILE_ELAB NUMBER DEFAULT 0 NOT NULL, CONSTRAINT PK_PATH_ELAB PRIMARY KEY (ID_PATH_ELAB));

-- changeset root:1751897635013-1634
CREATE TABLE VOL_FILE_VOLUME_CONSERV (ID_FILE_VOLUME_CONSERV NUMBER NOT NULL, ID_VOLUME_CONSERV NUMBER NOT NULL, TI_FILE_VOLUME_CONSERV VARCHAR2(20 BYTE) NOT NULL, BL_FILE_VOLUME_CONSERV BLOB NOT NULL, CONSTRAINT PK_FIL_VOL_CONS PRIMARY KEY (ID_FILE_VOLUME_CONSERV));

-- changeset root:1751897635013-1635
CREATE TABLE VOL_VOLUME_VERS_UD_ANNUL (ID_VOLUME_VERS_UD_ANNUL NUMBER NOT NULL, ID_VOLUME_CONSERV NUMBER NOT NULL, DS_URN_UNITA_DOC_ANNUL VARCHAR2(254 BYTE) NOT NULL, ID_UNITA_DOC NUMBER, CONSTRAINT PK_VOL_VRS_UD_ANN PRIMARY KEY (ID_VOLUME_VERS_UD_ANNUL));

-- changeset root:1751897635013-1636
CREATE TABLE VRS_ARK_PATH_DT_VERS (ID_ARK_PATH_DT_VERS NUMBER NOT NULL, ID_PATH_DT_VERS NUMBER NOT NULL, TI_ARK_PATH VARCHAR2(20 BYTE) NOT NULL, DS_ARK VARCHAR2(254 BYTE) NOT NULL, DT_ARK_PATH_DT_VERS date NOT NULL, CONSTRAINT PK_ARK_PATH PRIMARY KEY (ID_ARK_PATH_DT_VERS));

-- changeset root:1751897635013-1637
CREATE TABLE VRS_CONTENUTO_FILE_DA_DROPPARE (ID_CONTENUTO_FILE NUMBER NOT NULL, ID_FILE_SESSIONE NUMBER NOT NULL, BL_CONTENUTO_FILE_SESSIONE BLOB NOT NULL, ID_STRUT NUMBER, MM_VERS NUMBER(6, 0) NOT NULL, CONSTRAINT PK_CONT_FILE_VRS PRIMARY KEY (ID_CONTENUTO_FILE));

-- changeset root:1751897635013-1638
CREATE TABLE VRS_CONTENUTO_FILE_KO (ID_CONTENUTO_FILE_KO NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY NOT NULL, ID_FILE_SESSIONE_KO NUMBER NOT NULL, BL_CONTENUTO_FILE_SESSIONE BLOB, ID_STRUT NUMBER, MM_VERS NUMBER(6, 0) NOT NULL, AA_VERS NUMBER(4, 0), CONSTRAINT VRS_CONTENUTO_FILE_KO_PK PRIMARY KEY (ID_CONTENUTO_FILE_KO));

-- changeset root:1751897635013-1639
CREATE TABLE VRS_ERR_SESSIONE_VERS (ID_ERR_SESSIONE_VERS NUMBER NOT NULL, ID_DATI_SESSIONE_VERS NUMBER NOT NULL, PG_ERR_SESSIONE_VERS NUMBER DEFAULT 1 NOT NULL, TI_ERR VARCHAR2(20 BYTE) NOT NULL, DS_ERR VARCHAR2(4000 BYTE) NOT NULL, CD_ERR VARCHAR2(20 BYTE), ID_STRUT NUMBER, FL_ERR_PRINC CHAR(1 BYTE) DEFAULT '1' NOT NULL, CONSTRAINT PK_ERR_SES_VRS PRIMARY KEY (ID_ERR_SESSIONE_VERS));

-- changeset root:1751897635013-1640
CREATE TABLE VRS_FILE_NOARK_PATH_DT_VERS (ID_FILE_NO_ARK_PATH_DT_VERS NUMBER NOT NULL, ID_PATH_DT_VERS NUMBER NOT NULL, TI_ARK_FILE_NOARK VARCHAR2(20 BYTE) NOT NULL, DS_FILE_NOARK VARCHAR2(254 BYTE) NOT NULL, CONSTRAINT PK_FILE_NOARK PRIMARY KEY (ID_FILE_NO_ARK_PATH_DT_VERS));

-- changeset root:1751897635013-1641
CREATE TABLE VRS_FILE_SESSIONE (ID_FILE_SESSIONE NUMBER NOT NULL, ID_DATI_SESSIONE_VERS NUMBER NOT NULL, PG_FILE_SESSIONE NUMBER DEFAULT 1 NOT NULL, NM_FILE_SESSIONE VARCHAR2(254 BYTE) NOT NULL, TI_STATO_FILE_SESSIONE VARCHAR2(20 BYTE) NOT NULL, ID_STRUT NUMBER, CONSTRAINT PK_FIL_SES PRIMARY KEY (ID_FILE_SESSIONE));

-- changeset root:1751897635013-1642
CREATE TABLE VRS_FILE_SESSIONE_KO (ID_FILE_SESSIONE_KO NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY NOT NULL, ID_DATI_SESSIONE_VERS_KO NUMBER NOT NULL, PG_FILE_SESSIONE NUMBER NOT NULL, NM_FILE_SESSIONE VARCHAR2(254 BYTE) NOT NULL, TI_STATO_FILE_SESSIONE VARCHAR2(20 BYTE) NOT NULL, ID_STRUT NUMBER, CONSTRAINT VRS_FILE_SESSIONE_KO_PK PRIMARY KEY (ID_FILE_SESSIONE_KO));

-- changeset root:1751897635013-1643 splitStatements:true
CREATE TABLE VRS_FILE_SES_OBJECT_STORAGE (ID_VRS_FILE_SES_OBJECT_STORAGE NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL, ID_DEC_BACKEND NUMBER NOT NULL, ID_FILE_SESSIONE NUMBER NOT NULL, NM_TENANT VARCHAR2(100 BYTE) NOT NULL, NM_BUCKET VARCHAR2(100 BYTE) NOT NULL, CD_KEY_FILE VARCHAR2(254 BYTE) NOT NULL, CONSTRAINT PK_VRS_FILE_SES_OBJECT_STORAGE PRIMARY KEY (ID_VRS_FILE_SES_OBJECT_STORAGE));
COMMENT ON TABLE VRS_FILE_SES_OBJECT_STORAGE IS 'Tabella di collegamento tra i file delle sessioni fallite e l''object storage. Modellata come ARO_COMP_OBJECT_STORAGE';
COMMENT ON COLUMN VRS_FILE_SES_OBJECT_STORAGE.ID_VRS_FILE_SES_OBJECT_STORAGE IS 'PK autogenerata della tabella';
COMMENT ON COLUMN VRS_FILE_SES_OBJECT_STORAGE.ID_DEC_BACKEND IS 'FK verso DEC_BACKEND sull''id del backend utilizzato (sicuramente di tipo OS)';
COMMENT ON COLUMN VRS_FILE_SES_OBJECT_STORAGE.ID_FILE_SESSIONE IS 'FK verso VRS_FILE_SESSIONE sull''id del file versato.Rappresenta la chiave logica della tabella';
COMMENT ON COLUMN VRS_FILE_SES_OBJECT_STORAGE.NM_TENANT IS 'Tenant dell''OS a cui ci si collega (inutilizzato)';
COMMENT ON COLUMN VRS_FILE_SES_OBJECT_STORAGE.NM_BUCKET IS 'Bucket su cui viene scritto il file xml';
COMMENT ON COLUMN VRS_FILE_SES_OBJECT_STORAGE.CD_KEY_FILE IS 'Chiave univoca su cui viene scritto il file xml';

-- changeset root:1751897635013-1644 splitStatements:true
CREATE TABLE VRS_FILE_SES_OBJECT_STORAGE_KO (ID_VRS_FILE_SES_OBJECT_STORAGE_KO NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY NOT NULL, ID_DEC_BACKEND NUMBER NOT NULL, ID_FILE_SESSIONE_KO NUMBER NOT NULL, NM_TENANT VARCHAR2(100 BYTE) NOT NULL, NM_BUCKET VARCHAR2(100 BYTE) NOT NULL, CD_KEY_FILE VARCHAR2(254 BYTE) NOT NULL, ID_STRUT NUMBER, CONSTRAINT VRS_FILE_SES_OBJECT_STORAGE_KO_PK PRIMARY KEY (ID_VRS_FILE_SES_OBJECT_STORAGE_KO));
COMMENT ON COLUMN VRS_FILE_SES_OBJECT_STORAGE_KO.ID_DEC_BACKEND IS 'FK verso DEC_BACKEND sull''id del backend utilizzato (sicuramente di tipo OS)';
COMMENT ON COLUMN VRS_FILE_SES_OBJECT_STORAGE_KO.ID_FILE_SESSIONE_KO IS 'FK verso VRS_FILE_SESSIONE sull''id del file versato.Rappresenta la chiave logica della tabella';
COMMENT ON COLUMN VRS_FILE_SES_OBJECT_STORAGE_KO.NM_TENANT IS 'Tenant dell''OS a cui ci si collega (inutilizzato)';
COMMENT ON COLUMN VRS_FILE_SES_OBJECT_STORAGE_KO.NM_BUCKET IS 'Bucket su cui viene scritto il file xml';
COMMENT ON COLUMN VRS_FILE_SES_OBJECT_STORAGE_KO.CD_KEY_FILE IS 'Chiave univoca su cui viene scritto il file xml';
COMMENT ON COLUMN VRS_FILE_SES_OBJECT_STORAGE_KO.ID_STRUT IS 'id_Strut utilizzato per chiave di partizionamento automatica';

-- changeset root:1751897635013-1645
CREATE TABLE VRS_PATH_DT_VERS (ID_PATH_DT_VERS NUMBER NOT NULL, ID_DT_VERS NUMBER NOT NULL, DL_PATH VARCHAR2(254 BYTE) NOT NULL, FL_PATH_ARK CHAR(1 BYTE) DEFAULT '0' NOT NULL, FL_PATH_FILE_NO_ARK CHAR(1 BYTE), DT_LAST_ARK_PATH date, FL_PATH_ARK_SECONDARIO CHAR(1 BYTE), FL_PATH_FILE_NO_ARK_SECONDARIO CHAR(1 BYTE), DT_LAST_ARK_PATH_SECONDARIO date, NI_FILE_PATH NUMBER, FL_CANC_FILE_MIGRAZ CHAR(1 BYTE), NI_FILE_PATH_ARK NUMBER, NI_FILE_PATH_ARK_SECONDARIO NUMBER, CONSTRAINT PK_PATH_DT_VERS PRIMARY KEY (ID_PATH_DT_VERS));

-- changeset root:1751897635013-1646
CREATE TABLE VRS_SESSIONE_VERS_SOSP (ID_SESSIONE_VERS_SOSP NUMBER NOT NULL, ID_SESSIONE_VERS NUMBER NOT NULL, ID_STRUT NUMBER NOT NULL, CONSTRAINT PK_SES_VRS_SOSP PRIMARY KEY (ID_SESSIONE_VERS_SOSP));

-- changeset root:1751897635013-1647
CREATE TABLE VRS_SES_FASCICOLO_ERR (ID_SES_FASCICOLO_ERR NUMBER NOT NULL, TS_INI_SES TIMESTAMP(6) NOT NULL, TS_FINE_SES TIMESTAMP(6) NOT NULL, ID_ERR_SACER NUMBER NOT NULL, DS_ERR VARCHAR2(4000 BYTE) NOT NULL, CD_VERSIONE_WS VARCHAR2(100 BYTE), NM_USERID_WS VARCHAR2(100 BYTE), CD_IND_IP_CLIENT VARCHAR2(100 BYTE) NOT NULL, CD_IND_SERVER VARCHAR2(100 BYTE) NOT NULL, TI_STATO_SES VARCHAR2(20 BYTE) NOT NULL, NM_AMBIENTE VARCHAR2(100 BYTE), NM_ENTE VARCHAR2(100 BYTE), NM_STRUT VARCHAR2(100 BYTE), AA_FASCICOLO NUMBER(4, 0), CD_KEY_FASCICOLO VARCHAR2(100 BYTE), NM_TIPO_FASCICOLO VARCHAR2(100 BYTE), ID_STRUT NUMBER, ID_TIPO_FASCICOLO NUMBER, CONSTRAINT PK_SES_FASC_ERR PRIMARY KEY (ID_SES_FASCICOLO_ERR));

-- changeset root:1751897635013-1648
CREATE TABLE VRS_URN_XML_SESSIONE_VERS_KO (ID_URN_XML_SESSIONE_VERS_KO NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY NOT NULL, ID_XML_DATI_SESSIONE_VERS_KO NUMBER NOT NULL, TI_URN VARCHAR2(20 BYTE) NOT NULL, DS_URN VARCHAR2(254 BYTE) NOT NULL, ID_STRUT NUMBER, CONSTRAINT VRS_URN_XML_SESSIONE_VERS_KO_PK PRIMARY KEY (ID_URN_XML_SESSIONE_VERS_KO));

-- changeset root:1751897635013-1649 splitStatements:true
CREATE TABLE VRS_XML_DATI_SES_OBJECT_STORAGE (ID_XML_DATI_SES_OBJECT_STORAGE NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL, ID_DEC_BACKEND NUMBER NOT NULL, ID_DATI_SESSIONE_VERS NUMBER NOT NULL, NM_TENANT VARCHAR2(100 BYTE) NOT NULL, NM_BUCKET VARCHAR2(100 BYTE) NOT NULL, CD_KEY_FILE VARCHAR2(254 BYTE) NOT NULL, CONSTRAINT PK_VRS_XML_DATI_SES_OBJECT_STORAGE PRIMARY KEY (ID_XML_DATI_SES_OBJECT_STORAGE));
COMMENT ON TABLE VRS_XML_DATI_SES_OBJECT_STORAGE IS 'Tabella di collegamento tra il dato della sessione e l''object storage. Modellata come ARO_COMP_OBJECT_STORAGE';
COMMENT ON COLUMN VRS_XML_DATI_SES_OBJECT_STORAGE.ID_XML_DATI_SES_OBJECT_STORAGE IS 'PK autogenerata della tabella';
COMMENT ON COLUMN VRS_XML_DATI_SES_OBJECT_STORAGE.ID_DEC_BACKEND IS 'FK verso DEC_BACKEND sull''id del backend utilizzato (sicuramente di tipo OS)';
COMMENT ON COLUMN VRS_XML_DATI_SES_OBJECT_STORAGE.ID_DATI_SESSIONE_VERS IS 'FK verso VRS_DATI_SESSIONE_VERS sull''id del xml versato.Rappresenta la chiave logica della tabella';
COMMENT ON COLUMN VRS_XML_DATI_SES_OBJECT_STORAGE.NM_TENANT IS 'Tenant dell''OS a cui ci si collega (inutilizzato)';
COMMENT ON COLUMN VRS_XML_DATI_SES_OBJECT_STORAGE.NM_BUCKET IS 'Bucket su cui viene scritto il file xml';
COMMENT ON COLUMN VRS_XML_DATI_SES_OBJECT_STORAGE.CD_KEY_FILE IS 'Chiave univoca su cui viene scritto il file xml';

-- changeset root:1751897635013-1650 splitStatements:true
CREATE TABLE VRS_XML_DATI_SES_OBJECT_STORAGE_KO (ID_XML_DATI_SES_OBJECT_STORAGE_KO NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY NOT NULL, ID_DEC_BACKEND NUMBER NOT NULL, ID_DATI_SESSIONE_VERS_KO NUMBER NOT NULL, NM_TENANT VARCHAR2(100 BYTE) NOT NULL, NM_BUCKET VARCHAR2(100 BYTE) NOT NULL, CD_KEY_FILE VARCHAR2(254 BYTE) NOT NULL, ID_STRUT NUMBER, CONSTRAINT PK_VRS_XML_DATI_SES_OBJECT_STORAGE_KO PRIMARY KEY (ID_XML_DATI_SES_OBJECT_STORAGE_KO));
COMMENT ON TABLE VRS_XML_DATI_SES_OBJECT_STORAGE_KO IS 'Tabella di collegamento tra il dato della sessione e l''object storage. Modellata come ARO_COMP_OBJECT_STORAGE';
COMMENT ON COLUMN VRS_XML_DATI_SES_OBJECT_STORAGE_KO.ID_XML_DATI_SES_OBJECT_STORAGE_KO IS 'PK autogenerata della tabella';
COMMENT ON COLUMN VRS_XML_DATI_SES_OBJECT_STORAGE_KO.ID_DEC_BACKEND IS 'FK verso DEC_BACKEND sull''id del backend utilizzato (sicuramente di tipo OS)';
COMMENT ON COLUMN VRS_XML_DATI_SES_OBJECT_STORAGE_KO.ID_DATI_SESSIONE_VERS_KO IS 'FK verso VRS_DATI_SESSIONE_VERS sull''id del xml versato.Rappresenta la chiave logica della tabella';
COMMENT ON COLUMN VRS_XML_DATI_SES_OBJECT_STORAGE_KO.NM_TENANT IS 'Tenant dell''OS a cui ci si collega (inutilizzato)';
COMMENT ON COLUMN VRS_XML_DATI_SES_OBJECT_STORAGE_KO.NM_BUCKET IS 'Bucket su cui viene scritto il file xml';
COMMENT ON COLUMN VRS_XML_DATI_SES_OBJECT_STORAGE_KO.CD_KEY_FILE IS 'Chiave univoca su cui viene scritto il file xml';

-- changeset root:1751897635013-1651
CREATE TABLE VRS_XML_SES_FASCICOLO_ERR (ID_XML_SES_FASCICOLO_ERR NUMBER NOT NULL, ID_SES_FASCICOLO_ERR NUMBER NOT NULL, TI_XML VARCHAR2(20 BYTE) NOT NULL, CD_VERSIONE_XML VARCHAR2(100 BYTE) NOT NULL, BL_XML CLOB, CONSTRAINT PK_XML_SES_FASC_ERR PRIMARY KEY (ID_XML_SES_FASCICOLO_ERR));

-- changeset root:1751897635013-1652
CREATE TABLE VRS_XML_SES_FASCICOLO_KO (ID_XML_SES_FASCICOLO_KO NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL, ID_SES_FASCICOLO_KO NUMBER NOT NULL, TI_XML VARCHAR2(20 BYTE) NOT NULL, CD_VERSIONE_XML VARCHAR2(100 BYTE) NOT NULL, BL_XML CLOB, ID_STRUT NUMBER NOT NULL, DT_REG_XML_SES_KO date NOT NULL, CONSTRAINT VRS_XML_SES_FASCICOLO_KO_PK PRIMARY KEY (ID_XML_SES_FASCICOLO_KO));

-- changeset root:1751897635013-1653 splitStatements:true
CREATE TABLE VRS_XML_SES_FASC_ERR_OBJECT_STORAGE (ID_XML_SES_FASC_ERR_OBJECT_STORAGE NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL, ID_DEC_BACKEND NUMBER NOT NULL, ID_SES_FASCICOLO_ERR NUMBER NOT NULL, NM_TENANT VARCHAR2(100 BYTE) NOT NULL, NM_BUCKET VARCHAR2(100 BYTE) NOT NULL, CD_KEY_FILE VARCHAR2(254 BYTE) NOT NULL, ID_STRUT NUMBER, CONSTRAINT PK_VRS_XML_SES_FASC_ERR_OBJECT_STORAGE PRIMARY KEY (ID_XML_SES_FASC_ERR_OBJECT_STORAGE));
COMMENT ON TABLE VRS_XML_SES_FASC_ERR_OBJECT_STORAGE IS 'Tabella di collegamento tra il dato della sessione errata e l''object storage. Modellata come ARO_COMP_OBJECT_STORAGE';
COMMENT ON COLUMN VRS_XML_SES_FASC_ERR_OBJECT_STORAGE.ID_XML_SES_FASC_ERR_OBJECT_STORAGE IS 'PK autogenerata della tabella';
COMMENT ON COLUMN VRS_XML_SES_FASC_ERR_OBJECT_STORAGE.ID_DEC_BACKEND IS 'FK verso DEC_BACKEND sull''id del backend utilizzato (sicuramente di tipo OS)';
COMMENT ON COLUMN VRS_XML_SES_FASC_ERR_OBJECT_STORAGE.ID_SES_FASCICOLO_ERR IS 'FK verso VRS_SES_FASCICOLO_ERR sull''id del xml versato.Rappresenta la chiave logica della tabella';
COMMENT ON COLUMN VRS_XML_SES_FASC_ERR_OBJECT_STORAGE.NM_TENANT IS 'Tenant dell''OS a cui ci si collega (inutilizzato)';
COMMENT ON COLUMN VRS_XML_SES_FASC_ERR_OBJECT_STORAGE.NM_BUCKET IS 'Bucket su cui viene scritto il file zip';
COMMENT ON COLUMN VRS_XML_SES_FASC_ERR_OBJECT_STORAGE.CD_KEY_FILE IS 'Chiave univoca su cui viene scritto il file zip';

-- changeset root:1751897635013-1654 splitStatements:true
CREATE TABLE VRS_XML_SES_FASC_KO_OBJECT_STORAGE (ID_XML_SES_FASC_KO_OBJECT_STORAGE NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL, ID_DEC_BACKEND NUMBER NOT NULL, ID_SES_FASCICOLO_KO NUMBER NOT NULL, NM_TENANT VARCHAR2(100 BYTE) NOT NULL, NM_BUCKET VARCHAR2(100 BYTE) NOT NULL, CD_KEY_FILE VARCHAR2(254 BYTE) NOT NULL, ID_STRUT NUMBER NOT NULL, CONSTRAINT PK_VRS_XML_SES_FASC_KO_OBJECT_STORAGE PRIMARY KEY (ID_XML_SES_FASC_KO_OBJECT_STORAGE));
COMMENT ON TABLE VRS_XML_SES_FASC_KO_OBJECT_STORAGE IS 'Tabella di collegamento tra il dato della sessione fallita e l''object storage. Modellata come ARO_COMP_OBJECT_STORAGE';
COMMENT ON COLUMN VRS_XML_SES_FASC_KO_OBJECT_STORAGE.ID_XML_SES_FASC_KO_OBJECT_STORAGE IS 'PK autogenerata della tabella';
COMMENT ON COLUMN VRS_XML_SES_FASC_KO_OBJECT_STORAGE.ID_DEC_BACKEND IS 'FK verso DEC_BACKEND sull''id del backend utilizzato (sicuramente di tipo OS)';
COMMENT ON COLUMN VRS_XML_SES_FASC_KO_OBJECT_STORAGE.ID_SES_FASCICOLO_KO IS 'FK verso VRS_SES_FASCICOLO_KO sull''id del xml versato.Rappresenta la chiave logica della tabella';
COMMENT ON COLUMN VRS_XML_SES_FASC_KO_OBJECT_STORAGE.NM_TENANT IS 'Tenant dell''OS a cui ci si collega (inutilizzato)';
COMMENT ON COLUMN VRS_XML_SES_FASC_KO_OBJECT_STORAGE.NM_BUCKET IS 'Bucket su cui viene scritto il file zip';
COMMENT ON COLUMN VRS_XML_SES_FASC_KO_OBJECT_STORAGE.CD_KEY_FILE IS 'Chiave univoca su cui viene scritto il file zip';

-- changeset root:1751897635013-1655 splitStatements:true
CREATE TABLE VRS_XML_SES_UPD_UD_ERR_OBJECT_STORAGE (ID_XML_SES_UPD_UD_ERR_OBJECT_STORAGE NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL, ID_DEC_BACKEND NUMBER NOT NULL, ID_SES_UPD_UNITA_DOC_ERR NUMBER NOT NULL, NM_TENANT VARCHAR2(100 BYTE) NOT NULL, NM_BUCKET VARCHAR2(100 BYTE) NOT NULL, CD_KEY_FILE VARCHAR2(254 BYTE) NOT NULL, ID_STRUT NUMBER, CONSTRAINT PK_VRS_XML_SES_UPD_UD_ERR_OBJECT_STORAGE PRIMARY KEY (ID_XML_SES_UPD_UD_ERR_OBJECT_STORAGE));
COMMENT ON TABLE VRS_XML_SES_UPD_UD_ERR_OBJECT_STORAGE IS 'Tabella di collegamento tra il dato della sessione errata e l''object storage. Modellata come ARO_COMP_OBJECT_STORAGE';
COMMENT ON COLUMN VRS_XML_SES_UPD_UD_ERR_OBJECT_STORAGE.ID_XML_SES_UPD_UD_ERR_OBJECT_STORAGE IS 'PK autogenerata della tabella';
COMMENT ON COLUMN VRS_XML_SES_UPD_UD_ERR_OBJECT_STORAGE.ID_DEC_BACKEND IS 'FK verso DEC_BACKEND sull''id del backend utilizzato (sicuramente di tipo OS)';
COMMENT ON COLUMN VRS_XML_SES_UPD_UD_ERR_OBJECT_STORAGE.ID_SES_UPD_UNITA_DOC_ERR IS 'FK verso VRS_SES_UPD_UNITA_DOC_ERR sull''id del xml versato.Rappresenta la chiave logica della tabella';
COMMENT ON COLUMN VRS_XML_SES_UPD_UD_ERR_OBJECT_STORAGE.NM_TENANT IS 'Tenant dell''OS a cui ci si collega (inutilizzato)';
COMMENT ON COLUMN VRS_XML_SES_UPD_UD_ERR_OBJECT_STORAGE.NM_BUCKET IS 'Bucket su cui viene scritto il file zip';
COMMENT ON COLUMN VRS_XML_SES_UPD_UD_ERR_OBJECT_STORAGE.CD_KEY_FILE IS 'Chiave univoca su cui viene scritto il file zip';

-- changeset root:1751897635013-1656 splitStatements:true
CREATE TABLE VRS_XML_SES_UPD_UD_KO_OBJECT_STORAGE (ID_XML_SES_UPD_UD_KO_OBJECT_STORAGE NUMBER GENERATED BY DEFAULT AS IDENTITY NOT NULL, ID_DEC_BACKEND NUMBER NOT NULL, ID_SES_UPD_UNITA_DOC_KO NUMBER NOT NULL, NM_TENANT VARCHAR2(100 BYTE) NOT NULL, NM_BUCKET VARCHAR2(100 BYTE) NOT NULL, CD_KEY_FILE VARCHAR2(254 BYTE) NOT NULL, ID_STRUT NUMBER NOT NULL, CONSTRAINT PK_VRS_XML_SES_UPD_UD_KO_OBJECT_STORAGE PRIMARY KEY (ID_XML_SES_UPD_UD_KO_OBJECT_STORAGE));
COMMENT ON TABLE VRS_XML_SES_UPD_UD_KO_OBJECT_STORAGE IS 'Tabella di collegamento tra il dato della sessione fallita e l''object storage. Modellata come ARO_COMP_OBJECT_STORAGE';
COMMENT ON COLUMN VRS_XML_SES_UPD_UD_KO_OBJECT_STORAGE.ID_XML_SES_UPD_UD_KO_OBJECT_STORAGE IS 'PK autogenerata della tabella';
COMMENT ON COLUMN VRS_XML_SES_UPD_UD_KO_OBJECT_STORAGE.ID_DEC_BACKEND IS 'FK verso DEC_BACKEND sull''id del backend utilizzato (sicuramente di tipo OS)';
COMMENT ON COLUMN VRS_XML_SES_UPD_UD_KO_OBJECT_STORAGE.ID_SES_UPD_UNITA_DOC_KO IS 'FK verso VRS_SES_UPD_UNITA_DOC_KO sull''id del xml versato.Rappresenta la chiave logica della tabella';
COMMENT ON COLUMN VRS_XML_SES_UPD_UD_KO_OBJECT_STORAGE.NM_TENANT IS 'Tenant dell''OS a cui ci si collega (inutilizzato)';
COMMENT ON COLUMN VRS_XML_SES_UPD_UD_KO_OBJECT_STORAGE.NM_BUCKET IS 'Bucket su cui viene scritto il file zip';
COMMENT ON COLUMN VRS_XML_SES_UPD_UD_KO_OBJECT_STORAGE.CD_KEY_FILE IS 'Chiave univoca su cui viene scritto il file zip';

-- changeset root:1751897635013-1657
CREATE UNIQUE INDEX TMP_FIR_CERTIF_CA_UN ON TMP_FIR_CERTIF_CA(DL_DN_ISSUER_CERTIF_CA, NI_SERIAL_CERTIF_CA);

-- changeset root:1751897635013-1658
ALTER TABLE TMP_FIR_CERTIF_CA ADD CONSTRAINT TMP_FIR_CERTIF_CA_UN UNIQUE (DL_DN_ISSUER_CERTIF_CA, NI_SERIAL_CERTIF_CA) USING INDEX TMP_FIR_CERTIF_CA_UN;

-- changeset root:1751897635013-1659
CREATE UNIQUE INDEX UN_AA_REG ON DEC_AA_REGISTRO_UNITA_DOC(ID_REGISTRO_UNITA_DOC, AA_MIN_REGISTRO_UNITA_DOC);

-- changeset root:1751897635013-1660
ALTER TABLE DEC_AA_REGISTRO_UNITA_DOC ADD CONSTRAINT UN_AA_REG UNIQUE (ID_REGISTRO_UNITA_DOC, AA_MIN_REGISTRO_UNITA_DOC) USING INDEX UN_AA_REG;

-- changeset root:1751897635013-1661
CREATE UNIQUE INDEX UN_AA_TI_FASC ON DEC_AA_TIPO_FASCICOLO(ID_TIPO_FASCICOLO, AA_INI_TIPO_FASCICOLO);

-- changeset root:1751897635013-1662
ALTER TABLE DEC_AA_TIPO_FASCICOLO ADD CONSTRAINT UN_AA_TI_FASC UNIQUE (ID_TIPO_FASCICOLO, AA_INI_TIPO_FASCICOLO) USING INDEX UN_AA_TI_FASC;

-- changeset root:1751897635013-1663
CREATE UNIQUE INDEX UN_AA_UNI_DOC_REG ON MON_AA_UNITA_DOC_REGISTRO(ID_REGISTRO_UNITA_DOC, AA_UNITA_DOC_REGISTRO);

-- changeset root:1751897635013-1664
ALTER TABLE MON_AA_UNITA_DOC_REGISTRO ADD CONSTRAINT UN_AA_UNI_DOC_REG UNIQUE (ID_REGISTRO_UNITA_DOC, AA_UNITA_DOC_REGISTRO) USING INDEX UN_AA_UNI_DOC_REG;

-- changeset root:1751897635013-1665
CREATE UNIQUE INDEX UN_AA_VAL ON DEC_AA_VAL(AA_VAL);

-- changeset root:1751897635013-1666
ALTER TABLE DEC_AA_VAL ADD CONSTRAINT UN_AA_VAL UNIQUE (AA_VAL) USING INDEX UN_AA_VAL;

-- changeset root:1751897635013-1667
CREATE UNIQUE INDEX UN_ABIL_ORG ON IAM_ABIL_ORGANIZ(ID_USER_IAM, ID_ORGANIZ_APPLIC);

-- changeset root:1751897635013-1668
ALTER TABLE IAM_ABIL_ORGANIZ ADD CONSTRAINT UN_ABIL_ORG UNIQUE (ID_USER_IAM, ID_ORGANIZ_APPLIC) USING INDEX UN_ABIL_ORG;

-- changeset root:1751897635013-1669
CREATE UNIQUE INDEX UN_ABIL_TI_DATO ON IAM_ABIL_TIPO_DATO(ID_ABIL_ORGANIZ, NM_CLASSE_TIPO_DATO, ID_TIPO_DATO_APPLIC);

-- changeset root:1751897635013-1670
ALTER TABLE IAM_ABIL_TIPO_DATO ADD CONSTRAINT UN_ABIL_TI_DATO UNIQUE (ID_ABIL_ORGANIZ, NM_CLASSE_TIPO_DATO, ID_TIPO_DATO_APPLIC) USING INDEX UN_ABIL_TI_DATO;

-- changeset root:1751897635013-1671
CREATE UNIQUE INDEX UN_AIP_FASC_DAELAB ON FAS_AIP_FASCICOLO_DA_ELAB(ID_FASCICOLO, PG_CREAZIONE_DA_ELAB);

-- changeset root:1751897635013-1672
ALTER TABLE FAS_AIP_FASCICOLO_DA_ELAB ADD CONSTRAINT UN_AIP_FASC_DAELAB UNIQUE (ID_FASCICOLO, PG_CREAZIONE_DA_ELAB) USING INDEX UN_AIP_FASC_DAELAB;

-- changeset root:1751897635013-1673
CREATE UNIQUE INDEX UN_AMB ON ORG_AMBIENTE(NM_AMBIENTE);

-- changeset root:1751897635013-1674
ALTER TABLE ORG_AMBIENTE ADD CONSTRAINT UN_AMB UNIQUE (NM_AMBIENTE) USING INDEX UN_AMB;

-- changeset root:1751897635013-1675
CREATE UNIQUE INDEX UN_AMN_PART ON FAS_AMMIN_PARTEC(ID_FASCICOLO, TI_CODICE_AMMIN_PARTEC, CD_AMMIN_PARTEC);

-- changeset root:1751897635013-1676
ALTER TABLE FAS_AMMIN_PARTEC ADD CONSTRAINT UN_AMN_PART UNIQUE (ID_FASCICOLO, TI_CODICE_AMMIN_PARTEC, CD_AMMIN_PARTEC) USING INDEX UN_AMN_PART;

-- changeset root:1751897635013-1677
CREATE UNIQUE INDEX UN_APL ON APL_APPLIC(NM_APPLIC);

-- changeset root:1751897635013-1678
ALTER TABLE APL_APPLIC ADD CONSTRAINT UN_APL UNIQUE (NM_APPLIC) USING INDEX UN_APL;

-- changeset root:1751897635013-1679
CREATE UNIQUE INDEX UN_APP_COMP_VOL ON VOL_APPART_COMP_VOLUME(ID_APPART_DOC_VOLUME, ID_COMP_DOC);

-- changeset root:1751897635013-1680
ALTER TABLE VOL_APPART_COMP_VOLUME ADD CONSTRAINT UN_APP_COMP_VOL UNIQUE (ID_APPART_DOC_VOLUME, ID_COMP_DOC) USING INDEX UN_APP_COMP_VOL;

-- changeset root:1751897635013-1681
CREATE UNIQUE INDEX UN_APP_DOC_VOL ON VOL_APPART_DOC_VOLUME(ID_APPART_UNITA_DOC_VOLUME, ID_DOC);

-- changeset root:1751897635013-1682
ALTER TABLE VOL_APPART_DOC_VOLUME ADD CONSTRAINT UN_APP_DOC_VOL UNIQUE (ID_APPART_UNITA_DOC_VOLUME, ID_DOC) USING INDEX UN_APP_DOC_VOL;

-- changeset root:1751897635013-1683
CREATE UNIQUE INDEX UN_APP_FIR_VOL ON VOL_APPART_FIRMA_VOLUME(ID_APPART_COMP_VOLUME, ID_FIRMA_COMP);

-- changeset root:1751897635013-1684
ALTER TABLE VOL_APPART_FIRMA_VOLUME ADD CONSTRAINT UN_APP_FIR_VOL UNIQUE (ID_APPART_COMP_VOLUME, ID_FIRMA_COMP) USING INDEX UN_APP_FIR_VOL;

-- changeset root:1751897635013-1685
CREATE UNIQUE INDEX UN_APP_UNI_DOC_VOL ON VOL_APPART_UNITA_DOC_VOLUME(ID_VOLUME_CONSERV, ID_UNITA_DOC);

-- changeset root:1751897635013-1686
ALTER TABLE VOL_APPART_UNITA_DOC_VOLUME ADD CONSTRAINT UN_APP_UNI_DOC_VOL UNIQUE (ID_VOLUME_CONSERV, ID_UNITA_DOC) USING INDEX UN_APP_UNI_DOC_VOL;

-- changeset root:1751897635013-1687
CREATE UNIQUE INDEX UN_ARK_PATH ON VRS_ARK_PATH_DT_VERS(ID_PATH_DT_VERS, TI_ARK_PATH, DS_ARK);

-- changeset root:1751897635013-1688
ALTER TABLE VRS_ARK_PATH_DT_VERS ADD CONSTRAINT UN_ARK_PATH UNIQUE (ID_PATH_DT_VERS, TI_ARK_PATH, DS_ARK) USING INDEX UN_ARK_PATH;

-- changeset root:1751897635013-1689
CREATE UNIQUE INDEX UN_AUT_SERV ON IAM_AUTOR_SERV(ID_ABIL_ORGANIZ, NM_SERVIZIO_WEB);

-- changeset root:1751897635013-1690
ALTER TABLE IAM_AUTOR_SERV ADD CONSTRAINT UN_AUT_SERV UNIQUE (ID_ABIL_ORGANIZ, NM_SERVIZIO_WEB) USING INDEX UN_AUT_SERV;

-- changeset root:1751897635013-1691
CREATE UNIQUE INDEX UN_BUSTA_CRIT ON ARO_BUSTA_CRITTOG(ID_COMP_DOC, PG_BUSTA_CRITTOG);

-- changeset root:1751897635013-1692
ALTER TABLE ARO_BUSTA_CRITTOG ADD CONSTRAINT UN_BUSTA_CRIT UNIQUE (ID_COMP_DOC, PG_BUSTA_CRITTOG) USING INDEX UN_BUSTA_CRIT;

-- changeset root:1751897635013-1693
CREATE UNIQUE INDEX UN_CAT_ENTE ON ORG_CATEG_ENTE(CD_CATEG_ENTE);

-- changeset root:1751897635013-1694
ALTER TABLE ORG_CATEG_ENTE ADD CONSTRAINT UN_CAT_ENTE UNIQUE (CD_CATEG_ENTE) USING INDEX UN_CAT_ENTE;

-- changeset root:1751897635013-1695
CREATE UNIQUE INDEX UN_CAT_STRUT ON ORG_CATEG_STRUT(CD_CATEG_STRUT);

-- changeset root:1751897635013-1696
ALTER TABLE ORG_CATEG_STRUT ADD CONSTRAINT UN_CAT_STRUT UNIQUE (CD_CATEG_STRUT) USING INDEX UN_CAT_STRUT;

-- changeset root:1751897635013-1697
CREATE UNIQUE INDEX UN_CAT_TI_UNI_DOC ON DEC_CATEG_TIPO_UNITA_DOC(CD_CATEG_TIPO_UNITA_DOC);

-- changeset root:1751897635013-1698
ALTER TABLE DEC_CATEG_TIPO_UNITA_DOC ADD CONSTRAINT UN_CAT_TI_UNI_DOC UNIQUE (CD_CATEG_TIPO_UNITA_DOC) USING INDEX UN_CAT_TI_UNI_DOC;

-- changeset root:1751897635013-1699
CREATE UNIQUE INDEX UN_CA_CTR_COMP ON ARO_USO_CERTIF_CA_CONTR_COMP(ID_CONTR_FIRMA_COMP, ID_CERTIF_CA);

-- changeset root:1751897635013-1700
ALTER TABLE ARO_USO_CERTIF_CA_CONTR_COMP ADD CONSTRAINT UN_CA_CTR_COMP UNIQUE (ID_CONTR_FIRMA_COMP, ID_CERTIF_CA) USING INDEX UN_CA_CTR_COMP;

-- changeset root:1751897635013-1701
CREATE UNIQUE INDEX UN_CA_CTR_MRK ON ARO_USO_CERTIF_CA_CONTR_MARCA(ID_CONTR_MARCA_COMP, ID_CERTIF_CA);

-- changeset root:1751897635013-1702
ALTER TABLE ARO_USO_CERTIF_CA_CONTR_MARCA ADD CONSTRAINT UN_CA_CTR_MRK UNIQUE (ID_CONTR_MARCA_COMP, ID_CERTIF_CA) USING INDEX UN_CA_CTR_MRK;

-- changeset root:1751897635013-1703
CREATE UNIQUE INDEX UN_CERT_OCSP ON FIR_CERTIF_OCSP(ID_CERTIF_CA, NI_SERIAL_CERTIF_OCSP);

-- changeset root:1751897635013-1704
ALTER TABLE FIR_CERTIF_OCSP ADD CONSTRAINT UN_CER_OCSP UNIQUE (ID_CERTIF_CA, NI_SERIAL_CERTIF_OCSP) USING INDEX UN_CERT_OCSP;

-- changeset root:1751897635013-1705
CREATE UNIQUE INDEX UN_CLA_ERR_SACER ON DEC_CLASSE_ERR_SACER(TI_USO_ERR, CD_CLASSE_ERR);

-- changeset root:1751897635013-1706
ALTER TABLE DEC_CLASSE_ERR_SACER ADD CONSTRAINT UN_CLA_ERR_SACER UNIQUE (TI_USO_ERR, CD_CLASSE_ERR) USING INDEX UN_CLA_ERR_SACER;

-- changeset root:1751897635013-1707
CREATE UNIQUE INDEX UN_CNT_FASC ON MON_CONTA_FASCICOLI(ID_STRUT, DT_RIF_CONTA, ID_TIPO_FASCICOLO, AA_FASCICOLO, ID_USER_IAM);

-- changeset root:1751897635013-1708
ALTER TABLE MON_CONTA_FASCICOLI ADD CONSTRAINT UN_CNT_FASC UNIQUE (ID_STRUT, DT_RIF_CONTA, ID_TIPO_FASCICOLO, AA_FASCICOLO, ID_USER_IAM) USING INDEX UN_CNT_FASC;

-- changeset root:1751897635013-1709
CREATE UNIQUE INDEX UN_CNT_FASC_KO ON MON_CONTA_FASCICOLI_KO(ID_STRUT, DT_RIF_CONTA, TI_STATO_FASCICOLO_KO, ID_TIPO_FASCICOLO, AA_FASCICOLO);

-- changeset root:1751897635013-1710
ALTER TABLE MON_CONTA_FASCICOLI_KO ADD CONSTRAINT UN_CNT_FASC_KO UNIQUE (ID_STRUT, DT_RIF_CONTA, TI_STATO_FASCICOLO_KO, ID_TIPO_FASCICOLO, AA_FASCICOLO) USING INDEX UN_CNT_FASC_KO;

-- changeset root:1751897635013-1711
CREATE UNIQUE INDEX UN_CNT_SES_UPD_UD ON MON_CONTA_SES_UPD_UD(ID_KEY_TOTAL_UD, TI_STATO_UDP_UD, DT_RIF_CONTA);

-- changeset root:1751897635013-1712
ALTER TABLE MON_CONTA_SES_UPD_UD ADD CONSTRAINT UN_CNT_SES_UPD_UD UNIQUE (ID_KEY_TOTAL_UD, TI_STATO_UDP_UD, DT_RIF_CONTA) USING INDEX UN_CNT_SES_UPD_UD;

-- changeset root:1751897635013-1713
CREATE UNIQUE INDEX UN_CNT_SES_UPD_UD_KO ON MON_CONTA_SES_UPD_UD_KO(ID_KEY_TOTAL_UD_KO, TI_STATO_UDP_UD_KO, DT_RIF_CONTA);

-- changeset root:1751897635013-1714
ALTER TABLE MON_CONTA_SES_UPD_UD_KO ADD CONSTRAINT UN_CNT_SES_UPD_UD_KO UNIQUE (ID_KEY_TOTAL_UD_KO, TI_STATO_UDP_UD_KO, DT_RIF_CONTA) USING INDEX UN_CNT_SES_UPD_UD_KO;

-- changeset root:1751897635013-1715
CREATE UNIQUE INDEX UN_CNT_STATO_CONS ON MON_CONTA_BY_STATO_CONSERV(DT_RIF, ID_STRUT, AA_KEY_UNITA_DOC, ID_REGISTRO_UNITA_DOC, ID_TIPO_UNITA_DOC, ID_TIPO_DOC_PRINC);

-- changeset root:1751897635013-1716
ALTER TABLE MON_CONTA_BY_STATO_CONSERV ADD CONSTRAINT UN_CNT_STATO_CONS UNIQUE (DT_RIF, ID_STRUT, AA_KEY_UNITA_DOC, ID_REGISTRO_UNITA_DOC, ID_TIPO_UNITA_DOC, ID_TIPO_DOC_PRINC) USING INDEX UN_CNT_STATO_CONS;

-- changeset root:1751897635013-1717
CREATE UNIQUE INDEX UN_CNT_UD_DOC_COMP ON MON_CONTA_UD_DOC_COMP(DT_RIF_CONTA, ID_STRUT, ID_SUB_STRUT, AA_KEY_UNITA_DOC, ID_REGISTRO_UNITA_DOC, ID_TIPO_UNITA_DOC, ID_TIPO_DOC_PRINC);

-- changeset root:1751897635013-1718
ALTER TABLE MON_CONTA_UD_DOC_COMP ADD CONSTRAINT UN_CNT_UD_DOC_COMP UNIQUE (DT_RIF_CONTA, ID_STRUT, ID_SUB_STRUT, AA_KEY_UNITA_DOC, ID_REGISTRO_UNITA_DOC, ID_TIPO_UNITA_DOC, ID_TIPO_DOC_PRINC) USING INDEX UN_CNT_UD_DOC_COMP;

-- changeset root:1751897635013-1719
CREATE UNIQUE INDEX UN_CNT_UD_DOC_COMP_RO ON MON_CONTA_UD_DOC_COMP_READ_ONLY(DT_RIF_CONTA, ID_STRUT, ID_SUB_STRUT, AA_KEY_UNITA_DOC, ID_REGISTRO_UNITA_DOC, ID_TIPO_UNITA_DOC, ID_TIPO_DOC_PRINC);

-- changeset root:1751897635013-1720
ALTER TABLE MON_CONTA_UD_DOC_COMP_READ_ONLY ADD CONSTRAINT UN_CNT_UD_DOC_COMP_RO UNIQUE (DT_RIF_CONTA, ID_STRUT, ID_SUB_STRUT, AA_KEY_UNITA_DOC, ID_REGISTRO_UNITA_DOC, ID_TIPO_UNITA_DOC, ID_TIPO_DOC_PRINC) USING INDEX UN_CNT_UD_DOC_COMP_RO;

-- changeset root:1751897635013-1721
CREATE UNIQUE INDEX UN_COMP ON TMP_VERIF_COMP_COPIATO(CD_SUB_PARTITION, ID_COMP_DOC, CD_VERSO_DIFF);

-- changeset root:1751897635013-1722
ALTER TABLE TMP_VERIF_COMP_COPIATO ADD CONSTRAINT UN_COMP UNIQUE (CD_SUB_PARTITION, ID_COMP_DOC, CD_VERSO_DIFF) USING INDEX UN_COMP;

-- changeset root:1751897635013-1723
CREATE UNIQUE INDEX UN_COMP_DOC ON ARO_COMP_DOC(ID_STRUT_DOC, NI_ORD_COMP_DOC);

-- changeset root:1751897635013-1724
ALTER TABLE ARO_COMP_DOC ADD CONSTRAINT UN_COMP_DOC UNIQUE (ID_STRUT_DOC, NI_ORD_COMP_DOC) USING INDEX UN_COMP_DOC;

-- changeset root:1751897635013-1725
CREATE UNIQUE INDEX UN_COMP_FIR_REPORT ON FIR_REPORT(ID_COMP_DOC);

-- changeset root:1751897635013-1726
ALTER TABLE FIR_REPORT ADD CONSTRAINT UN_COMP_FIR_REPORT UNIQUE (ID_COMP_DOC) USING INDEX UN_COMP_FIR_REPORT;

-- changeset root:1751897635013-1727
CREATE UNIQUE INDEX UN_COMP_HASH_CALC ON ARO_COMP_HASH_CALC(ID_COMP_DOC, DS_ALGO_HASH_FILE);

-- changeset root:1751897635013-1728
ALTER TABLE ARO_COMP_HASH_CALC ADD CONSTRAINT UN_COMP_HASH_CALC UNIQUE (ID_COMP_DOC, DS_ALGO_HASH_FILE) USING INDEX UN_COMP_HASH_CALC;

-- changeset root:1751897635013-1729
CREATE UNIQUE INDEX UN_COMP_IX_AIP_DA_ELAB ON ARO_COMP_INDICE_AIP_DA_ELAB(ID_INDICE_AIP_DA_ELAB, ID_COMP_DOC);

-- changeset root:1751897635013-1730
ALTER TABLE ARO_COMP_INDICE_AIP_DA_ELAB ADD CONSTRAINT UN_COMP_IX_AIP_DA_ELAB UNIQUE (ID_INDICE_AIP_DA_ELAB, ID_COMP_DOC) USING INDEX UN_COMP_IX_AIP_DA_ELAB;

-- changeset root:1751897635013-1731
CREATE UNIQUE INDEX UN_COMP_OBJ_STO ON ARO_COMP_OBJECT_STORAGE(ID_COMP_DOC);

-- changeset root:1751897635013-1732
ALTER TABLE ARO_COMP_OBJECT_STORAGE ADD CONSTRAINT UN_COMP_OBJ_STO UNIQUE (ID_COMP_DOC) USING INDEX UN_COMP_OBJ_STO;

-- changeset root:1751897635013-1733
CREATE UNIQUE INDEX UN_COMP_URN_CALC ON ARO_COMP_URN_CALC(ID_COMP_DOC, TI_URN);

-- changeset root:1751897635013-1734
ALTER TABLE ARO_COMP_URN_CALC ADD CONSTRAINT UN_COMP_URN_CALC UNIQUE (ID_COMP_DOC, TI_URN) USING INDEX UN_COMP_URN_CALC;

-- changeset root:1751897635013-1735
CREATE UNIQUE INDEX UN_COMP_VER_IX_AIP_UD ON ARO_COMP_VER_INDICE_AIP_UD(ID_VER_INDICE_AIP, ID_COMP_DOC);

-- changeset root:1751897635013-1736
ALTER TABLE ARO_COMP_VER_INDICE_AIP_UD ADD CONSTRAINT UN_COMP_VER_IX_AIP_UD UNIQUE (ID_VER_INDICE_AIP, ID_COMP_DOC) USING INDEX UN_COMP_VER_IX_AIP_UD;

-- changeset root:1751897635013-1737
CREATE UNIQUE INDEX UN_CONS_VER_SER ON SER_CONSIST_VER_SERIE(ID_VER_SERIE);

-- changeset root:1751897635013-1738
ALTER TABLE SER_CONSIST_VER_SERIE ADD CONSTRAINT UN_CONS_VER_SER UNIQUE (ID_VER_SERIE) USING INDEX UN_CONS_VER_SER;

-- changeset root:1751897635013-1739
CREATE UNIQUE INDEX UN_CONTEN_VER_AIP_FASC ON FAS_CONTEN_VER_AIP_FASCICOLO(ID_VER_AIP_FASCICOLO, NM_CONTEN);

-- changeset root:1751897635013-1740
ALTER TABLE FAS_CONTEN_VER_AIP_FASCICOLO ADD CONSTRAINT UN_CONTEN_VER_AIP_FASC UNIQUE (ID_VER_AIP_FASCICOLO, NM_CONTEN) USING INDEX UN_CONTEN_VER_AIP_FASC;

-- changeset root:1751897635013-1741
CREATE UNIQUE INDEX UN_CONTEN_VER_SER ON SER_CONTENUTO_VER_SERIE(ID_VER_SERIE, TI_CONTENUTO_VER_SERIE);

-- changeset root:1751897635013-1742
ALTER TABLE SER_CONTENUTO_VER_SERIE ADD CONSTRAINT UN_CONTEN_VER_SER UNIQUE (ID_VER_SERIE, TI_CONTENUTO_VER_SERIE) USING INDEX UN_CONTEN_VER_SER;

-- changeset root:1751897635013-1743
CREATE UNIQUE INDEX UN_CONTFIR_FIR ON ARO_CONTROFIRMA_FIRMA(ID_FIRMA_FIGLIO, ID_FIRMA_PADRE);

-- changeset root:1751897635013-1744
ALTER TABLE ARO_CONTROFIRMA_FIRMA ADD CONSTRAINT UN_CONTFIR_FIR UNIQUE (ID_FIRMA_FIGLIO, ID_FIRMA_PADRE) USING INDEX UN_CONTFIR_FIR;

-- changeset root:1751897635013-1745
CREATE UNIQUE INDEX UN_CONT_COMP ON ARO_CONTENUTO_COMP(ID_COMP_STRUT_DOC);

-- changeset root:1751897635013-1746
ALTER TABLE ARO_CONTENUTO_COMP ADD CONSTRAINT UN_CONT_COMP UNIQUE (ID_COMP_STRUT_DOC) USING INDEX UN_CONT_COMP;

-- changeset root:1751897635013-1747
CREATE UNIQUE INDEX UN_CONT_FILE_VRS ON VRS_CONTENUTO_FILE_DA_DROPPARE(ID_FILE_SESSIONE);

-- changeset root:1751897635013-1748
ALTER TABLE VRS_CONTENUTO_FILE_DA_DROPPARE ADD CONSTRAINT UN_CONT_FILE_VRS UNIQUE (ID_FILE_SESSIONE) USING INDEX UN_CONT_FILE_VRS;

-- changeset root:1751897635013-1749
CREATE UNIQUE INDEX UN_CONT_FILE_VRS_KO ON VRS_CONTENUTO_FILE_KO(ID_FILE_SESSIONE_KO);

-- changeset root:1751897635013-1750
ALTER TABLE VRS_CONTENUTO_FILE_KO ADD CONSTRAINT UN_CONT_FILE_VRS_KO UNIQUE (ID_FILE_SESSIONE_KO) USING INDEX UN_CONT_FILE_VRS_KO;

-- changeset root:1751897635013-1751
CREATE UNIQUE INDEX UN_CPO_ATTB_FASC_VETT ON DEC_CAMPO_ATTRIB_FASC_VETTOR(ID_MODELLO_XSD_ATTRIB_FASC, NM_CAMPO);

-- changeset root:1751897635013-1752
ALTER TABLE DEC_CAMPO_ATTRIB_FASC_VETTOR ADD CONSTRAINT UN_CPO_ATTB_FASC_VETT UNIQUE (ID_MODELLO_XSD_ATTRIB_FASC, NM_CAMPO) USING INDEX UN_CPO_ATTB_FASC_VETT;

-- changeset root:1751897635013-1753
CREATE UNIQUE INDEX UN_CPO_INP_UD_NM ON DEC_CAMPO_INP_UD(ID_TIPO_SERIE, NM_CAMPO, TI_CAMPO);

-- changeset root:1751897635013-1754
ALTER TABLE DEC_CAMPO_INP_UD ADD CONSTRAINT UN_CPO_INP_UD_NM UNIQUE (ID_TIPO_SERIE, NM_CAMPO, TI_CAMPO) USING INDEX UN_CPO_INP_UD_NM;

-- changeset root:1751897635013-1755
CREATE UNIQUE INDEX UN_CPO_INP_UD_PG ON DEC_CAMPO_INP_UD(ID_TIPO_SERIE, PG_ORD_CAMPO);

-- changeset root:1751897635013-1756
ALTER TABLE DEC_CAMPO_INP_UD ADD CONSTRAINT UN_CPO_INP_UD_PG UNIQUE (ID_TIPO_SERIE, PG_ORD_CAMPO) USING INDEX UN_CPO_INP_UD_PG;

-- changeset root:1751897635013-1757
CREATE UNIQUE INDEX UN_CPO_SEL_UD ON DEC_CAMPO_OUT_SEL_UD(ID_OUT_SEL_UD, NM_CAMPO, TI_CAMPO);

-- changeset root:1751897635013-1758
ALTER TABLE DEC_CAMPO_OUT_SEL_UD ADD CONSTRAINT UN_CPO_SEL_UD UNIQUE (ID_OUT_SEL_UD, NM_CAMPO, TI_CAMPO) USING INDEX UN_CPO_SEL_UD;

-- changeset root:1751897635013-1759
CREATE UNIQUE INDEX UN_CPO_VAL_SUB_STRUT ON ORG_CAMPO_VAL_SUB_STRUT(ID_REGOLA_VAL_SUB_STRUT, TI_CAMPO, NM_CAMPO);

-- changeset root:1751897635013-1760
ALTER TABLE ORG_CAMPO_VAL_SUB_STRUT ADD CONSTRAINT UN_CPO_VAL_SUB_STRUT UNIQUE (ID_REGOLA_VAL_SUB_STRUT, TI_CAMPO, NM_CAMPO) USING INDEX UN_CPO_VAL_SUB_STRUT;

-- changeset root:1751897635013-1761
CREATE UNIQUE INDEX UN_CRIT_RAG_FASC ON DEC_CRITERIO_RAGGR_FASC(ID_STRUT, NM_CRITERIO_RAGGR);

-- changeset root:1751897635013-1762
ALTER TABLE DEC_CRITERIO_RAGGR_FASC ADD CONSTRAINT UN_CRIT_RAG_FASC UNIQUE (ID_STRUT, NM_CRITERIO_RAGGR) USING INDEX UN_CRIT_RAG_FASC;

-- changeset root:1751897635013-1763
CREATE UNIQUE INDEX UN_CRI_RAG ON DEC_CRITERIO_RAGGR(ID_STRUT, NM_CRITERIO_RAGGR);

-- changeset root:1751897635013-1764
ALTER TABLE DEC_CRITERIO_RAGGR ADD CONSTRAINT UN_CRI_RAG UNIQUE (ID_STRUT, NM_CRITERIO_RAGGR) USING INDEX UN_CRI_RAG;

-- changeset root:1751897635013-1765
CREATE UNIQUE INDEX UN_CRL_DEDUP ON TMP_FIR_CRL(ID_CERTIF_CA, NI_SERIAL_CRL, DT_INI_CRL, DT_SCAD_CRL);

-- changeset root:1751897635013-1766
ALTER TABLE TMP_FIR_CRL ADD CONSTRAINT UN_CRL_DEDUP UNIQUE (ID_CERTIF_CA, NI_SERIAL_CRL, DT_INI_CRL, DT_SCAD_CRL) USING INDEX UN_CRL_DEDUP;

-- changeset root:1751897635013-1767
CREATE UNIQUE INDEX UN_CTRL_WS ON DEC_CONTROLLO_WS(CD_CONTROLLO_WS);

-- changeset root:1751897635013-1768
ALTER TABLE DEC_CONTROLLO_WS ADD CONSTRAINT UN_CTRL_WS UNIQUE (CD_CONTROLLO_WS) USING INDEX UN_CTRL_WS;

-- changeset root:1751897635013-1769
CREATE UNIQUE INDEX UN_CTR_FIR_COMP ON ARO_CONTR_FIRMA_COMP(ID_FIRMA_COMP, TI_CONTR);

-- changeset root:1751897635013-1770
ALTER TABLE ARO_CONTR_FIRMA_COMP ADD CONSTRAINT UN_CTR_FIR_COMP UNIQUE (ID_FIRMA_COMP, TI_CONTR) USING INDEX UN_CTR_FIR_COMP;

-- changeset root:1751897635013-1771
CREATE UNIQUE INDEX UN_CTR_MRK_COMP ON ARO_CONTR_MARCA_COMP(ID_MARCA_COMP, TI_CONTR);

-- changeset root:1751897635013-1772
ALTER TABLE ARO_CONTR_MARCA_COMP ADD CONSTRAINT UN_CTR_MRK_COMP UNIQUE (ID_MARCA_COMP, TI_CONTR) USING INDEX UN_CTR_MRK_COMP;

-- changeset root:1751897635013-1773
CREATE UNIQUE INDEX UN_CTR_VER_FIR_DT_VERS ON ARO_CONTR_VERIF_FIRMA_DT_VERS(ID_VERIF_FIRMA_DT_VERS, TI_CONTR);

-- changeset root:1751897635013-1774
ALTER TABLE ARO_CONTR_VERIF_FIRMA_DT_VERS ADD CONSTRAINT UN_CTR_VER_FIR_DT_VERS UNIQUE (ID_VERIF_FIRMA_DT_VERS, TI_CONTR) USING INDEX UN_CTR_VER_FIR_DT_VERS;

-- changeset root:1751897635013-1775
CREATE UNIQUE INDEX UN_CTR_VER_FIR_VOL ON VOL_CONTR_VERIF_FIRMA_VOLUME(ID_VERIF_FIRMA_VOLUME, TI_CONTR);

-- changeset root:1751897635013-1776
ALTER TABLE VOL_CONTR_VERIF_FIRMA_VOLUME ADD CONSTRAINT UN_CTR_VER_FIR_VOL UNIQUE (ID_VERIF_FIRMA_VOLUME, TI_CONTR) USING INDEX UN_CTR_VER_FIR_VOL;

-- changeset root:1751897635013-1777
CREATE UNIQUE INDEX UN_DATI_SES_OBJECT_STORAGE ON VRS_XML_DATI_SES_OBJECT_STORAGE(ID_DATI_SESSIONE_VERS);

-- changeset root:1751897635013-1778
ALTER TABLE VRS_XML_DATI_SES_OBJECT_STORAGE ADD CONSTRAINT UN_DATI_SES_OBJECT_STORAGE UNIQUE (ID_DATI_SESSIONE_VERS) USING INDEX UN_DATI_SES_OBJECT_STORAGE;

-- changeset root:1751897635013-1779
CREATE UNIQUE INDEX UN_DAT_SES_VRS ON VRS_DATI_SESSIONE_VERS(ID_SESSIONE_VERS, PG_DATI_SESSIONE_VERS);

-- changeset root:1751897635013-1780
ALTER TABLE VRS_DATI_SESSIONE_VERS ADD CONSTRAINT UN_DAT_SES_VRS UNIQUE (ID_SESSIONE_VERS, PG_DATI_SESSIONE_VERS) USING INDEX UN_DAT_SES_VRS;

-- changeset root:1751897635013-1781
CREATE UNIQUE INDEX UN_DEC_CONFIG_OBJECT_STORAGE ON DEC_CONFIG_OBJECT_STORAGE(ID_DEC_BACKEND, NM_CONFIG_OBJECT_STORAGE, TI_USO_CONFIG_OBJECT_STORAGE);

-- changeset root:1751897635013-1782
ALTER TABLE DEC_CONFIG_OBJECT_STORAGE ADD CONSTRAINT UN_DEC_CONFIG_OBJECT_STORAGE UNIQUE (ID_DEC_BACKEND, NM_CONFIG_OBJECT_STORAGE, TI_USO_CONFIG_OBJECT_STORAGE) USING INDEX UN_DEC_CONFIG_OBJECT_STORAGE;

-- changeset root:1751897635013-1783
CREATE UNIQUE INDEX UN_DOC ON ARO_DOC(ID_UNITA_DOC, TI_DOC, PG_DOC);

-- changeset root:1751897635013-1784
ALTER TABLE ARO_DOC ADD CONSTRAINT UN_DOC UNIQUE (ID_UNITA_DOC, TI_DOC, PG_DOC) USING INDEX UN_DOC;

-- changeset root:1751897635013-1785
CREATE UNIQUE INDEX UN_DOC_AGG_DAELB_ELE ON ELV_DOC_AGG_DA_ELAB_ELENCO(ID_DOC);

-- changeset root:1751897635013-1786
ALTER TABLE ELV_DOC_AGG_DA_ELAB_ELENCO ADD CONSTRAINT UN_DOC_AGG_DAELB_ELE UNIQUE (ID_DOC) USING INDEX UN_DOC_AGG_DAELB_ELE;

-- changeset root:1751897635013-1787
CREATE UNIQUE INDEX UN_DOC_ANNUL ON TMP_ARO_DOC_ANNUL(ID_STRUT, CD_REGISTRO_KEY_UNITA_DOC, AA_KEY_UNITA_DOC, CD_KEY_UNITA_DOC, CD_KEY_DOC_VERS);

-- changeset root:1751897635013-1788
ALTER TABLE TMP_ARO_DOC_ANNUL ADD CONSTRAINT UN_DOC_ANNUL UNIQUE (ID_STRUT, CD_REGISTRO_KEY_UNITA_DOC, AA_KEY_UNITA_DOC, CD_KEY_UNITA_DOC, CD_KEY_DOC_VERS) USING INDEX UN_DOC_ANNUL;

-- changeset root:1751897635013-1789
CREATE UNIQUE INDEX UN_DOC_ANNUL_DA_ELAB ON TMP_ARO_DOC_ANNUL_DA_ELAB(ID_DOC);

-- changeset root:1751897635013-1790
ALTER TABLE TMP_ARO_DOC_ANNUL_DA_ELAB ADD CONSTRAINT UN_DOC_ANNUL_DA_ELAB UNIQUE (ID_DOC) USING INDEX UN_DOC_ANNUL_DA_ELAB;

-- changeset root:1751897635013-1791
CREATE UNIQUE INDEX UN_DOC_KEY ON ARO_DOC(ID_UNITA_DOC, CD_KEY_DOC_VERS, DT_ANNUL);

-- changeset root:1751897635013-1792
ALTER TABLE ARO_DOC ADD CONSTRAINT UN_DOC_KEY UNIQUE (ID_UNITA_DOC, CD_KEY_DOC_VERS, DT_ANNUL) USING INDEX UN_DOC_KEY;

-- changeset root:1751897635013-1793
CREATE INDEX IDX_UN_DOC_NI ON ARO_DOC(ID_UNITA_DOC, NI_ORD_DOC);

-- changeset root:1751897635013-1794
ALTER TABLE ARO_DOC ADD CONSTRAINT UN_DOC_NI UNIQUE (ID_UNITA_DOC, NI_ORD_DOC) USING INDEX IDX_UN_DOC_NI ENABLE NOVALIDATE;

-- changeset root:1751897635013-1795
CREATE UNIQUE INDEX UN_DOC_NOVERS ON VRS_DOC_NON_VERS(ID_STRUT, CD_REGISTRO_KEY_UNITA_DOC, AA_KEY_UNITA_DOC, CD_KEY_UNITA_DOC, CD_KEY_DOC_VERS);

-- changeset root:1751897635013-1796
ALTER TABLE VRS_DOC_NON_VERS ADD CONSTRAINT UN_DOC_NOVERS UNIQUE (ID_STRUT, CD_REGISTRO_KEY_UNITA_DOC, AA_KEY_UNITA_DOC, CD_KEY_UNITA_DOC, CD_KEY_DOC_VERS) USING INDEX UN_DOC_NOVERS;

-- changeset root:1751897635013-1797
CREATE UNIQUE INDEX UN_DT_SCHED ON TPI_DT_SCHED(DT_SCHED);

-- changeset root:1751897635013-1798
ALTER TABLE TPI_DT_SCHED ADD CONSTRAINT UN_DT_SCHED UNIQUE (DT_SCHED) USING INDEX UN_DT_SCHED;

-- changeset root:1751897635013-1799
CREATE UNIQUE INDEX UN_DT_VERS ON VRS_DT_VERS(DT_VERS);

-- changeset root:1751897635013-1800
ALTER TABLE VRS_DT_VERS ADD CONSTRAINT UN_DT_VERS UNIQUE (DT_VERS) USING INDEX UN_DT_VERS;

-- changeset root:1751897635013-1801
CREATE UNIQUE INDEX UN_DT_VERS_REC ON REC_DT_VERS_RECUP(ID_SESSIONE_RECUP, DT_VERS);

-- changeset root:1751897635013-1802
ALTER TABLE REC_DT_VERS_RECUP ADD CONSTRAINT UN_DT_VERS_REC UNIQUE (ID_SESSIONE_RECUP, DT_VERS) USING INDEX UN_DT_VERS_REC;

-- changeset root:1751897635013-1803
CREATE UNIQUE INDEX UN_ELE_FASC_SES_FIR ON HSM_ELENCO_FASC_SES_FIRMA(ID_SESSIONE_FIRMA, ID_ELENCO_VERS_FASC);

-- changeset root:1751897635013-1804
ALTER TABLE HSM_ELENCO_FASC_SES_FIRMA ADD CONSTRAINT UN_ELE_FASC_SES_FIR UNIQUE (ID_SESSIONE_FIRMA, ID_ELENCO_VERS_FASC) USING INDEX UN_ELE_FASC_SES_FIR;

-- changeset root:1751897635013-1805
CREATE UNIQUE INDEX UN_ELE_SES_FIR ON HSM_ELENCO_SESSIONE_FIRMA(ID_SESSIONE_FIRMA, ID_ELENCO_VERS);

-- changeset root:1751897635013-1806
ALTER TABLE HSM_ELENCO_SESSIONE_FIRMA ADD CONSTRAINT UN_ELE_SES_FIR UNIQUE (ID_SESSIONE_FIRMA, ID_ELENCO_VERS) USING INDEX UN_ELE_SES_FIR;

-- changeset root:1751897635013-1807
CREATE UNIQUE INDEX UN_ELE_VRS ON ELV_ELENCO_VERS(ID_STRUT, NM_ELENCO);

-- changeset root:1751897635013-1808
ALTER TABLE ELV_ELENCO_VERS ADD CONSTRAINT UN_ELE_VRS UNIQUE (ID_STRUT, NM_ELENCO) USING INDEX UN_ELE_VRS;

-- changeset root:1751897635013-1809
CREATE UNIQUE INDEX UN_ELE_VRS_DAELB ON ELV_ELENCO_VERS_DA_ELAB(ID_ELENCO_VERS);

-- changeset root:1751897635013-1810
ALTER TABLE ELV_ELENCO_VERS_DA_ELAB ADD CONSTRAINT UN_ELE_VRS_DAELB UNIQUE (ID_ELENCO_VERS) USING INDEX UN_ELE_VRS_DAELB;

-- changeset root:1751897635013-1811
CREATE UNIQUE INDEX UN_ELE_VRS_FASC_ANN ON ELV_ELENCO_VERS_FASC_ANNUL(ID_ELENCO_VERS_FASC, DS_URN_FASCICOLO_ANNUL);

-- changeset root:1751897635013-1812
ALTER TABLE ELV_ELENCO_VERS_FASC_ANNUL ADD CONSTRAINT UN_ELE_VRS_FASC_ANN UNIQUE (ID_ELENCO_VERS_FASC, DS_URN_FASCICOLO_ANNUL) USING INDEX UN_ELE_VRS_FASC_ANN;

-- changeset root:1751897635013-1813
CREATE UNIQUE INDEX UN_ELE_VRS_FASC_DAELB ON ELV_ELENCO_VERS_FASC_DA_ELAB(ID_ELENCO_VERS_FASC);

-- changeset root:1751897635013-1814
ALTER TABLE ELV_ELENCO_VERS_FASC_DA_ELAB ADD CONSTRAINT UN_ELE_VRS_FASC_DAELB UNIQUE (ID_ELENCO_VERS_FASC) USING INDEX UN_ELE_VRS_FASC_DAELB;

-- changeset root:1751897635013-1815
CREATE UNIQUE INDEX UN_ELE_VRS_UD_ANN ON ELV_ELENCO_VERS_UD_ANNUL(ID_ELENCO_VERS, DS_URN_UNITA_DOC_ANNUL);

-- changeset root:1751897635013-1816
ALTER TABLE ELV_ELENCO_VERS_UD_ANNUL ADD CONSTRAINT UN_ELE_VRS_UD_ANN UNIQUE (ID_ELENCO_VERS, DS_URN_UNITA_DOC_ANNUL) USING INDEX UN_ELE_VRS_UD_ANN;

-- changeset root:1751897635013-1817
CREATE UNIQUE INDEX UN_ENT ON ORG_ENTE(NM_ENTE);

-- changeset root:1751897635013-1818
ALTER TABLE ORG_ENTE ADD CONSTRAINT UN_ENT UNIQUE (NM_ENTE) USING INDEX UN_ENT;

-- changeset root:1751897635013-1819
CREATE UNIQUE INDEX UN_ERR_AA_REG ON DEC_ERR_AA_REGISTRO_UNITA_DOC(ID_AA_REGISTRO_UNITA_DOC, AA_REGISTRO_UNITA_DOC);

-- changeset root:1751897635013-1820
ALTER TABLE DEC_ERR_AA_REGISTRO_UNITA_DOC ADD CONSTRAINT UN_ERR_AA_REG UNIQUE (ID_AA_REGISTRO_UNITA_DOC, AA_REGISTRO_UNITA_DOC) USING INDEX UN_ERR_AA_REG;

-- changeset root:1751897635013-1821
CREATE UNIQUE INDEX UN_ERR_AA_TI_FASC ON DEC_ERR_AA_TIPO_FASCICOLO(AA_FASCICOLO, ID_AA_TIPO_FASCICOLO);

-- changeset root:1751897635013-1822
ALTER TABLE DEC_ERR_AA_TIPO_FASCICOLO ADD CONSTRAINT UN_ERR_AA_TI_FASC UNIQUE (AA_FASCICOLO, ID_AA_TIPO_FASCICOLO) USING INDEX UN_ERR_AA_TI_FASC;

-- changeset root:1751897635013-1823
CREATE UNIQUE INDEX UN_ERR_ARK ON TPI_ERR_ARK(ID_SCHED_JOB, NI_ERR_ARK);

-- changeset root:1751897635013-1824
ALTER TABLE TPI_ERR_ARK ADD CONSTRAINT UN_ERR_ARK UNIQUE (ID_SCHED_JOB, NI_ERR_ARK) USING INDEX UN_ERR_ARK;

-- changeset root:1751897635013-1825
CREATE UNIQUE INDEX UN_ERR_CONTEN_SERIE ON SER_ERR_CONTENUTO_VER_SERIE(ID_CONTENUTO_VER_SERIE, PG_ERR);

-- changeset root:1751897635013-1826
ALTER TABLE SER_ERR_CONTENUTO_VER_SERIE ADD CONSTRAINT UN_ERR_CONTEN_SERIE UNIQUE (ID_CONTENUTO_VER_SERIE, PG_ERR) USING INDEX UN_ERR_CONTEN_SERIE;

-- changeset root:1751897635013-1827
CREATE UNIQUE INDEX UN_ERR_RICH_ANN_VRS ON ARO_ERR_RICH_ANNUL_VERS(ID_ITEM_RICH_ANNUL_VERS, PG_ERR);

-- changeset root:1751897635013-1828
ALTER TABLE ARO_ERR_RICH_ANNUL_VERS ADD CONSTRAINT UN_ERR_RICH_ANN_VRS UNIQUE (ID_ITEM_RICH_ANNUL_VERS, PG_ERR) USING INDEX UN_ERR_RICH_ANN_VRS;

-- changeset root:1751897635013-1829
CREATE UNIQUE INDEX UN_ERR_SACER ON DEC_ERR_SACER(CD_ERR);

-- changeset root:1751897635013-1830
ALTER TABLE DEC_ERR_SACER ADD CONSTRAINT UN_ERR_SACER UNIQUE (CD_ERR) USING INDEX UN_ERR_SACER;

-- changeset root:1751897635013-1831
CREATE UNIQUE INDEX UN_ERR_SES_FASC_KO ON VRS_ERR_SES_FASCICOLO_KO(ID_SES_FASCICOLO_KO, PG_ERR);

-- changeset root:1751897635013-1832
ALTER TABLE VRS_ERR_SES_FASCICOLO_KO ADD CONSTRAINT UN_ERR_SES_FASC_KO UNIQUE (ID_SES_FASCICOLO_KO, PG_ERR) USING INDEX UN_ERR_SES_FASC_KO;

-- changeset root:1751897635013-1833
CREATE UNIQUE INDEX UN_ERR_SES_UPD_UD_ERR ON VRS_ERR_SES_UPD_UNITA_DOC_ERR(ID_SES_UPD_UNITA_DOC_ERR, PG_ERR);

-- changeset root:1751897635013-1834
ALTER TABLE VRS_ERR_SES_UPD_UNITA_DOC_ERR ADD CONSTRAINT UN_ERR_SES_UPD_UD_ERR UNIQUE (ID_SES_UPD_UNITA_DOC_ERR, PG_ERR) USING INDEX UN_ERR_SES_UPD_UD_ERR;

-- changeset root:1751897635013-1835
CREATE UNIQUE INDEX UN_ERR_SES_UPD_UD_KO ON VRS_ERR_SES_UPD_UNITA_DOC_KO(ID_SES_UPD_UNITA_DOC_KO, PG_ERR);

-- changeset root:1751897635013-1836
ALTER TABLE VRS_ERR_SES_UPD_UNITA_DOC_KO ADD CONSTRAINT UN_ERR_SES_UPD_UD_KO UNIQUE (ID_SES_UPD_UNITA_DOC_KO, PG_ERR) USING INDEX UN_ERR_SES_UPD_UD_KO;

-- changeset root:1751897635013-1837
CREATE UNIQUE INDEX UN_ERR_SES_VRS ON VRS_ERR_SESSIONE_VERS(ID_DATI_SESSIONE_VERS, PG_ERR_SESSIONE_VERS);

-- changeset root:1751897635013-1838
ALTER TABLE VRS_ERR_SESSIONE_VERS ADD CONSTRAINT UN_ERR_SES_VRS UNIQUE (ID_DATI_SESSIONE_VERS, PG_ERR_SESSIONE_VERS) USING INDEX UN_ERR_SES_VRS;

-- changeset root:1751897635013-1839
CREATE UNIQUE INDEX UN_EST_FIL ON DEC_ESTENSIONE_FILE(CD_ESTENSIONE_FILE);

-- changeset root:1751897635013-1840
ALTER TABLE DEC_ESTENSIONE_FILE ADD CONSTRAINT UN_EST_FIL UNIQUE (CD_ESTENSIONE_FILE) USING INDEX UN_EST_FIL;

-- changeset root:1751897635013-1841
CREATE UNIQUE INDEX UN_FASC ON FAS_FASCICOLO(ID_STRUT, AA_FASCICOLO, CD_KEY_FASCICOLO, DT_ANNULL);

-- changeset root:1751897635013-1842
ALTER TABLE FAS_FASCICOLO ADD CONSTRAINT UN_FASC UNIQUE (ID_STRUT, AA_FASCICOLO, CD_KEY_FASCICOLO, DT_ANNULL) USING INDEX UN_FASC;

-- changeset root:1751897635013-1843
CREATE UNIQUE INDEX UN_FASC_DAELB_ELE ON ELV_FASC_DA_ELAB_ELENCO(ID_FASCICOLO);

-- changeset root:1751897635013-1844
ALTER TABLE ELV_FASC_DA_ELAB_ELENCO ADD CONSTRAINT UN_FASC_DAELB_ELE UNIQUE (ID_FASCICOLO) USING INDEX UN_FASC_DAELB_ELE;

-- changeset root:1751897635013-1845
CREATE UNIQUE INDEX UN_FASC_KO ON VRS_FASCICOLO_KO(ID_STRUT, AA_FASCICOLO, CD_KEY_FASCICOLO);

-- changeset root:1751897635013-1846
ALTER TABLE VRS_FASCICOLO_KO ADD CONSTRAINT UN_FASC_KO UNIQUE (ID_STRUT, AA_FASCICOLO, CD_KEY_FASCICOLO) USING INDEX UN_FASC_KO;

-- changeset root:1751897635013-1847
CREATE UNIQUE INDEX UN_FILE_COMP ON ARO_FILE_COMP(ID_COMP_STRUT_DOC);

-- changeset root:1751897635013-1848
ALTER TABLE ARO_FILE_COMP ADD CONSTRAINT UN_FILE_COMP UNIQUE (ID_COMP_STRUT_DOC) USING INDEX UN_FILE_COMP;

-- changeset root:1751897635013-1849
CREATE UNIQUE INDEX UN_FILE_ELENCO_VERS_OBJECT_STORAGE ON ELV_FILE_ELENCO_VERS_OBJECT_STORAGE(ID_FILE_ELENCO_VERS);

-- changeset root:1751897635013-1850
ALTER TABLE ELV_FILE_ELENCO_VERS_OBJECT_STORAGE ADD CONSTRAINT UN_FILE_ELENCO_VERS_OBJECT_STORAGE UNIQUE (ID_FILE_ELENCO_VERS) USING INDEX UN_FILE_ELENCO_VERS_OBJECT_STORAGE;

-- changeset root:1751897635013-1851
CREATE UNIQUE INDEX UN_FILE_ELE_VRS_NEW ON ELV_FILE_ELENCO_VERS(ID_ELENCO_VERS, TI_FILE_ELENCO_VERS);

-- changeset root:1751897635013-1852
ALTER TABLE ELV_FILE_ELENCO_VERS ADD CONSTRAINT UN_FILE_ELE_VRS_NEW UNIQUE (ID_ELENCO_VERS, TI_FILE_ELENCO_VERS) USING INDEX UN_FILE_ELE_VRS_NEW;

-- changeset root:1751897635013-1853
CREATE UNIQUE INDEX UN_FILE_INP_VER_SER ON SER_FILE_INPUT_VER_SERIE(ID_VER_SERIE, TI_SCOPO_FILE_INPUT_VER_SERIE);

-- changeset root:1751897635013-1854
ALTER TABLE SER_FILE_INPUT_VER_SERIE ADD CONSTRAINT UN_FILE_INP_VER_SER UNIQUE (ID_VER_SERIE, TI_SCOPO_FILE_INPUT_VER_SERIE) USING INDEX UN_FILE_INP_VER_SER;

-- changeset root:1751897635013-1855
CREATE UNIQUE INDEX UN_FILE_META_VER_AIP_FASC ON FAS_FILE_META_VER_AIP_FASC(ID_STRUT, ID_META_VER_AIP_FASCICOLO);

-- changeset root:1751897635013-1856
ALTER TABLE FAS_FILE_META_VER_AIP_FASC ADD CONSTRAINT UN_FILE_META_VER_AIP_FASC UNIQUE (ID_STRUT, ID_META_VER_AIP_FASCICOLO) USING INDEX UN_FILE_META_VER_AIP_FASC;

-- changeset root:1751897635013-1857
CREATE UNIQUE INDEX UN_FILE_NOARK ON VRS_FILE_NOARK_PATH_DT_VERS(ID_PATH_DT_VERS, TI_ARK_FILE_NOARK, DS_FILE_NOARK);

-- changeset root:1751897635013-1858
ALTER TABLE VRS_FILE_NOARK_PATH_DT_VERS ADD CONSTRAINT UN_FILE_NOARK UNIQUE (ID_PATH_DT_VERS, TI_ARK_FILE_NOARK, DS_FILE_NOARK) USING INDEX UN_FILE_NOARK;

-- changeset root:1751897635013-1859
CREATE UNIQUE INDEX UN_FILE_RICH_ANN_VRS ON ARO_FILE_RICH_ANNUL_VERS(ID_RICH_ANNUL_VERS, TI_FILE);

-- changeset root:1751897635013-1860
ALTER TABLE ARO_FILE_RICH_ANNUL_VERS ADD CONSTRAINT UN_FILE_RICH_ANN_VRS UNIQUE (ID_RICH_ANNUL_VERS, TI_FILE) USING INDEX UN_FILE_RICH_ANN_VRS;

-- changeset root:1751897635013-1861
CREATE UNIQUE INDEX UN_FILE_SESSIONE ON VRS_FILE_SES_OBJECT_STORAGE(ID_FILE_SESSIONE);

-- changeset root:1751897635013-1862
ALTER TABLE VRS_FILE_SES_OBJECT_STORAGE ADD CONSTRAINT UN_FILE_SESSIONE UNIQUE (ID_FILE_SESSIONE) USING INDEX UN_FILE_SESSIONE;

-- changeset root:1751897635013-1863
CREATE UNIQUE INDEX UN_FILE_SESSIONE_KO ON VRS_FILE_SES_OBJECT_STORAGE_KO(ID_FILE_SESSIONE_KO);

-- changeset root:1751897635013-1864
ALTER TABLE VRS_FILE_SES_OBJECT_STORAGE_KO ADD CONSTRAINT UN_FILE_SESSIONE_KO UNIQUE (ID_FILE_SESSIONE_KO) USING INDEX UN_FILE_SESSIONE_KO;

-- changeset root:1751897635013-1865
CREATE UNIQUE INDEX UN_FILE_VER_IX_AIP_UD_NEW ON ARO_FILE_VER_INDICE_AIP_UD(ID_VER_INDICE_AIP);

-- changeset root:1751897635013-1866
ALTER TABLE ARO_FILE_VER_INDICE_AIP_UD ADD CONSTRAINT UN_FILE_VER_IX_AIP_UD_NEW UNIQUE (ID_VER_INDICE_AIP) USING INDEX UN_FILE_VER_IX_AIP_UD_NEW;

-- changeset root:1751897635013-1867
CREATE UNIQUE INDEX UN_FILE_VER_SER ON SER_FILE_VER_SERIE(ID_VER_SERIE, TI_FILE_VER_SERIE);

-- changeset root:1751897635013-1868
ALTER TABLE SER_FILE_VER_SERIE ADD CONSTRAINT UN_FILE_VER_SER UNIQUE (ID_VER_SERIE, TI_FILE_VER_SERIE) USING INDEX UN_FILE_VER_SER;

-- changeset root:1751897635013-1869
CREATE UNIQUE INDEX UN_FILT_SEL_UD ON DEC_FILTRO_SEL_UD(ID_TIPO_SERIE_UD, TI_FILTRO, PG_FILTRO);

-- changeset root:1751897635013-1870
ALTER TABLE DEC_FILTRO_SEL_UD ADD CONSTRAINT UN_FILT_SEL_UD UNIQUE (ID_TIPO_SERIE_UD, TI_FILTRO, PG_FILTRO) USING INDEX UN_FILT_SEL_UD;

-- changeset root:1751897635013-1871
CREATE UNIQUE INDEX UN_FILT_SEL_UD_ATB ON DEC_FILTRO_SEL_UD_ATTB(ID_TIPO_SERIE_UD, NM_ATTRIB_DATI_SPEC);

-- changeset root:1751897635013-1872
ALTER TABLE DEC_FILTRO_SEL_UD_ATTB ADD CONSTRAINT UN_FILT_SEL_UD_ATB UNIQUE (ID_TIPO_SERIE_UD, NM_ATTRIB_DATI_SPEC) USING INDEX UN_FILT_SEL_UD_ATB;

-- changeset root:1751897635013-1873
CREATE UNIQUE INDEX UN_FIL_SES ON VRS_FILE_SESSIONE(ID_DATI_SESSIONE_VERS, PG_FILE_SESSIONE);

-- changeset root:1751897635013-1874
ALTER TABLE VRS_FILE_SESSIONE ADD CONSTRAINT UN_FIL_SES UNIQUE (ID_DATI_SESSIONE_VERS, PG_FILE_SESSIONE) USING INDEX UN_FIL_SES;

-- changeset root:1751897635013-1875
CREATE UNIQUE INDEX UN_FIL_VOL_CONS ON VOL_FILE_VOLUME_CONSERV(ID_VOLUME_CONSERV, TI_FILE_VOLUME_CONSERV);

-- changeset root:1751897635013-1876
ALTER TABLE VOL_FILE_VOLUME_CONSERV ADD CONSTRAINT UN_FIL_VOL_CONS UNIQUE (ID_VOLUME_CONSERV, TI_FILE_VOLUME_CONSERV) USING INDEX UN_FIL_VOL_CONS;

-- changeset root:1751897635013-1877
CREATE UNIQUE INDEX UN_FIR_COMP ON ARO_FIRMA_COMP(ID_COMP_DOC, PG_FIRMA);

-- changeset root:1751897635013-1878
ALTER TABLE ARO_FIRMA_COMP ADD CONSTRAINT UN_FIR_COMP UNIQUE (ID_COMP_DOC, PG_FIRMA) USING INDEX UN_FIR_COMP;

-- changeset root:1751897635013-1879
CREATE UNIQUE INDEX UN_FIR_CRYPTO_FIR_EIDAS ON DEC_AMS_FMT_FIR_EIDAS_CRYPTO(ID_FMT_FIR_CRYPTO, ID_FMT_FIR_EIDAS);

-- changeset root:1751897635013-1880
ALTER TABLE DEC_AMS_FMT_FIR_EIDAS_CRYPTO ADD CONSTRAINT UN_FIR_CRYPTO_FIR_EIDAS UNIQUE (ID_FMT_FIR_CRYPTO, ID_FMT_FIR_EIDAS) USING INDEX UN_FIR_CRYPTO_FIR_EIDAS;

-- changeset root:1751897635013-1881
CREATE UNIQUE INDEX UN_FLT_SEL_UD_DAT ON DEC_FILTRO_SEL_UD_DATO(ID_FILTRO_SEL_UD_ATTB, ID_ATTRIB_DATI_SPEC);

-- changeset root:1751897635013-1882
ALTER TABLE DEC_FILTRO_SEL_UD_DATO ADD CONSTRAINT UN_FLT_SEL_UD_DAT UNIQUE (ID_FILTRO_SEL_UD_ATTB, ID_ATTRIB_DATI_SPEC) USING INDEX UN_FLT_SEL_UD_DAT;

-- changeset root:1751897635013-1883
CREATE UNIQUE INDEX UN_FMT_FILE ON DEC_FORMATO_FILE_DOC(ID_STRUT, NM_FORMATO_FILE_DOC);

-- changeset root:1751897635013-1884
ALTER TABLE DEC_FORMATO_FILE_DOC ADD CONSTRAINT UN_FMT_FILE UNIQUE (ID_STRUT, NM_FORMATO_FILE_DOC) USING INDEX UN_FMT_FILE;

-- changeset root:1751897635013-1885
CREATE UNIQUE INDEX UN_FMT_FILE_BUSTA ON DEC_FORMATO_FILE_BUSTA(ID_FORMATO_FILE_STANDARD, TI_FORMATO_FIRMA_MARCA);

-- changeset root:1751897635013-1886
ALTER TABLE DEC_FORMATO_FILE_BUSTA ADD CONSTRAINT UN_FMT_FILE_BUSTA UNIQUE (ID_FORMATO_FILE_STANDARD, TI_FORMATO_FIRMA_MARCA) USING INDEX UN_FMT_FILE_BUSTA;

-- changeset root:1751897635013-1887
CREATE UNIQUE INDEX UN_FMT_FIL_AMS ON DEC_FORMATO_FILE_AMMESSO(ID_TIPO_COMP_DOC, ID_FORMATO_FILE_DOC);

-- changeset root:1751897635013-1888
ALTER TABLE DEC_FORMATO_FILE_AMMESSO ADD CONSTRAINT UN_FMT_FIL_AMS UNIQUE (ID_TIPO_COMP_DOC, ID_FORMATO_FILE_DOC) USING INDEX UN_FMT_FIL_AMS;

-- changeset root:1751897635013-1889
CREATE UNIQUE INDEX UN_FMT_FIL_STD ON DEC_FORMATO_FILE_STANDARD(NM_FORMATO_FILE_STANDARD);

-- changeset root:1751897635013-1890
ALTER TABLE DEC_FORMATO_FILE_STANDARD ADD CONSTRAINT UN_FMT_FIL_STD UNIQUE (NM_FORMATO_FILE_STANDARD) USING INDEX UN_FMT_FIL_STD;

-- changeset root:1751897635013-1891
CREATE UNIQUE INDEX UN_FMT_FIR_BUSTA ON DEC_FMT_FIR_BUSTA(TI_FORMATO);

-- changeset root:1751897635013-1892
ALTER TABLE DEC_FMT_FIR_BUSTA ADD CONSTRAINT UN_FMT_FIR_BUSTA UNIQUE (TI_FORMATO) USING INDEX UN_FMT_FIR_BUSTA;

-- changeset root:1751897635013-1893
CREATE UNIQUE INDEX UN_FMT_FIR_CRYPTO ON DEC_FMT_FIR_CRYPTO(TI_FORMATO);

-- changeset root:1751897635013-1894
ALTER TABLE DEC_FMT_FIR_CRYPTO ADD CONSTRAINT UN_FMT_FIR_CRYPTO UNIQUE (TI_FORMATO) USING INDEX UN_FMT_FIR_CRYPTO;

-- changeset root:1751897635013-1895
CREATE UNIQUE INDEX UN_FMT_FIR_EIDAS ON DEC_FMT_FIR_EIDAS(TI_FORMATO);

-- changeset root:1751897635013-1896
ALTER TABLE DEC_FMT_FIR_EIDAS ADD CONSTRAINT UN_FMT_FIR_EIDAS UNIQUE (TI_FORMATO) USING INDEX UN_FMT_FIR_EIDAS;

-- changeset root:1751897635013-1897
CREATE UNIQUE INDEX UN_FMT_PROP_FMT_STD ON DEC_FORMATO_VALUTAZIONE(ID_FORMATO_PROPRIETA, ID_FORMATO_FILE_STANDARD);

-- changeset root:1751897635013-1898
ALTER TABLE DEC_FORMATO_VALUTAZIONE ADD CONSTRAINT UN_FMT_PROP_FMT_STD UNIQUE (ID_FORMATO_PROPRIETA, ID_FORMATO_FILE_STANDARD) USING INDEX UN_FMT_PROP_FMT_STD;

-- changeset root:1751897635013-1899
CREATE UNIQUE INDEX UN_IMG_TRSF ON DEC_IMAGE_TRASFORM(ID_TRASFORM_TIPO_RAPPR, NM_IMAGE_TRASFORM);

-- changeset root:1751897635013-1900
ALTER TABLE DEC_IMAGE_TRASFORM ADD CONSTRAINT UN_IMG_TRSF UNIQUE (ID_TRASFORM_TIPO_RAPPR, NM_IMAGE_TRASFORM) USING INDEX UN_IMG_TRSF;

-- changeset root:1751897635013-1901
CREATE UNIQUE INDEX UN_IND_IP ON IAM_IND_IP_USER(ID_USER_IAM, CD_IND_IP_USER);

-- changeset root:1751897635013-1902
ALTER TABLE IAM_IND_IP_USER ADD CONSTRAINT UN_IND_IP UNIQUE (ID_USER_IAM, CD_IND_IP_USER) USING INDEX UN_IND_IP;

-- changeset root:1751897635013-1903
CREATE UNIQUE INDEX UN_ITEM_RICH_ANN_VRS ON ARO_ITEM_RICH_ANNUL_VERS(ID_RICH_ANNUL_VERS, PG_ITEM_RICH_ANNUL_VERS);

-- changeset root:1751897635013-1904
ALTER TABLE ARO_ITEM_RICH_ANNUL_VERS ADD CONSTRAINT UN_ITEM_RICH_ANN_VRS UNIQUE (ID_RICH_ANNUL_VERS, PG_ITEM_RICH_ANNUL_VERS) USING INDEX UN_ITEM_RICH_ANN_VRS;

-- changeset root:1751897635013-1905
CREATE UNIQUE INDEX UN_IX_AIP_UD ON ARO_INDICE_AIP_UD(ID_UNITA_DOC, TI_FORMATO_INDICE_AIP);

-- changeset root:1751897635013-1906
ALTER TABLE ARO_INDICE_AIP_UD ADD CONSTRAINT UN_IX_AIP_UD UNIQUE (ID_UNITA_DOC, TI_FORMATO_INDICE_AIP) USING INDEX UN_IX_AIP_UD;

-- changeset root:1751897635013-1907
CREATE UNIQUE INDEX UN_IX_AIP_UD_DA_ELAB ON ARO_INDICE_AIP_UD_DA_ELAB(ID_UNITA_DOC, PG_CREAZIONE_DA_ELAB);

-- changeset root:1751897635013-1908
ALTER TABLE ARO_INDICE_AIP_UD_DA_ELAB ADD CONSTRAINT UN_IX_AIP_UD_DA_ELAB UNIQUE (ID_UNITA_DOC, PG_CREAZIONE_DA_ELAB) USING INDEX UN_IX_AIP_UD_DA_ELAB;

-- changeset root:1751897635013-1909
CREATE UNIQUE INDEX UN_IX_VOL_VER_SER ON SER_IX_VOL_VER_SERIE(ID_VOL_VER_SERIE);

-- changeset root:1751897635013-1910
ALTER TABLE SER_IX_VOL_VER_SERIE ADD CONSTRAINT UN_IX_VOL_VER_SER UNIQUE (ID_VOL_VER_SERIE) USING INDEX UN_IX_VOL_VER_SER;

-- changeset root:1751897635013-1911
CREATE UNIQUE INDEX UN_JOB ON DEC_JOB(NM_JOB);

-- changeset root:1751897635013-1912
ALTER TABLE DEC_JOB ADD CONSTRAINT UN_JOB UNIQUE (NM_JOB) USING INDEX UN_JOB;

-- changeset root:1751897635013-1913
CREATE UNIQUE INDEX UN_JOB_FOTO ON DEC_JOB_FOTO(NM_JOB_FOTO);

-- changeset root:1751897635013-1914
ALTER TABLE DEC_JOB_FOTO ADD CONSTRAINT UN_JOB_FOTO UNIQUE (NM_JOB_FOTO) USING INDEX UN_JOB_FOTO;

-- changeset root:1751897635013-1915
CREATE UNIQUE INDEX UN_KEY_TOT_UD ON MON_KEY_TOTAL_UD(AA_KEY_UNITA_DOC, ID_TIPO_UNITA_DOC, ID_REGISTRO_UNITA_DOC, ID_TIPO_DOC_PRINC, ID_SUB_STRUT);

-- changeset root:1751897635013-1916
ALTER TABLE MON_KEY_TOTAL_UD ADD CONSTRAINT UN_KEY_TOT_UD UNIQUE (AA_KEY_UNITA_DOC, ID_TIPO_UNITA_DOC, ID_REGISTRO_UNITA_DOC, ID_TIPO_DOC_PRINC, ID_SUB_STRUT) USING INDEX UN_KEY_TOT_UD;

-- changeset root:1751897635013-1917
CREATE UNIQUE INDEX UN_KEY_TOT_UD_KO ON MON_KEY_TOTAL_UD_KO(AA_KEY_UNITA_DOC, ID_TIPO_UNITA_DOC, ID_REGISTRO_UNITA_DOC, ID_TIPO_DOC_PRINC);

-- changeset root:1751897635013-1918
ALTER TABLE MON_KEY_TOTAL_UD_KO ADD CONSTRAINT UN_KEY_TOT_UD_KO UNIQUE (AA_KEY_UNITA_DOC, ID_TIPO_UNITA_DOC, ID_REGISTRO_UNITA_DOC, ID_TIPO_DOC_PRINC) USING INDEX UN_KEY_TOT_UD_KO;

-- changeset root:1751897635013-1919
CREATE UNIQUE INDEX UN_LAC_CONS_VER_SER ON SER_LACUNA_CONSIST_VER_SERIE(ID_CONSIST_VER_SERIE, PG_LACUNA);

-- changeset root:1751897635013-1920
ALTER TABLE SER_LACUNA_CONSIST_VER_SERIE ADD CONSTRAINT UN_LAC_CONS_VER_SER UNIQUE (ID_CONSIST_VER_SERIE, PG_LACUNA) USING INDEX UN_LAC_CONS_VER_SER;

-- changeset root:1751897635013-1921
CREATE UNIQUE INDEX UN_LINK_FASC ON FAS_LINK_FASCICOLO(ID_FASCICOLO, AA_FASCICOLO_LINK, CD_KEY_FASCICOLO_LINK);

-- changeset root:1751897635013-1922
ALTER TABLE FAS_LINK_FASCICOLO ADD CONSTRAINT UN_LINK_FASC UNIQUE (ID_FASCICOLO, AA_FASCICOLO_LINK, CD_KEY_FASCICOLO_LINK) USING INDEX UN_LINK_FASC;

-- changeset root:1751897635013-1923
CREATE UNIQUE INDEX UN_LIV_TITOL ON DEC_LIVELLO_TITOL(ID_TITOL, NI_LIVELLO);

-- changeset root:1751897635013-1924
ALTER TABLE DEC_LIVELLO_TITOL ADD CONSTRAINT UN_LIV_TITOL UNIQUE (ID_TITOL, NI_LIVELLO) USING INDEX UN_LIV_TITOL;

-- changeset root:1751897635013-1925
CREATE UNIQUE INDEX UN_LIV_TITOL_NOME ON DEC_LIVELLO_TITOL(ID_TITOL, NM_LIVELLO_TITOL);

-- changeset root:1751897635013-1926
ALTER TABLE DEC_LIVELLO_TITOL ADD CONSTRAINT UN_LIV_TITOL_NOME UNIQUE (ID_TITOL, NM_LIVELLO_TITOL) USING INDEX UN_LIV_TITOL_NOME;

-- changeset root:1751897635013-1927
CREATE UNIQUE INDEX UN_LNK_SER ON SER_LINK_SERIE(ID_SERIE_PARTENZA, ID_STRUT_ARRIVO, CD_COMPOSITO_SERIE_ARRIVO, AA_SERIE_ARRIVO);

-- changeset root:1751897635013-1928
ALTER TABLE SER_LINK_SERIE ADD CONSTRAINT UN_LNK_SER UNIQUE (ID_SERIE_PARTENZA, ID_STRUT_ARRIVO, CD_COMPOSITO_SERIE_ARRIVO, AA_SERIE_ARRIVO) USING INDEX UN_LNK_SER;

-- changeset root:1751897635013-1929
CREATE UNIQUE INDEX UN_LNK_TI_SER ON DEC_LINK_TIPO_SERIE(ID_TIPO_SERIE_PARTENZA, ID_TIPO_SERIE_ARRIVO);

-- changeset root:1751897635013-1930
ALTER TABLE DEC_LINK_TIPO_SERIE ADD CONSTRAINT UN_LNK_TI_SER UNIQUE (ID_TIPO_SERIE_PARTENZA, ID_TIPO_SERIE_ARRIVO) USING INDEX UN_LNK_TI_SER;

-- changeset root:1751897635013-1931
CREATE UNIQUE INDEX UN_LNK_UNI_DOC ON ARO_LINK_UNITA_DOC(ID_UNITA_DOC, CD_REGISTRO_KEY_UNITA_DOC_LINK, AA_KEY_UNITA_DOC_LINK, CD_KEY_UNITA_DOC_LINK);

-- changeset root:1751897635013-1932
ALTER TABLE ARO_LINK_UNITA_DOC ADD CONSTRAINT UN_LNK_UNI_DOC UNIQUE (ID_UNITA_DOC, CD_REGISTRO_KEY_UNITA_DOC_LINK, AA_KEY_UNITA_DOC_LINK, CD_KEY_UNITA_DOC_LINK) USING INDEX UN_LNK_UNI_DOC;

-- changeset root:1751897635013-1933
CREATE UNIQUE INDEX UN_MDL_XSD_FASC ON DEC_MODELLO_XSD_FASCICOLO(ID_AMBIENTE, TI_MODELLO_XSD, TI_USO_MODELLO_XSD, CD_XSD);

-- changeset root:1751897635013-1934
ALTER TABLE DEC_MODELLO_XSD_FASCICOLO ADD CONSTRAINT UN_MDL_XSD_FASC UNIQUE (ID_AMBIENTE, TI_MODELLO_XSD, TI_USO_MODELLO_XSD, CD_XSD) USING INDEX UN_MDL_XSD_FASC;

-- changeset root:1751897635013-1935
CREATE UNIQUE INDEX UN_MDL_XSD_UD ON DEC_MODELLO_XSD_UD(ID_AMBIENTE, TI_MODELLO_XSD, TI_USO_MODELLO_XSD, CD_XSD);

-- changeset root:1751897635013-1936
ALTER TABLE DEC_MODELLO_XSD_UD ADD CONSTRAINT UN_MDL_XSD_UD UNIQUE (ID_AMBIENTE, TI_MODELLO_XSD, TI_USO_MODELLO_XSD, CD_XSD) USING INDEX UN_MDL_XSD_UD;

-- changeset root:1751897635013-1937
CREATE UNIQUE INDEX UN_META_VER_AIP_FASC ON FAS_META_VER_AIP_FASCICOLO(ID_VER_AIP_FASCICOLO, NM_META);

-- changeset root:1751897635013-1938
ALTER TABLE FAS_META_VER_AIP_FASCICOLO ADD CONSTRAINT UN_META_VER_AIP_FASC UNIQUE (ID_VER_AIP_FASCICOLO, NM_META) USING INDEX UN_META_VER_AIP_FASC;

-- changeset root:1751897635013-1939
CREATE UNIQUE INDEX UN_MGZ_FILE ON OST_MIGRAZ_FILE(NM_TABELLA_ID_OGGETTO, ID_OGGETTO);

-- changeset root:1751897635013-1940
ALTER TABLE OST_MIGRAZ_FILE ADD CONSTRAINT UN_MGZ_FILE UNIQUE (NM_TABELLA_ID_OGGETTO, ID_OGGETTO) USING INDEX UN_MGZ_FILE;

-- changeset root:1751897635013-1941
CREATE UNIQUE INDEX UN_MGZ_FILE_ERR ON OST_MIGRAZ_FILE_ERR(ID_MIGRAZ_FILE, TS_ERR);

-- changeset root:1751897635013-1942
ALTER TABLE OST_MIGRAZ_FILE_ERR ADD CONSTRAINT UN_MGZ_FILE_ERR UNIQUE (ID_MIGRAZ_FILE, TS_ERR) USING INDEX UN_MGZ_FILE_ERR;

-- changeset root:1751897635013-1943
CREATE UNIQUE INDEX UN_MGZ_FILE_SUB_PART ON OST_MIGRAZ_FILE(ID_MIGRAZ_SUB_PART, ID_OGGETTO);

-- changeset root:1751897635013-1944
ALTER TABLE OST_MIGRAZ_FILE ADD CONSTRAINT UN_MGZ_FILE_SUB_PART UNIQUE (ID_MIGRAZ_SUB_PART, ID_OGGETTO) USING INDEX UN_MGZ_FILE_SUB_PART;

-- changeset root:1751897635013-1945
CREATE UNIQUE INDEX UN_MGZ_STRUT_MM ON OST_MIGRAZ_STRUT_MESE(ID_MIGRAZ_SUB_PART, ID_STRUT, MM_VERS);

-- changeset root:1751897635013-1946
ALTER TABLE OST_MIGRAZ_STRUT_MESE ADD CONSTRAINT UN_MGZ_STRUT_MM UNIQUE (ID_MIGRAZ_SUB_PART, ID_STRUT, MM_VERS) USING INDEX UN_MGZ_STRUT_MM;

-- changeset root:1751897635013-1947
CREATE UNIQUE INDEX UN_MGZ_SUBPART ON OST_MIGRAZ_SUB_PART(ID_SUB_PARTITION);

-- changeset root:1751897635013-1948
ALTER TABLE OST_MIGRAZ_SUB_PART ADD CONSTRAINT UN_MGZ_SUBPART UNIQUE (ID_SUB_PARTITION) USING INDEX UN_MGZ_SUBPART;

-- changeset root:1751897635013-1949
CREATE UNIQUE INDEX UN_MODELLO_XSD_ATTB ON DEC_MODELLO_XSD_ATTRIB_FASC(ID_MODELLO_XSD_FASCICOLO, ID_ATTRIB_FASCICOLO);

-- changeset root:1751897635013-1950
ALTER TABLE DEC_MODELLO_XSD_ATTRIB_FASC ADD CONSTRAINT UN_MODELLO_XSD_ATTB UNIQUE (ID_MODELLO_XSD_FASCICOLO, ID_ATTRIB_FASCICOLO) USING INDEX UN_MODELLO_XSD_ATTB;

-- changeset root:1751897635013-1951
CREATE UNIQUE INDEX UN_MODL_CPO_INP_UD ON DEC_MODELLO_CAMPO_INP_UD(ID_MODELLO_TIPO_SERIE, NM_CAMPO, TI_CAMPO);

-- changeset root:1751897635013-1952
ALTER TABLE DEC_MODELLO_CAMPO_INP_UD ADD CONSTRAINT UN_MODL_CPO_INP_UD UNIQUE (ID_MODELLO_TIPO_SERIE, NM_CAMPO, TI_CAMPO) USING INDEX UN_MODL_CPO_INP_UD;

-- changeset root:1751897635013-1953
CREATE UNIQUE INDEX UN_MODL_CPO_INP_UD_PG ON DEC_MODELLO_CAMPO_INP_UD(ID_MODELLO_TIPO_SERIE, PG_ORD_CAMPO);

-- changeset root:1751897635013-1954
ALTER TABLE DEC_MODELLO_CAMPO_INP_UD ADD CONSTRAINT UN_MODL_CPO_INP_UD_PG UNIQUE (ID_MODELLO_TIPO_SERIE, PG_ORD_CAMPO) USING INDEX UN_MODL_CPO_INP_UD_PG;

-- changeset root:1751897635013-1955
CREATE UNIQUE INDEX UN_MODL_CPO_SEL_UD ON DEC_MODELLO_CAMPO_OUT_SEL_UD(ID_MODELLO_OUT_SEL_UD, NM_CAMPO, TI_CAMPO);

-- changeset root:1751897635013-1956
ALTER TABLE DEC_MODELLO_CAMPO_OUT_SEL_UD ADD CONSTRAINT UN_MODL_CPO_SEL_UD UNIQUE (ID_MODELLO_OUT_SEL_UD, NM_CAMPO, TI_CAMPO) USING INDEX UN_MODL_CPO_SEL_UD;

-- changeset root:1751897635013-1957
CREATE UNIQUE INDEX UN_MODL_FILT_SEL_UD_ATB ON DEC_MODELLO_FILTRO_SEL_UDATTB(ID_MODELLO_TIPO_SERIE, NM_FILTRO, TI_FILTRO);

-- changeset root:1751897635013-1958
ALTER TABLE DEC_MODELLO_FILTRO_SEL_UDATTB ADD CONSTRAINT UN_MODL_FILT_SEL_UD_ATB UNIQUE (ID_MODELLO_TIPO_SERIE, NM_FILTRO, TI_FILTRO) USING INDEX UN_MODL_FILT_SEL_UD_ATB;

-- changeset root:1751897635013-1959
CREATE UNIQUE INDEX UN_MODL_FILT_TI_DOC ON DEC_MODELLO_FILTRO_TI_DOC(ID_MODELLO_TIPO_SERIE, NM_TIPO_DOC);

-- changeset root:1751897635013-1960
ALTER TABLE DEC_MODELLO_FILTRO_TI_DOC ADD CONSTRAINT UN_MODL_FILT_TI_DOC UNIQUE (ID_MODELLO_TIPO_SERIE, NM_TIPO_DOC) USING INDEX UN_MODL_FILT_TI_DOC;

-- changeset root:1751897635013-1961
CREATE UNIQUE INDEX UN_MODL_OUT_SEL_UD ON DEC_MODELLO_OUT_SEL_UD(ID_MODELLO_TIPO_SERIE, TI_OUT);

-- changeset root:1751897635013-1962
ALTER TABLE DEC_MODELLO_OUT_SEL_UD ADD CONSTRAINT UN_MODL_OUT_SEL_UD UNIQUE (ID_MODELLO_TIPO_SERIE, TI_OUT) USING INDEX UN_MODL_OUT_SEL_UD;

-- changeset root:1751897635013-1963
CREATE UNIQUE INDEX UN_MODL_TI_SER ON DEC_MODELLO_TIPO_SERIE(ID_AMBIENTE, NM_MODELLO_TIPO_SERIE);

-- changeset root:1751897635013-1964
ALTER TABLE DEC_MODELLO_TIPO_SERIE ADD CONSTRAINT UN_MODL_TI_SER UNIQUE (ID_AMBIENTE, NM_MODELLO_TIPO_SERIE) USING INDEX UN_MODL_TI_SER;

-- changeset root:1751897635013-1965
CREATE UNIQUE INDEX UN_MRK_COMP ON ARO_MARCA_COMP(ID_COMP_DOC, PG_MARCA);

-- changeset root:1751897635013-1966
ALTER TABLE ARO_MARCA_COMP ADD CONSTRAINT UN_MRK_COMP UNIQUE (ID_COMP_DOC, PG_MARCA) USING INDEX UN_MRK_COMP;

-- changeset root:1751897635013-1967
CREATE UNIQUE INDEX UN_NM_BACKEND ON DEC_BACKEND(NM_BACKEND);

-- changeset root:1751897635013-1968
ALTER TABLE DEC_BACKEND ADD CONSTRAINT UN_NM_BACKEND UNIQUE (NM_BACKEND) USING INDEX UN_NM_BACKEND;

-- changeset root:1751897635013-1969
CREATE UNIQUE INDEX UN_NM_FMT_GRP_PROP ON DEC_FORMATO_GRUPPO_PROPRIETA(NM_FORMATO_GRUPPO_PROPRIETA);

-- changeset root:1751897635013-1970
ALTER TABLE DEC_FORMATO_GRUPPO_PROPRIETA ADD CONSTRAINT UN_NM_FMT_GRP_PROP UNIQUE (NM_FORMATO_GRUPPO_PROPRIETA) USING INDEX UN_NM_FMT_GRP_PROP;

-- changeset root:1751897635013-1971
CREATE UNIQUE INDEX UN_NM_FMT_PROP ON DEC_FORMATO_PROPRIETA(NM_FORMATO_PROPRIETA);

-- changeset root:1751897635013-1972
ALTER TABLE DEC_FORMATO_PROPRIETA ADD CONSTRAINT UN_NM_FMT_PROP UNIQUE (NM_FORMATO_PROPRIETA) USING INDEX UN_NM_FMT_PROP;

-- changeset root:1751897635013-1973
CREATE UNIQUE INDEX UN_NOT_MODL_TI_SER ON DEC_NOTA_MODELLO_TIPO_SERIE(ID_MODELLO_TIPO_SERIE, ID_TIPO_NOTA_SERIE, PG_NOTA_TIPO_SERIE);

-- changeset root:1751897635013-1974
ALTER TABLE DEC_NOTA_MODELLO_TIPO_SERIE ADD CONSTRAINT UN_NOT_MODL_TI_SER UNIQUE (ID_MODELLO_TIPO_SERIE, ID_TIPO_NOTA_SERIE, PG_NOTA_TIPO_SERIE) USING INDEX UN_NOT_MODL_TI_SER;

-- changeset root:1751897635013-1975
CREATE UNIQUE INDEX UN_NOT_TI_SER ON DEC_NOTA_TIPO_SERIE(ID_TIPO_SERIE, ID_TIPO_NOTA_SERIE, PG_NOTA_TIPO_SERIE);

-- changeset root:1751897635013-1976
ALTER TABLE DEC_NOTA_TIPO_SERIE ADD CONSTRAINT UN_NOT_TI_SER UNIQUE (ID_TIPO_SERIE, ID_TIPO_NOTA_SERIE, PG_NOTA_TIPO_SERIE) USING INDEX UN_NOT_TI_SER;

-- changeset root:1751897635013-1977
CREATE UNIQUE INDEX UN_NOT_UD_USR ON ARO_NOTA_UNITA_DOC(ID_UNITA_DOC, ID_TIPO_NOTA_UNITA_DOC, PG_NOTA_UNITA_DOC);

-- changeset root:1751897635013-1978
ALTER TABLE ARO_NOTA_UNITA_DOC ADD CONSTRAINT UN_NOT_UD_USR UNIQUE (ID_UNITA_DOC, ID_TIPO_NOTA_UNITA_DOC, PG_NOTA_UNITA_DOC) USING INDEX UN_NOT_UD_USR;

-- changeset root:1751897635013-1979
CREATE UNIQUE INDEX UN_NOT_VER_SER_USR ON SER_NOTA_VER_SERIE(ID_VER_SERIE, ID_TIPO_NOTA_SERIE, PG_NOTA_VER_SERIE);

-- changeset root:1751897635013-1980
ALTER TABLE SER_NOTA_VER_SERIE ADD CONSTRAINT UN_NOT_VER_SER_USR UNIQUE (ID_VER_SERIE, ID_TIPO_NOTA_SERIE, PG_NOTA_VER_SERIE) USING INDEX UN_NOT_VER_SER_USR;

-- changeset root:1751897635013-1981
CREATE UNIQUE INDEX UN_NO_MGZ_FILE_SUB_PART ON OST_NO_MIGRAZ_FILE(ID_MIGRAZ_SUB_PART, ID_OGGETTO);

-- changeset root:1751897635013-1982
ALTER TABLE OST_NO_MIGRAZ_FILE ADD CONSTRAINT UN_NO_MGZ_FILE_SUB_PART UNIQUE (ID_MIGRAZ_SUB_PART, ID_OGGETTO) USING INDEX UN_NO_MGZ_FILE_SUB_PART;

-- changeset root:1751897635013-1983
CREATE UNIQUE INDEX UN_OCSP ON FIR_OCSP(ID_CERTIF_OCSP, DS_CERTIF_ISSUERNAME, DS_CERTIF_SERIAL_BASE64, DS_CERTIF_SKI_BASE64);

-- changeset root:1751897635013-1984
ALTER TABLE FIR_OCSP ADD CONSTRAINT UN_OCSP UNIQUE (ID_CERTIF_OCSP, DS_CERTIF_ISSUERNAME, DS_CERTIF_SERIAL_BASE64, DS_CERTIF_SKI_BASE64) USING INDEX UN_OCSP;

-- changeset root:1751897635013-1985
CREATE UNIQUE INDEX UN_OPE_VOCE ON ORG_OPER_VOCE_TITOL(ID_OPER_TITOL, PG_OPER_VOCE_TITOL);

-- changeset root:1751897635013-1986
ALTER TABLE ORG_OPER_VOCE_TITOL ADD CONSTRAINT UN_OPE_VOCE UNIQUE (ID_OPER_TITOL, PG_OPER_VOCE_TITOL) USING INDEX UN_OPE_VOCE;

-- changeset root:1751897635013-1987
CREATE UNIQUE INDEX UN_OUT_SEL_UD ON DEC_OUT_SEL_UD(ID_TIPO_SERIE_UD, TI_OUT);

-- changeset root:1751897635013-1988
ALTER TABLE DEC_OUT_SEL_UD ADD CONSTRAINT UN_OUT_SEL_UD UNIQUE (ID_TIPO_SERIE_UD, TI_OUT) USING INDEX UN_OUT_SEL_UD;

-- changeset root:1751897635013-1989
CREATE UNIQUE INDEX UN_PART ON ORG_PARTITION(TI_PARTITION, CD_PARTITION);

-- changeset root:1751897635013-1990
ALTER TABLE ORG_PARTITION ADD CONSTRAINT UN_PART UNIQUE (TI_PARTITION, CD_PARTITION) USING INDEX UN_PART;

-- changeset root:1751897635013-1991
CREATE UNIQUE INDEX UN_PARTE_NUM_FASC ON DEC_PARTE_NUMERO_FASCICOLO(ID_AA_TIPO_FASCICOLO, NM_PARTE_NUMERO);

-- changeset root:1751897635013-1992
ALTER TABLE DEC_PARTE_NUMERO_FASCICOLO ADD CONSTRAINT UN_PARTE_NUM_FASC UNIQUE (ID_AA_TIPO_FASCICOLO, NM_PARTE_NUMERO) USING INDEX UN_PARTE_NUM_FASC;

-- changeset root:1751897635013-1993
CREATE UNIQUE INDEX UN_PARTE_NUM_FASC_NUM ON DEC_PARTE_NUMERO_FASCICOLO(ID_AA_TIPO_FASCICOLO, NI_PARTE_NUMERO);

-- changeset root:1751897635013-1994
ALTER TABLE DEC_PARTE_NUMERO_FASCICOLO ADD CONSTRAINT UN_PARTE_NUM_FASC_NUM UNIQUE (ID_AA_TIPO_FASCICOLO, NI_PARTE_NUMERO) USING INDEX UN_PARTE_NUM_FASC_NUM;

-- changeset root:1751897635013-1995
CREATE UNIQUE INDEX UN_PARTE_NUM_REG ON DEC_PARTE_NUMERO_REGISTRO(ID_AA_REGISTRO_UNITA_DOC, NM_PARTE_NUMERO_REGISTRO);

-- changeset root:1751897635013-1996
ALTER TABLE DEC_PARTE_NUMERO_REGISTRO ADD CONSTRAINT UN_PARTE_NUM_REG UNIQUE (ID_AA_REGISTRO_UNITA_DOC, NM_PARTE_NUMERO_REGISTRO) USING INDEX UN_PARTE_NUM_REG;

-- changeset root:1751897635013-1997
CREATE UNIQUE INDEX UN_PARTE_NUM_REG_NI ON DEC_PARTE_NUMERO_REGISTRO(ID_AA_REGISTRO_UNITA_DOC, NI_PARTE_NUMERO_REGISTRO);

-- changeset root:1751897635013-1998
ALTER TABLE DEC_PARTE_NUMERO_REGISTRO ADD CONSTRAINT UN_PARTE_NUM_REG_NI UNIQUE (ID_AA_REGISTRO_UNITA_DOC, NI_PARTE_NUMERO_REGISTRO) USING INDEX UN_PARTE_NUM_REG_NI;

-- changeset root:1751897635013-1999
CREATE UNIQUE INDEX UN_PART_STRUT ON ORG_PARTITION_STRUT(ID_STRUT, TI_PARTITION);

-- changeset root:1751897635013-2000
ALTER TABLE ORG_PARTITION_STRUT ADD CONSTRAINT UN_PART_STRUT UNIQUE (ID_STRUT, TI_PARTITION) USING INDEX UN_PART_STRUT;

-- changeset root:1751897635013-2001
CREATE UNIQUE INDEX UN_PART_SUB_STRUT ON ORG_PARTITION_SUB_STRUT(ID_SUB_STRUT, TI_PARTITION);

-- changeset root:1751897635013-2002
ALTER TABLE ORG_PARTITION_SUB_STRUT ADD CONSTRAINT UN_PART_SUB_STRUT UNIQUE (ID_SUB_STRUT, TI_PARTITION) USING INDEX UN_PART_SUB_STRUT;

-- changeset root:1751897635013-2003
CREATE UNIQUE INDEX UN_PAR_APL ON APL_PARAM_APPLIC(NM_PARAM_APPLIC);

-- changeset root:1751897635013-2004
ALTER TABLE APL_PARAM_APPLIC ADD CONSTRAINT UN_PAR_APL UNIQUE (NM_PARAM_APPLIC) USING INDEX UN_PAR_APL;

-- changeset root:1751897635013-2005
CREATE UNIQUE INDEX UN_PATH_DT_VERS ON VRS_PATH_DT_VERS(ID_DT_VERS, DL_PATH);

-- changeset root:1751897635013-2006
ALTER TABLE VRS_PATH_DT_VERS ADD CONSTRAINT UN_PATH_DT_VERS UNIQUE (ID_DT_VERS, DL_PATH) USING INDEX UN_PATH_DT_VERS;

-- changeset root:1751897635013-2007
CREATE UNIQUE INDEX UN_PATH_ELAB ON TPI_PATH_ELAB(ID_SCHED_JOB, DT_VERS_ELAB, DL_PATH_ELAB);

-- changeset root:1751897635013-2008
ALTER TABLE TPI_PATH_ELAB ADD CONSTRAINT UN_PATH_ELAB UNIQUE (ID_SCHED_JOB, DT_VERS_ELAB, DL_PATH_ELAB) USING INDEX UN_PATH_ELAB;

-- changeset root:1751897635013-2009
CREATE UNIQUE INDEX UN_QRY_CONTEN_VER_SER ON SER_QUERY_CONTENUTO_VER_SERIE(ID_CONTENUTO_VER_SERIE, ID_REGISTRO_UNITA_DOC, ID_TIPO_UNITA_DOC);

-- changeset root:1751897635013-2010
ALTER TABLE SER_QUERY_CONTENUTO_VER_SERIE ADD CONSTRAINT UN_QRY_CONTEN_VER_SER UNIQUE (ID_CONTENUTO_VER_SERIE, ID_REGISTRO_UNITA_DOC, ID_TIPO_UNITA_DOC) USING INDEX UN_QRY_CONTEN_VER_SER;

-- changeset root:1751897635013-2011
CREATE UNIQUE INDEX UN_REG_UNI_DOC ON DEC_REGISTRO_UNITA_DOC(ID_STRUT, CD_REGISTRO_UNITA_DOC);

-- changeset root:1751897635013-2012
ALTER TABLE DEC_REGISTRO_UNITA_DOC ADD CONSTRAINT UN_REG_UNI_DOC UNIQUE (ID_STRUT, CD_REGISTRO_UNITA_DOC) USING INDEX UN_REG_UNI_DOC;

-- changeset root:1751897635013-2013
CREATE UNIQUE INDEX UN_RESP_FASC ON FAS_RESP_FASCICOLO(ID_FASCICOLO, TI_OGG_RESP, TI_RESP, NM_NOME_RESP, NM_COGN_RESP);

-- changeset root:1751897635013-2014
ALTER TABLE FAS_RESP_FASCICOLO ADD CONSTRAINT UN_RESP_FASC UNIQUE (ID_FASCICOLO, TI_OGG_RESP, TI_RESP, NM_NOME_RESP, NM_COGN_RESP) USING INDEX UN_RESP_FASC;

-- changeset root:1751897635013-2015
CREATE UNIQUE INDEX UN_RGL_VAL_SUB_STRUT ON ORG_REGOLA_VAL_SUB_STRUT(ID_TIPO_UNITA_DOC, ID_TIPO_DOC, DT_ISTITUZ);

-- changeset root:1751897635013-2016
ALTER TABLE ORG_REGOLA_VAL_SUB_STRUT ADD CONSTRAINT UN_RGL_VAL_SUB_STRUT UNIQUE (ID_TIPO_UNITA_DOC, ID_TIPO_DOC, DT_ISTITUZ) USING INDEX UN_RGL_VAL_SUB_STRUT;

-- changeset root:1751897635013-2017
CREATE UNIQUE INDEX UN_RICH_ANN_VRS ON ARO_RICH_ANNUL_VERS(ID_STRUT, CD_RICH_ANNUL_VERS);

-- changeset root:1751897635013-2018
ALTER TABLE ARO_RICH_ANNUL_VERS ADD CONSTRAINT UN_RICH_ANN_VRS UNIQUE (ID_STRUT, CD_RICH_ANNUL_VERS) USING INDEX UN_RICH_ANN_VRS;

-- changeset root:1751897635013-2019
CREATE UNIQUE INDEX UN_SCHED_JOB ON TPI_SCHED_JOB(ID_DT_SCHED, TI_TPI_SCHED_JOB, NM_JOB);

-- changeset root:1751897635013-2020
ALTER TABLE TPI_SCHED_JOB ADD CONSTRAINT UN_SCHED_JOB UNIQUE (ID_DT_SCHED, TI_TPI_SCHED_JOB, NM_JOB) USING INDEX UN_SCHED_JOB;

-- changeset root:1751897635013-2021
CREATE UNIQUE INDEX UN_SER ON SER_SERIE(ID_STRUT, CD_COMPOSITO_SERIE, AA_SERIE, DT_ANNUL);

-- changeset root:1751897635013-2022
ALTER TABLE SER_SERIE ADD CONSTRAINT UN_SER UNIQUE (ID_STRUT, CD_COMPOSITO_SERIE, AA_SERIE, DT_ANNUL) USING INDEX UN_SER;

-- changeset root:1751897635013-2023
CREATE UNIQUE INDEX UN_SES_FASC_ERR_OBJECT_STORAGE ON VRS_XML_SES_FASC_ERR_OBJECT_STORAGE(ID_SES_FASCICOLO_ERR);

-- changeset root:1751897635013-2024
ALTER TABLE VRS_XML_SES_FASC_ERR_OBJECT_STORAGE ADD CONSTRAINT UN_SES_FASC_ERR_OBJECT_STORAGE UNIQUE (ID_SES_FASCICOLO_ERR) USING INDEX UN_SES_FASC_ERR_OBJECT_STORAGE;

-- changeset root:1751897635013-2025
CREATE UNIQUE INDEX UN_SES_FASC_KO_OBJECT_STORAGE ON VRS_XML_SES_FASC_KO_OBJECT_STORAGE(ID_SES_FASCICOLO_KO);

-- changeset root:1751897635013-2026
ALTER TABLE VRS_XML_SES_FASC_KO_OBJECT_STORAGE ADD CONSTRAINT UN_SES_FASC_KO_OBJECT_STORAGE UNIQUE (ID_SES_FASCICOLO_KO) USING INDEX UN_SES_FASC_KO_OBJECT_STORAGE;

-- changeset root:1751897635013-2027
CREATE UNIQUE INDEX UN_SES_FIR ON HSM_SESSIONE_FIRMA(ID_USER_IAM, TI_SESSIONE_FIRMA, TS_INIZIO);

-- changeset root:1751897635013-2028
ALTER TABLE HSM_SESSIONE_FIRMA ADD CONSTRAINT UN_SES_FIR UNIQUE (ID_USER_IAM, TI_SESSIONE_FIRMA, TS_INIZIO) USING INDEX UN_SES_FIR;

-- changeset root:1751897635013-2029
CREATE UNIQUE INDEX UN_SES_UPD_UD_ERR_OBJECT_STORAGE ON VRS_XML_SES_UPD_UD_ERR_OBJECT_STORAGE(ID_SES_UPD_UNITA_DOC_ERR);

-- changeset root:1751897635013-2030
ALTER TABLE VRS_XML_SES_UPD_UD_ERR_OBJECT_STORAGE ADD CONSTRAINT UN_SES_UPD_UD_ERR_OBJECT_STORAGE UNIQUE (ID_SES_UPD_UNITA_DOC_ERR) USING INDEX UN_SES_UPD_UD_ERR_OBJECT_STORAGE;

-- changeset root:1751897635013-2031
CREATE UNIQUE INDEX UN_SES_UPD_UD_KO_OBJECT_STORAGE ON VRS_XML_SES_UPD_UD_KO_OBJECT_STORAGE(ID_SES_UPD_UNITA_DOC_KO);

-- changeset root:1751897635013-2032
ALTER TABLE VRS_XML_SES_UPD_UD_KO_OBJECT_STORAGE ADD CONSTRAINT UN_SES_UPD_UD_KO_OBJECT_STORAGE UNIQUE (ID_SES_UPD_UNITA_DOC_KO) USING INDEX UN_SES_UPD_UD_KO_OBJECT_STORAGE;

-- changeset root:1751897635013-2033
CREATE UNIQUE INDEX UN_SES_VRS_SOSP ON VRS_SESSIONE_VERS_SOSP(ID_SESSIONE_VERS);

-- changeset root:1751897635013-2034
ALTER TABLE VRS_SESSIONE_VERS_SOSP ADD CONSTRAINT UN_SES_VRS_SOSP UNIQUE (ID_SESSIONE_VERS) USING INDEX UN_SES_VRS_SOSP;

-- changeset root:1751897635013-2035
CREATE UNIQUE INDEX UN_SIP_VER_AIP_FASC ON FAS_SIP_VER_AIP_FASCICOLO(ID_VER_AIP_FASCICOLO, NM_SIP);

-- changeset root:1751897635013-2036
ALTER TABLE FAS_SIP_VER_AIP_FASCICOLO ADD CONSTRAINT UN_SIP_VER_AIP_FASC UNIQUE (ID_VER_AIP_FASCICOLO, NM_SIP) USING INDEX UN_SIP_VER_AIP_FASC;

-- changeset root:1751897635013-2037
CREATE UNIQUE INDEX UN_SIS_MGZ ON APL_SISTEMA_MIGRAZ(NM_SISTEMA_MIGRAZ);

-- changeset root:1751897635013-2038
ALTER TABLE APL_SISTEMA_MIGRAZ ADD CONSTRAINT UN_SIS_MGZ UNIQUE (NM_SISTEMA_MIGRAZ) USING INDEX UN_SIS_MGZ;

-- changeset root:1751897635013-2039
CREATE UNIQUE INDEX UN_STATO_CONS_FASC ON FAS_STATO_CONSERV_FASCICOLO(ID_FASCICOLO, TS_STATO);

-- changeset root:1751897635013-2040
ALTER TABLE FAS_STATO_CONSERV_FASCICOLO ADD CONSTRAINT UN_STATO_CONS_FASC UNIQUE (ID_FASCICOLO, TS_STATO) USING INDEX UN_STATO_CONS_FASC;

-- changeset root:1751897635013-2041
CREATE UNIQUE INDEX UN_STATO_ELE_FASC ON ELV_STATO_ELENCO_VERS_FASC(ID_ELENCO_VERS_FASC, TS_STATO);

-- changeset root:1751897635013-2042
ALTER TABLE ELV_STATO_ELENCO_VERS_FASC ADD CONSTRAINT UN_STATO_ELE_FASC UNIQUE (ID_ELENCO_VERS_FASC, TS_STATO) USING INDEX UN_STATO_ELE_FASC;

-- changeset root:1751897635013-2043
CREATE UNIQUE INDEX UN_STATO_ELE_VRS ON ELV_STATO_ELENCO_VERS(ID_ELENCO_VERS, PG_STATO_ELENCO_VERS);

-- changeset root:1751897635013-2044
ALTER TABLE ELV_STATO_ELENCO_VERS ADD CONSTRAINT UN_STATO_ELE_VRS UNIQUE (ID_ELENCO_VERS, PG_STATO_ELENCO_VERS) USING INDEX UN_STATO_ELE_VRS;

-- changeset root:1751897635013-2045
CREATE UNIQUE INDEX UN_STATO_FASC_ELE ON FAS_STATO_FASCICOLO_ELENCO(ID_FASCICOLO, TS_STATO);

-- changeset root:1751897635013-2046
ALTER TABLE FAS_STATO_FASCICOLO_ELENCO ADD CONSTRAINT UN_STATO_FASC_ELE UNIQUE (ID_FASCICOLO, TS_STATO) USING INDEX UN_STATO_FASC_ELE;

-- changeset root:1751897635013-2047
CREATE UNIQUE INDEX UN_STATO_MGZ_SUBPART ON OST_STATO_MIGRAZ_SUB_PART(ID_MIGRAZ_SUB_PART, TS_REG_STATO);

-- changeset root:1751897635013-2048
ALTER TABLE OST_STATO_MIGRAZ_SUB_PART ADD CONSTRAINT UN_STATO_MGZ_SUBPART UNIQUE (ID_MIGRAZ_SUB_PART, TS_REG_STATO) USING INDEX UN_STATO_MGZ_SUBPART;

-- changeset root:1751897635013-2049
CREATE UNIQUE INDEX UN_STATO_RICH_ANN_VRS ON ARO_STATO_RICH_ANNUL_VERS(ID_RICH_ANNUL_VERS, PG_STATO_RICH_ANNUL_VERS);

-- changeset root:1751897635013-2050
ALTER TABLE ARO_STATO_RICH_ANNUL_VERS ADD CONSTRAINT UN_STATO_RICH_ANN_VRS UNIQUE (ID_RICH_ANNUL_VERS, PG_STATO_RICH_ANNUL_VERS) USING INDEX UN_STATO_RICH_ANN_VRS;

-- changeset root:1751897635013-2051
CREATE UNIQUE INDEX UN_STATO_SER ON SER_STATO_SERIE(ID_SERIE, PG_STATO_SERIE);

-- changeset root:1751897635013-2052
ALTER TABLE SER_STATO_SERIE ADD CONSTRAINT UN_STATO_SER UNIQUE (ID_SERIE, PG_STATO_SERIE) USING INDEX UN_STATO_SER;

-- changeset root:1751897635013-2053
CREATE UNIQUE INDEX UN_STATO_VER_SER ON SER_STATO_VER_SERIE(ID_VER_SERIE, PG_STATO_VER_SERIE);

-- changeset root:1751897635013-2054
ALTER TABLE SER_STATO_VER_SERIE ADD CONSTRAINT UN_STATO_VER_SER UNIQUE (ID_VER_SERIE, PG_STATO_VER_SERIE) USING INDEX UN_STATO_VER_SER;

-- changeset root:1751897635013-2055
CREATE UNIQUE INDEX UN_STO_ENTE_AMB ON ORG_STORICO_ENTE_AMBIENTE(ID_ENTE, DT_INI_VAL);

-- changeset root:1751897635013-2056
ALTER TABLE ORG_STORICO_ENTE_AMBIENTE ADD CONSTRAINT UN_STO_ENTE_AMB UNIQUE (ID_ENTE, DT_INI_VAL) USING INDEX UN_STO_ENTE_AMB;

-- changeset root:1751897635013-2057
CREATE UNIQUE INDEX UN_STRUT ON ORG_STRUT(ID_ENTE, NM_STRUT);

-- changeset root:1751897635013-2058
ALTER TABLE ORG_STRUT ADD CONSTRAINT UN_STRUT UNIQUE (ID_ENTE, NM_STRUT) USING INDEX UN_STRUT;

-- changeset root:1751897635013-2059
CREATE UNIQUE INDEX UN_STRUT_CALC_CONS ON TMP_STRUT_CALC_CONSIST(ID_STRUT);

-- changeset root:1751897635013-2060
ALTER TABLE TMP_STRUT_CALC_CONSIST ADD CONSTRAINT UN_STRUT_CALC_CONS UNIQUE (ID_STRUT) USING INDEX UN_STRUT_CALC_CONS;

-- changeset root:1751897635013-2061
CREATE UNIQUE INDEX UN_STRUT_DOC ON ARO_STRUT_DOC(ID_DOC, NI_ORD_STRUT_DOC);

-- changeset root:1751897635013-2062
ALTER TABLE ARO_STRUT_DOC ADD CONSTRAINT UN_STRUT_DOC UNIQUE (ID_DOC, NI_ORD_STRUT_DOC) USING INDEX UN_STRUT_DOC;

-- changeset root:1751897635013-2063
CREATE UNIQUE INDEX UN_SUB_PART ON ORG_SUB_PARTITION(ID_PARTITION, CD_SUB_PARTITION);

-- changeset root:1751897635013-2064
ALTER TABLE ORG_SUB_PARTITION ADD CONSTRAINT UN_SUB_PART UNIQUE (ID_PARTITION, CD_SUB_PARTITION) USING INDEX UN_SUB_PART;

-- changeset root:1751897635013-2065
CREATE UNIQUE INDEX UN_SUB_STRUT ON ORG_SUB_STRUT(ID_STRUT, NM_SUB_STRUT);

-- changeset root:1751897635013-2066
ALTER TABLE ORG_SUB_STRUT ADD CONSTRAINT UN_SUB_STRUT UNIQUE (ID_STRUT, NM_SUB_STRUT) USING INDEX UN_SUB_STRUT;

-- changeset root:1751897635013-2067
CREATE UNIQUE INDEX UN_SUB_STRUT_CALC_CONS ON TMP_SUB_STRUT_CALC_CONSIST(ID_SUB_STRUT, AA_KEY_UNITA_DOC);

-- changeset root:1751897635013-2068
ALTER TABLE TMP_SUB_STRUT_CALC_CONSIST ADD CONSTRAINT UN_SUB_STRUT_CALC_CONS UNIQUE (ID_SUB_STRUT, AA_KEY_UNITA_DOC) USING INDEX UN_SUB_STRUT_CALC_CONS;

-- changeset root:1751897635013-2069
CREATE UNIQUE INDEX UN_TIPO_COMP_DOC ON DEC_TIPO_COMP_DOC(ID_TIPO_STRUT_DOC, NM_TIPO_COMP_DOC);

-- changeset root:1751897635013-2070
ALTER TABLE DEC_TIPO_COMP_DOC ADD CONSTRAINT UN_TIPO_COMP_DOC UNIQUE (ID_TIPO_STRUT_DOC, NM_TIPO_COMP_DOC) USING INDEX UN_TIPO_COMP_DOC;

-- changeset root:1751897635013-2071
CREATE UNIQUE INDEX UN_TIPO_DOC ON DEC_TIPO_DOC(ID_STRUT, NM_TIPO_DOC);

-- changeset root:1751897635013-2072
ALTER TABLE DEC_TIPO_DOC ADD CONSTRAINT UN_TIPO_DOC UNIQUE (ID_STRUT, NM_TIPO_DOC) USING INDEX UN_TIPO_DOC;

-- changeset root:1751897635013-2073
CREATE UNIQUE INDEX UN_TIPO_DOC_AMS ON DEC_TIPO_DOC_AMMESSO(ID_TIPO_STRUT_UNITA_DOC, ID_TIPO_DOC, TI_DOC);

-- changeset root:1751897635013-2074
ALTER TABLE DEC_TIPO_DOC_AMMESSO ADD CONSTRAINT UN_TIPO_DOC_AMS UNIQUE (ID_TIPO_STRUT_UNITA_DOC, ID_TIPO_DOC, TI_DOC) USING INDEX UN_TIPO_DOC_AMS;

-- changeset root:1751897635013-2075
CREATE UNIQUE INDEX UN_TIPO_RAP_AMS ON DEC_TIPO_RAPPR_AMMESSO(ID_TIPO_COMP_DOC, ID_TIPO_RAPPR_COMP);

-- changeset root:1751897635013-2076
ALTER TABLE DEC_TIPO_RAPPR_AMMESSO ADD CONSTRAINT UN_TIPO_RAP_AMS UNIQUE (ID_TIPO_COMP_DOC, ID_TIPO_RAPPR_COMP) USING INDEX UN_TIPO_RAP_AMS;

-- changeset root:1751897635013-2077
CREATE UNIQUE INDEX UN_TIPO_RAP_COMP ON DEC_TIPO_RAPPR_COMP(ID_STRUT, NM_TIPO_RAPPR_COMP);

-- changeset root:1751897635013-2078
ALTER TABLE DEC_TIPO_RAPPR_COMP ADD CONSTRAINT UN_TIPO_RAP_COMP UNIQUE (ID_STRUT, NM_TIPO_RAPPR_COMP) USING INDEX UN_TIPO_RAP_COMP;

-- changeset root:1751897635013-2079
CREATE UNIQUE INDEX UN_TIPO_STRUT_DOC ON DEC_TIPO_STRUT_DOC(ID_STRUT, NM_TIPO_STRUT_DOC);

-- changeset root:1751897635013-2080
ALTER TABLE DEC_TIPO_STRUT_DOC ADD CONSTRAINT UN_TIPO_STRUT_DOC UNIQUE (ID_STRUT, NM_TIPO_STRUT_DOC) USING INDEX UN_TIPO_STRUT_DOC;

-- changeset root:1751897635013-2081
CREATE UNIQUE INDEX UN_TIPO_STRUT_DOC_AMS ON DEC_TIPO_STRUT_DOC_AMMESSO(ID_TIPO_DOC, ID_TIPO_STRUT_DOC);

-- changeset root:1751897635013-2082
ALTER TABLE DEC_TIPO_STRUT_DOC_AMMESSO ADD CONSTRAINT UN_TIPO_STRUT_DOC_AMS UNIQUE (ID_TIPO_DOC, ID_TIPO_STRUT_DOC) USING INDEX UN_TIPO_STRUT_DOC_AMS;

-- changeset root:1751897635013-2083
CREATE UNIQUE INDEX UN_TIP_STRUT_UD_REG ON DEC_TIPO_STRUT_UD_REG(ID_REGISTRO_UNITA_DOC, ID_TIPO_STRUT_UNITA_DOC);

-- changeset root:1751897635013-2084
ALTER TABLE DEC_TIPO_STRUT_UD_REG ADD CONSTRAINT UN_TIP_STRUT_UD_REG UNIQUE (ID_REGISTRO_UNITA_DOC, ID_TIPO_STRUT_UNITA_DOC) USING INDEX UN_TIP_STRUT_UD_REG;

-- changeset root:1751897635013-2085
CREATE UNIQUE INDEX UN_TIP_STRUT_UD_SIS_VERS ON DEC_TIPO_STRUT_UD_SIS_VERS(ID_TIPO_STRUT_UNITA_DOC, ID_SISTEMA_VERSANTE);

-- changeset root:1751897635013-2086
ALTER TABLE DEC_TIPO_STRUT_UD_SIS_VERS ADD CONSTRAINT UN_TIP_STRUT_UD_SIS_VERS UNIQUE (ID_TIPO_STRUT_UNITA_DOC, ID_SISTEMA_VERSANTE) USING INDEX UN_TIP_STRUT_UD_SIS_VERS;

-- changeset root:1751897635013-2087
CREATE UNIQUE INDEX UN_TIP_STRUT_UD_XSD ON DEC_TIPO_STRUT_UD_XSD(ID_TIPO_STRUT_UNITA_DOC, ID_XSD_DATI_SPEC);

-- changeset root:1751897635013-2088
ALTER TABLE DEC_TIPO_STRUT_UD_XSD ADD CONSTRAINT UN_TIP_STRUT_UD_XSD UNIQUE (ID_TIPO_STRUT_UNITA_DOC, ID_XSD_DATI_SPEC) USING INDEX UN_TIP_STRUT_UD_XSD;

-- changeset root:1751897635013-2089
CREATE UNIQUE INDEX UN_TIP_STRUT_UNI_DOC ON DEC_TIPO_STRUT_UNITA_DOC(ID_TIPO_UNITA_DOC, NM_TIPO_STRUT_UNITA_DOC);

-- changeset root:1751897635013-2090
ALTER TABLE DEC_TIPO_STRUT_UNITA_DOC ADD CONSTRAINT UN_TIP_STRUT_UNI_DOC UNIQUE (ID_TIPO_UNITA_DOC, NM_TIPO_STRUT_UNITA_DOC) USING INDEX UN_TIP_STRUT_UNI_DOC;

-- changeset root:1751897635013-2091
CREATE UNIQUE INDEX UN_TIP_UNI_DOC ON DEC_TIPO_UNITA_DOC(ID_STRUT, NM_TIPO_UNITA_DOC);

-- changeset root:1751897635013-2092
ALTER TABLE DEC_TIPO_UNITA_DOC ADD CONSTRAINT UN_TIP_UNI_DOC UNIQUE (ID_STRUT, NM_TIPO_UNITA_DOC) USING INDEX UN_TIP_UNI_DOC;

-- changeset root:1751897635013-2093
CREATE UNIQUE INDEX UN_TIP_UNI_DOC_AMS ON DEC_TIPO_UNITA_DOC_AMMESSO(ID_TIPO_UNITA_DOC, ID_REGISTRO_UNITA_DOC);

-- changeset root:1751897635013-2094
ALTER TABLE DEC_TIPO_UNITA_DOC_AMMESSO ADD CONSTRAINT UN_TIP_UNI_DOC_AMS UNIQUE (ID_TIPO_UNITA_DOC, ID_REGISTRO_UNITA_DOC) USING INDEX UN_TIP_UNI_DOC_AMS;

-- changeset root:1751897635013-2095
CREATE UNIQUE INDEX UN_TIREPORTSERVIZIO ON DEC_REPORT_SERVIZIO_VERIFICA_COMP_DOC(TI_REPORT, ID_SERVIZIO_VERIFICA_COMP_DOC);

-- changeset root:1751897635013-2096
ALTER TABLE DEC_REPORT_SERVIZIO_VERIFICA_COMP_DOC ADD CONSTRAINT UN_TIREPORTSERVIZIO UNIQUE (TI_REPORT, ID_SERVIZIO_VERIFICA_COMP_DOC) USING INDEX UN_TIREPORTSERVIZIO;

-- changeset root:1751897635013-2097
CREATE UNIQUE INDEX UN_TITOL ON DEC_TITOL(ID_STRUT, NM_TITOL);

-- changeset root:1751897635013-2098
ALTER TABLE DEC_TITOL ADD CONSTRAINT UN_TITOL UNIQUE (ID_STRUT, NM_TITOL) USING INDEX UN_TITOL;

-- changeset root:1751897635013-2099
CREATE UNIQUE INDEX UN_TI_EVE_STATO_ELE_VRS ON DEC_TI_EVE_STATO_ELENCO_VERS(CD_TI_EVE_STATO_ELENCO_VERS);

-- changeset root:1751897635013-2100
ALTER TABLE DEC_TI_EVE_STATO_ELENCO_VERS ADD CONSTRAINT UN_TI_EVE_STATO_ELE_VRS UNIQUE (CD_TI_EVE_STATO_ELENCO_VERS) USING INDEX UN_TI_EVE_STATO_ELE_VRS;

-- changeset root:1751897635013-2101
CREATE UNIQUE INDEX UN_TI_FASC ON DEC_TIPO_FASCICOLO(ID_STRUT, NM_TIPO_FASCICOLO);

-- changeset root:1751897635013-2102
ALTER TABLE DEC_TIPO_FASCICOLO ADD CONSTRAINT UN_TI_FASC UNIQUE (ID_STRUT, NM_TIPO_FASCICOLO) USING INDEX UN_TI_FASC;

-- changeset root:1751897635013-2103
CREATE UNIQUE INDEX UN_TI_NOT_SER ON DEC_TIPO_NOTA_SERIE(CD_TIPO_NOTA_SERIE);

-- changeset root:1751897635013-2104
ALTER TABLE DEC_TIPO_NOTA_SERIE ADD CONSTRAINT UN_TI_NOT_SER UNIQUE (CD_TIPO_NOTA_SERIE) USING INDEX UN_TI_NOT_SER;

-- changeset root:1751897635013-2105
CREATE UNIQUE INDEX UN_TI_NOT_UD ON DEC_TIPO_NOTA_UNITA_DOC(CD_TIPO_NOTA_UNITA_DOC);

-- changeset root:1751897635013-2106
ALTER TABLE DEC_TIPO_NOTA_UNITA_DOC ADD CONSTRAINT UN_TI_NOT_UD UNIQUE (CD_TIPO_NOTA_UNITA_DOC) USING INDEX UN_TI_NOT_UD;

-- changeset root:1751897635013-2107
CREATE UNIQUE INDEX UN_TI_SER ON DEC_TIPO_SERIE(ID_STRUT, NM_TIPO_SERIE);

-- changeset root:1751897635013-2108
ALTER TABLE DEC_TIPO_SERIE ADD CONSTRAINT UN_TI_SER UNIQUE (ID_STRUT, NM_TIPO_SERIE) USING INDEX UN_TI_SER;

-- changeset root:1751897635013-2109
CREATE UNIQUE INDEX UN_TI_SER_AUTOM ON DEC_TIPO_SERIE_CREATA_AUTOM(ID_TIPO_SERIE, DT_CREA_AUTOM);

-- changeset root:1751897635013-2110
ALTER TABLE DEC_TIPO_SERIE_CREATA_AUTOM ADD CONSTRAINT UN_TI_SER_AUTOM UNIQUE (ID_TIPO_SERIE, DT_CREA_AUTOM) USING INDEX UN_TI_SER_AUTOM;

-- changeset root:1751897635013-2111
CREATE UNIQUE INDEX UN_TI_SER_UD ON DEC_TIPO_SERIE_UD(ID_TIPO_SERIE, ID_REGISTRO_UNITA_DOC, ID_TIPO_UNITA_DOC);

-- changeset root:1751897635013-2112
ALTER TABLE DEC_TIPO_SERIE_UD ADD CONSTRAINT UN_TI_SER_UD UNIQUE (ID_TIPO_SERIE, ID_REGISTRO_UNITA_DOC, ID_TIPO_UNITA_DOC) USING INDEX UN_TI_SER_UD;

-- changeset root:1751897635013-2113
CREATE UNIQUE INDEX UN_TI_UD_USR_VERS ON MON_TIPO_UNITA_DOC_USER_VERS(ID_TIPO_UNITA_DOC, ID_USER_IAM, DT_RIF_CONTA);

-- changeset root:1751897635013-2114
ALTER TABLE MON_TIPO_UNITA_DOC_USER_VERS ADD CONSTRAINT UN_TI_UD_USR_VERS UNIQUE (ID_TIPO_UNITA_DOC, ID_USER_IAM, DT_RIF_CONTA) USING INDEX UN_TI_UD_USR_VERS;

-- changeset root:1751897635013-2115
CREATE UNIQUE INDEX UN_TRSF_TIPO_RAP ON DEC_TRASFORM_TIPO_RAPPR(ID_TIPO_RAPPR_COMP, NM_TRASFORM, CD_VERSIONE_TRASFORM);

-- changeset root:1751897635013-2116
ALTER TABLE DEC_TRASFORM_TIPO_RAPPR ADD CONSTRAINT UN_TRSF_TIPO_RAP UNIQUE (ID_TIPO_RAPPR_COMP, NM_TRASFORM, CD_VERSIONE_TRASFORM) USING INDEX UN_TRSF_TIPO_RAP;

-- changeset root:1751897635013-2117
CREATE UNIQUE INDEX UN_TRSF_TIPO_RAP_HASH ON DEC_TRASFORM_TIPO_RAPPR(ID_TIPO_RAPPR_COMP, DS_HASH_FILE_TRASFORM);

-- changeset root:1751897635013-2118
ALTER TABLE DEC_TRASFORM_TIPO_RAPPR ADD CONSTRAINT UN_TRSF_TIPO_RAP_HASH UNIQUE (ID_TIPO_RAPPR_COMP, DS_HASH_FILE_TRASFORM) USING INDEX UN_TRSF_TIPO_RAP_HASH;

-- changeset root:1751897635013-2119
CREATE UNIQUE INDEX UN_UD_AIP_FASC_DAELAB ON FAS_UD_AIP_FASCICOLO_DA_ELAB(ID_AIP_FASCICOLO_DA_ELAB, ID_VER_INDICE_AIP);

-- changeset root:1751897635013-2120
ALTER TABLE FAS_UD_AIP_FASCICOLO_DA_ELAB ADD CONSTRAINT UN_UD_AIP_FASC_DAELAB UNIQUE (ID_AIP_FASCICOLO_DA_ELAB, ID_VER_INDICE_AIP) USING INDEX UN_UD_AIP_FASC_DAELAB;

-- changeset root:1751897635013-2121
CREATE UNIQUE INDEX UN_UD_ANNUL_DA_ELAB ON TMP_ARO_UD_ANNUL_DA_ELAB(ID_UNITA_DOC);

-- changeset root:1751897635013-2122
ALTER TABLE TMP_ARO_UD_ANNUL_DA_ELAB ADD CONSTRAINT UN_UD_ANNUL_DA_ELAB UNIQUE (ID_UNITA_DOC) USING INDEX UN_UD_ANNUL_DA_ELAB;

-- changeset root:1751897635013-2123
CREATE UNIQUE INDEX UN_UD_APP_VER_SER ON ARO_UD_APPART_VER_SERIE(ID_CONTENUTO_VER_SERIE, ID_UNITA_DOC);

-- changeset root:1751897635013-2124
ALTER TABLE ARO_UD_APPART_VER_SERIE ADD CONSTRAINT UN_UD_APP_VER_SER UNIQUE (ID_CONTENUTO_VER_SERIE, ID_UNITA_DOC) USING INDEX UN_UD_APP_VER_SER;

-- changeset root:1751897635013-2125
CREATE UNIQUE INDEX UN_UD_ERR_FILE_INP ON SER_UD_ERR_FILE_INPUT(ID_ERR_FILE_INPUT, ID_UNITA_DOC);

-- changeset root:1751897635013-2126
ALTER TABLE SER_UD_ERR_FILE_INPUT ADD CONSTRAINT UN_UD_ERR_FILE_INP UNIQUE (ID_ERR_FILE_INPUT, ID_UNITA_DOC) USING INDEX UN_UD_ERR_FILE_INP;

-- changeset root:1751897635013-2127
CREATE UNIQUE INDEX UN_UD_FASC ON FAS_UNITA_DOC_FASCICOLO(ID_FASCICOLO, ID_UNITA_DOC);

-- changeset root:1751897635013-2128
ALTER TABLE FAS_UNITA_DOC_FASCICOLO ADD CONSTRAINT UN_UD_FASC UNIQUE (ID_FASCICOLO, ID_UNITA_DOC) USING INDEX UN_UD_FASC;

-- changeset root:1751897635013-2129
CREATE UNIQUE INDEX UN_UD_NOVERS ON VRS_UNITA_DOC_NON_VERS(ID_STRUT, CD_REGISTRO_KEY_UNITA_DOC, AA_KEY_UNITA_DOC, CD_KEY_UNITA_DOC);

-- changeset root:1751897635013-2130
ALTER TABLE VRS_UNITA_DOC_NON_VERS ADD CONSTRAINT UN_UD_NOVERS UNIQUE (ID_STRUT, CD_REGISTRO_KEY_UNITA_DOC, AA_KEY_UNITA_DOC, CD_KEY_UNITA_DOC) USING INDEX UN_UD_NOVERS;

-- changeset root:1751897635013-2131
CREATE UNIQUE INDEX UN_UD_NOVERS_ERR ON SER_UD_NON_VERS_ERR(ID_ERR_CONTENUTO_VER_SERIE, ID_UNITA_DOC_NON_VERS);

-- changeset root:1751897635013-2132
ALTER TABLE SER_UD_NON_VERS_ERR ADD CONSTRAINT UN_UD_NOVERS_ERR UNIQUE (ID_ERR_CONTENUTO_VER_SERIE, ID_UNITA_DOC_NON_VERS) USING INDEX UN_UD_NOVERS_ERR;

-- changeset root:1751897635013-2133
CREATE UNIQUE INDEX UN_UD_VERS_DAELB_ELE ON ELV_UD_VERS_DA_ELAB_ELENCO(ID_UNITA_DOC);

-- changeset root:1751897635013-2134
ALTER TABLE ELV_UD_VERS_DA_ELAB_ELENCO ADD CONSTRAINT UN_UD_VERS_DAELB_ELE UNIQUE (ID_UNITA_DOC) USING INDEX UN_UD_VERS_DAELB_ELE;

-- changeset root:1751897635013-2135
CREATE UNIQUE INDEX UN_UNI_DOC ON ARO_UNITA_DOC(ID_STRUT, AA_KEY_UNITA_DOC, CD_REGISTRO_KEY_UNITA_DOC, CD_KEY_UNITA_DOC, DT_ANNUL);

-- changeset root:1751897635013-2136
ALTER TABLE ARO_UNITA_DOC ADD CONSTRAINT UN_UNI_DOC UNIQUE (ID_STRUT, AA_KEY_UNITA_DOC, CD_REGISTRO_KEY_UNITA_DOC, CD_KEY_UNITA_DOC, DT_ANNUL) USING INDEX UN_UNI_DOC;

-- changeset root:1751897635013-2137
CREATE UNIQUE INDEX UN_UNI_DOC_ANNUL ON TMP_ARO_UNITA_DOC_ANNUL(ID_STRUT, CD_REGISTRO_KEY_UNITA_DOC, AA_KEY_UNITA_DOC, CD_KEY_UNITA_DOC);

-- changeset root:1751897635013-2138
ALTER TABLE TMP_ARO_UNITA_DOC_ANNUL ADD CONSTRAINT UN_UNI_DOC_ANNUL UNIQUE (ID_STRUT, CD_REGISTRO_KEY_UNITA_DOC, AA_KEY_UNITA_DOC, CD_KEY_UNITA_DOC) USING INDEX UN_UNI_DOC_ANNUL;

-- changeset root:1751897635013-2139
CREATE UNIQUE INDEX UN_UNI_DOC_REC ON REC_UNITA_DOC_RECUP(ID_UNITA_DOC);

-- changeset root:1751897635013-2140
ALTER TABLE REC_UNITA_DOC_RECUP ADD CONSTRAINT UN_UNI_DOC_REC UNIQUE (ID_UNITA_DOC) USING INDEX UN_UNI_DOC_REC;

-- changeset root:1751897635013-2141
CREATE UNIQUE INDEX UN_UNI_ORG_RESP_FASC ON FAS_UNI_ORG_RESP_FASCICOLO(ID_FASCICOLO, CD_UNI_ORG_RESP);

-- changeset root:1751897635013-2142
ALTER TABLE FAS_UNI_ORG_RESP_FASCICOLO ADD CONSTRAINT UN_UNI_ORG_RESP_FASC UNIQUE (ID_FASCICOLO, CD_UNI_ORG_RESP) USING INDEX UN_UNI_ORG_RESP_FASC;

-- changeset root:1751897635013-2143
CREATE UNIQUE INDEX UN_UPD_COMP_UNITA_DOC ON ARO_UPD_COMP_UNITA_DOC(ID_UPD_DOC_UNITA_DOC, ID_COMP_DOC);

-- changeset root:1751897635013-2144
ALTER TABLE ARO_UPD_COMP_UNITA_DOC ADD CONSTRAINT UN_UPD_COMP_UNITA_DOC UNIQUE (ID_UPD_DOC_UNITA_DOC, ID_COMP_DOC) USING INDEX UN_UPD_COMP_UNITA_DOC;

-- changeset root:1751897635013-2145
CREATE UNIQUE INDEX UN_UPD_DOC_UD ON ARO_UPD_DOC_UNITA_DOC(ID_UPD_UNITA_DOC, ID_DOC);

-- changeset root:1751897635013-2146
ALTER TABLE ARO_UPD_DOC_UNITA_DOC ADD CONSTRAINT UN_UPD_DOC_UD UNIQUE (ID_UPD_UNITA_DOC, ID_DOC) USING INDEX UN_UPD_DOC_UD;

-- changeset root:1751897635013-2147
CREATE UNIQUE INDEX UN_UPD_LNK_UD ON ARO_UPD_LINK_UNITA_DOC(ID_UPD_UNITA_DOC, CD_REGISTRO_KEY_UNITA_DOC_LINK, AA_KEY_UNITA_DOC_LINK, CD_KEY_UNITA_DOC_LINK);

-- changeset root:1751897635013-2148
ALTER TABLE ARO_UPD_LINK_UNITA_DOC ADD CONSTRAINT UN_UPD_LNK_UD UNIQUE (ID_UPD_UNITA_DOC, CD_REGISTRO_KEY_UNITA_DOC_LINK, AA_KEY_UNITA_DOC_LINK, CD_KEY_UNITA_DOC_LINK) USING INDEX UN_UPD_LNK_UD;

-- changeset root:1751897635013-2149
CREATE UNIQUE INDEX UN_UPD_UD ON ARO_UPD_UNITA_DOC(ID_UNITA_DOC, PG_UPD_UNITA_DOC);

-- changeset root:1751897635013-2150
ALTER TABLE ARO_UPD_UNITA_DOC ADD CONSTRAINT UN_UPD_UD UNIQUE (ID_UNITA_DOC, PG_UPD_UNITA_DOC) USING INDEX UN_UPD_UD;

-- changeset root:1751897635013-2151
CREATE UNIQUE INDEX UN_UPD_UD_DAELB_ELE ON ELV_UPD_UD_DA_ELAB_ELENCO(ID_UPD_UNITA_DOC);

-- changeset root:1751897635013-2152
ALTER TABLE ELV_UPD_UD_DA_ELAB_ELENCO ADD CONSTRAINT UN_UPD_UD_DAELB_ELE UNIQUE (ID_UPD_UNITA_DOC) USING INDEX UN_UPD_UD_DAELB_ELE;

-- changeset root:1751897635013-2153
CREATE UNIQUE INDEX UN_UPD_UD_IX_AIP_DA_ELAB ON ARO_UPD_UD_INDICE_AIP_DA_ELAB(ID_INDICE_AIP_DA_ELAB, ID_UPD_UNITA_DOC);

-- changeset root:1751897635013-2154
ALTER TABLE ARO_UPD_UD_INDICE_AIP_DA_ELAB ADD CONSTRAINT UN_UPD_UD_IX_AIP_DA_ELAB UNIQUE (ID_INDICE_AIP_DA_ELAB, ID_UPD_UNITA_DOC) USING INDEX UN_UPD_UD_IX_AIP_DA_ELAB;

-- changeset root:1751897635013-2155
CREATE UNIQUE INDEX UN_UPD_UD_KO ON VRS_UPD_UNITA_DOC_KO(ID_STRUT, AA_KEY_UNITA_DOC, CD_REGISTRO_KEY_UNITA_DOC, CD_KEY_UNITA_DOC);

-- changeset root:1751897635013-2156
ALTER TABLE VRS_UPD_UNITA_DOC_KO ADD CONSTRAINT UN_UPD_UD_KO UNIQUE (ID_STRUT, CD_REGISTRO_KEY_UNITA_DOC, AA_KEY_UNITA_DOC, CD_KEY_UNITA_DOC) USING INDEX UN_UPD_UD_KO;

-- changeset root:1751897635013-2157
CREATE UNIQUE INDEX UN_UPD_UD_VER_IX_AIP_UD ON ARO_UPD_UD_VER_INDICE_AIP_UD(ID_VER_INDICE_AIP, ID_UPD_UNITA_DOC);

-- changeset root:1751897635013-2158
ALTER TABLE ARO_UPD_UD_VER_INDICE_AIP_UD ADD CONSTRAINT UN_UPD_UD_VER_IX_AIP_UD UNIQUE (ID_VER_INDICE_AIP, ID_UPD_UNITA_DOC) USING INDEX UN_UPD_UD_VER_IX_AIP_UD;

-- changeset root:1751897635013-2159
CREATE UNIQUE INDEX UN_URL_DISTR_CRL ON FIR_URL_DISTRIB_CRL(ID_CERTIF_CA, NI_ORD_URL_DISTRIB_CRL);

-- changeset root:1751897635013-2160
ALTER TABLE FIR_URL_DISTRIB_CRL ADD CONSTRAINT UN_URL_DISTR_CRL UNIQUE (ID_CERTIF_CA, NI_ORD_URL_DISTRIB_CRL) USING INDEX UN_URL_DISTR_CRL;

-- changeset root:1751897635013-2161
CREATE UNIQUE INDEX UN_URL_DISTR_OCSP ON FIR_URL_DISTRIB_OCSP(ID_CERTIF_CA, NI_ORD_URL_DISTRIB_OCSP);

-- changeset root:1751897635013-2162
ALTER TABLE FIR_URL_DISTRIB_OCSP ADD CONSTRAINT UN_URL_DISTR_OCSP UNIQUE (ID_CERTIF_CA, NI_ORD_URL_DISTRIB_OCSP) USING INDEX UN_URL_DISTR_OCSP;

-- changeset root:1751897635013-2163
CREATE UNIQUE INDEX UN_URN_ELE_VRS ON ELV_URN_ELENCO_VERS(ID_ELENCO_VERS, TI_URN);

-- changeset root:1751897635013-2164
ALTER TABLE ELV_URN_ELENCO_VERS ADD CONSTRAINT UN_URN_ELE_VRS UNIQUE (ID_ELENCO_VERS, TI_URN) USING INDEX UN_URN_ELE_VRS;

-- changeset root:1751897635013-2165
CREATE UNIQUE INDEX UN_URN_FILE_ELE_VRS_NEW ON ELV_URN_FILE_ELENCO_VERS(ID_FILE_ELENCO_VERS, TI_URN);

-- changeset root:1751897635013-2166
ALTER TABLE ELV_URN_FILE_ELENCO_VERS ADD CONSTRAINT UN_URN_FILE_ELE_VRS_NEW UNIQUE (ID_FILE_ELENCO_VERS, TI_URN) USING INDEX UN_URN_FILE_ELE_VRS_NEW;

-- changeset root:1751897635013-2167
CREATE UNIQUE INDEX UN_URN_FILE_VER_SER ON SER_URN_FILE_VER_SERIE(ID_FILE_VER_SERIE, TI_URN);

-- changeset root:1751897635013-2168
ALTER TABLE SER_URN_FILE_VER_SERIE ADD CONSTRAINT UN_URN_FILE_VER_SER UNIQUE (ID_FILE_VER_SERIE, TI_URN) USING INDEX UN_URN_FILE_VER_SER;

-- changeset root:1751897635013-2169
CREATE UNIQUE INDEX UN_URN_IX_VOL_SER ON SER_URN_IX_VOL_VER_SERIE(ID_IX_VOL_VER_SERIE, TI_URN);

-- changeset root:1751897635013-2170
ALTER TABLE SER_URN_IX_VOL_VER_SERIE ADD CONSTRAINT UN_URN_IX_VOL_SER UNIQUE (ID_IX_VOL_VER_SERIE, TI_URN) USING INDEX UN_URN_IX_VOL_SER;

-- changeset root:1751897635013-2171
CREATE UNIQUE INDEX UN_URN_REPORT ON FIR_URN_REPORT(ID_REPORT, TI_URN);

-- changeset root:1751897635013-2172
ALTER TABLE FIR_URN_REPORT ADD CONSTRAINT UN_URN_REPORT UNIQUE (ID_REPORT, TI_URN) USING INDEX UN_URN_REPORT;

-- changeset root:1751897635013-2173
CREATE UNIQUE INDEX UN_URN_VER_IX_AIP_UD ON ARO_URN_VER_INDICE_AIP_UD(ID_VER_INDICE_AIP, TI_URN);

-- changeset root:1751897635013-2174
ALTER TABLE ARO_URN_VER_INDICE_AIP_UD ADD CONSTRAINT UN_URN_VER_IX_AIP_UD UNIQUE (ID_VER_INDICE_AIP, TI_URN) USING INDEX UN_URN_VER_IX_AIP_UD;

-- changeset root:1751897635013-2175
CREATE UNIQUE INDEX UN_URN_XML_SES_VRS ON VRS_URN_XML_SESSIONE_VERS(ID_XML_DATI_SESSIONE_VERS, TI_URN);

-- changeset root:1751897635013-2176
ALTER TABLE VRS_URN_XML_SESSIONE_VERS ADD CONSTRAINT UN_URN_XML_SES_VRS UNIQUE (ID_XML_DATI_SESSIONE_VERS, TI_URN) USING INDEX UN_URN_XML_SES_VRS;

-- changeset root:1751897635013-2177
CREATE UNIQUE INDEX UN_URN_XML_SES_VRS_KO ON VRS_URN_XML_SESSIONE_VERS_KO(ID_XML_DATI_SESSIONE_VERS_KO, TI_URN);

-- changeset root:1751897635013-2178
ALTER TABLE VRS_URN_XML_SESSIONE_VERS_KO ADD CONSTRAINT UN_URN_XML_SES_VRS_KO UNIQUE (ID_XML_DATI_SESSIONE_VERS_KO, TI_URN) USING INDEX UN_URN_XML_SES_VRS_KO;

-- changeset root:1751897635013-2179
CREATE UNIQUE INDEX UN_USO_FMT_FIL_STD ON DEC_USO_FORMATO_FILE_STANDARD(ID_FORMATO_FILE_DOC, NI_ORD_USO);

-- changeset root:1751897635013-2180
ALTER TABLE DEC_USO_FORMATO_FILE_STANDARD ADD CONSTRAINT UN_USO_FMT_FIL_STD UNIQUE (ID_FORMATO_FILE_DOC, NI_ORD_USO) USING INDEX UN_USO_FMT_FIL_STD;

-- changeset root:1751897635013-2181
CREATE UNIQUE INDEX UN_USO_MDL_XSD_COMPDOC ON DEC_USO_MODELLO_XSD_COMP_DOC(ID_MODELLO_XSD_UD, ID_TIPO_COMP_DOC);

-- changeset root:1751897635013-2182
ALTER TABLE DEC_USO_MODELLO_XSD_COMP_DOC ADD CONSTRAINT UN_USO_MDL_XSD_COMPDOC UNIQUE (ID_MODELLO_XSD_UD, ID_TIPO_COMP_DOC) USING INDEX UN_USO_MDL_XSD_COMPDOC;

-- changeset root:1751897635013-2183
CREATE UNIQUE INDEX UN_USO_MDL_XSD_DOC ON DEC_USO_MODELLO_XSD_DOC(ID_MODELLO_XSD_UD, ID_TIPO_DOC);

-- changeset root:1751897635013-2184
ALTER TABLE DEC_USO_MODELLO_XSD_DOC ADD CONSTRAINT UN_USO_MDL_XSD_DOC UNIQUE (ID_MODELLO_XSD_UD, ID_TIPO_DOC) USING INDEX UN_USO_MDL_XSD_DOC;

-- changeset root:1751897635013-2185
CREATE UNIQUE INDEX UN_USO_MDL_XSD_FAS ON DEC_USO_MODELLO_XSD_FASC(ID_AA_TIPO_FASCICOLO, ID_MODELLO_XSD_FASCICOLO);

-- changeset root:1751897635013-2186
ALTER TABLE DEC_USO_MODELLO_XSD_FASC ADD CONSTRAINT UN_USO_MDL_XSD_FAS UNIQUE (ID_AA_TIPO_FASCICOLO, ID_MODELLO_XSD_FASCICOLO) USING INDEX UN_USO_MDL_XSD_FAS;

-- changeset root:1751897635013-2187
CREATE UNIQUE INDEX UN_USO_MDL_XSD_UNIDOC ON DEC_USO_MODELLO_XSD_UNI_DOC(ID_MODELLO_XSD_UD, ID_TIPO_UNITA_DOC);

-- changeset root:1751897635013-2188
ALTER TABLE DEC_USO_MODELLO_XSD_UNI_DOC ADD CONSTRAINT UN_USO_MDL_XSD_UNIDOC UNIQUE (ID_MODELLO_XSD_UD, ID_TIPO_UNITA_DOC) USING INDEX UN_USO_MDL_XSD_UNIDOC;

-- changeset root:1751897635013-2189
CREATE UNIQUE INDEX UN_USO_MODL_TI_SER ON DEC_USO_MODELLO_TIPO_SERIE(ID_MODELLO_TIPO_SERIE, ID_STRUT);

-- changeset root:1751897635013-2190
ALTER TABLE DEC_USO_MODELLO_TIPO_SERIE ADD CONSTRAINT UN_USO_MODL_TI_SER UNIQUE (ID_MODELLO_TIPO_SERIE, ID_STRUT) USING INDEX UN_USO_MODL_TI_SER;

-- changeset root:1751897635013-2191
CREATE UNIQUE INDEX UN_USO_SIS_MGZ ON ORG_USO_SISTEMA_MIGRAZ(ID_STRUT, ID_SISTEMA_MIGRAZ);

-- changeset root:1751897635013-2192
ALTER TABLE ORG_USO_SISTEMA_MIGRAZ ADD CONSTRAINT UN_USO_SIS_MGZ UNIQUE (ID_STRUT, ID_SISTEMA_MIGRAZ) USING INDEX UN_USO_SIS_MGZ;

-- changeset root:1751897635013-2193
CREATE UNIQUE INDEX UN_USR_IAM ON IAM_USER(NM_USERID);

-- changeset root:1751897635013-2194
ALTER TABLE IAM_USER ADD CONSTRAINT UN_USR_IAM UNIQUE (NM_USERID) USING INDEX UN_USR_IAM;

-- changeset root:1751897635013-2195
CREATE UNIQUE INDEX UN_VAL_PAR_APL_MULTI ON APL_VAL_PARAM_APPLIC_MULTI(ID_PARAM_APPLIC, ID_AMBIENTE, DS_VALORE_PARAM_APPLIC);

-- changeset root:1751897635013-2196
ALTER TABLE APL_VAL_PARAM_APPLIC_MULTI ADD CONSTRAINT UN_VAL_PAR_APL_MULTI UNIQUE (ID_PARAM_APPLIC, ID_AMBIENTE, DS_VALORE_PARAM_APPLIC) USING INDEX UN_VAL_PAR_APL_MULTI;

-- changeset root:1751897635013-2197
CREATE UNIQUE INDEX UN_VAL_SUB_PART ON ORG_VAL_SUB_PARTITION(ID_PARTITION, CD_VAL_SUB_PARTITION);

-- changeset root:1751897635013-2198
ALTER TABLE ORG_VAL_SUB_PARTITION ADD CONSTRAINT UN_VAL_SUB_PART UNIQUE (ID_PARTITION, CD_VAL_SUB_PARTITION) USING INDEX UN_VAL_SUB_PART;

-- changeset root:1751897635013-2199
CREATE UNIQUE INDEX UN_VAL_VOCE_TITOL ON DEC_VAL_VOCE_TITOL(ID_VOCE_TITOL, DT_INI_VAL);

-- changeset root:1751897635013-2200
ALTER TABLE DEC_VAL_VOCE_TITOL ADD CONSTRAINT UN_VAL_VOCE_TITOL UNIQUE (ID_VOCE_TITOL, DT_INI_VAL) USING INDEX UN_VAL_VOCE_TITOL;

-- changeset root:1751897635013-2201
CREATE UNIQUE INDEX UN_VERSIONESERVIZIO ON DEC_SERVIZIO_VERIFICA_COMP_DOC(CD_SERVIZIO, NM_VERSIONE);

-- changeset root:1751897635013-2202
ALTER TABLE DEC_SERVIZIO_VERIFICA_COMP_DOC ADD CONSTRAINT UN_VERSIONESERVIZIO UNIQUE (CD_SERVIZIO, NM_VERSIONE) USING INDEX UN_VERSIONESERVIZIO;

-- changeset root:1751897635013-2203
CREATE UNIQUE INDEX UN_VERS_INI_COMP ON ARO_VERS_INI_COMP(ID_VERS_INI_DOC, ID_COMP_DOC);

-- changeset root:1751897635013-2204
ALTER TABLE ARO_VERS_INI_COMP ADD CONSTRAINT UN_VERS_INI_COMP UNIQUE (ID_VERS_INI_DOC, ID_COMP_DOC) USING INDEX UN_VERS_INI_COMP;

-- changeset root:1751897635013-2205
CREATE UNIQUE INDEX UN_VERS_INI_DOC ON ARO_VERS_INI_DOC(ID_VERS_INI_UNITA_DOC, ID_DOC);

-- changeset root:1751897635013-2206
ALTER TABLE ARO_VERS_INI_DOC ADD CONSTRAINT UN_VERS_INI_DOC UNIQUE (ID_VERS_INI_UNITA_DOC, ID_DOC) USING INDEX UN_VERS_INI_DOC;

-- changeset root:1751897635013-2207
CREATE UNIQUE INDEX UN_VERS_INI_UD ON ARO_VERS_INI_UNITA_DOC(ID_UNITA_DOC);

-- changeset root:1751897635013-2208
ALTER TABLE ARO_VERS_INI_UNITA_DOC ADD CONSTRAINT UN_VERS_INI_UD UNIQUE (ID_UNITA_DOC) USING INDEX UN_VERS_INI_UD;

-- changeset root:1751897635013-2209
CREATE UNIQUE INDEX UN_VER_AIP_FASC ON FAS_VER_AIP_FASCICOLO(ID_FASCICOLO, PG_VER_AIP_FASCICOLO);

-- changeset root:1751897635013-2210
ALTER TABLE FAS_VER_AIP_FASCICOLO ADD CONSTRAINT UN_VER_AIP_FASC UNIQUE (ID_FASCICOLO, PG_VER_AIP_FASCICOLO) USING INDEX UN_VER_AIP_FASC;

-- changeset root:1751897635013-2211
CREATE UNIQUE INDEX UN_VER_FIR_DTVERS ON ARO_VERIF_FIRMA_DT_VERS(ID_FIRMA_COMP);

-- changeset root:1751897635013-2212
ALTER TABLE ARO_VERIF_FIRMA_DT_VERS ADD CONSTRAINT UN_VER_FIR_DTVERS UNIQUE (ID_FIRMA_COMP) USING INDEX UN_VER_FIR_DTVERS;

-- changeset root:1751897635013-2213
CREATE UNIQUE INDEX UN_VER_FIR_VOL ON VOL_VERIF_FIRMA_VOLUME(ID_APPART_FIRMA_VOLUME, TI_VERIF);

-- changeset root:1751897635013-2214
ALTER TABLE VOL_VERIF_FIRMA_VOLUME ADD CONSTRAINT UN_VER_FIR_VOL UNIQUE (ID_APPART_FIRMA_VOLUME, TI_VERIF) USING INDEX UN_VER_FIR_VOL;

-- changeset root:1751897635013-2215
CREATE UNIQUE INDEX UN_VER_INDICE_AIP_UD_OBJECT_STORAGE ON ARO_VER_INDICE_AIP_UD_OBJECT_STORAGE(ID_VER_INDICE_AIP);

-- changeset root:1751897635013-2216
ALTER TABLE ARO_VER_INDICE_AIP_UD_OBJECT_STORAGE ADD CONSTRAINT UN_VER_INDICE_AIP_UD_OBJECT_STORAGE UNIQUE (ID_VER_INDICE_AIP) USING INDEX UN_VER_INDICE_AIP_UD_OBJECT_STORAGE;

-- changeset root:1751897635013-2217
CREATE UNIQUE INDEX UN_VER_IX_AIP_UD ON ARO_VER_INDICE_AIP_UD(ID_INDICE_AIP, PG_VER_INDICE_AIP);

-- changeset root:1751897635013-2218
ALTER TABLE ARO_VER_INDICE_AIP_UD ADD CONSTRAINT UN_VER_IX_AIP_UD UNIQUE (ID_INDICE_AIP, PG_VER_INDICE_AIP) USING INDEX UN_VER_IX_AIP_UD;

-- changeset root:1751897635013-2219
CREATE UNIQUE INDEX UN_VER_SER ON SER_VER_SERIE(ID_SERIE, PG_VER_SERIE);

-- changeset root:1751897635013-2220
ALTER TABLE SER_VER_SERIE ADD CONSTRAINT UN_VER_SER UNIQUE (ID_SERIE, PG_VER_SERIE) USING INDEX UN_VER_SER;

-- changeset root:1751897635013-2221
CREATE UNIQUE INDEX UN_VER_SER_DAELB ON SER_VER_SERIE_DA_ELAB(ID_VER_SERIE);

-- changeset root:1751897635013-2222
ALTER TABLE SER_VER_SERIE_DA_ELAB ADD CONSTRAINT UN_VER_SER_DAELB UNIQUE (ID_VER_SERIE) USING INDEX UN_VER_SER_DAELB;

-- changeset root:1751897635013-2223
CREATE UNIQUE INDEX UN_VER_SER_SES_FIR ON HSM_VER_SERIE_SESSIONE_FIRMA(ID_SESSIONE_FIRMA, ID_VER_SERIE);

-- changeset root:1751897635013-2224
ALTER TABLE HSM_VER_SERIE_SESSIONE_FIRMA ADD CONSTRAINT UN_VER_SER_SES_FIR UNIQUE (ID_SESSIONE_FIRMA, ID_VER_SERIE) USING INDEX UN_VER_SER_SES_FIR;

-- changeset root:1751897635013-2225
CREATE UNIQUE INDEX UN_VL_ATTB_DATI_SPEC ON ARO_VALORE_ATTRIB_DATI_SPEC(ID_USO_XSD_DATI_SPEC, ID_ATTRIB_DATI_SPEC);

-- changeset root:1751897635013-2226
ALTER TABLE ARO_VALORE_ATTRIB_DATI_SPEC ADD CONSTRAINT UN_VL_ATTB_DATI_SPEC UNIQUE (ID_USO_XSD_DATI_SPEC, ID_ATTRIB_DATI_SPEC) USING INDEX UN_VL_ATTB_DATI_SPEC;

-- changeset root:1751897635013-2227
CREATE UNIQUE INDEX UN_VL_ATTB_FASCICOLO ON FAS_VALORE_ATTRIB_FASCICOLO(ID_FASCICOLO, ID_ATTRIB_FASCICOLO);

-- changeset root:1751897635013-2228
ALTER TABLE FAS_VALORE_ATTRIB_FASCICOLO ADD CONSTRAINT UN_VL_ATTB_FASCICOLO UNIQUE (ID_FASCICOLO, ID_ATTRIB_FASCICOLO) USING INDEX UN_VL_ATTB_FASCICOLO;

-- changeset root:1751897635013-2229
CREATE UNIQUE INDEX UN_VOCE_CLA ON FAS_VOCE_CLASSIF(ID_FASCICOLO, CD_VOCE_CLASSIF);

-- changeset root:1751897635013-2230
ALTER TABLE FAS_VOCE_CLASSIF ADD CONSTRAINT UN_VOCE_CLA UNIQUE (ID_FASCICOLO, CD_VOCE_CLASSIF) USING INDEX UN_VOCE_CLA;

-- changeset root:1751897635013-2231
CREATE UNIQUE INDEX UN_VOCE_TITOL ON DEC_VOCE_TITOL(ID_TITOL, CD_COMPOSITO_VOCE_TITOL);

-- changeset root:1751897635013-2232
ALTER TABLE DEC_VOCE_TITOL ADD CONSTRAINT UN_VOCE_TITOL UNIQUE (ID_TITOL, CD_COMPOSITO_VOCE_TITOL) USING INDEX UN_VOCE_TITOL;

-- changeset root:1751897635013-2233
CREATE UNIQUE INDEX UN_VOL_CONS_NOME ON VOL_VOLUME_CONSERV(ID_STRUT, NM_VOLUME_CONSERV);

-- changeset root:1751897635013-2234
ALTER TABLE VOL_VOLUME_CONSERV ADD CONSTRAINT UN_VOL_CONS_NOME UNIQUE (ID_STRUT, NM_VOLUME_CONSERV) USING INDEX UN_VOL_CONS_NOME;

-- changeset root:1751897635013-2235
CREATE UNIQUE INDEX UN_VOL_VER_SER ON SER_VOL_VER_SERIE(ID_VER_SERIE, PG_VOL_VER_SERIE);

-- changeset root:1751897635013-2236
ALTER TABLE SER_VOL_VER_SERIE ADD CONSTRAINT UN_VOL_VER_SER UNIQUE (ID_VER_SERIE, PG_VOL_VER_SERIE) USING INDEX UN_VOL_VER_SER;

-- changeset root:1751897635013-2237
CREATE UNIQUE INDEX UN_VOL_VRS_UD_ANN ON VOL_VOLUME_VERS_UD_ANNUL(ID_VOLUME_CONSERV, DS_URN_UNITA_DOC_ANNUL);

-- changeset root:1751897635013-2238
ALTER TABLE VOL_VOLUME_VERS_UD_ANNUL ADD CONSTRAINT UN_VOL_VRS_UD_ANN UNIQUE (ID_VOLUME_CONSERV, DS_URN_UNITA_DOC_ANNUL) USING INDEX UN_VOL_VRS_UD_ANN;

-- changeset root:1751897635013-2239
CREATE UNIQUE INDEX UN_WARN_AA_REG ON DEC_WARN_AA_REGISTRO_UD(ID_AA_REGISTRO_UNITA_DOC, AA_REGISTRO_UNITA_DOC);

-- changeset root:1751897635013-2240
ALTER TABLE DEC_WARN_AA_REGISTRO_UD ADD CONSTRAINT UN_WARN_AA_REG UNIQUE (ID_AA_REGISTRO_UNITA_DOC, AA_REGISTRO_UNITA_DOC) USING INDEX UN_WARN_AA_REG;

-- changeset root:1751897635013-2241
CREATE UNIQUE INDEX UN_WARN_AA_TI_FASC ON DEC_WARN_AA_TIPO_FASCICOLO(ID_AA_TIPO_FASCICOLO, AA_TIPO_FASCICOLO);

-- changeset root:1751897635013-2242
ALTER TABLE DEC_WARN_AA_TIPO_FASCICOLO ADD CONSTRAINT UN_WARN_AA_TI_FASC UNIQUE (ID_AA_TIPO_FASCICOLO, AA_TIPO_FASCICOLO) USING INDEX UN_WARN_AA_TI_FASC;

-- changeset root:1751897635013-2243
CREATE UNIQUE INDEX UN_WARN_FASC ON FAS_WARN_FASCICOLO(ID_FASCICOLO, PG_WARN);

-- changeset root:1751897635013-2244
ALTER TABLE FAS_WARN_FASCICOLO ADD CONSTRAINT UN_WARN_FASC UNIQUE (ID_FASCICOLO, PG_WARN) USING INDEX UN_WARN_FASC;

-- changeset root:1751897635013-2245
CREATE UNIQUE INDEX UN_WARN_UNI_DOC ON ARO_WARN_UNITA_DOC(ID_UNITA_DOC, PG_WARN_UNITA_DOC);

-- changeset root:1751897635013-2246
ALTER TABLE ARO_WARN_UNITA_DOC ADD CONSTRAINT UN_WARN_UNI_DOC UNIQUE (ID_UNITA_DOC, PG_WARN_UNITA_DOC) USING INDEX UN_WARN_UNI_DOC;

-- changeset root:1751897635013-2247
CREATE UNIQUE INDEX UN_WARN_UPD_UD ON ARO_WARN_UPD_UNITA_DOC(ID_UPD_UNITA_DOC, PG_WARN);

-- changeset root:1751897635013-2248
ALTER TABLE ARO_WARN_UPD_UNITA_DOC ADD CONSTRAINT UN_WARN_UPD_UD UNIQUE (ID_UPD_UNITA_DOC, PG_WARN) USING INDEX UN_WARN_UPD_UD;

-- changeset root:1751897635013-2249
CREATE UNIQUE INDEX UN_XML_DAT_SES_VRS ON VRS_XML_DATI_SESSIONE_VERS(ID_DATI_SESSIONE_VERS, TI_XML_DATI);

-- changeset root:1751897635013-2250
ALTER TABLE VRS_XML_DATI_SESSIONE_VERS ADD CONSTRAINT UN_XML_DAT_SES_VRS UNIQUE (ID_DATI_SESSIONE_VERS, TI_XML_DATI) USING INDEX UN_XML_DAT_SES_VRS;

-- changeset root:1751897635013-2251
CREATE UNIQUE INDEX UN_XML_FASC ON FAS_XML_FASCICOLO(ID_FASCICOLO, TI_MODELLO_XSD);

-- changeset root:1751897635013-2252
ALTER TABLE FAS_XML_FASCICOLO ADD CONSTRAINT UN_XML_FASC UNIQUE (ID_FASCICOLO, TI_MODELLO_XSD) USING INDEX UN_XML_FASC;

-- changeset root:1751897635013-2253
CREATE UNIQUE INDEX UN_XML_MOD_SES_VRS ON VRS_XML_MODELLO_SESSIONE_VERS(ID_DATI_SESSIONE_VERS);

-- changeset root:1751897635013-2254
ALTER TABLE VRS_XML_MODELLO_SESSIONE_VERS ADD CONSTRAINT UN_XML_MOD_SES_VRS UNIQUE (ID_DATI_SESSIONE_VERS) USING INDEX UN_XML_MOD_SES_VRS;

-- changeset root:1751897635013-2255
CREATE UNIQUE INDEX UN_XML_RICH_ANN_VRS ON ARO_XML_RICH_ANNUL_VERS(ID_RICH_ANNUL_VERS, TI_XML_RICH_ANNUL_VERS);

-- changeset root:1751897635013-2256
ALTER TABLE ARO_XML_RICH_ANNUL_VERS ADD CONSTRAINT UN_XML_RICH_ANN_VRS UNIQUE (ID_RICH_ANNUL_VERS, TI_XML_RICH_ANNUL_VERS) USING INDEX UN_XML_RICH_ANN_VRS;

-- changeset root:1751897635013-2257
CREATE UNIQUE INDEX UN_XML_SES_FASC_ERR ON VRS_XML_SES_FASCICOLO_ERR(ID_SES_FASCICOLO_ERR, TI_XML);

-- changeset root:1751897635013-2258
ALTER TABLE VRS_XML_SES_FASCICOLO_ERR ADD CONSTRAINT UN_XML_SES_FASC_ERR UNIQUE (ID_SES_FASCICOLO_ERR, TI_XML) USING INDEX UN_XML_SES_FASC_ERR;

-- changeset root:1751897635013-2259
CREATE UNIQUE INDEX UN_XML_SES_FASC_KO ON VRS_XML_SES_FASCICOLO_KO(ID_STRUT, ID_SES_FASCICOLO_KO, TI_XML);

-- changeset root:1751897635013-2260
ALTER TABLE VRS_XML_SES_FASCICOLO_KO ADD CONSTRAINT UN_XML_SES_FASC_KO UNIQUE (ID_STRUT, ID_SES_FASCICOLO_KO, TI_XML) USING INDEX UN_XML_SES_FASC_KO;

-- changeset root:1751897635013-2261
CREATE UNIQUE INDEX UN_XML_SES_UPD_UD_ERR ON VRS_XML_SES_UPD_UNITA_DOC_ERR(ID_SES_UPD_UD_ERR, TI_XML);

-- changeset root:1751897635013-2262
ALTER TABLE VRS_XML_SES_UPD_UNITA_DOC_ERR ADD CONSTRAINT UN_XML_SES_UPD_UD_ERR UNIQUE (ID_SES_UPD_UD_ERR, TI_XML) USING INDEX UN_XML_SES_UPD_UD_ERR;

-- changeset root:1751897635013-2263
CREATE UNIQUE INDEX UN_XML_SES_UPD_UD_KO ON VRS_XML_SES_UPD_UNITA_DOC_KO(ID_SES_UPD_UD_KO, TI_XML);

-- changeset root:1751897635013-2264
ALTER TABLE VRS_XML_SES_UPD_UNITA_DOC_KO ADD CONSTRAINT UN_XML_SES_UPD_UD_KO UNIQUE (ID_SES_UPD_UD_KO, TI_XML) USING INDEX UN_XML_SES_UPD_UD_KO;

-- changeset root:1751897635013-2265
CREATE UNIQUE INDEX UN_XML_UPD_UNITA_DOC ON ARO_XML_UPD_UNITA_DOC(ID_UPD_UNITA_DOC, TI_XML_UPD_UNITA_DOC, ID_STRUT, AA_INI_SES);

-- changeset root:1751897635013-2266
ALTER TABLE ARO_XML_UPD_UNITA_DOC ADD CONSTRAINT UN_XML_UPD_UNITA_DOC UNIQUE (ID_UPD_UNITA_DOC, TI_XML_UPD_UNITA_DOC, ID_STRUT, AA_INI_SES) USING INDEX UN_XML_UPD_UNITA_DOC;

-- changeset root:1751897635013-2267
CREATE UNIQUE INDEX UN_XML_VERS_FASC ON FAS_XML_VERS_FASCICOLO(ID_STRUT, ID_FASCICOLO, TI_XML_VERS);

-- changeset root:1751897635013-2268
ALTER TABLE FAS_XML_VERS_FASCICOLO ADD CONSTRAINT UN_XML_VERS_FASC UNIQUE (ID_STRUT, ID_FASCICOLO, TI_XML_VERS) USING INDEX UN_XML_VERS_FASC;

-- changeset root:1751897635013-2269
CREATE UNIQUE INDEX UN_XSD_ATTB ON DEC_XSD_ATTRIB_DATI_SPEC(ID_XSD_DATI_SPEC, ID_ATTRIB_DATI_SPEC);

-- changeset root:1751897635013-2270
ALTER TABLE DEC_XSD_ATTRIB_DATI_SPEC ADD CONSTRAINT UN_XSD_ATTB UNIQUE (ID_XSD_DATI_SPEC, ID_ATTRIB_DATI_SPEC) USING INDEX UN_XSD_ATTB;

-- changeset root:1751897635013-2271
CREATE UNIQUE INDEX UN_XSD_META_VER_AIP_FASC ON FAS_XSD_META_VER_AIP_FASC(ID_META_VER_AIP_FASCICOLO, ID_MODELLO_XSD_FASCICOLO);

-- changeset root:1751897635013-2272
ALTER TABLE FAS_XSD_META_VER_AIP_FASC ADD CONSTRAINT UN_XSD_META_VER_AIP_FASC UNIQUE (ID_META_VER_AIP_FASCICOLO, ID_MODELLO_XSD_FASCICOLO) USING INDEX UN_XSD_META_VER_AIP_FASC;

-- changeset root:1751897635013-2273
CREATE INDEX ARO_AIP_RA_ID_INDICE_AIP ON ARO_AIP_RESTITUZIONE_ARCHIVIO(ID_INDICE_AIP);

-- changeset root:1751897635013-2274
CREATE INDEX ARO_AIP_REST_ARCH_ID_RICHIESTA ON ARO_AIP_RESTITUZIONE_ARCHIVIO(ID_RICHIESTA_RA);

-- changeset root:1751897635013-2275
CREATE INDEX IDX_ABIL_ORG ON IAM_ABIL_ORGANIZ(ID_ORGANIZ_APPLIC);

-- changeset root:1751897635013-2276
CREATE INDEX IDX_ABIL_TI_DATO ON IAM_ABIL_TIPO_DATO(NM_CLASSE_TIPO_DATO, ID_TIPO_DATO_APPLIC);

-- changeset root:1751897635013-2277
CREATE INDEX IDX_AIP_FASC_DAELAB_ELE ON FAS_AIP_FASCICOLO_DA_ELAB(ID_ELENCO_VERS_FASC);

-- changeset root:1751897635013-2278
CREATE INDEX IDX_AMN_PART_DS_AMMIN ON FAS_AMMIN_PARTEC(DS_AMMIN_PARTEC);

-- changeset root:1751897635013-2279
CREATE INDEX IDX_APP_COMP_VOL_COMP ON VOL_APPART_COMP_VOLUME(ID_COMP_DOC);

-- changeset root:1751897635013-2280
CREATE INDEX IDX_APP_DOC_VOL_DOC ON VOL_APPART_DOC_VOLUME(ID_DOC, FL_VALIDA);

-- changeset root:1751897635013-2281
CREATE INDEX IDX_APP_FIR_VOL_FIR ON VOL_APPART_FIRMA_VOLUME(ID_FIRMA_COMP);

-- changeset root:1751897635013-2282
CREATE INDEX IDX_APP_UNI_DOC_VOL_UNI ON VOL_APPART_UNITA_DOC_VOLUME(ID_UNITA_DOC);

-- changeset root:1751897635013-2283
CREATE INDEX IDX_ARC_SEC ON ARO_ARCHIV_SEC(ID_UNITA_DOC);

-- changeset root:1751897635013-2284
CREATE INDEX IDX_ARO_RA_ID_ENTE ON ARO_RICHIESTA_RA(ID_USER_IAM);

-- changeset root:1751897635013-2285
CREATE INDEX IDX_ARO_RA_ID_STRUT ON ARO_RICHIESTA_RA(ID_STRUT);

-- changeset root:1751897635013-2286
CREATE INDEX IDX_ATTB_DATI_SPEC_SYS_MGZ ON DEC_ATTRIB_DATI_SPEC(ID_STRUT, TI_ENTITA_SACER, NM_SISTEMA_MIGRAZ, NM_ATTRIB_DATI_SPEC);

-- changeset root:1751897635013-2287
CREATE INDEX IDX_ATTB_DATI_SPEC_TI_COMP ON DEC_ATTRIB_DATI_SPEC(ID_TIPO_COMP_DOC, NM_ATTRIB_DATI_SPEC);

-- changeset root:1751897635013-2288
CREATE INDEX IDX_ATTB_DATI_SPEC_TI_DOC ON DEC_ATTRIB_DATI_SPEC(ID_TIPO_DOC, NM_ATTRIB_DATI_SPEC);

-- changeset root:1751897635013-2289
CREATE INDEX IDX_ATTB_DATI_SPEC_TI_UNI_DOC ON DEC_ATTRIB_DATI_SPEC(ID_TIPO_UNITA_DOC, NM_ATTRIB_DATI_SPEC);

-- changeset root:1751897635013-2290
CREATE INDEX IDX_ATTB_FASC_SYS_MGZ ON DEC_ATTRIB_FASCICOLO(ID_AA_TIPO_FASCICOLO, NM_SISTEMA_MIGRAZ, NM_ATTRIB_FASCICOLO);

-- changeset root:1751897635013-2291
CREATE INDEX IDX_ATTB_FASC_TI_FASC ON DEC_ATTRIB_FASCICOLO(ID_TIPO_FASCICOLO, NM_ATTRIB_FASCICOLO);

-- changeset root:1751897635013-2292
CREATE INDEX IDX_AUT_SERV ON IAM_AUTOR_SERV(NM_SERVIZIO_WEB);

-- changeset root:1751897635013-2293
CREATE INDEX IDX_CAT_TI_UNI_DOC1 ON DEC_CATEG_TIPO_UNITA_DOC(ID_CATEG_TIPO_UNITA_DOC_PADRE);

-- changeset root:1751897635013-2294
CREATE INDEX IDX_CA_CTR_COMP_CERTIF_CA ON ARO_USO_CERTIF_CA_CONTR_COMP(ID_CERTIF_CA);

-- changeset root:1751897635013-2295
CREATE INDEX IDX_CA_CTR_COMP_CRL ON ARO_USO_CERTIF_CA_CONTR_COMP(ID_CRL_USATA);

-- changeset root:1751897635013-2296
CREATE INDEX IDX_CA_CTR_MRK_CERTIF_CA ON ARO_USO_CERTIF_CA_CONTR_MARCA(ID_CERTIF_CA);

-- changeset root:1751897635013-2297
CREATE INDEX IDX_CA_CTR_MRK_CRL ON ARO_USO_CERTIF_CA_CONTR_MARCA(ID_CRL_USATA);

-- changeset root:1751897635013-2298
CREATE INDEX IDX_CD_ERR ON VRS_ERR_SESSIONE_VERS_KO(CD_ERR);

-- changeset root:1751897635013-2299
CREATE INDEX IDX_CD_KEY_FILE ON VRS_FILE_SES_OBJECT_STORAGE(CD_KEY_FILE);

-- changeset root:1751897635013-2300
CREATE INDEX IDX_CD_KEY_FILE_TAB_KO ON VRS_FILE_SES_OBJECT_STORAGE_KO(CD_KEY_FILE);

-- changeset root:1751897635013-2301
CREATE INDEX IDX_CD_KEY_FILE_XML ON VRS_XML_DATI_SES_OBJECT_STORAGE(CD_KEY_FILE);

-- changeset root:1751897635013-2302
CREATE INDEX IDX_CD_KEY_FILE_XML_KO ON VRS_XML_DATI_SES_OBJECT_STORAGE_KO(CD_KEY_FILE);

-- changeset root:1751897635013-2303
CREATE INDEX IDX_CD_VERS_XSD_UD_2 ON ARO_VALORE_ATTRIB_DATI_SPEC_RIC_DS(CD_VERSIONE_XSD_UD);

-- changeset root:1751897635013-2304
CREATE INDEX IDX_CERTIF_CA_NI_SERIAL ON FIR_CERTIF_FIRMATARIO(ID_CERTIF_CA, NI_SERIAL_CERTIF_FIRMATARIO);

-- changeset root:1751897635013-2305
CREATE INDEX IDX_CNT_FASC_KO_TI_FASC ON MON_CONTA_FASCICOLI_KO(ID_TIPO_FASCICOLO);

-- changeset root:1751897635013-2306
CREATE INDEX IDX_CNT_FASC_TI_FASC ON MON_CONTA_FASCICOLI(ID_TIPO_FASCICOLO);

-- changeset root:1751897635013-2307
CREATE INDEX IDX_CNT_FASC_USR ON MON_CONTA_FASCICOLI(ID_USER_IAM);

-- changeset root:1751897635013-2308
CREATE INDEX IDX_CNT_SES_UPD_UD_DT ON MON_CONTA_SES_UPD_UD(DT_RIF_CONTA);

-- changeset root:1751897635013-2309
CREATE INDEX IDX_CNT_SES_UPD_UD_KO_DT ON MON_CONTA_SES_UPD_UD_KO(DT_RIF_CONTA);

-- changeset root:1751897635013-2310
CREATE INDEX IDX_CNT_UD_DOC_COMP_REG ON MON_CONTA_UD_DOC_COMP(DT_RIF_CONTA, ID_REGISTRO_UNITA_DOC);

-- changeset root:1751897635013-2311
CREATE INDEX IDX_CNT_UD_DOC_COMP_REG_RO ON MON_CONTA_UD_DOC_COMP_READ_ONLY(DT_RIF_CONTA, ID_REGISTRO_UNITA_DOC);

-- changeset root:1751897635013-2312
CREATE INDEX IDX_CNT_UD_DOC_COMP_TIPO_UD ON MON_CONTA_UD_DOC_COMP(DT_RIF_CONTA, ID_TIPO_UNITA_DOC);

-- changeset root:1751897635013-2313
CREATE INDEX IDX_CNT_UD_DOC_COMP_TIPO_UD_RO ON MON_CONTA_UD_DOC_COMP_READ_ONLY(DT_RIF_CONTA, ID_TIPO_UNITA_DOC);

-- changeset root:1751897635013-2314
CREATE INDEX IDX_COMP_DOC_FMT_CALC ON ARO_COMP_DOC(ID_FORMATO_FILE_CALC);

-- changeset root:1751897635013-2315
CREATE INDEX IDX_COMP_DOC_FMT_VERS ON ARO_COMP_DOC(ID_FORMATO_FILE_VERS);

-- changeset root:1751897635013-2316
CREATE INDEX IDX_COMP_DOC_PADRE ON ARO_COMP_DOC(ID_COMP_DOC_PADRE);

-- changeset root:1751897635013-2317
CREATE INDEX IDX_COMP_DOC_RAPPR ON ARO_COMP_DOC(ID_TIPO_RAPPR_COMP);

-- changeset root:1751897635013-2318
CREATE INDEX IDX_COMP_DOC_TIPO ON ARO_COMP_DOC(ID_TIPO_COMP_DOC);

-- changeset root:1751897635013-2319
CREATE INDEX IDX_COMP_DOC_UNI_DOC_RIF ON ARO_COMP_DOC(ID_UNITA_DOC_RIF);

-- changeset root:1751897635013-2320
CREATE INDEX IDX_CONS_VER_SER_USR ON SER_CONSIST_VER_SERIE(ID_USER_IAM);

-- changeset root:1751897635013-2321
CREATE INDEX IDX_CONTEN_VER_AIP_FASC_IX_UD ON FAS_CONTEN_VER_AIP_FASCICOLO(ID_VER_INDICE_AIP_UD);

-- changeset root:1751897635013-2322
CREATE INDEX IDX_CPO_SEL_UD_ATTB ON DEC_CAMPO_OUT_SEL_UD(ID_ATTRIB_DATI_SPEC);

-- changeset root:1751897635013-2323
CREATE INDEX IDX_CPO_VAL_SUB_STRUT_ATTB ON ORG_CAMPO_VAL_SUB_STRUT(ID_ATTRIB_DATI_SPEC);

-- changeset root:1751897635013-2324
CREATE INDEX IDX_CPO_VAL_SUB_STRUT_SUB ON ORG_CAMPO_VAL_SUB_STRUT(ID_SUB_STRUT);

-- changeset root:1751897635013-2325
CREATE INDEX IDX_CRI_FILT_MULT ON DEC_CRITERIO_FILTRO_MULTIPLO(ID_CRITERIO_RAGGR, TI_FILTRO_MULTIPLO);

-- changeset root:1751897635013-2326
CREATE INDEX IDX_CRL_DT_INI ON FIR_CRL(ID_CERTIF_CA, DT_INI_CRL);

-- changeset root:1751897635013-2327
CREATE INDEX IDX_CRL_SCAD ON FIR_CRL(ID_CERTIF_CA, DT_SCAD_CRL);

-- changeset root:1751897635013-2328
CREATE INDEX IDX_CTR_FIR_COMP_CRL ON ARO_CONTR_FIRMA_COMP(ID_CRL_USATA);

-- changeset root:1751897635013-2329
CREATE INDEX IDX_CTR_FIR_COMP_OCSP ON ARO_CONTR_FIRMA_COMP(ID_OCSP_USATA);

-- changeset root:1751897635013-2330
CREATE INDEX IDX_CTR_MRK_COMP_CRL ON ARO_CONTR_MARCA_COMP(ID_CRL_USATA);

-- changeset root:1751897635013-2331
CREATE INDEX IDX_CTR_MRK_COMP_OCSP ON ARO_CONTR_MARCA_COMP(ID_OCSP_USATA);

-- changeset root:1751897635013-2332
CREATE INDEX IDX_CTR_VER_FIR_DTVERS_CRL ON ARO_CONTR_VERIF_FIRMA_DT_VERS(ID_CRL_USATA);

-- changeset root:1751897635013-2333
CREATE INDEX IDX_CTR_VER_FIR_DTVERS_OCSP ON ARO_CONTR_VERIF_FIRMA_DT_VERS(ID_OCSP_USATA);

-- changeset root:1751897635013-2334
CREATE INDEX IDX_CTR_VER_FIR_VOL_CRL ON VOL_CONTR_VERIF_FIRMA_VOLUME(ID_CRL_USATA);

-- changeset root:1751897635013-2335
CREATE INDEX IDX_DATI_SPEC_ID_DOC_2 ON ARO_VALORE_ATTRIB_DATI_SPEC_RIC_DS(ID_DOC);

-- changeset root:1751897635013-2336
CREATE INDEX IDX_DATI_SPEC_ID_UNITA_DOC_2 ON ARO_VALORE_ATTRIB_DATI_SPEC_RIC_DS(ID_UNITA_DOC);

-- changeset root:1751897635013-2337
CREATE INDEX IDX_DOC_AGG_DAELB_ELE_STRUT ON ELV_DOC_AGG_DA_ELAB_ELENCO(ID_STRUT, AA_KEY_UNITA_DOC);

-- changeset root:1751897635013-2338
CREATE INDEX IDX_DOC_ANNUL_DA_ELAB_STAT ON TMP_ARO_DOC_ANNUL_DA_ELAB(ID_STRUT, TI_STATO_ANNUL);

-- changeset root:1751897635013-2339
CREATE INDEX IDX_DOC_ANNUL_DA_ELAB_UD ON TMP_ARO_DOC_ANNUL_DA_ELAB(ID_UD_ANNUL_DA_ELAB);

-- changeset root:1751897635013-2340
CREATE INDEX IDX_DOC_DT ON ARO_DOC(ID_STRUT, DT_CREAZIONE);

-- changeset root:1751897635013-2341
CREATE INDEX IDX_DOC_ELE_VERS ON ARO_DOC(ID_ELENCO_VERS);

-- changeset root:1751897635013-2342
CREATE INDEX IDX_DOC_TIPO ON ARO_DOC(ID_TIPO_DOC);

-- changeset root:1751897635013-2343
CREATE INDEX IDX_DT_CHIUSURA ON VRS_SESSIONE_VERS(DT_CHIUSURA);

-- changeset root:1751897635013-2344
CREATE INDEX IDX_DT_CHIUSURA_NEW ON TMP_STRUT_CALC_CONSIST_NEW(DT_RIF_CONTA);

-- changeset root:1751897635013-2345
CREATE INDEX IDX_DT_RIF_CONTA ON MON_CONTA_BY_STATO_CONSERV_NEW(DT_RIF_CONTA);

-- changeset root:1751897635013-2346
CREATE INDEX IDX_DT_RIF_CONTA_RO ON MON_CONTA_BY_STATO_CONSERV_NEW_READ_ONLY(DT_RIF_CONTA);

-- changeset root:1751897635013-2347
CREATE INDEX IDX_ELE_FASC_SES_FIR_ELE ON HSM_ELENCO_FASC_SES_FIRMA(ID_ELENCO_VERS_FASC);

-- changeset root:1751897635013-2348
CREATE INDEX IDX_ELE_SES_FIR_ELE ON HSM_ELENCO_SESSIONE_FIRMA(ID_ELENCO_VERS);

-- changeset root:1751897635013-2349
CREATE INDEX IDX_ELE_VRS_CRIT ON ELV_ELENCO_VERS(ID_CRITERIO_RAGGR);

-- changeset root:1751897635013-2350
CREATE INDEX IDX_ELE_VRS_DAELB_STRUT ON ELV_ELENCO_VERS_DA_ELAB(ID_STRUT, TI_STATO_ELENCO);

-- changeset root:1751897635013-2351
CREATE INDEX IDX_ELE_VRS_DT_CREA ON ELV_ELENCO_VERS(DT_CREAZIONE_ELENCO);

-- changeset root:1751897635013-2352
CREATE INDEX IDX_ELE_VRS_DT_CREA_ELE_IX_AIP ON ELV_ELENCO_VERS(DT_CREAZIONE_ELENCO_IX_AIP);

-- changeset root:1751897635013-2353
CREATE INDEX IDX_ELE_VRS_DT_FIR_ELE_IX_AIP ON ELV_ELENCO_VERS(DT_FIRMA_ELENCO_IX_AIP);

-- changeset root:1751897635013-2354
CREATE INDEX IDX_ELE_VRS_FASC_CRIT ON ELV_ELENCO_VERS_FASC(ID_CRITERIO_RAGGR_FASC);

-- changeset root:1751897635013-2355
CREATE INDEX IDX_ELE_VRS_FASC_DAELB_STATO ON ELV_ELENCO_VERS_FASC_DA_ELAB(ID_STRUT, TI_STATO);

-- changeset root:1751897635013-2356
CREATE INDEX IDX_ELE_VRS_FASC_STRUT ON ELV_ELENCO_VERS_FASC(ID_STRUT, TRUNC("TS_CREAZIONE_ELENCO"));

-- changeset root:1751897635013-2357
CREATE INDEX IDX_ELE_VRS_UD_ANN_UD ON ELV_ELENCO_VERS_UD_ANNUL(ID_UNITA_DOC);

-- changeset root:1751897635013-2358
CREATE INDEX IDX_ELV_FILE_ELENCO_VERS_ID_ELENCO_NEW ON ELV_FILE_ELENCO_VERS(ID_ELENCO_VERS);

-- changeset root:1751897635013-2359
CREATE INDEX IDX_ENT_CAT ON ORG_ENTE(ID_CATEG_ENTE);

-- changeset root:1751897635013-2360
CREATE INDEX IDX_ERR_FILE_INP_REC ON SER_ERR_FILE_INPUT(ID_FILE_INPUT_VER_SERIE, NI_REC_ERR);

-- changeset root:1751897635013-2361
CREATE INDEX IDX_ERR_SES_FASC_KO_ERR ON VRS_ERR_SES_FASCICOLO_KO(ID_ERR_SACER);

-- changeset root:1751897635013-2362
CREATE INDEX IDX_ERR_SES_UPD_UD_ERR ON VRS_ERR_SES_UPD_UNITA_DOC_ERR(ID_ERR_SACER);

-- changeset root:1751897635013-2363
CREATE INDEX IDX_ERR_SES_UPD_UD_ERR_CTRL ON VRS_ERR_SES_UPD_UNITA_DOC_ERR(ID_CONTROLLO_WS);

-- changeset root:1751897635013-2364
CREATE INDEX IDX_ERR_SES_UPD_UD_KO_CTRL ON VRS_ERR_SES_UPD_UNITA_DOC_KO(ID_CONTROLLO_WS);

-- changeset root:1751897635013-2365
CREATE INDEX IDX_ERR_SES_UPD_UD_KO_ERR ON VRS_ERR_SES_UPD_UNITA_DOC_KO(ID_ERR_SACER);

-- changeset root:1751897635013-2366
CREATE INDEX IDX_EVENTO_FAS ON FAS_EVENTO_FASCICOLO(ID_FASCICOLO);

-- changeset root:1751897635013-2367
CREATE INDEX IDX_EVENTO_SOG ON FAS_EVENTO_SOG(ID_SOG_FASCICOLO);

-- changeset root:1751897635013-2368
CREATE INDEX IDX_FASC_CD_NORMALIZ ON FAS_FASCICOLO(CD_KEY_NORMALIZ_FASCICOLO);

-- changeset root:1751897635013-2369
CREATE INDEX IDX_FASC_CD_PADRE ON FAS_FASCICOLO(AA_FASCICOLO_PADRE, CD_KEY_FASCICOLO_PADRE);

-- changeset root:1751897635013-2370
CREATE INDEX IDX_FASC_DAELB_ELE_AA ON ELV_FASC_DA_ELAB_ELENCO(ID_STRUT, AA_FASCICOLO);

-- changeset root:1751897635013-2371
CREATE INDEX IDX_FASC_DAELB_ELE_DT ON ELV_FASC_DA_ELAB_ELENCO(ID_STRUT, TI_STATO_FASC_DA_ELAB, TRUNC("TS_VERS_FASCICOLO"));

-- changeset root:1751897635013-2372
CREATE INDEX IDX_FASC_DT_APE ON FAS_FASCICOLO(DT_APE_FASCICOLO);

-- changeset root:1751897635013-2373
CREATE INDEX IDX_FASC_DT_VERS ON FAS_FASCICOLO(TRUNC("TS_INI_SES"));

-- changeset root:1751897635013-2374
CREATE INDEX IDX_FASC_KO_DT_INI_LAST ON VRS_FASCICOLO_KO(ID_STRUT, TRUNC("TS_INI_LAST_SES"));

-- changeset root:1751897635013-2375
CREATE INDEX IDX_FASC_KO_TI_FASC_LAST ON VRS_FASCICOLO_KO(ID_TIPO_FASCICOLO_LAST);

-- changeset root:1751897635013-2376
CREATE INDEX IDX_FAS_IND_RIF_SOG_ID_SOG_FASCICOLO ON FAS_IND_RIF_SOG(ID_SOG_FASCICOLO);

-- changeset root:1751897635013-2377
CREATE INDEX IDX_FILE_INP_VER_SER_USR ON SER_FILE_INPUT_VER_SERIE(ID_USER_IAM);

-- changeset root:1751897635013-2378
CREATE INDEX IDX_FIL_FIR_CER_CA ON FIR_FILE_PER_FIRMA(ID_CERTIF_CA);

-- changeset root:1751897635013-2379
CREATE INDEX IDX_FIL_FIR_CER_FIRMA ON FIR_FILE_PER_FIRMA(ID_CERTIF_FIRMATARIO);

-- changeset root:1751897635013-2380
CREATE INDEX IDX_FIL_FIR_CRL ON FIR_FILE_PER_FIRMA(ID_CRL);

-- changeset root:1751897635013-2381
CREATE INDEX IDX_FIR ON FIR_CERTIF_CA(DL_DN_ISSUER_CERTIF_CA, NI_SERIAL_CERTIF_CA);

-- changeset root:1751897635013-2382
CREATE INDEX IDX_FIRCA_ISSUER_SERIAL ON FIR_CERTIF_CA(DL_DN_ISSUER_CERTIF_CA, DS_SERIAL_CERTIF_CA);

-- changeset root:1751897635013-2383
CREATE INDEX IDX_FIR_COMP_BUSTA ON ARO_FIRMA_COMP(ID_BUSTA_CRITTOG);

-- changeset root:1751897635013-2384
CREATE INDEX IDX_FIR_COMP_CERTIF_FIRMATARIO ON ARO_FIRMA_COMP(ID_CERTIF_FIRMATARIO);

-- changeset root:1751897635013-2385
CREATE INDEX IDX_FIR_COMP_MARCA ON ARO_FIRMA_COMP(ID_MARCA_COMP);

-- changeset root:1751897635013-2386
CREATE INDEX IDX_FK_DATI_SESS_VERS_KO ON VRS_ERR_SESSIONE_VERS_KO(ID_DATI_SESSIONE_VERS_KO);

-- changeset root:1751897635013-2387
CREATE INDEX IDX_FK_VRS_DATI_SESSIONE_VERSKO ON VRS_XML_DATI_SESSIONE_VERS_KO(ID_DATI_SESSIONE_VERS_KO);

-- changeset root:1751897635013-2388
CREATE INDEX IDX_FK_VRS_XML_DATI_SESS_VERS_KO ON VRS_URN_XML_SESSIONE_VERS_KO(ID_XML_DATI_SESSIONE_VERS_KO);

-- changeset root:1751897635013-2389
CREATE INDEX IDX_FLT_SEL_UD_DAT_ATTB ON DEC_FILTRO_SEL_UD_DATO(ID_ATTRIB_DATI_SPEC);

-- changeset root:1751897635013-2390
CREATE INDEX IDX_FMT_FIL_AMS_FMT_FIL ON DEC_FORMATO_FILE_AMMESSO(ID_FORMATO_FILE_DOC);

-- changeset root:1751897635013-2391
CREATE INDEX IDX_ID_DEC_BACKEND_ELV_FILE_ELENCO_VERS_FAS_OS ON ELV_FILE_ELENCO_VERS_FASC_OBJECT_STORAGE(ID_DEC_BACKEND);

-- changeset root:1751897635013-2392
CREATE INDEX IDX_ID_DEC_BACKEND_META_VER_AIP_FASC_OS ON FAS_FILE_META_VER_AIP_FASC_OBJECT_STORAGE(ID_DEC_BACKEND);

-- changeset root:1751897635013-2393
CREATE INDEX IDX_ID_FASCICOLO ON FAS_XML_VERS_FASCICOLO(ID_FASCICOLO);

-- changeset root:1751897635013-2394
CREATE INDEX IDX_ID_FILE_ELENCO_VERS_FASC_ELV_FILE_ELENCO_VERS_FAS_OS ON ELV_FILE_ELENCO_VERS_FASC_OBJECT_STORAGE(ID_FILE_ELENCO_VERS_FASC);

-- changeset root:1751897635013-2395
CREATE INDEX IDX_ID_SOG_FASCICOLO ON FAS_COD_IDE_SOG(ID_SOG_FASCICOLO);

-- changeset root:1751897635013-2396
CREATE INDEX IDX_ID_STRUT ON MON_CONTA_BY_STATO_CONSERV_NEW(ID_STRUT);

-- changeset root:1751897635013-2397
CREATE INDEX IDX_ID_STRUT_ARO_FILE_VER_INDICE_AIP_UD_NEW ON ARO_FILE_VER_INDICE_AIP_UD(ID_STRUT);

-- changeset root:1751897635013-2398
CREATE INDEX IDX_ID_STRUT_ELV_FILE_ELENCO_VERS_FAS_OS ON ELV_FILE_ELENCO_VERS_FASC_OBJECT_STORAGE(ID_STRUT);

-- changeset root:1751897635013-2399
CREATE INDEX IDX_ID_STRUT_META_VER_AIP_FASC_OS ON FAS_FILE_META_VER_AIP_FASC_OBJECT_STORAGE(ID_STRUT);

-- changeset root:1751897635013-2400
CREATE INDEX IDX_ID_STRUT_RO ON MON_CONTA_BY_STATO_CONSERV_NEW_READ_ONLY(ID_STRUT);

-- changeset root:1751897635013-2401
CREATE INDEX IDX_ID_UNITA_DOC ON ARO_LOG_STATO_CONSERV_UD(ID_UNITA_DOC);

-- changeset root:1751897635013-2402
CREATE INDEX IDX_ID_VER_AIP_FASCICOLO_META_VER_AIP_FASC_OS ON FAS_FILE_META_VER_AIP_FASC_OBJECT_STORAGE(ID_VER_AIP_FASCICOLO);

-- changeset root:1751897635013-2403
CREATE INDEX IDX_ITEM_RICH_ANN_VRS_FASC ON ARO_ITEM_RICH_ANNUL_VERS(ID_FASCICOLO);

-- changeset root:1751897635013-2404
CREATE INDEX IDX_ITEM_RICH_ANN_VRS_KEY_FASC ON ARO_ITEM_RICH_ANNUL_VERS(ID_STRUT, AA_FASCICOLO, CD_KEY_FASCICOLO);

-- changeset root:1751897635013-2405
CREATE INDEX IDX_ITEM_RICH_ANN_VRS_KEY_UD ON ARO_ITEM_RICH_ANNUL_VERS(ID_STRUT, CD_REGISTRO_KEY_UNITA_DOC, AA_KEY_UNITA_DOC, CD_KEY_UNITA_DOC);

-- changeset root:1751897635013-2406
CREATE INDEX IDX_ITEM_RICH_ANN_VRS_UD ON ARO_ITEM_RICH_ANNUL_VERS(ID_UNITA_DOC);

-- changeset root:1751897635013-2407
CREATE INDEX IDX_IX_AIP_UD_DA_ELAB_ELE ON ARO_INDICE_AIP_UD_DA_ELAB(ID_ELENCO_VERS);

-- changeset root:1751897635013-2408
CREATE INDEX IDX_KEY_TOT_UD_KO_REG ON MON_KEY_TOTAL_UD_KO(ID_REGISTRO_UNITA_DOC);

-- changeset root:1751897635013-2409
CREATE INDEX IDX_KEY_TOT_UD_KO_STRUT ON MON_KEY_TOTAL_UD_KO(ID_STRUT);

-- changeset root:1751897635013-2410
CREATE INDEX IDX_KEY_TOT_UD_KO_TI_DOC_PRINC ON MON_KEY_TOTAL_UD_KO(ID_TIPO_DOC_PRINC);

-- changeset root:1751897635013-2411
CREATE INDEX IDX_KEY_TOT_UD_KO_TI_UD ON MON_KEY_TOTAL_UD_KO(ID_TIPO_UNITA_DOC);

-- changeset root:1751897635013-2412
CREATE INDEX IDX_KEY_TOT_UD_REG ON MON_KEY_TOTAL_UD(ID_REGISTRO_UNITA_DOC);

-- changeset root:1751897635013-2413
CREATE INDEX IDX_KEY_TOT_UD_STRUT ON MON_KEY_TOTAL_UD(ID_STRUT);

-- changeset root:1751897635013-2414
CREATE INDEX IDX_KEY_TOT_UD_TI_DOC_PRINC ON MON_KEY_TOTAL_UD(ID_TIPO_DOC_PRINC);

-- changeset root:1751897635013-2415
CREATE INDEX IDX_KEY_TOT_UD_TI_UD ON MON_KEY_TOTAL_UD(ID_TIPO_UNITA_DOC);

-- changeset root:1751897635013-2416
CREATE INDEX IDX_LINK_FASC_LINK ON FAS_LINK_FASCICOLO(ID_FASCICOLO_LINK);

-- changeset root:1751897635013-2417
CREATE INDEX IDX_LNK_SER_ARRIVO ON SER_LINK_SERIE(ID_SERIE_ARRIVO);

-- changeset root:1751897635013-2418
CREATE INDEX IDX_LNK_TI_SER_ARRIVO ON DEC_LINK_TIPO_SERIE(ID_TIPO_SERIE_ARRIVO);

-- changeset root:1751897635013-2419
CREATE INDEX IDX_LNK_UNI_DOC_KEY ON ARO_LINK_UNITA_DOC(ID_STRUT, CD_REGISTRO_KEY_UNITA_DOC_LINK, AA_KEY_UNITA_DOC_LINK, CD_KEY_UNITA_DOC_LINK);

-- changeset root:1751897635013-2420
CREATE INDEX IDX_LNK_UNI_DOC_LNK ON ARO_LINK_UNITA_DOC(ID_UNITA_DOC_LINK);

-- changeset root:1751897635013-2421
CREATE INDEX IDX_LOG_ELE_VRS_JOB ON ELV_LOG_ELENCO_VERS(ID_LOG_JOB);

-- changeset root:1751897635013-2422
CREATE INDEX IDX_LOG_ELE_VRS_JOB_HIST ON ELV_LOG_ELENCO_VERS_HISTORY(ID_LOG_JOB);

-- changeset root:1751897635013-2423
CREATE INDEX IDX_LOG_ELE_VRS_NOME ON ELV_LOG_ELENCO_VERS(ID_STRUT, NM_ELENCO);

-- changeset root:1751897635013-2424
CREATE INDEX IDX_LOG_ELE_VRS_NOME_HIST ON ELV_LOG_ELENCO_VERS_HISTORY(ID_STRUT, NM_ELENCO);

-- changeset root:1751897635013-2425
CREATE INDEX IDX_LOG_ELE_VRS_USR ON ELV_LOG_ELENCO_VERS(ID_USER);

-- changeset root:1751897635013-2426
CREATE INDEX IDX_LOG_ELE_VRS_USR_HIST ON ELV_LOG_ELENCO_VERS_HISTORY(ID_USER);

-- changeset root:1751897635013-2427
CREATE INDEX IDX_LOG_JOB_DT ON LOG_JOB(NM_JOB, TI_REG_LOG_JOB, DT_REG_LOG_JOB);

-- changeset root:1751897635013-2428
CREATE INDEX IDX_LOG_JOB_DT_HIST ON LOG_JOB_HISTORY(NM_JOB, TI_REG_LOG_JOB, DT_REG_LOG_JOB);

-- changeset root:1751897635013-2429
CREATE INDEX IDX_LOG_JOB_REC ON LOG_JOB(NM_JOB, NM_ENTITY_RECORD, ID_RECORD, DT_REG_LOG_JOB);

-- changeset root:1751897635013-2430
CREATE INDEX IDX_LOG_JOB_REC_HIST ON LOG_JOB_HISTORY(NM_JOB, NM_ENTITY_RECORD, ID_RECORD, DT_REG_LOG_JOB);

-- changeset root:1751897635013-2431
CREATE INDEX IDX_LOG_JOB_SERVER ON LOG_JOB(CD_IND_SERVER, TO_CHAR("DT_REG_LOG_JOB",'yyyymmddhh24'));

-- changeset root:1751897635013-2432
CREATE INDEX IDX_LOG_JOB_SERVER_HIST ON LOG_JOB_HISTORY(CD_IND_SERVER, TO_CHAR("DT_REG_LOG_JOB",'yyyymmddhh24'));

-- changeset root:1751897635013-2433
CREATE INDEX IDX_LOG_OPE_DOC ON LOG_OPER(ID_STRUT, CD_REGISTRO_KEY_UNITA_DOC, AA_KEY_UNITA_DOC, CD_KEY_UNITA_DOC, TI_DOC, PG_DOC);

-- changeset root:1751897635013-2434
CREATE INDEX IDX_LOG_OPE_DT ON LOG_OPER(ID_STRUT, DT_OPER);

-- changeset root:1751897635013-2435
CREATE INDEX IDX_LOG_OPE_JOB ON LOG_OPER(ID_LOG_JOB, DT_OPER);

-- changeset root:1751897635013-2436
CREATE INDEX IDX_LOG_OPE_USER ON LOG_OPER(ID_USER, DT_OPER);

-- changeset root:1751897635013-2437
CREATE INDEX IDX_LOG_OPE_VOL ON LOG_OPER(ID_STRUT, NM_VOLUME_CONSERV);

-- changeset root:1751897635013-2438
CREATE INDEX IDX_MDL_XSD_FASC_SIS_MGZ ON DEC_MODELLO_XSD_FASCICOLO(ID_SISTEMA_MIGRAZ);

-- changeset root:1751897635013-2439
CREATE INDEX IDX_MDL_XSD_UD ON DEC_MODELLO_XSD_UD(ID_SISTEMA_MIGRAZ);

-- changeset root:1751897635013-2440
CREATE INDEX IDX_MODL_TI_SER_TI_DOC_SPEC ON DEC_MODELLO_TIPO_SERIE(ID_TIPO_DOC_DATI_SPEC);

-- changeset root:1751897635013-2441
CREATE INDEX IDX_MODL_TI_SER_TI_UD_SPEC ON DEC_MODELLO_TIPO_SERIE(ID_TIPO_UNITA_DOC_DATI_SPEC);

-- changeset root:1751897635013-2442
CREATE INDEX IDX_MON_CONTA_UD_COMP_DOC_NEW ON MON_CONTA_UD_DOC_COMP(ID_STRUT, DT_RIF_CONTA);

-- changeset root:1751897635013-2443
CREATE INDEX IDX_MON_CONTA_UD_COMP_DOC_NEW_RO ON MON_CONTA_UD_DOC_COMP_READ_ONLY(ID_STRUT, DT_RIF_CONTA);

-- changeset root:1751897635013-2444
CREATE INDEX IDX_MRK_COMP_BUSTA ON ARO_MARCA_COMP(ID_BUSTA_CRITTOG);

-- changeset root:1751897635013-2445
CREATE INDEX IDX_MRK_COMP_CERTIF_TSA ON ARO_MARCA_COMP(ID_CERTIF_CA);

-- changeset root:1751897635013-2446
CREATE INDEX IDX_NOT_MODL_TI_SER_USR ON DEC_NOTA_MODELLO_TIPO_SERIE(ID_USER_IAM);

-- changeset root:1751897635013-2447
CREATE INDEX IDX_NOT_TI_SER_USR ON DEC_NOTA_TIPO_SERIE(ID_USER_IAM);

-- changeset root:1751897635013-2448
CREATE INDEX IDX_OPER_TITOL ON ORG_OPER_TITOL(ID_TITOL);

-- changeset root:1751897635013-2449
CREATE INDEX IDX_OPER_TITOL_INVIO ON ORG_OPER_TITOL(ID_STRUT, CD_REGISTRO_DOC_INVIO, AA_DOC_INVIO, CD_DOC_INVIO);

-- changeset root:1751897635013-2450
CREATE INDEX IDX_OPE_VOCE ON ORG_OPER_VOCE_TITOL(ID_VOCE_TITOL);

-- changeset root:1751897635013-2451
CREATE INDEX IDX_ORG_DA_REPLIC ON IAM_ORGANIZ_DA_REPLIC(ID_ORGANIZ_APPLIC);

-- changeset root:1751897635013-2452
CREATE INDEX IDX_REG_UNI_DOC_MODL ON DEC_REGISTRO_UNITA_DOC(ID_MODELLO_TIPO_SERIE);

-- changeset root:1751897635013-2453
CREATE INDEX IDX_RESP_FASC_COGN ON FAS_RESP_FASCICOLO(NM_COGN_RESP);

-- changeset root:1751897635013-2454
CREATE INDEX IDX_SEL_CRIT_RAG_FASC_CRIT ON DEC_SEL_CRITERIO_RAGGR_FASC(ID_CRITERIO_RAGGR_FASC, TI_SEL);

-- changeset root:1751897635013-2455
CREATE INDEX IDX_SEL_CRIT_RAG_FASC_MGZ ON DEC_SEL_CRITERIO_RAGGR_FASC(ID_SISTEMA_MIGRAZ);

-- changeset root:1751897635013-2456
CREATE INDEX IDX_SEL_CRIT_RAG_FASC_TI_FASC ON DEC_SEL_CRITERIO_RAGGR_FASC(ID_TIPO_FASCICOLO);

-- changeset root:1751897635013-2457
CREATE INDEX IDX_SEL_CRIT_RAG_FASC_VOCE_TIT ON DEC_SEL_CRITERIO_RAGGR_FASC(ID_VOCE_TITOL);

-- changeset root:1751897635013-2458
CREATE INDEX IDX_SER_CD_NORMALIZ ON SER_SERIE(ID_STRUT, AA_SERIE, CD_SERIE_NORMALIZ);

-- changeset root:1751897635013-2459
CREATE INDEX IDX_SES_DATI_KO_ID_STURT ON VRS_DATI_SESSIONE_VERS_KO(ID_STRUT);

-- changeset root:1751897635013-2460
CREATE INDEX IDX_SES_FASC_ERR ON VRS_SES_FASCICOLO_ERR(ID_ERR_SACER);

-- changeset root:1751897635013-2461
CREATE INDEX IDX_SES_FASC_ERR_DT ON VRS_SES_FASCICOLO_ERR(TRUNC("TS_INI_SES"));

-- changeset root:1751897635013-2462
CREATE INDEX IDX_SES_FASC_ERR_STRUT ON VRS_SES_FASCICOLO_ERR(ID_STRUT);

-- changeset root:1751897635013-2463
CREATE INDEX IDX_SES_FASC_ERR_TI_FASC ON VRS_SES_FASCICOLO_ERR(ID_TIPO_FASCICOLO);

-- changeset root:1751897635013-2464
CREATE INDEX IDX_SES_FASC_KO ON VRS_SES_FASCICOLO_KO(ID_FASCICOLO_KO);

-- changeset root:1751897635013-2465
CREATE INDEX IDX_SES_FASC_KO_DT ON VRS_SES_FASCICOLO_KO(ID_STRUT, TRUNC("TS_INI_SES"));

-- changeset root:1751897635013-2466
CREATE INDEX IDX_SES_FASC_KO_ERR_PRINC ON VRS_SES_FASCICOLO_KO(ID_ERR_SACER_PRINC);

-- changeset root:1751897635013-2467
CREATE INDEX IDX_SES_FASC_KO_FASC ON VRS_SES_FASCICOLO_KO(ID_FASCICOLO);

-- changeset root:1751897635013-2468
CREATE INDEX IDX_SES_FASC_KO_TI_FASC ON VRS_SES_FASCICOLO_KO(ID_TIPO_FASCICOLO);

-- changeset root:1751897635013-2469
CREATE INDEX IDX_SES_FASC_KO_USR ON VRS_SES_FASCICOLO_KO(ID_USER_IAM);

-- changeset root:1751897635013-2470
CREATE INDEX IDX_SES_REC_UD_RECUP ON REC_SESSIONE_RECUP(ID_UNITA_DOC_RECUP, DT_APERTURA);

-- changeset root:1751897635013-2471
CREATE INDEX IDX_SES_UPD_UD_ERR ON VRS_SES_UPD_UNITA_DOC_ERR(ID_ERR_SACER_PRINC);

-- changeset root:1751897635013-2472
CREATE INDEX IDX_SES_UPD_UD_ERR_CTRL ON VRS_SES_UPD_UNITA_DOC_ERR(ID_CONTROLLO_WS_PRINC);

-- changeset root:1751897635013-2473
CREATE INDEX IDX_SES_UPD_UD_ERR_DT ON VRS_SES_UPD_UNITA_DOC_ERR(TRUNC("TS_INI_SES"));

-- changeset root:1751897635013-2474
CREATE INDEX IDX_SES_UPD_UD_ERR_REG ON VRS_SES_UPD_UNITA_DOC_ERR(ID_REGISTRO_UNITA_DOC);

-- changeset root:1751897635013-2475
CREATE INDEX IDX_SES_UPD_UD_ERR_TI_DOC ON VRS_SES_UPD_UNITA_DOC_ERR(ID_TIPO_DOC_PRINC);

-- changeset root:1751897635013-2476
CREATE INDEX IDX_SES_UPD_UD_ERR_TI_UD ON VRS_SES_UPD_UNITA_DOC_ERR(ID_TIPO_UNITA_DOC);

-- changeset root:1751897635013-2477
CREATE INDEX IDX_SES_UPD_UD_KO ON VRS_SES_UPD_UNITA_DOC_KO(ID_UPD_UNITA_DOC_KO);

-- changeset root:1751897635013-2478
CREATE INDEX IDX_SES_UPD_UD_KO_CTRL ON VRS_SES_UPD_UNITA_DOC_KO(ID_CONTROLLO_WS_PRINC);

-- changeset root:1751897635013-2479
CREATE INDEX IDX_SES_UPD_UD_KO_DT ON VRS_SES_UPD_UNITA_DOC_KO(ID_STRUT, TRUNC("TS_INI_SES"));

-- changeset root:1751897635013-2480
CREATE INDEX IDX_SES_UPD_UD_KO_ERR ON VRS_SES_UPD_UNITA_DOC_KO(ID_ERR_SACER_PRINC);

-- changeset root:1751897635013-2481
CREATE INDEX IDX_SES_UPD_UD_KO_REG ON VRS_SES_UPD_UNITA_DOC_KO(ID_REGISTRO_UNITA_DOC);

-- changeset root:1751897635013-2482
CREATE INDEX IDX_SES_UPD_UD_KO_RIS ON VRS_SES_UPD_UNITA_DOC_KO(ID_UPD_UNITA_DOC);

-- changeset root:1751897635013-2483
CREATE INDEX IDX_SES_UPD_UD_KO_TI_DOC_PRINC ON VRS_SES_UPD_UNITA_DOC_KO(ID_TIPO_DOC_PRINC);

-- changeset root:1751897635013-2484
CREATE INDEX IDX_SES_UPD_UD_KO_TI_UD ON VRS_SES_UPD_UNITA_DOC_KO(ID_TIPO_UNITA_DOC);

-- changeset root:1751897635013-2485
CREATE INDEX IDX_SES_VRS_DOC ON VRS_SESSIONE_VERS(ID_DOC);

-- changeset root:1751897635013-2486
CREATE INDEX IDX_SES_VRS_KEY_UNI_DOC ON VRS_SESSIONE_VERS(ID_STRUT, CD_REGISTRO_KEY_UNITA_DOC, AA_KEY_UNITA_DOC, CD_KEY_UNITA_DOC);

-- changeset root:1751897635013-2487
CREATE INDEX IDX_SES_VRS_KO_DT_APERTURA ON VRS_SESSIONE_VERS_KO(DT_APERTURA);

-- changeset root:1751897635013-2488
CREATE INDEX IDX_SES_VRS_SERVER ON VRS_SESSIONE_VERS(CD_IND_SERVER, TO_CHAR("DT_APERTURA",'yyyymmddhh24'));

-- changeset root:1751897635013-2489
CREATE INDEX IDX_SES_VRS_SOSP_STRUT ON VRS_SESSIONE_VERS_SOSP(ID_STRUT);

-- changeset root:1751897635013-2490
CREATE INDEX IDX_SES_VRS_STAT ON VRS_SESSIONE_VERS(ID_STRUT, DT_APERTURA);

-- changeset root:1751897635013-2491
CREATE INDEX IDX_SES_VRS_UNI_DOC ON VRS_SESSIONE_VERS(ID_UNITA_DOC);

-- changeset root:1751897635013-2492
CREATE INDEX IDX_SES_VRS_USER ON VRS_SESSIONE_VERS(ID_USER);

-- changeset root:1751897635013-2493
CREATE INDEX IDX_SIP_VER_AIP_FASC_RICH_VRS ON FAS_SIP_VER_AIP_FASCICOLO(ID_XML_VERS_FASCICOLO_RICH);

-- changeset root:1751897635013-2494
CREATE INDEX IDX_SIP_VER_AIP_FASC_RISP_VERS ON FAS_SIP_VER_AIP_FASCICOLO(ID_XML_VERS_FASCICOLO_RISP);

-- changeset root:1751897635013-2495
CREATE INDEX IDX_SOG_FASC ON FAS_SOG_FASCICOLO(ID_FASCICOLO);

-- changeset root:1751897635013-2496
CREATE INDEX IDX_SOG_FASC_COGN ON FAS_SOG_FASCICOLO(NM_COGN_SOG);

-- changeset root:1751897635013-2497
CREATE INDEX IDX_SOG_FASC_DENOM ON FAS_SOG_FASCICOLO(DS_DENOM_SOG);

-- changeset root:1751897635013-2498
CREATE INDEX IDX_STATO_CONS_FASC_USR ON FAS_STATO_CONSERV_FASCICOLO(ID_USER_IAM);

-- changeset root:1751897635013-2499
CREATE INDEX IDX_STATO_ELE_FASC_USR ON ELV_STATO_ELENCO_VERS_FASC(ID_USER_IAM);

-- changeset root:1751897635013-2500
CREATE INDEX IDX_STATO_ELE_VRS_DT ON ELV_STATO_ELENCO_VERS(TRUNC("TS_STATO_ELENCO_VERS"));

-- changeset root:1751897635013-2501
CREATE INDEX IDX_STATO_ELE_VRS_USR ON ELV_STATO_ELENCO_VERS(ID_USER_IAM);

-- changeset root:1751897635013-2502
CREATE INDEX IDX_STATO_FASC_ELE_USR ON FAS_STATO_FASCICOLO_ELENCO(ID_USER_IAM);

-- changeset root:1751897635013-2503
CREATE INDEX IDX_STATO_SER_USR ON SER_STATO_SERIE(ID_USER_IAM);

-- changeset root:1751897635013-2504
CREATE INDEX IDX_STATO_VER_SER_USR ON SER_STATO_VER_SERIE(ID_USER_IAM);

-- changeset root:1751897635013-2505
CREATE INDEX IDX_STO_ENTE_AMB ON ORG_STORICO_ENTE_AMBIENTE(ID_AMBIENTE);

-- changeset root:1751897635013-2506
CREATE INDEX IDX_STRUT_CAT ON ORG_STRUT(ID_CATEG_STRUT);

-- changeset root:1751897635013-2507
CREATE INDEX IDX_STRUT_DOC_FMT ON ARO_STRUT_DOC(ID_TIPO_STRUT_DOC);

-- changeset root:1751897635013-2508
CREATE INDEX IDX_STRUT_ENTE_CONVENZ ON ORG_STRUT(ID_ENTE_CONVENZ);

-- changeset root:1751897635013-2509
CREATE INDEX IDX_TIPO_RAP_AMS ON DEC_TIPO_RAPPR_AMMESSO(ID_TIPO_RAPPR_COMP);

-- changeset root:1751897635013-2510
CREATE INDEX IDX_TIPO_STRUT_DOC_AMS ON DEC_TIPO_STRUT_DOC_AMMESSO(ID_TIPO_STRUT_DOC);

-- changeset root:1751897635013-2511
CREATE INDEX IDX_TIP_STRUT_UD_REG_TISTRUT ON DEC_TIPO_STRUT_UD_REG(ID_TIPO_STRUT_UNITA_DOC);

-- changeset root:1751897635013-2512
CREATE INDEX IDX_TIP_STRUT_UD_SIS_VERS_UD ON DEC_TIPO_STRUT_UD_SIS_VERS(ID_TIPO_STRUT_UNITA_DOC);

-- changeset root:1751897635013-2513
CREATE INDEX IDX_TIP_STRUT_UD_XSD ON DEC_TIPO_STRUT_UD_XSD(ID_XSD_DATI_SPEC);

-- changeset root:1751897635013-2514
CREATE INDEX IDX_TIP_UNI_DOC_ATTIV_TPUD ON DEC_TIPO_UNITA_DOC(ID_TIPO_SERV_ATTIV_TIPO_UD);

-- changeset root:1751897635013-2515
CREATE INDEX IDX_TIP_UNI_DOC_CAT ON DEC_TIPO_UNITA_DOC(ID_CATEG_TIPO_UNITA_DOC);

-- changeset root:1751897635013-2516
CREATE INDEX IDX_TIP_UNI_DOC_CONSERV_TPUD ON DEC_TIPO_UNITA_DOC(ID_TIPO_SERV_CONSERV_TIPO_UD);

-- changeset root:1751897635013-2517
CREATE INDEX IDX_TIP_UNI_DOC_MODL ON DEC_TIPO_UNITA_DOC(ID_MODELLO_TIPO_SERIE);

-- changeset root:1751897635013-2518
CREATE INDEX IDX_TIP_UNI_DOC_TI_SERV ON DEC_TIPO_UNITA_DOC(ID_TIPO_SERVIZIO);

-- changeset root:1751897635013-2519
CREATE INDEX IDX_TI_SER_MODL ON DEC_TIPO_SERIE(ID_MODELLO_TIPO_SERIE);

-- changeset root:1751897635013-2520
CREATE INDEX IDX_TI_UD_USR_VERS_USR ON MON_TIPO_UNITA_DOC_USER_VERS(ID_USER_IAM);

-- changeset root:1751897635013-2521
CREATE INDEX IDX_TMP_CALC_ID_STRUT_ANNO ON TMP_CALC_URN_INI_DA_ELAB(ID_STRUT, AA_DA_ELAB);

-- changeset root:1751897635013-2522
CREATE INDEX IDX_UD_AIP_FASC_DAELAB_VER_IX ON FAS_UD_AIP_FASCICOLO_DA_ELAB(ID_VER_INDICE_AIP);

-- changeset root:1751897635013-2523
CREATE INDEX IDX_UD_ANNUL_DA_ELAB_STAT ON TMP_ARO_UD_ANNUL_DA_ELAB(ID_STRUT, TI_STATO_ANNUL);

-- changeset root:1751897635013-2524
CREATE INDEX IDX_UD_APP_VER_SER_IX_AIP_UD ON ARO_UD_APPART_VER_SERIE(ID_VER_INDICE_AIP_UD);

-- changeset root:1751897635013-2525
CREATE INDEX IDX_UD_APP_VER_SER_PG ON ARO_UD_APPART_VER_SERIE(ID_CONTENUTO_VER_SERIE, PG_UD_SERIE);

-- changeset root:1751897635013-2526
CREATE INDEX IDX_UD_APP_VER_SER_UD ON ARO_UD_APPART_VER_SERIE(ID_UNITA_DOC);

-- changeset root:1751897635013-2527
CREATE INDEX IDX_UD_APP_VER_SER_VOL ON ARO_UD_APPART_VER_SERIE(ID_VOL_VER_SERIE);

-- changeset root:1751897635013-2528
CREATE INDEX IDX_UD_FASC_UNI_DOC ON FAS_UNITA_DOC_FASCICOLO(ID_UNITA_DOC);

-- changeset root:1751897635013-2529
CREATE INDEX IDX_UD_NOVERS_ERR_UD ON SER_UD_NON_VERS_ERR(ID_UNITA_DOC_NON_VERS);

-- changeset root:1751897635013-2530
CREATE INDEX IDX_UD_VERS_DAELB_ELE_STRUT ON ELV_UD_VERS_DA_ELAB_ELENCO(ID_STRUT, AA_KEY_UNITA_DOC);

-- changeset root:1751897635013-2531
CREATE INDEX IDX_UNI_DOC_CREA ON ARO_UNITA_DOC(ID_STRUT, DT_CREAZIONE);

-- changeset root:1751897635013-2532
CREATE INDEX IDX_UNI_DOC_ELE_VERS ON ARO_UNITA_DOC(ID_ELENCO_VERS);

-- changeset root:1751897635013-2533
CREATE INDEX IDX_UNI_DOC_KEY_NORM ON ARO_UNITA_DOC(ID_REGISTRO_UNITA_DOC, AA_KEY_UNITA_DOC, CD_KEY_UNITA_DOC_NORMALIZ);

-- changeset root:1751897635013-2534
CREATE INDEX IDX_UNI_DOC_REG ON ARO_UNITA_DOC(ID_REGISTRO_UNITA_DOC);

-- changeset root:1751897635013-2535
CREATE INDEX IDX_UNI_DOC_TIPO ON ARO_UNITA_DOC(ID_TIPO_UNITA_DOC);

-- changeset root:1751897635013-2536
CREATE INDEX IDX_UNI_DOC_USR ON ARO_UNITA_DOC(ID_USER_VERS);

-- changeset root:1751897635013-2537
CREATE INDEX IDX_UPD_COMP ON ARO_UPD_COMP_UNITA_DOC(ID_COMP_DOC);

-- changeset root:1751897635013-2538
CREATE INDEX IDX_UPD_DATI_SPEC_UPD_COMP ON ARO_UPD_DATI_SPEC_UNITA_DOC(ID_UPD_COMP_UNITA_DOC);

-- changeset root:1751897635013-2539
CREATE INDEX IDX_UPD_DATI_SPEC_UPD_COMP_OBJECT_STORAGE ON ARO_UPD_DATI_SPEC_UD_OBJECT_STORAGE(ID_UPD_COMP_UNITA_DOC);

-- changeset root:1751897635013-2540
CREATE INDEX IDX_UPD_DATI_SPEC_UPD_DOC ON ARO_UPD_DATI_SPEC_UNITA_DOC(ID_UPD_DOC_UNITA_DOC);

-- changeset root:1751897635013-2541
CREATE INDEX IDX_UPD_DATI_SPEC_UPD_DOC_OBJECT_STORAGE ON ARO_UPD_DATI_SPEC_UD_OBJECT_STORAGE(ID_UPD_DOC_UNITA_DOC);

-- changeset root:1751897635013-2542
CREATE INDEX IDX_UPD_DATI_SPEC_UPD_UD ON ARO_UPD_DATI_SPEC_UNITA_DOC(ID_UPD_UNITA_DOC);

-- changeset root:1751897635013-2543
CREATE INDEX IDX_UPD_DATI_SPEC_UPD_UD_OBJECT_STORAGE ON ARO_UPD_DATI_SPEC_UD_OBJECT_STORAGE(ID_UPD_UNITA_DOC);

-- changeset root:1751897635013-2544
CREATE INDEX IDX_UPD_DATI_SPEC_XSD ON ARO_UPD_DATI_SPEC_UNITA_DOC(ID_XSD_DATI_SPEC);

-- changeset root:1751897635013-2545
CREATE INDEX IDX_UPD_DOC ON ARO_UPD_DOC_UNITA_DOC(ID_DOC);

-- changeset root:1751897635013-2546
CREATE INDEX IDX_UPD_UD_DAELB_ELE_DT ON ELV_UPD_UD_DA_ELAB_ELENCO(ID_STRUT, TRUNC("DT_CREAZIONE"));

-- changeset root:1751897635013-2547
CREATE INDEX IDX_UPD_UD_DAELB_ELE_STRUT ON ELV_UPD_UD_DA_ELAB_ELENCO(ID_STRUT, AA_KEY_UNITA_DOC);

-- changeset root:1751897635013-2548
CREATE INDEX IDX_UPD_UD_DT ON ARO_UPD_UNITA_DOC(ID_STRUT, TRUNC("TS_INI_SES"));

-- changeset root:1751897635013-2549
CREATE INDEX IDX_UPD_UD_ELE ON ARO_UPD_UNITA_DOC(ID_ELENCO_VERS);

-- changeset root:1751897635013-2550
CREATE INDEX IDX_UPD_UD_KO_DT ON VRS_UPD_UNITA_DOC_KO(ID_STRUT, TRUNC("TS_INI_LAST_SES"));

-- changeset root:1751897635013-2551
CREATE INDEX IDX_UPD_UD_KO_REG ON VRS_UPD_UNITA_DOC_KO(ID_REGISTRO_UNITA_DOC_LAST);

-- changeset root:1751897635013-2552
CREATE INDEX IDX_UPD_UD_KO_TI_DOC_PRINC ON VRS_UPD_UNITA_DOC_KO(ID_TIPO_DOC_PRINC_LAST);

-- changeset root:1751897635013-2553
CREATE INDEX IDX_UPD_UD_KO_TI_UD ON VRS_UPD_UNITA_DOC_KO(ID_TIPO_UNITA_DOC_LAST);

-- changeset root:1751897635013-2554
CREATE INDEX IDX_UPD_UD_USR ON ARO_UPD_UNITA_DOC(ID_USER_IAM_VERS);

-- changeset root:1751897635013-2555
CREATE INDEX IDX_USO_FMT_FIL_STD ON DEC_USO_FORMATO_FILE_STANDARD(ID_FORMATO_FILE_STANDARD);

-- changeset root:1751897635013-2556
CREATE INDEX IDX_USO_MDL_XSD_FAS_MDL ON DEC_USO_MODELLO_XSD_FASC(ID_MODELLO_XSD_FASCICOLO);

-- changeset root:1751897635013-2557
CREATE INDEX IDX_USO_MODL_TI_SER_STRUT ON DEC_USO_MODELLO_TIPO_SERIE(ID_STRUT);

-- changeset root:1751897635013-2558
CREATE INDEX IDX_USO_XSD_DATI_SPEC_COMP ON ARO_USO_XSD_DATI_SPEC(ID_COMP_DOC, TI_USO_XSD);

-- changeset root:1751897635013-2559
CREATE INDEX IDX_USO_XSD_DATI_SPEC_DOC ON ARO_USO_XSD_DATI_SPEC(ID_DOC, TI_USO_XSD);

-- changeset root:1751897635013-2560
CREATE INDEX IDX_USO_XSD_DATI_SPEC_UNI_DOC ON ARO_USO_XSD_DATI_SPEC(ID_UNITA_DOC, TI_USO_XSD);

-- changeset root:1751897635013-2561
CREATE INDEX IDX_USO_XSD_DATI_SPEC_XSD ON ARO_USO_XSD_DATI_SPEC(ID_XSD_DATI_SPEC);

-- changeset root:1751897635013-2562
CREATE INDEX IDX_VAL_ATTRIB_DATI_SPEC_RIC_DS_2 ON ARO_VALORE_ATTRIB_DATI_SPEC_RIC_DS(ID_ATTRIB_DATI_SPEC, DL_VALORE, TI_ENTITA_SACER);

-- changeset root:1751897635013-2563
CREATE INDEX IDX_VAL_PAR_APL_AA_TI_FASC ON APL_VALORE_PARAM_APPLIC(ID_AA_TIPO_FASCICOLO);

-- changeset root:1751897635013-2564
CREATE INDEX IDX_VAL_PAR_APL_AMB ON APL_VALORE_PARAM_APPLIC(ID_AMBIENTE);

-- changeset root:1751897635013-2565
CREATE INDEX IDX_VAL_PAR_APL_STRUT ON APL_VALORE_PARAM_APPLIC(ID_STRUT);

-- changeset root:1751897635013-2566
CREATE INDEX IDX_VAL_PAR_APL_TI_APP ON APL_VALORE_PARAM_APPLIC(TI_APPART, DS_VALORE_PARAM_APPLIC, ID_PARAM_APPLIC);

-- changeset root:1751897635013-2567
CREATE INDEX IDX_VAL_PAR_APL_TI_UD ON APL_VALORE_PARAM_APPLIC(ID_TIPO_UNITA_DOC);

-- changeset root:1751897635013-2568
CREATE INDEX IDX_VERS_INI_COMP ON ARO_VERS_INI_COMP(ID_COMP_DOC);

-- changeset root:1751897635013-2569
CREATE INDEX IDX_VERS_INI_DATI_SPEC_COMP_OBJECT_STORAGE ON ARO_VERS_INI_DATI_SPEC_OBJECT_STORAGE(ID_VERS_INI_COMP);

-- changeset root:1751897635013-2570
CREATE INDEX IDX_VERS_INI_DATI_SPEC_DOC_OBJECT_STORAGE ON ARO_VERS_INI_DATI_SPEC_OBJECT_STORAGE(ID_VERS_INI_DOC);

-- changeset root:1751897635013-2571
CREATE INDEX IDX_VERS_INI_DATI_SPEC_UD_OBJECT_STORAGE ON ARO_VERS_INI_DATI_SPEC_OBJECT_STORAGE(ID_VERS_INI_UNITA_DOC);

-- changeset root:1751897635013-2572
CREATE INDEX IDX_VERS_INI_DOC ON ARO_VERS_INI_DOC(ID_DOC);

-- changeset root:1751897635013-2573
CREATE INDEX IDX_VERS_INI_SPEC_VERS_COMP ON ARO_VERS_INI_DATI_SPEC(ID_VERS_INI_COMP);

-- changeset root:1751897635013-2574
CREATE INDEX IDX_VERS_INI_SPEC_VERS_DOC ON ARO_VERS_INI_DATI_SPEC(ID_VERS_INI_DOC);

-- changeset root:1751897635013-2575
CREATE INDEX IDX_VERS_INI_SPEC_VERS_UD ON ARO_VERS_INI_DATI_SPEC(ID_VERS_INI_UNITA_DOC);

-- changeset root:1751897635013-2576
CREATE INDEX IDX_VERS_INI_SPEC_XSD ON ARO_VERS_INI_DATI_SPEC(ID_XSD_DATI_SPEC);

-- changeset root:1751897635013-2577
CREATE INDEX IDX_VER_AIP_FASC_ELE ON FAS_VER_AIP_FASCICOLO(ID_ELENCO_VERS_FASC);

-- changeset root:1751897635013-2578
CREATE INDEX IDX_VER_IX_AIP_UD_ELE ON ARO_VER_INDICE_AIP_UD(ID_ELENCO_VERS);

-- changeset root:1751897635013-2579
CREATE INDEX IDX_VER_SER_DAELB ON SER_VER_SERIE_DA_ELAB(ID_STRUT, TI_STATO_VER_SERIE);

-- changeset root:1751897635013-2580
CREATE INDEX IDX_VER_SER_SES_FIR_VER ON HSM_VER_SERIE_SESSIONE_FIRMA(ID_VER_SERIE);

-- changeset root:1751897635013-2581
CREATE INDEX IDX_VL_ATTB_DATI_SPEC ON ARO_VALORE_ATTRIB_DATI_SPEC(ID_ATTRIB_DATI_SPEC);

-- changeset root:1751897635013-2582
CREATE INDEX IDX_VL_ATTB_FASCICOLO ON FAS_VALORE_ATTRIB_FASCICOLO(ID_ATTRIB_FASCICOLO);

-- changeset root:1751897635013-2583
CREATE INDEX IDX_VL_FASCICOLO ON FAS_VALORE_ATTRIB_FASCICOLO(ID_FASCICOLO);

-- changeset root:1751897635013-2584
CREATE INDEX IDX_VOL_CONS_DT_CREA ON VOL_VOLUME_CONSERV(ID_STRUT, DT_CREAZIONE);

-- changeset root:1751897635013-2585
CREATE INDEX IDX_VOL_CONS_SCAD_CHIUS ON VOL_VOLUME_CONSERV(ID_STRUT, TI_STATO_VOLUME_CONSERV, DT_SCAD_CHIUS);

-- changeset root:1751897635013-2586
CREATE INDEX IDX_VOL_VRS_UD_ANN ON VOL_VOLUME_VERS_UD_ANNUL(ID_UNITA_DOC);

-- changeset root:1751897635013-2587
CREATE INDEX IDX_VRS_XSD_DOC_DS_2 ON ARO_VALORE_ATTRIB_DATI_SPEC_RIC_DS(CD_VERSIONE_XSD_DOC);

-- changeset root:1751897635013-2588
CREATE INDEX IDX_WARN_FASC_ERR ON FAS_WARN_FASCICOLO(ID_ERR_SACER);

-- changeset root:1751897635013-2589
CREATE INDEX IDX_WARN_UPD_UD_CTRL ON ARO_WARN_UPD_UNITA_DOC(ID_CONTROLLO_WS);

-- changeset root:1751897635013-2590
CREATE INDEX IDX_WARN_UPD_UD_ERR ON ARO_WARN_UPD_UNITA_DOC(ID_ERR_SACER);

-- changeset root:1751897635013-2591
CREATE INDEX IDX_XML_FASC_XSD ON FAS_XML_FASCICOLO(ID_MODELLO_XSD_FASCICOLO);

-- changeset root:1751897635013-2592
CREATE INDEX IDX_XSD_DATI_SPEC_SYS_MGZ ON DEC_XSD_DATI_SPEC(ID_STRUT, TI_ENTITA_SACER, NM_SISTEMA_MIGRAZ, CD_VERSIONE_XSD);

-- changeset root:1751897635013-2593
CREATE INDEX IDX_XSD_DATI_SPEC_TI_COMP ON DEC_XSD_DATI_SPEC(ID_TIPO_COMP_DOC, CD_VERSIONE_XSD);

-- changeset root:1751897635013-2594
CREATE INDEX IDX_XSD_DATI_SPEC_TI_DOC ON DEC_XSD_DATI_SPEC(ID_TIPO_DOC, CD_VERSIONE_XSD);

-- changeset root:1751897635013-2595
CREATE INDEX IDX_XSD_DATI_SPEC_TI_UNI_DOC ON DEC_XSD_DATI_SPEC(ID_TIPO_UNITA_DOC, CD_VERSIONE_XSD);

-- changeset root:1751897635013-2596
CREATE INDEX IDX_XSD_META_VER_AIP_FASC_MDL ON FAS_XSD_META_VER_AIP_FASC(ID_MODELLO_XSD_FASCICOLO);

-- changeset root:1751897635013-2597
CREATE INDEX TMP_IDX_DOC_ELENCO ON TMP_DOC_ELENCO(ID_STRUT, NM_VOLUME_CONSERV);

-- changeset root:1751897635013-2598
CREATE INDEX TMP_IDX_DOC_ELENCO_DOC ON TMP_DOC_ELENCO(ID_DOC);

-- changeset root:1751897635013-2599
CREATE INDEX TMP_IDX_DOC_NON_VERS_DT ON TMP_DOC_NON_VERS_DT(ID_STRUT, CD_REGISTRO_KEY_UNITA_DOC, AA_KEY_UNITA_DOC, CD_KEY_UNITA_DOC, CD_KEY_DOC_VERS);

-- changeset root:1751897635013-2600
CREATE INDEX TMP_IDX_DOC_NON_VERS_ERR ON TMP_DOC_NON_VERS_ERR(ID_DOC_NON_VERS);

-- changeset root:1751897635013-2601
CREATE INDEX TMP_IDX_UD_ELENCO ON TMP_UD_ELENCO(ID_STRUT, NM_VOLUME_CONSERV);

-- changeset root:1751897635013-2602
CREATE INDEX TMP_IDX_UD_ELENCO_UD ON TMP_UD_ELENCO(ID_UNITA_DOC);

-- changeset root:1751897635013-2603
CREATE INDEX TMP_IDX_UD_NON_VERS_DT ON TMP_UD_NON_VERS_DT(ID_STRUT, CD_REGISTRO_KEY_UNITA_DOC, AA_KEY_UNITA_DOC, CD_KEY_UNITA_DOC);

-- changeset root:1751897635013-2604
CREATE INDEX TMP_IDX_UD_NON_VERS_ERR ON TMP_UD_NON_VERS_ERR(ID_UNITA_DOC_NON_VERS);

-- changeset root:1751897635013-2605
CREATE UNIQUE INDEX UN_DATI_SES_OBJECT_STORAGE_KO ON VRS_XML_DATI_SES_OBJECT_STORAGE_KO(ID_DATI_SESSIONE_VERS_KO);

-- changeset root:1751897635013-2606
CREATE UNIQUE INDEX UN_DAT_SES_VRS_KO ON VRS_DATI_SESSIONE_VERS_KO(ID_SESSIONE_VERS_KO, PG_DATI_SESSIONE_VERS);

-- changeset root:1751897635013-2607
CREATE UNIQUE INDEX UN_FILE_ELE_VRS_FASC ON ELV_FILE_ELENCO_VERS_FASC(ID_ELENCO_VERS_FASC, TI_FILE_ELENCO_VERS);

-- changeset root:1751897635013-2608
CREATE UNIQUE INDEX UN_FILE_ELE_VRS_FASC_NP ON ELV_FILE_ELENCO_VERS_FASC(ID_STRUT, ID_ELENCO_VERS_FASC, TI_FILE_ELENCO_VERS);

-- changeset root:1751897635013-2609
CREATE UNIQUE INDEX UN_FIL_SES_KO ON VRS_FILE_SESSIONE_KO(ID_DATI_SESSIONE_VERS_KO, PG_FILE_SESSIONE);

-- changeset root:1751897635013-2610
CREATE UNIQUE INDEX UN_XML_DAT_SES_VRS_KO ON VRS_XML_DATI_SESSIONE_VERS_KO(ID_DATI_SESSIONE_VERS_KO, TI_XML_DATI);

-- changeset root:1751897635013-2611
ALTER TABLE DEC_AA_REGISTRO_UNITA_DOC ADD CONSTRAINT FK_AA_REG_REG_UNI_DOC FOREIGN KEY (ID_REGISTRO_UNITA_DOC) REFERENCES DEC_REGISTRO_UNITA_DOC (ID_REGISTRO_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-2612
ALTER TABLE DEC_AA_TIPO_FASCICOLO ADD CONSTRAINT FK_AA_TI_FASC FOREIGN KEY (ID_TIPO_FASCICOLO) REFERENCES DEC_TIPO_FASCICOLO (ID_TIPO_FASCICOLO) ON DELETE CASCADE;

-- changeset root:1751897635013-2613
ALTER TABLE MON_AA_UNITA_DOC_REGISTRO ADD CONSTRAINT FK_AA_UNI_DOC_REG FOREIGN KEY (ID_REGISTRO_UNITA_DOC) REFERENCES DEC_REGISTRO_UNITA_DOC (ID_REGISTRO_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-2614
ALTER TABLE IAM_ABIL_ORGANIZ ADD CONSTRAINT FK_ABIL_ORG_USR FOREIGN KEY (ID_USER_IAM) REFERENCES IAM_USER (ID_USER_IAM) ON DELETE CASCADE;

-- changeset root:1751897635013-2615
ALTER TABLE IAM_ABIL_TIPO_DATO ADD CONSTRAINT FK_ABIL_TI_DATO_ABIL_ORG FOREIGN KEY (ID_ABIL_ORGANIZ) REFERENCES IAM_ABIL_ORGANIZ (ID_ABIL_ORGANIZ) ON DELETE CASCADE;

-- changeset root:1751897635013-2616
ALTER TABLE FAS_AIP_FASCICOLO_DA_ELAB ADD CONSTRAINT FK_AIP_FASC_DAELAB_ELE_FASC FOREIGN KEY (ID_ELENCO_VERS_FASC) REFERENCES ELV_ELENCO_VERS_FASC (ID_ELENCO_VERS_FASC);

-- changeset root:1751897635013-2617
ALTER TABLE FAS_AIP_FASCICOLO_DA_ELAB ADD CONSTRAINT FK_AIP_FASC_DAELAB_FASC FOREIGN KEY (ID_FASCICOLO) REFERENCES FAS_FASCICOLO (ID_FASCICOLO) ON DELETE CASCADE;

-- changeset root:1751897635013-2618
ALTER TABLE FAS_VER_AIP_FASCICOLO ADD CONSTRAINT FK_AIP_FASC_ELE_FASC FOREIGN KEY (ID_ELENCO_VERS_FASC) REFERENCES ELV_ELENCO_VERS_FASC (ID_ELENCO_VERS_FASC);

-- changeset root:1751897635013-2619
ALTER TABLE ORG_AMBIENTE ADD CONSTRAINT FK_AMB_ENTE_CONSERV FOREIGN KEY (ID_ENTE_CONSERV) REFERENCES SACER_IAM.ORG_ENTE_SIAM (ID_ENTE_SIAM);

-- changeset root:1751897635013-2620
ALTER TABLE ORG_AMBIENTE ADD CONSTRAINT FK_AMB_ENTE_GESTORE FOREIGN KEY (ID_ENTE_GESTORE) REFERENCES SACER_IAM.ORG_ENTE_SIAM (ID_ENTE_SIAM);

-- changeset root:1751897635013-2621
ALTER TABLE FAS_AMMIN_PARTEC ADD CONSTRAINT FK_AMN_PART_FASC FOREIGN KEY (ID_FASCICOLO) REFERENCES FAS_FASCICOLO (ID_FASCICOLO) ON DELETE CASCADE;

-- changeset root:1751897635013-2622
ALTER TABLE DEC_AMS_FMT_FIR_EIDAS_CRYPTO ADD CONSTRAINT FK_AMS_FMT_FIR_CRYPTO FOREIGN KEY (ID_FMT_FIR_CRYPTO) REFERENCES DEC_FMT_FIR_CRYPTO (ID_FMT_FIR_CRYPTO);

-- changeset root:1751897635013-2623
ALTER TABLE DEC_AMS_FMT_FIR_EIDAS_CRYPTO ADD CONSTRAINT FK_AMS_FMT_FIR_EIDAS FOREIGN KEY (ID_FMT_FIR_EIDAS) REFERENCES DEC_FMT_FIR_EIDAS (ID_FMT_FIR_EIDAS);

-- changeset root:1751897635013-2624
ALTER TABLE VOL_APPART_COMP_VOLUME ADD CONSTRAINT FK_APP_COMP_VOL_APP_DOC_VOL FOREIGN KEY (ID_APPART_DOC_VOLUME) REFERENCES VOL_APPART_DOC_VOLUME (ID_APPART_DOC_VOLUME) ON DELETE CASCADE;

-- changeset root:1751897635013-2625
ALTER TABLE VOL_APPART_COMP_VOLUME ADD CONSTRAINT FK_APP_COMP_VOL_COMP_DOC FOREIGN KEY (ID_COMP_DOC) REFERENCES ARO_COMP_DOC (ID_COMP_DOC);

-- changeset root:1751897635013-2626
ALTER TABLE VOL_APPART_DOC_VOLUME ADD CONSTRAINT FK_APP_DOC_VOL_APP_UNI_DOC FOREIGN KEY (ID_APPART_UNITA_DOC_VOLUME) REFERENCES VOL_APPART_UNITA_DOC_VOLUME (ID_APPART_UNITA_DOC_VOLUME) ON DELETE CASCADE;

-- changeset root:1751897635013-2627
ALTER TABLE VOL_APPART_DOC_VOLUME ADD CONSTRAINT FK_APP_DOC_VOL_DOC FOREIGN KEY (ID_DOC) REFERENCES ARO_DOC (ID_DOC);

-- changeset root:1751897635013-2628
ALTER TABLE VOL_APPART_FIRMA_VOLUME ADD CONSTRAINT FK_APP_FIR_VOL_APP_FIL_VOL FOREIGN KEY (ID_APPART_COMP_VOLUME) REFERENCES VOL_APPART_COMP_VOLUME (ID_APPART_COMP_VOLUME) ON DELETE CASCADE;

-- changeset root:1751897635013-2629
ALTER TABLE VOL_APPART_FIRMA_VOLUME ADD CONSTRAINT FK_APP_FIR_VOL_FIR_FIL FOREIGN KEY (ID_FIRMA_COMP) REFERENCES ARO_FIRMA_COMP (ID_FIRMA_COMP);

-- changeset root:1751897635013-2630
ALTER TABLE VOL_APPART_UNITA_DOC_VOLUME ADD CONSTRAINT FK_APP_UNI_DOC_VOL_UNI_DOC FOREIGN KEY (ID_UNITA_DOC) REFERENCES ARO_UNITA_DOC (ID_UNITA_DOC);

-- changeset root:1751897635013-2631
ALTER TABLE VOL_APPART_UNITA_DOC_VOLUME ADD CONSTRAINT FK_APP_UNI_DOC_VOL_VOL_CONS FOREIGN KEY (ID_VOLUME_CONSERV) REFERENCES VOL_VOLUME_CONSERV (ID_VOLUME_CONSERV) ON DELETE CASCADE;

-- changeset root:1751897635013-2632
ALTER TABLE ARO_ARCHIV_SEC ADD CONSTRAINT FK_ARC_SEC_UNI_DOC FOREIGN KEY (ID_UNITA_DOC) REFERENCES ARO_UNITA_DOC (ID_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-2633
ALTER TABLE VRS_ARK_PATH_DT_VERS ADD CONSTRAINT FK_ARK_PATH_DT_VERS FOREIGN KEY (ID_PATH_DT_VERS) REFERENCES VRS_PATH_DT_VERS (ID_PATH_DT_VERS) ON DELETE CASCADE;

-- changeset root:1751897635013-2634
ALTER TABLE ARO_WARN_UNITA_DOC ADD CONSTRAINT FK_ARO_WARN_DOC FOREIGN KEY (ID_DOC) REFERENCES ARO_DOC (ID_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-2635
ALTER TABLE ARO_WARN_UNITA_DOC ADD CONSTRAINT FK_ARO_WARN_UNI_DOC FOREIGN KEY (ID_UNITA_DOC) REFERENCES ARO_UNITA_DOC (ID_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-2636
ALTER TABLE DEC_ATTRIB_DATI_SPEC ADD CONSTRAINT FK_ATTB_DATI_SPEC_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT) ON DELETE CASCADE;

-- changeset root:1751897635013-2637
ALTER TABLE DEC_ATTRIB_DATI_SPEC ADD CONSTRAINT FK_ATTB_DATI_SPEC_TIPO_COMP FOREIGN KEY (ID_TIPO_COMP_DOC) REFERENCES DEC_TIPO_COMP_DOC (ID_TIPO_COMP_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-2638
ALTER TABLE DEC_ATTRIB_DATI_SPEC ADD CONSTRAINT FK_ATTB_DATI_SPEC_TIPO_DOC FOREIGN KEY (ID_TIPO_DOC) REFERENCES DEC_TIPO_DOC (ID_TIPO_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-2639
ALTER TABLE DEC_ATTRIB_DATI_SPEC ADD CONSTRAINT FK_ATTB_DATI_SPEC_TIP_UNI_DOC FOREIGN KEY (ID_TIPO_UNITA_DOC) REFERENCES DEC_TIPO_UNITA_DOC (ID_TIPO_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-2640
ALTER TABLE FAS_VALORE_ATTRIB_FASCICOLO ADD CONSTRAINT FK_ATTB_FASCICOLO_AA FOREIGN KEY (ID_AA_TIPO_FASCICOLO) REFERENCES DEC_AA_TIPO_FASCICOLO (ID_AA_TIPO_FASCICOLO) ON DELETE CASCADE;

-- changeset root:1751897635013-2641
ALTER TABLE DEC_ATTRIB_FASCICOLO ADD CONSTRAINT FK_ATTB_FASC_AA_TI_FASC FOREIGN KEY (ID_AA_TIPO_FASCICOLO) REFERENCES DEC_AA_TIPO_FASCICOLO (ID_AA_TIPO_FASCICOLO) ON DELETE CASCADE;

-- changeset root:1751897635013-2642
ALTER TABLE DEC_ATTRIB_FASCICOLO ADD CONSTRAINT FK_ATTB_FASC_TIPO_FASC FOREIGN KEY (ID_TIPO_FASCICOLO) REFERENCES DEC_TIPO_FASCICOLO (ID_TIPO_FASCICOLO) ON DELETE CASCADE;

-- changeset root:1751897635013-2643
ALTER TABLE IAM_AUTOR_SERV ADD CONSTRAINT FK_AUT_SERV_ABIL_ORG FOREIGN KEY (ID_ABIL_ORGANIZ) REFERENCES IAM_ABIL_ORGANIZ (ID_ABIL_ORGANIZ) ON DELETE CASCADE;

-- changeset root:1751897635013-2644
ALTER TABLE ARO_BUSTA_CRITTOG ADD CONSTRAINT FK_BUSTA_CRIT_COMP_DOC FOREIGN KEY (ID_COMP_DOC) REFERENCES ARO_COMP_DOC (ID_COMP_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-2645
ALTER TABLE ARO_BUSTA_CRITTOG ADD CONSTRAINT FK_BUSTA_CRIT_FMT_FIL_STD FOREIGN KEY (ID_FORMATO_FILE_CALC) REFERENCES DEC_FORMATO_FILE_STANDARD (ID_FORMATO_FILE_STANDARD);

-- changeset root:1751897635013-2646
ALTER TABLE DEC_CATEG_TIPO_UNITA_DOC ADD CONSTRAINT FK_CAT_TI_UNI_DOC_PADRE FOREIGN KEY (ID_CATEG_TIPO_UNITA_DOC_PADRE) REFERENCES DEC_CATEG_TIPO_UNITA_DOC (ID_CATEG_TIPO_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-2647
ALTER TABLE ARO_USO_CERTIF_CA_CONTR_COMP ADD CONSTRAINT FK_CA_CTR_COMP_CER_CA FOREIGN KEY (ID_CERTIF_CA) REFERENCES FIR_CERTIF_CA (ID_CERTIF_CA);

-- changeset root:1751897635013-2648
ALTER TABLE ARO_USO_CERTIF_CA_CONTR_COMP ADD CONSTRAINT FK_CA_CTR_COMP_CRL FOREIGN KEY (ID_CRL_USATA) REFERENCES FIR_CRL (ID_CRL);

-- changeset root:1751897635013-2649
ALTER TABLE ARO_USO_CERTIF_CA_CONTR_COMP ADD CONSTRAINT FK_CA_CTR_COMP_OCSP FOREIGN KEY (ID_OCSP_USATA) REFERENCES FIR_OCSP (ID_OCSP);

-- changeset root:1751897635013-2650
ALTER TABLE ARO_USO_CERTIF_CA_CONTR_COMP ADD CONSTRAINT FK_CA_CTR_CTR_FIR_COMP FOREIGN KEY (ID_CONTR_FIRMA_COMP) REFERENCES ARO_CONTR_FIRMA_COMP (ID_CONTR_FIRMA_COMP) ON DELETE CASCADE;

-- changeset root:1751897635013-2651
ALTER TABLE ARO_USO_CERTIF_CA_CONTR_MARCA ADD CONSTRAINT FK_CA_CTR_MRK_CER_CA FOREIGN KEY (ID_CERTIF_CA) REFERENCES FIR_CERTIF_CA (ID_CERTIF_CA);

-- changeset root:1751897635013-2652
ALTER TABLE ARO_USO_CERTIF_CA_CONTR_MARCA ADD CONSTRAINT FK_CA_CTR_MRK_CRL FOREIGN KEY (ID_CRL_USATA) REFERENCES FIR_CRL (ID_CRL);

-- changeset root:1751897635013-2653
ALTER TABLE ARO_USO_CERTIF_CA_CONTR_MARCA ADD CONSTRAINT FK_CA_CTR_MRK_CTR_MRK_COMP FOREIGN KEY (ID_CONTR_MARCA_COMP) REFERENCES ARO_CONTR_MARCA_COMP (ID_CONTR_MARCA_COMP) ON DELETE CASCADE;

-- changeset root:1751897635013-2654
ALTER TABLE ARO_USO_CERTIF_CA_CONTR_MARCA ADD CONSTRAINT FK_CA_CTR_MRK_OCSP FOREIGN KEY (ID_OCSP_USATA) REFERENCES FIR_OCSP (ID_OCSP);

-- changeset root:1751897635013-2655
ALTER TABLE FIR_CERTIF_CA ADD CONSTRAINT FK_CER_CA_ISS FOREIGN KEY (ID_ISSUER) REFERENCES FIR_ISSUER (ID_ISSUER) ON DELETE CASCADE;

-- changeset root:1751897635013-2656
ALTER TABLE FIR_CERTIF_FIRMATARIO ADD CONSTRAINT FK_CER_FIR_CER_CA FOREIGN KEY (ID_CERTIF_CA) REFERENCES FIR_CERTIF_CA (ID_CERTIF_CA) ON DELETE CASCADE;

-- changeset root:1751897635013-2657
ALTER TABLE MON_CONTA_FASCICOLI ADD CONSTRAINT FK_CNT_FASC_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT) ON DELETE CASCADE;

-- changeset root:1751897635013-2658
ALTER TABLE MON_CONTA_FASCICOLI ADD CONSTRAINT FK_CNT_FASC_TI_FASC FOREIGN KEY (ID_TIPO_FASCICOLO) REFERENCES DEC_TIPO_FASCICOLO (ID_TIPO_FASCICOLO) ON DELETE CASCADE;

-- changeset root:1751897635013-2659
ALTER TABLE MON_CONTA_FASCICOLI ADD CONSTRAINT FK_CNT_FASC_USR FOREIGN KEY (ID_USER_IAM) REFERENCES IAM_USER (ID_USER_IAM);

-- changeset root:1751897635013-2660
ALTER TABLE MON_CONTA_FASCICOLI_KO ADD CONSTRAINT FK_CNT_SES_FASC_KO_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT) ON DELETE CASCADE;

-- changeset root:1751897635013-2661
ALTER TABLE MON_CONTA_FASCICOLI_KO ADD CONSTRAINT FK_CNT_SES_FASC_KO_TI_FASC FOREIGN KEY (ID_TIPO_FASCICOLO) REFERENCES DEC_TIPO_FASCICOLO (ID_TIPO_FASCICOLO) ON DELETE CASCADE;

-- changeset root:1751897635013-2662
ALTER TABLE MON_CONTA_SES_UPD_UD ADD CONSTRAINT FK_CNT_SES_UPD_UD_KEY FOREIGN KEY (ID_KEY_TOTAL_UD) REFERENCES MON_KEY_TOTAL_UD (ID_KEY_TOTAL_UD) ON DELETE CASCADE;

-- changeset root:1751897635013-2663
ALTER TABLE MON_CONTA_SES_UPD_UD_KO ADD CONSTRAINT FK_CNT_SES_UPD_UD_KO_KEY FOREIGN KEY (ID_KEY_TOTAL_UD_KO) REFERENCES MON_KEY_TOTAL_UD_KO (ID_KEY_TOTAL_UD_KO) ON DELETE CASCADE;

-- changeset root:1751897635013-2664
ALTER TABLE MON_CONTA_BY_STATO_CONSERV ADD CONSTRAINT FK_CNT_STATO_CONS_REG FOREIGN KEY (ID_REGISTRO_UNITA_DOC) REFERENCES DEC_REGISTRO_UNITA_DOC (ID_REGISTRO_UNITA_DOC);

-- changeset root:1751897635013-2665
ALTER TABLE MON_CONTA_BY_STATO_CONSERV ADD CONSTRAINT FK_CNT_STATO_CONS_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT);

-- changeset root:1751897635013-2666
ALTER TABLE MON_CONTA_BY_STATO_CONSERV ADD CONSTRAINT FK_CNT_STATO_CONS_TI_DOC_PRINC FOREIGN KEY (ID_TIPO_DOC_PRINC) REFERENCES DEC_TIPO_DOC (ID_TIPO_DOC);

-- changeset root:1751897635013-2667
ALTER TABLE MON_CONTA_BY_STATO_CONSERV ADD CONSTRAINT FK_CNT_STATO_CONS_TI_UD FOREIGN KEY (ID_TIPO_UNITA_DOC) REFERENCES DEC_TIPO_UNITA_DOC (ID_TIPO_UNITA_DOC);

-- changeset root:1751897635013-2668
ALTER TABLE MON_CONTA_UD_DOC_COMP ADD CONSTRAINT FK_CNT_UD_DOC_COMP_REG_UNI_DOC FOREIGN KEY (ID_REGISTRO_UNITA_DOC) REFERENCES DEC_REGISTRO_UNITA_DOC (ID_REGISTRO_UNITA_DOC);

-- changeset root:1751897635013-2669
ALTER TABLE MON_CONTA_UD_DOC_COMP_READ_ONLY ADD CONSTRAINT FK_CNT_UD_DOC_COMP_REG_UNI_DOC_RO FOREIGN KEY (ID_REGISTRO_UNITA_DOC) REFERENCES DEC_REGISTRO_UNITA_DOC (ID_REGISTRO_UNITA_DOC);

-- changeset root:1751897635013-2670
ALTER TABLE MON_CONTA_UD_DOC_COMP ADD CONSTRAINT FK_CNT_UD_DOC_COMP_SUB_STRUT FOREIGN KEY (ID_SUB_STRUT) REFERENCES ORG_SUB_STRUT (ID_SUB_STRUT);

-- changeset root:1751897635013-2671
ALTER TABLE MON_CONTA_UD_DOC_COMP_READ_ONLY ADD CONSTRAINT FK_CNT_UD_DOC_COMP_SUB_STRUT_RO FOREIGN KEY (ID_SUB_STRUT) REFERENCES ORG_SUB_STRUT (ID_SUB_STRUT);

-- changeset root:1751897635013-2672
ALTER TABLE MON_CONTA_UD_DOC_COMP ADD CONSTRAINT FK_CNT_UD_DOC_COMP_TIPO_DOC FOREIGN KEY (ID_TIPO_DOC_PRINC) REFERENCES DEC_TIPO_DOC (ID_TIPO_DOC);

-- changeset root:1751897635013-2673
ALTER TABLE MON_CONTA_UD_DOC_COMP_READ_ONLY ADD CONSTRAINT FK_CNT_UD_DOC_COMP_TIPO_DOC_RO FOREIGN KEY (ID_TIPO_DOC_PRINC) REFERENCES DEC_TIPO_DOC (ID_TIPO_DOC);

-- changeset root:1751897635013-2674
ALTER TABLE MON_CONTA_UD_DOC_COMP ADD CONSTRAINT FK_CNT_UD_DOC_COMP_TIP_UNI_DOC FOREIGN KEY (ID_TIPO_UNITA_DOC) REFERENCES DEC_TIPO_UNITA_DOC (ID_TIPO_UNITA_DOC);

-- changeset root:1751897635013-2675
ALTER TABLE MON_CONTA_UD_DOC_COMP_READ_ONLY ADD CONSTRAINT FK_CNT_UD_DOC_COMP_TIP_UNI_DOC_RO FOREIGN KEY (ID_TIPO_UNITA_DOC) REFERENCES DEC_TIPO_UNITA_DOC (ID_TIPO_UNITA_DOC);

-- changeset root:1751897635013-2676
ALTER TABLE ARO_COMP_DOC ADD CONSTRAINT FK_COMP_DOC_COMP_PADRE FOREIGN KEY (ID_COMP_DOC_PADRE) REFERENCES ARO_COMP_DOC (ID_COMP_DOC);

-- changeset root:1751897635013-2677
ALTER TABLE ARO_COMP_DOC ADD CONSTRAINT FK_COMP_DOC_FMT_FILE_VERS FOREIGN KEY (ID_FORMATO_FILE_VERS) REFERENCES DEC_FORMATO_FILE_DOC (ID_FORMATO_FILE_DOC);

-- changeset root:1751897635013-2678
ALTER TABLE ARO_COMP_DOC ADD CONSTRAINT FK_COMP_DOC_FMT_FIL_STD FOREIGN KEY (ID_FORMATO_FILE_CALC) REFERENCES DEC_FORMATO_FILE_STANDARD (ID_FORMATO_FILE_STANDARD);

-- changeset root:1751897635013-2679
ALTER TABLE ARO_COMP_DOC ADD CONSTRAINT FK_COMP_DOC_STRUT_DOC FOREIGN KEY (ID_STRUT_DOC) REFERENCES ARO_STRUT_DOC (ID_STRUT_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-2680
ALTER TABLE ARO_COMP_DOC ADD CONSTRAINT FK_COMP_DOC_TIPO FOREIGN KEY (ID_TIPO_COMP_DOC) REFERENCES DEC_TIPO_COMP_DOC (ID_TIPO_COMP_DOC);

-- changeset root:1751897635013-2681
ALTER TABLE ARO_COMP_DOC ADD CONSTRAINT FK_COMP_DOC_TIPO_RAP_COMP FOREIGN KEY (ID_TIPO_RAPPR_COMP) REFERENCES DEC_TIPO_RAPPR_COMP (ID_TIPO_RAPPR_COMP);

-- changeset root:1751897635013-2682
ALTER TABLE ARO_COMP_DOC ADD CONSTRAINT FK_COMP_DOC_UNI_DOC FOREIGN KEY (ID_UNITA_DOC_RIF) REFERENCES ARO_UNITA_DOC (ID_UNITA_DOC);

-- changeset root:1751897635013-2683
ALTER TABLE ARO_COMP_HASH_CALC ADD CONSTRAINT FK_COMP_HASH_CALC_COMP_DOC FOREIGN KEY (ID_COMP_DOC) REFERENCES ARO_COMP_DOC (ID_COMP_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-2684
ALTER TABLE ARO_COMP_INDICE_AIP_DA_ELAB ADD CONSTRAINT FK_COMP_IX_AIP_DA_ELAB_COMP FOREIGN KEY (ID_COMP_DOC) REFERENCES ARO_COMP_DOC (ID_COMP_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-2685
ALTER TABLE ARO_COMP_INDICE_AIP_DA_ELAB ADD CONSTRAINT FK_COMP_IX_AIP_DA_ELAB_IX FOREIGN KEY (ID_INDICE_AIP_DA_ELAB) REFERENCES ARO_INDICE_AIP_UD_DA_ELAB (ID_INDICE_AIP_DA_ELAB) ON DELETE CASCADE;

-- changeset root:1751897635013-2686
ALTER TABLE ARO_COMP_OBJECT_STORAGE ADD CONSTRAINT FK_COMP_OBJ_STO_BACKEND FOREIGN KEY (ID_DEC_BACKEND) REFERENCES DEC_BACKEND (ID_DEC_BACKEND) ENABLE NOVALIDATE;

-- changeset root:1751897635013-2687
ALTER TABLE ARO_COMP_OBJECT_STORAGE ADD CONSTRAINT FK_COMP_OBJ_STO_COMP_DOC FOREIGN KEY (ID_COMP_DOC) REFERENCES ARO_COMP_DOC (ID_COMP_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-2688
ALTER TABLE ARO_COMP_URN_CALC ADD CONSTRAINT FK_COMP_URN_CALC_COMP_DOC FOREIGN KEY (ID_COMP_DOC) REFERENCES ARO_COMP_DOC (ID_COMP_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-2689
ALTER TABLE ARO_COMP_VER_INDICE_AIP_UD ADD CONSTRAINT FK_COMP_VER_IX_AIP_UD_COMP FOREIGN KEY (ID_COMP_DOC) REFERENCES ARO_COMP_DOC (ID_COMP_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-2690
ALTER TABLE ARO_COMP_VER_INDICE_AIP_UD ADD CONSTRAINT FK_COMP_VER_IX_AIP_UD_VER FOREIGN KEY (ID_VER_INDICE_AIP) REFERENCES ARO_VER_INDICE_AIP_UD (ID_VER_INDICE_AIP) ON DELETE CASCADE;

-- changeset root:1751897635013-2691
ALTER TABLE SER_CONSIST_VER_SERIE ADD CONSTRAINT FK_CONS_VER_SER FOREIGN KEY (ID_VER_SERIE) REFERENCES SER_VER_SERIE (ID_VER_SERIE) ON DELETE CASCADE;

-- changeset root:1751897635013-2692
ALTER TABLE SER_CONSIST_VER_SERIE ADD CONSTRAINT FK_CONS_VER_SER_USR FOREIGN KEY (ID_USER_IAM) REFERENCES IAM_USER (ID_USER_IAM);

-- changeset root:1751897635013-2693
ALTER TABLE VRS_CONTENUTO_FILE_KO ADD CONSTRAINT FK_CONTENUTO_FILE_VRS_KO FOREIGN KEY (ID_FILE_SESSIONE_KO) REFERENCES VRS_FILE_SESSIONE_KO (ID_FILE_SESSIONE_KO) ON DELETE CASCADE;

-- changeset root:1751897635013-2694
ALTER TABLE FAS_CONTEN_VER_AIP_FASCICOLO ADD CONSTRAINT FK_CONTEN_VER_AIP_FASC_FIGLIO FOREIGN KEY (ID_VER_AIP_FASCICOLO_FIGLIO) REFERENCES FAS_VER_AIP_FASCICOLO (ID_VER_AIP_FASCICOLO);

-- changeset root:1751897635013-2695
ALTER TABLE FAS_CONTEN_VER_AIP_FASCICOLO ADD CONSTRAINT FK_CONTEN_VER_AIP_FASC_IX_UD FOREIGN KEY (ID_VER_INDICE_AIP_UD) REFERENCES ARO_VER_INDICE_AIP_UD (ID_VER_INDICE_AIP);

-- changeset root:1751897635013-2696
ALTER TABLE FAS_CONTEN_VER_AIP_FASCICOLO ADD CONSTRAINT FK_CONTEN_VER_AIP_FASC_VER_AIP FOREIGN KEY (ID_VER_AIP_FASCICOLO) REFERENCES FAS_VER_AIP_FASCICOLO (ID_VER_AIP_FASCICOLO) ON DELETE CASCADE;

-- changeset root:1751897635013-2697
ALTER TABLE SER_CONTENUTO_VER_SERIE ADD CONSTRAINT FK_CONTEN_VER_SER_VER FOREIGN KEY (ID_VER_SERIE) REFERENCES SER_VER_SERIE (ID_VER_SERIE) ON DELETE CASCADE;

-- changeset root:1751897635013-2698
ALTER TABLE ARO_CONTROFIRMA_FIRMA ADD CONSTRAINT FK_CONTFIR_FIR_FIGLIO FOREIGN KEY (ID_FIRMA_FIGLIO) REFERENCES ARO_FIRMA_COMP (ID_FIRMA_COMP) ON DELETE CASCADE;

-- changeset root:1751897635013-2699
ALTER TABLE ARO_CONTROFIRMA_FIRMA ADD CONSTRAINT FK_CONTFIR_FIR_PADRE FOREIGN KEY (ID_FIRMA_PADRE) REFERENCES ARO_FIRMA_COMP (ID_FIRMA_COMP) ON DELETE CASCADE;

-- changeset root:1751897635013-2700
ALTER TABLE DEC_CAMPO_ATTRIB_FASC_VETTOR ADD CONSTRAINT FK_CPO_ATTB_FASC_VETT_XSD_ATTB FOREIGN KEY (ID_MODELLO_XSD_ATTRIB_FASC) REFERENCES DEC_MODELLO_XSD_ATTRIB_FASC (ID_MODELLO_XSD_ATTRIB_FASC) ON DELETE CASCADE;

-- changeset root:1751897635013-2701
ALTER TABLE DEC_CAMPO_INP_UD ADD CONSTRAINT FK_CPO_INP_UD_ATTB_DATI_SPEC FOREIGN KEY (ID_ATTRIB_DATI_SPEC) REFERENCES DEC_ATTRIB_DATI_SPEC (ID_ATTRIB_DATI_SPEC);

-- changeset root:1751897635013-2702
ALTER TABLE DEC_CAMPO_INP_UD ADD CONSTRAINT FK_CPO_INP_UD_TI_SER FOREIGN KEY (ID_TIPO_SERIE) REFERENCES DEC_TIPO_SERIE (ID_TIPO_SERIE) ON DELETE CASCADE;

-- changeset root:1751897635013-2703
ALTER TABLE DEC_CAMPO_OUT_SEL_UD ADD CONSTRAINT FK_CPO_SEL_UD_ATTB_DATI_SPEC FOREIGN KEY (ID_ATTRIB_DATI_SPEC) REFERENCES DEC_ATTRIB_DATI_SPEC (ID_ATTRIB_DATI_SPEC);

-- changeset root:1751897635013-2704
ALTER TABLE DEC_CAMPO_OUT_SEL_UD ADD CONSTRAINT FK_CPO_SEL_UD_OUT FOREIGN KEY (ID_OUT_SEL_UD) REFERENCES DEC_OUT_SEL_UD (ID_OUT_SEL_UD) ON DELETE CASCADE;

-- changeset root:1751897635013-2705
ALTER TABLE ORG_CAMPO_VAL_SUB_STRUT ADD CONSTRAINT FK_CPO_VAL_SUB_STRUT_ATTB FOREIGN KEY (ID_ATTRIB_DATI_SPEC) REFERENCES DEC_ATTRIB_DATI_SPEC (ID_ATTRIB_DATI_SPEC);

-- changeset root:1751897635013-2706
ALTER TABLE ORG_CAMPO_VAL_SUB_STRUT ADD CONSTRAINT FK_CPO_VAL_SUB_STRUT_RGL FOREIGN KEY (ID_REGOLA_VAL_SUB_STRUT) REFERENCES ORG_REGOLA_VAL_SUB_STRUT (ID_REGOLA_VAL_SUB_STRUT) ON DELETE CASCADE;

-- changeset root:1751897635013-2707
ALTER TABLE ORG_CAMPO_VAL_SUB_STRUT ADD CONSTRAINT FK_CPO_VAL_SUB_STRUT_SUB_STRUT FOREIGN KEY (ID_SUB_STRUT) REFERENCES ORG_SUB_STRUT (ID_SUB_STRUT);

-- changeset root:1751897635013-2708
ALTER TABLE DEC_CRITERIO_RAGGR_FASC ADD CONSTRAINT FK_CRIT_RAG_FASC_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT) ON DELETE CASCADE;

-- changeset root:1751897635013-2709
ALTER TABLE DEC_CRITERIO_FILTRO_MULTIPLO ADD CONSTRAINT FK_CRI_FILT_MULT_REG_UNI_DOC FOREIGN KEY (ID_REGISTRO_UNITA_DOC) REFERENCES DEC_REGISTRO_UNITA_DOC (ID_REGISTRO_UNITA_DOC);

-- changeset root:1751897635013-2710
ALTER TABLE DEC_CRITERIO_FILTRO_MULTIPLO ADD CONSTRAINT FK_CRI_FILT_MULT_REG_UNI_DOCV1 FOREIGN KEY (ID_REGISTRO_RANGE_UNITA_DOC) REFERENCES DEC_REGISTRO_UNITA_DOC (ID_REGISTRO_UNITA_DOC);

-- changeset root:1751897635013-2711
ALTER TABLE DEC_CRITERIO_FILTRO_MULTIPLO ADD CONSTRAINT FK_CRI_FILT_MULT_TIPO_DOC FOREIGN KEY (ID_TIPO_DOC) REFERENCES DEC_TIPO_DOC (ID_TIPO_DOC);

-- changeset root:1751897635013-2712
ALTER TABLE DEC_CRITERIO_FILTRO_MULTIPLO ADD CONSTRAINT FK_CRI_FILT_MULT_TIP_UNI_DOC FOREIGN KEY (ID_TIPO_UNITA_DOC) REFERENCES DEC_TIPO_UNITA_DOC (ID_TIPO_UNITA_DOC);

-- changeset root:1751897635013-2713
ALTER TABLE DEC_CRITERIO_FILTRO_MULTIPLO ADD CONSTRAINT FK_CRI_RAG_FILT_CRI FOREIGN KEY (ID_CRITERIO_RAGGR) REFERENCES DEC_CRITERIO_RAGGR (ID_CRITERIO_RAGGR) ON DELETE CASCADE;

-- changeset root:1751897635013-2714
ALTER TABLE DEC_CRITERIO_RAGGR ADD CONSTRAINT FK_CRI_RAG_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT);

-- changeset root:1751897635013-2715
ALTER TABLE FIR_CRL ADD CONSTRAINT FK_CRL_CER_CA FOREIGN KEY (ID_CERTIF_CA) REFERENCES FIR_CERTIF_CA (ID_CERTIF_CA) ON DELETE CASCADE;

-- changeset root:1751897635013-2716
ALTER TABLE TMP_FIR_CRL ADD CONSTRAINT FK_CRL_DEDUP_CER_CA FOREIGN KEY (ID_CERTIF_CA) REFERENCES FIR_CERTIF_CA (ID_CERTIF_CA);

-- changeset root:1751897635013-2717
ALTER TABLE ARO_CONTR_FIRMA_COMP ADD CONSTRAINT FK_CTR_FIR_COMP_CRL FOREIGN KEY (ID_CRL_USATA) REFERENCES FIR_CRL (ID_CRL);

-- changeset root:1751897635013-2718
ALTER TABLE ARO_CONTR_FIRMA_COMP ADD CONSTRAINT FK_CTR_FIR_COMP_FIR_COMP FOREIGN KEY (ID_FIRMA_COMP) REFERENCES ARO_FIRMA_COMP (ID_FIRMA_COMP) ON DELETE CASCADE;

-- changeset root:1751897635013-2719
ALTER TABLE ARO_CONTR_FIRMA_COMP ADD CONSTRAINT FK_CTR_FIR_COMP_OCSP FOREIGN KEY (ID_OCSP_USATA) REFERENCES FIR_OCSP (ID_OCSP);

-- changeset root:1751897635013-2720
ALTER TABLE ARO_CONTR_MARCA_COMP ADD CONSTRAINT FK_CTR_MRK_COMP_CRL FOREIGN KEY (ID_CRL_USATA) REFERENCES FIR_CRL (ID_CRL);

-- changeset root:1751897635013-2721
ALTER TABLE ARO_CONTR_MARCA_COMP ADD CONSTRAINT FK_CTR_MRK_COMP_MRK_COMP FOREIGN KEY (ID_MARCA_COMP) REFERENCES ARO_MARCA_COMP (ID_MARCA_COMP) ON DELETE CASCADE;

-- changeset root:1751897635013-2722
ALTER TABLE ARO_CONTR_MARCA_COMP ADD CONSTRAINT FK_CTR_MRK_COMP_OCSP FOREIGN KEY (ID_OCSP_USATA) REFERENCES FIR_OCSP (ID_OCSP);

-- changeset root:1751897635013-2723
ALTER TABLE ARO_CONTR_VERIF_FIRMA_DT_VERS ADD CONSTRAINT FK_CTR_VER_FIR_DTVERS FOREIGN KEY (ID_VERIF_FIRMA_DT_VERS) REFERENCES ARO_VERIF_FIRMA_DT_VERS (ID_VERIF_FIRMA_DT_VERS);

-- changeset root:1751897635013-2724
ALTER TABLE ARO_CONTR_VERIF_FIRMA_DT_VERS ADD CONSTRAINT FK_CTR_VER_FIR_DTVERS_CRL FOREIGN KEY (ID_CRL_USATA) REFERENCES FIR_CRL (ID_CRL);

-- changeset root:1751897635013-2725
ALTER TABLE ARO_CONTR_VERIF_FIRMA_DT_VERS ADD CONSTRAINT FK_CTR_VER_FIR_DTVERS_OCSP FOREIGN KEY (ID_OCSP_USATA) REFERENCES FIR_OCSP (ID_OCSP);

-- changeset root:1751897635013-2726
ALTER TABLE VOL_CONTR_VERIF_FIRMA_VOLUME ADD CONSTRAINT FK_CTR_VER_FIR_VOL_CRL FOREIGN KEY (ID_CRL_USATA) REFERENCES FIR_CRL (ID_CRL);

-- changeset root:1751897635013-2727
ALTER TABLE VOL_CONTR_VERIF_FIRMA_VOLUME ADD CONSTRAINT FK_CTR_VER_FIR_VOL_VER_FIR_VOL FOREIGN KEY (ID_VERIF_FIRMA_VOLUME) REFERENCES VOL_VERIF_FIRMA_VOLUME (ID_VERIF_FIRMA_VOLUME) ON DELETE CASCADE;

-- changeset root:1751897635013-2728
ALTER TABLE VRS_XML_DATI_SES_OBJECT_STORAGE ADD CONSTRAINT FK_DATI_SES_OBJ_STO_BACKEND_NEW FOREIGN KEY (ID_DEC_BACKEND) REFERENCES DEC_BACKEND (ID_DEC_BACKEND);

-- changeset root:1751897635013-2729
ALTER TABLE VRS_XML_DATI_SES_OBJECT_STORAGE_KO ADD CONSTRAINT FK_DATI_SES_OBJ_STO_BACKEND_NEW_KO FOREIGN KEY (ID_DEC_BACKEND) REFERENCES DEC_BACKEND (ID_DEC_BACKEND);

-- changeset root:1751897635013-2730
ALTER TABLE VRS_DATI_SESSIONE_VERS ADD CONSTRAINT FK_DAT_SES_VRS_SES_VRS FOREIGN KEY (ID_SESSIONE_VERS) REFERENCES VRS_SESSIONE_VERS (ID_SESSIONE_VERS) ON DELETE CASCADE;

-- changeset root:1751897635013-2731
ALTER TABLE VRS_XML_DATI_SES_OBJECT_STORAGE ADD CONSTRAINT FK_DAT_SES_VRS_XML_DATI_SES_OBJ_STO FOREIGN KEY (ID_DATI_SESSIONE_VERS) REFERENCES VRS_DATI_SESSIONE_VERS (ID_DATI_SESSIONE_VERS) ON DELETE CASCADE;

-- changeset root:1751897635013-2732
ALTER TABLE VRS_XML_DATI_SES_OBJECT_STORAGE_KO ADD CONSTRAINT FK_DAT_SES_VRS_XML_DATI_SES_OBJ_STO_KO FOREIGN KEY (ID_DATI_SESSIONE_VERS_KO) REFERENCES VRS_DATI_SESSIONE_VERS_KO (ID_DATI_SESSIONE_VERS_KO) ON DELETE CASCADE;

-- changeset root:1751897635013-2733
ALTER TABLE DEC_CONFIG_OBJECT_STORAGE ADD CONSTRAINT FK_DEC_CONFIG_BACKEND FOREIGN KEY (ID_DEC_BACKEND) REFERENCES DEC_BACKEND (ID_DEC_BACKEND);

-- changeset root:1751897635013-2734
ALTER TABLE DEC_REPORT_SERVIZIO_VERIFICA_COMP_DOC ADD CONSTRAINT FK_DEC_SERVIZIO_VERIFICA_COMP_DOC FOREIGN KEY (ID_SERVIZIO_VERIFICA_COMP_DOC) REFERENCES DEC_SERVIZIO_VERIFICA_COMP_DOC (ID_SERVIZIO_VERIFICA_COMP_DOC);

-- changeset root:1751897635013-2735
ALTER TABLE DEC_TIPO_STRUT_UD_XSD ADD CONSTRAINT FK_DEC_TIPSTRTUD_XSD_TIPSTRTUD FOREIGN KEY (ID_TIPO_STRUT_UNITA_DOC) REFERENCES DEC_TIPO_STRUT_UNITA_DOC (ID_TIPO_STRUT_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-2736
ALTER TABLE DEC_TIPO_STRUT_UD_XSD ADD CONSTRAINT FK_DEC_TIPSTRUTUD_XSD_DATISPEC FOREIGN KEY (ID_XSD_DATI_SPEC) REFERENCES DEC_XSD_DATI_SPEC (ID_XSD_DATI_SPEC) ON DELETE CASCADE;

-- changeset root:1751897635013-2737
ALTER TABLE ELV_DOC_AGG_DA_ELAB_ELENCO ADD CONSTRAINT FK_DOC_AGG_DAELB_ELE_DOC FOREIGN KEY (ID_DOC) REFERENCES ARO_DOC (ID_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-2738
ALTER TABLE TMP_ARO_DOC_ANNUL_DA_ELAB ADD CONSTRAINT FK_DOC_ANNUL_DA_ELAB_DOC FOREIGN KEY (ID_DOC) REFERENCES ARO_DOC (ID_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-2739
ALTER TABLE TMP_ARO_DOC_ANNUL_DA_ELAB ADD CONSTRAINT FK_DOC_ANNUL_DA_ELAB_UD FOREIGN KEY (ID_UD_ANNUL_DA_ELAB) REFERENCES TMP_ARO_UD_ANNUL_DA_ELAB (ID_UD_ANNUL_DA_ELAB) ON DELETE CASCADE;

-- changeset root:1751897635013-2740
ALTER TABLE TMP_ARO_DOC_ANNUL ADD CONSTRAINT FK_DOC_ANNUL_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT) ON DELETE CASCADE;

-- changeset root:1751897635013-2741
ALTER TABLE ARO_DOC ADD CONSTRAINT FK_DOC_ELE_VRS FOREIGN KEY (ID_ELENCO_VERS) REFERENCES ELV_ELENCO_VERS (ID_ELENCO_VERS) ON DELETE SET NULL;

-- changeset root:1751897635013-2742
ALTER TABLE VRS_DOC_NON_VERS ADD CONSTRAINT FK_DOC_NOVERS_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT) ON DELETE CASCADE;

-- changeset root:1751897635013-2743
ALTER TABLE ARO_DOC ADD CONSTRAINT FK_DOC_TIPO_DOC FOREIGN KEY (ID_TIPO_DOC) REFERENCES DEC_TIPO_DOC (ID_TIPO_DOC);

-- changeset root:1751897635013-2744
ALTER TABLE ARO_DOC ADD CONSTRAINT FK_DOC_UNI_DOC FOREIGN KEY (ID_UNITA_DOC) REFERENCES ARO_UNITA_DOC (ID_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-2745
ALTER TABLE REC_DT_VERS_RECUP ADD CONSTRAINT FK_DT_VERS_REC_SES_REC FOREIGN KEY (ID_SESSIONE_RECUP) REFERENCES REC_SESSIONE_RECUP (ID_SESSIONE_RECUP) ON DELETE CASCADE;

-- changeset root:1751897635013-2746
ALTER TABLE HSM_ELENCO_FASC_SES_FIRMA ADD CONSTRAINT FK_ELE_FASC_SES_FIR FOREIGN KEY (ID_SESSIONE_FIRMA) REFERENCES HSM_SESSIONE_FIRMA (ID_SESSIONE_FIRMA) ON DELETE CASCADE;

-- changeset root:1751897635013-2747
ALTER TABLE HSM_ELENCO_FASC_SES_FIRMA ADD CONSTRAINT FK_ELE_FASC_SES_FIR_ELE FOREIGN KEY (ID_ELENCO_VERS_FASC) REFERENCES ELV_ELENCO_VERS_FASC (ID_ELENCO_VERS_FASC);

-- changeset root:1751897635013-2748
ALTER TABLE HSM_ELENCO_SESSIONE_FIRMA ADD CONSTRAINT FK_ELE_SES_FIR FOREIGN KEY (ID_SESSIONE_FIRMA) REFERENCES HSM_SESSIONE_FIRMA (ID_SESSIONE_FIRMA) ON DELETE CASCADE;

-- changeset root:1751897635013-2749
ALTER TABLE HSM_ELENCO_SESSIONE_FIRMA ADD CONSTRAINT FK_ELE_SES_FIR_ELE_VRS FOREIGN KEY (ID_ELENCO_VERS) REFERENCES ELV_ELENCO_VERS (ID_ELENCO_VERS);

-- changeset root:1751897635013-2750
ALTER TABLE ELV_ELENCO_VERS ADD CONSTRAINT FK_ELE_VERS_CRI_RAG FOREIGN KEY (ID_CRITERIO_RAGGR) REFERENCES DEC_CRITERIO_RAGGR (ID_CRITERIO_RAGGR);

-- changeset root:1751897635013-2751
ALTER TABLE ELV_ELENCO_VERS ADD CONSTRAINT FK_ELE_VERS_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT);

-- changeset root:1751897635013-2752
ALTER TABLE ELV_ELENCO_VERS ADD CONSTRAINT FK_ELE_VERS_USR_FIRMA FOREIGN KEY (ID_USER_FIRMA_INDICE) REFERENCES IAM_USER (ID_USER_IAM);

-- changeset root:1751897635013-2753
ALTER TABLE ELV_ELENCO_VERS_DA_ELAB ADD CONSTRAINT FK_ELE_VRS_DAELB_ELE_VRS FOREIGN KEY (ID_ELENCO_VERS) REFERENCES ELV_ELENCO_VERS (ID_ELENCO_VERS) ON DELETE CASCADE;

-- changeset root:1751897635013-2754
ALTER TABLE ELV_ELENCO_VERS_FASC_ANNUL ADD CONSTRAINT FK_ELE_VRS_FASC_ANN_ELE FOREIGN KEY (ID_ELENCO_VERS_FASC) REFERENCES ELV_ELENCO_VERS_FASC (ID_ELENCO_VERS_FASC) ON DELETE CASCADE;

-- changeset root:1751897635013-2755
ALTER TABLE ELV_ELENCO_VERS_FASC_ANNUL ADD CONSTRAINT FK_ELE_VRS_FASC_ANN_FASC FOREIGN KEY (ID_FASCICOLO) REFERENCES FAS_FASCICOLO (ID_FASCICOLO) ON DELETE SET NULL;

-- changeset root:1751897635013-2756
ALTER TABLE ELV_ELENCO_VERS_FASC ADD CONSTRAINT FK_ELE_VRS_FASC_CRIT FOREIGN KEY (ID_CRITERIO_RAGGR_FASC) REFERENCES DEC_CRITERIO_RAGGR_FASC (ID_CRITERIO_RAGGR_FASC);

-- changeset root:1751897635013-2757
ALTER TABLE ELV_ELENCO_VERS_FASC_DA_ELAB ADD CONSTRAINT FK_ELE_VRS_FASC_DAELB FOREIGN KEY (ID_ELENCO_VERS_FASC) REFERENCES ELV_ELENCO_VERS_FASC (ID_ELENCO_VERS_FASC) ON DELETE CASCADE;

-- changeset root:1751897635013-2758
ALTER TABLE ELV_ELENCO_VERS_FASC ADD CONSTRAINT FK_ELE_VRS_FASC_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT);

-- changeset root:1751897635013-2759
ALTER TABLE ELV_ELENCO_VERS_UD_ANNUL ADD CONSTRAINT FK_ELE_VRS_UD_ANN_ELE FOREIGN KEY (ID_ELENCO_VERS) REFERENCES ELV_ELENCO_VERS (ID_ELENCO_VERS) ON DELETE CASCADE;

-- changeset root:1751897635013-2760
ALTER TABLE ELV_ELENCO_VERS_UD_ANNUL ADD CONSTRAINT FK_ELE_VRS_UD_ANN_UNI_DOC FOREIGN KEY (ID_UNITA_DOC) REFERENCES ARO_UNITA_DOC (ID_UNITA_DOC) ON DELETE SET NULL;

-- changeset root:1751897635013-2761
ALTER TABLE VOL_VOLUME_VERS_UD_ANNUL ADD CONSTRAINT FK_ELE_VRS_UD_ANN_UNI_DOCV1 FOREIGN KEY (ID_UNITA_DOC) REFERENCES ARO_UNITA_DOC (ID_UNITA_DOC) ON DELETE SET NULL;

-- changeset root:1751897635013-2762
ALTER TABLE ELV_ELENCO_VERS ADD CONSTRAINT FK_ELE_VRS_USR_CHIUSO FOREIGN KEY (ID_USER_CHIUSO_ELENCO) REFERENCES IAM_USER (ID_USER_IAM);

-- changeset root:1751897635013-2763
ALTER TABLE FAS_STATO_FASCICOLO_ELENCO ADD CONSTRAINT FK_ELV_STATO_FASC_ELE FOREIGN KEY (ID_FASCICOLO) REFERENCES FAS_FASCICOLO (ID_FASCICOLO) ON DELETE CASCADE;

-- changeset root:1751897635013-2764
ALTER TABLE ORG_ENTE ADD CONSTRAINT FK_ENT_AMB FOREIGN KEY (ID_AMBIENTE) REFERENCES ORG_AMBIENTE (ID_AMBIENTE) ON DELETE CASCADE;

-- changeset root:1751897635013-2765
ALTER TABLE ORG_ENTE ADD CONSTRAINT FK_ENT_CAT_ENTE FOREIGN KEY (ID_CATEG_ENTE) REFERENCES ORG_CATEG_ENTE (ID_CATEG_ENTE);

-- changeset root:1751897635013-2766
ALTER TABLE DEC_ERR_AA_REGISTRO_UNITA_DOC ADD CONSTRAINT FK_ERR_AA_REG FOREIGN KEY (ID_AA_REGISTRO_UNITA_DOC) REFERENCES DEC_AA_REGISTRO_UNITA_DOC (ID_AA_REGISTRO_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-2767
ALTER TABLE DEC_ERR_AA_TIPO_FASCICOLO ADD CONSTRAINT FK_ERR_AA_TI_FASC FOREIGN KEY (ID_AA_TIPO_FASCICOLO) REFERENCES DEC_AA_TIPO_FASCICOLO (ID_AA_TIPO_FASCICOLO) ON DELETE CASCADE;

-- changeset root:1751897635013-2768
ALTER TABLE TPI_ERR_ARK ADD CONSTRAINT FK_ERR_ARK_SCHED_JOB FOREIGN KEY (ID_SCHED_JOB) REFERENCES TPI_SCHED_JOB (ID_SCHED_JOB) ON DELETE CASCADE;

-- changeset root:1751897635013-2769
ALTER TABLE SER_ERR_CONTENUTO_VER_SERIE ADD CONSTRAINT FK_ERR_CONTEN_VER_SER FOREIGN KEY (ID_CONTENUTO_VER_SERIE) REFERENCES SER_CONTENUTO_VER_SERIE (ID_CONTENUTO_VER_SERIE) ON DELETE CASCADE;

-- changeset root:1751897635013-2770
ALTER TABLE SER_ERR_FILE_INPUT ADD CONSTRAINT FK_ERR_FILE_INP_VER_SER FOREIGN KEY (ID_FILE_INPUT_VER_SERIE) REFERENCES SER_FILE_INPUT_VER_SERIE (ID_FILE_INPUT_VER_SERIE) ON DELETE CASCADE;

-- changeset root:1751897635013-2771
ALTER TABLE ARO_ERR_RICH_ANNUL_VERS ADD CONSTRAINT FK_ERR_RICH_ANN_VRS_ITEM FOREIGN KEY (ID_ITEM_RICH_ANNUL_VERS) REFERENCES ARO_ITEM_RICH_ANNUL_VERS (ID_ITEM_RICH_ANNUL_VERS) ON DELETE CASCADE;

-- changeset root:1751897635013-2772
ALTER TABLE DEC_ERR_SACER ADD CONSTRAINT FK_ERR_SACER_CLA FOREIGN KEY (ID_CLASSE_ERR_SACER) REFERENCES DEC_CLASSE_ERR_SACER (ID_CLASSE_ERR_SACER) ON DELETE CASCADE;

-- changeset root:1751897635013-2773
ALTER TABLE VRS_ERR_SES_FASCICOLO_KO ADD CONSTRAINT FK_ERR_SES_FASC_KO FOREIGN KEY (ID_SES_FASCICOLO_KO) REFERENCES VRS_SES_FASCICOLO_KO (ID_SES_FASCICOLO_KO);

-- changeset root:1751897635013-2774
ALTER TABLE VRS_ERR_SES_FASCICOLO_KO ADD CONSTRAINT FK_ERR_SES_FASC_KO_ERR FOREIGN KEY (ID_ERR_SACER) REFERENCES DEC_ERR_SACER (ID_ERR_SACER);

-- changeset root:1751897635013-2775
ALTER TABLE VRS_ERR_SES_UPD_UNITA_DOC_ERR ADD CONSTRAINT FK_ERR_SES_UPD_UD_ERR FOREIGN KEY (ID_SES_UPD_UNITA_DOC_ERR) REFERENCES VRS_SES_UPD_UNITA_DOC_ERR (ID_SES_UPD_UNITA_DOC_ERR) ON DELETE CASCADE;

-- changeset root:1751897635013-2776
ALTER TABLE VRS_ERR_SES_UPD_UNITA_DOC_ERR ADD CONSTRAINT FK_ERR_SES_UPD_UD_ERR_CTRL_WS FOREIGN KEY (ID_CONTROLLO_WS) REFERENCES DEC_CONTROLLO_WS (ID_CONTROLLO_WS);

-- changeset root:1751897635013-2777
ALTER TABLE VRS_ERR_SES_UPD_UNITA_DOC_ERR ADD CONSTRAINT FK_ERR_SES_UPD_UD_ERR_ERR FOREIGN KEY (ID_ERR_SACER) REFERENCES DEC_ERR_SACER (ID_ERR_SACER);

-- changeset root:1751897635013-2778
ALTER TABLE VRS_ERR_SES_UPD_UNITA_DOC_KO ADD CONSTRAINT FK_ERR_SES_UPD_UD_KO FOREIGN KEY (ID_SES_UPD_UNITA_DOC_KO) REFERENCES VRS_SES_UPD_UNITA_DOC_KO (ID_SES_UPD_UNITA_DOC_KO) ON DELETE CASCADE;

-- changeset root:1751897635013-2779
ALTER TABLE VRS_ERR_SES_UPD_UNITA_DOC_KO ADD CONSTRAINT FK_ERR_SES_UPD_UD_KO_CTRL_WS FOREIGN KEY (ID_CONTROLLO_WS) REFERENCES DEC_CONTROLLO_WS (ID_CONTROLLO_WS);

-- changeset root:1751897635013-2780
ALTER TABLE VRS_ERR_SESSIONE_VERS ADD CONSTRAINT FK_ERR_SES_VRS_DAT_SES_VRS FOREIGN KEY (ID_DATI_SESSIONE_VERS) REFERENCES VRS_DATI_SESSIONE_VERS (ID_DATI_SESSIONE_VERS) ON DELETE CASCADE;

-- changeset root:1751897635013-2781
ALTER TABLE DEC_ESTENSIONE_FILE ADD CONSTRAINT FK_EST_FIL_FMT_FIL_STD FOREIGN KEY (ID_FORMATO_FILE_STANDARD) REFERENCES DEC_FORMATO_FILE_STANDARD (ID_FORMATO_FILE_STANDARD) ON DELETE CASCADE;

-- changeset root:1751897635013-2782
ALTER TABLE ELV_FASC_DA_ELAB_ELENCO ADD CONSTRAINT FK_FASC_DAELB_ELE_FASC FOREIGN KEY (ID_FASCICOLO) REFERENCES FAS_FASCICOLO (ID_FASCICOLO) ON DELETE CASCADE;

-- changeset root:1751897635013-2783
ALTER TABLE FAS_FASCICOLO ADD CONSTRAINT FK_FASC_ELE_VRS_FASC FOREIGN KEY (ID_ELENCO_VERS_FASC) REFERENCES ELV_ELENCO_VERS_FASC (ID_ELENCO_VERS_FASC);

-- changeset root:1751897635013-2784
ALTER TABLE VRS_FASCICOLO_KO ADD CONSTRAINT FK_FASC_KO_ERR FOREIGN KEY (ID_ERR_SACER_PRINC) REFERENCES DEC_ERR_SACER (ID_ERR_SACER);

-- changeset root:1751897635013-2785
ALTER TABLE VRS_FASCICOLO_KO ADD CONSTRAINT FK_FASC_KO_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT);

-- changeset root:1751897635013-2786
ALTER TABLE VRS_FASCICOLO_KO ADD CONSTRAINT FK_FASC_KO_TI_FASC_LAST FOREIGN KEY (ID_TIPO_FASCICOLO_LAST) REFERENCES DEC_TIPO_FASCICOLO (ID_TIPO_FASCICOLO);

-- changeset root:1751897635013-2787
ALTER TABLE FAS_FASCICOLO ADD CONSTRAINT FK_FASC_PADRE FOREIGN KEY (ID_FASCICOLO_PADRE) REFERENCES FAS_FASCICOLO (ID_FASCICOLO);

-- changeset root:1751897635013-2788
ALTER TABLE FAS_FASCICOLO ADD CONSTRAINT FK_FASC_SIS_MGZ FOREIGN KEY (ID_SISTEMA_MIGRAZ) REFERENCES APL_SISTEMA_MIGRAZ (ID_SISTEMA_MIGRAZ);

-- changeset root:1751897635013-2789
ALTER TABLE FAS_FASCICOLO ADD CONSTRAINT FK_FASC_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT);

-- changeset root:1751897635013-2790
ALTER TABLE FAS_FASCICOLO ADD CONSTRAINT FK_FASC_TI_FASC FOREIGN KEY (ID_TIPO_FASCICOLO) REFERENCES DEC_TIPO_FASCICOLO (ID_TIPO_FASCICOLO);

-- changeset root:1751897635013-2791
ALTER TABLE FAS_FASCICOLO ADD CONSTRAINT FK_FASC_UNI_DOC_FIRST FOREIGN KEY (ID_UNITA_DOC_FIRST) REFERENCES ARO_UNITA_DOC (ID_UNITA_DOC);

-- changeset root:1751897635013-2792
ALTER TABLE FAS_FASCICOLO ADD CONSTRAINT FK_FASC_UNI_DOC_LAST FOREIGN KEY (ID_UNITA_DOC_LAST) REFERENCES ARO_UNITA_DOC (ID_UNITA_DOC);

-- changeset root:1751897635013-2793
ALTER TABLE FAS_FASCICOLO ADD CONSTRAINT FK_FASC_USR FOREIGN KEY (ID_USER_IAM_VERS) REFERENCES IAM_USER (ID_USER_IAM);

-- changeset root:1751897635013-2794
ALTER TABLE FAS_FASCICOLO ADD CONSTRAINT FK_FASC_VOCE_TITOL FOREIGN KEY (ID_VOCE_TITOL) REFERENCES DEC_VOCE_TITOL (ID_VOCE_TITOL);

-- changeset root:1751897635013-2795
ALTER TABLE FAS_COD_IDE_SOG ADD CONSTRAINT FK_FAS_COD_IDE_SOG_SOG_FASC FOREIGN KEY (ID_SOG_FASCICOLO) REFERENCES FAS_SOG_FASCICOLO (ID_SOG_FASCICOLO) ON DELETE CASCADE;

-- changeset root:1751897635013-2796
ALTER TABLE FAS_EVENTO_FASCICOLO ADD CONSTRAINT FK_FAS_EVENTO_FAS FOREIGN KEY (ID_FASCICOLO) REFERENCES FAS_FASCICOLO (ID_FASCICOLO) ON DELETE CASCADE;

-- changeset root:1751897635013-2797
ALTER TABLE FAS_EVENTO_SOG ADD CONSTRAINT FK_FAS_EVENTO_SOG FOREIGN KEY (ID_SOG_FASCICOLO) REFERENCES FAS_SOG_FASCICOLO (ID_SOG_FASCICOLO) ON DELETE CASCADE;

-- changeset root:1751897635013-2798
ALTER TABLE FAS_IND_RIF_SOG ADD CONSTRAINT FK_FAS_IND_RIF_SOG_FASC FOREIGN KEY (ID_SOG_FASCICOLO) REFERENCES FAS_SOG_FASCICOLO (ID_SOG_FASCICOLO) ON DELETE CASCADE;

-- changeset root:1751897635013-2799
ALTER TABLE ELV_FILE_ELENCO_VERS_OBJECT_STORAGE ADD CONSTRAINT FK_FILE_ELENCO_VERS_ELV_FILE_ELV_OBJ_STO_NEW FOREIGN KEY (ID_FILE_ELENCO_VERS) REFERENCES ELV_FILE_ELENCO_VERS (ID_FILE_ELENCO_VERS) ON DELETE CASCADE;

-- changeset root:1751897635013-2800
ALTER TABLE ELV_FILE_ELENCO_VERS_FASC_OBJECT_STORAGE ADD CONSTRAINT FK_FILE_ELENCO_VERS_FASC_ELV_FILE_ELV_OBJ_STO FOREIGN KEY (ID_FILE_ELENCO_VERS_FASC) REFERENCES ELV_FILE_ELENCO_VERS_FASC (ID_FILE_ELENCO_VERS_FASC) ON DELETE CASCADE;

-- changeset root:1751897635013-2801
ALTER TABLE ELV_FILE_ELENCO_VERS ADD CONSTRAINT FK_FILE_ELE_VRS_ELE_VRS_NEW FOREIGN KEY (ID_ELENCO_VERS) REFERENCES ELV_ELENCO_VERS (ID_ELENCO_VERS) ON DELETE CASCADE ENABLE NOVALIDATE;

-- changeset root:1751897635013-2802
ALTER TABLE ELV_FILE_ELENCO_VERS_FASC ADD CONSTRAINT FK_FILE_ELE_VRS_FASC FOREIGN KEY (ID_ELENCO_VERS_FASC) REFERENCES ELV_ELENCO_VERS_FASC (ID_ELENCO_VERS_FASC) ON DELETE CASCADE;

-- changeset root:1751897635013-2803
ALTER TABLE SER_FILE_INPUT_VER_SERIE ADD CONSTRAINT FK_FILE_INP_VER_SER FOREIGN KEY (ID_VER_SERIE) REFERENCES SER_VER_SERIE (ID_VER_SERIE) ON DELETE CASCADE;

-- changeset root:1751897635013-2804
ALTER TABLE SER_FILE_INPUT_VER_SERIE ADD CONSTRAINT FK_FILE_INP_VER_SER_USR FOREIGN KEY (ID_USER_IAM) REFERENCES IAM_USER (ID_USER_IAM);

-- changeset root:1751897635013-2805
ALTER TABLE FAS_FILE_META_VER_AIP_FASC ADD CONSTRAINT FK_FILE_META_VER_AIP_FASC_ITEM FOREIGN KEY (ID_META_VER_AIP_FASCICOLO) REFERENCES FAS_META_VER_AIP_FASCICOLO (ID_META_VER_AIP_FASCICOLO) ON DELETE CASCADE;

-- changeset root:1751897635013-2806
ALTER TABLE VRS_FILE_NOARK_PATH_DT_VERS ADD CONSTRAINT FK_FILE_NOARK_PATH_DT_VERS FOREIGN KEY (ID_PATH_DT_VERS) REFERENCES VRS_PATH_DT_VERS (ID_PATH_DT_VERS) ON DELETE CASCADE;

-- changeset root:1751897635013-2807
ALTER TABLE VRS_FILE_SES_OBJECT_STORAGE_KO ADD CONSTRAINT FK_FILE_OBJ_STO_VRS_KO FOREIGN KEY (ID_FILE_SESSIONE_KO) REFERENCES VRS_FILE_SESSIONE_KO (ID_FILE_SESSIONE_KO) ON DELETE CASCADE;

-- changeset root:1751897635013-2808
ALTER TABLE ARO_FILE_RICH_ANNUL_VERS ADD CONSTRAINT FK_FILE_RICH_ANN_VRS FOREIGN KEY (ID_RICH_ANNUL_VERS) REFERENCES ARO_RICH_ANNUL_VERS (ID_RICH_ANNUL_VERS) ON DELETE CASCADE;

-- changeset root:1751897635013-2809
ALTER TABLE ARO_FILE_VER_INDICE_AIP_UD ADD CONSTRAINT FK_FILE_VER_IX_AIP_UD_NEW FOREIGN KEY (ID_VER_INDICE_AIP) REFERENCES ARO_VER_INDICE_AIP_UD (ID_VER_INDICE_AIP) ON DELETE CASCADE ENABLE NOVALIDATE;

-- changeset root:1751897635013-2810
ALTER TABLE SER_FILE_VER_SERIE ADD CONSTRAINT FK_FILE_VER_SER FOREIGN KEY (ID_VER_SERIE) REFERENCES SER_VER_SERIE (ID_VER_SERIE) ON DELETE CASCADE;

-- changeset root:1751897635013-2811
ALTER TABLE SER_FILE_VER_SERIE ADD CONSTRAINT FK_FILE_VER_SER_ENTE_CONSERV FOREIGN KEY (ID_ENTE_CONSERV) REFERENCES SACER_IAM.ORG_ENTE_SIAM (ID_ENTE_SIAM);

-- changeset root:1751897635013-2812
ALTER TABLE DEC_FILTRO_SEL_UD_ATTB ADD CONSTRAINT FK_FILT_SEL_UD_ATB_TI_SER_UD FOREIGN KEY (ID_TIPO_SERIE_UD) REFERENCES DEC_TIPO_SERIE_UD (ID_TIPO_SERIE_UD) ON DELETE CASCADE;

-- changeset root:1751897635013-2813
ALTER TABLE DEC_FILTRO_SEL_UD ADD CONSTRAINT FK_FILT_SEL_UD_TI_DOC FOREIGN KEY (ID_TIPO_DOC_PRINC) REFERENCES DEC_TIPO_DOC (ID_TIPO_DOC);

-- changeset root:1751897635013-2814
ALTER TABLE DEC_FILTRO_SEL_UD ADD CONSTRAINT FK_FILT_SEL_UD_TI_SER_UD FOREIGN KEY (ID_TIPO_SERIE_UD) REFERENCES DEC_TIPO_SERIE_UD (ID_TIPO_SERIE_UD) ON DELETE CASCADE;

-- changeset root:1751897635013-2815
ALTER TABLE FIR_FILE_PER_FIRMA ADD CONSTRAINT FK_FIL_FIR_CERTIF_OCSP FOREIGN KEY (ID_CERTIF_OCSP) REFERENCES FIR_CERTIF_OCSP (ID_CERTIF_OCSP);

-- changeset root:1751897635013-2816
ALTER TABLE FIR_FILE_PER_FIRMA ADD CONSTRAINT FK_FIL_FIR_CER_CA FOREIGN KEY (ID_CERTIF_CA) REFERENCES FIR_CERTIF_CA (ID_CERTIF_CA) ON DELETE CASCADE;

-- changeset root:1751897635013-2817
ALTER TABLE FIR_FILE_PER_FIRMA ADD CONSTRAINT FK_FIL_FIR_CER_FIR FOREIGN KEY (ID_CERTIF_FIRMATARIO) REFERENCES FIR_CERTIF_FIRMATARIO (ID_CERTIF_FIRMATARIO) ON DELETE CASCADE;

-- changeset root:1751897635013-2818
ALTER TABLE FIR_FILE_PER_FIRMA ADD CONSTRAINT FK_FIL_FIR_CRL FOREIGN KEY (ID_CRL) REFERENCES FIR_CRL (ID_CRL) ON DELETE CASCADE;

-- changeset root:1751897635013-2819
ALTER TABLE FIR_FILE_PER_FIRMA ADD CONSTRAINT FK_FIL_FIR_OCSP FOREIGN KEY (ID_OCSP) REFERENCES FIR_OCSP (ID_OCSP);

-- changeset root:1751897635013-2820
ALTER TABLE VRS_FILE_SESSIONE ADD CONSTRAINT FK_FIL_SES_DAT_SES_VRS FOREIGN KEY (ID_DATI_SESSIONE_VERS) REFERENCES VRS_DATI_SESSIONE_VERS (ID_DATI_SESSIONE_VERS) ON DELETE CASCADE;

-- changeset root:1751897635013-2821
ALTER TABLE VOL_FILE_VOLUME_CONSERV ADD CONSTRAINT FK_FIL_VOL_CONS_VOL_CONS FOREIGN KEY (ID_VOLUME_CONSERV) REFERENCES VOL_VOLUME_CONSERV (ID_VOLUME_CONSERV) ON DELETE CASCADE;

-- changeset root:1751897635013-2822
ALTER TABLE FIR_CERTIF_OCSP ADD CONSTRAINT FK_FIRCERTIFOCSP_CER_CA FOREIGN KEY (ID_CERTIF_CA) REFERENCES FIR_CERTIF_CA (ID_CERTIF_CA) ON DELETE CASCADE;

-- changeset root:1751897635013-2823
ALTER TABLE FIR_OCSP ADD CONSTRAINT FK_FIROCSP_CER_OCSP FOREIGN KEY (ID_CERTIF_OCSP) REFERENCES FIR_CERTIF_OCSP (ID_CERTIF_OCSP) ON DELETE CASCADE;

-- changeset root:1751897635013-2824
ALTER TABLE FIR_REPORT ADD CONSTRAINT FK_FIRREPORT_COMP_DOC FOREIGN KEY (ID_COMP_DOC) REFERENCES ARO_COMP_DOC (ID_COMP_DOC);

-- changeset root:1751897635013-2825
ALTER TABLE ARO_FIRMA_COMP ADD CONSTRAINT FK_FIR_COMP_BUSTA_CRIT FOREIGN KEY (ID_BUSTA_CRITTOG) REFERENCES ARO_BUSTA_CRITTOG (ID_BUSTA_CRITTOG) ON DELETE CASCADE;

-- changeset root:1751897635013-2826
ALTER TABLE ARO_FIRMA_COMP ADD CONSTRAINT FK_FIR_COMP_CER_FIR FOREIGN KEY (ID_CERTIF_FIRMATARIO) REFERENCES FIR_CERTIF_FIRMATARIO (ID_CERTIF_FIRMATARIO);

-- changeset root:1751897635013-2827
ALTER TABLE ARO_FIRMA_COMP ADD CONSTRAINT FK_FIR_COMP_COMP_DOC FOREIGN KEY (ID_COMP_DOC) REFERENCES ARO_COMP_DOC (ID_COMP_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-2828
ALTER TABLE ARO_FIRMA_COMP ADD CONSTRAINT FK_FIR_COMP_MRK_COMP FOREIGN KEY (ID_MARCA_COMP) REFERENCES ARO_MARCA_COMP (ID_MARCA_COMP) ON DELETE CASCADE;

-- changeset root:1751897635013-2829
ALTER TABLE DEC_FILTRO_SEL_UD_DATO ADD CONSTRAINT FK_FLT_SEL_UD_DAT FOREIGN KEY (ID_ATTRIB_DATI_SPEC) REFERENCES DEC_ATTRIB_DATI_SPEC (ID_ATTRIB_DATI_SPEC);

-- changeset root:1751897635013-2830
ALTER TABLE DEC_FILTRO_SEL_UD_DATO ADD CONSTRAINT FK_FLT_SEL_UD_DAT_ATB FOREIGN KEY (ID_FILTRO_SEL_UD_ATTB) REFERENCES DEC_FILTRO_SEL_UD_ATTB (ID_FILTRO_SEL_UD_ATTB) ON DELETE CASCADE;

-- changeset root:1751897635013-2831
ALTER TABLE DEC_FORMATO_FILE_BUSTA ADD CONSTRAINT FK_FMT_FILE_BUSTA_FMT_FIL_STD FOREIGN KEY (ID_FORMATO_FILE_STANDARD) REFERENCES DEC_FORMATO_FILE_STANDARD (ID_FORMATO_FILE_STANDARD) ON DELETE CASCADE;

-- changeset root:1751897635013-2832
ALTER TABLE DEC_FORMATO_FILE_DOC ADD CONSTRAINT FK_FMT_FILE_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT) ON DELETE CASCADE;

-- changeset root:1751897635013-2833
ALTER TABLE DEC_FORMATO_FILE_AMMESSO ADD CONSTRAINT FK_FMT_FIL_AMS_FMT_FILE FOREIGN KEY (ID_FORMATO_FILE_DOC) REFERENCES DEC_FORMATO_FILE_DOC (ID_FORMATO_FILE_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-2834
ALTER TABLE DEC_FORMATO_FILE_AMMESSO ADD CONSTRAINT FK_FMT_FIL_AMS_TIPO_COMP FOREIGN KEY (ID_TIPO_COMP_DOC) REFERENCES DEC_TIPO_COMP_DOC (ID_TIPO_COMP_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-2835
ALTER TABLE DEC_FORMATO_PROPRIETA ADD CONSTRAINT FK_FMT_PROP_GRP_PROP FOREIGN KEY (ID_FORMATO_GRUPPO_PROPRIETA) REFERENCES DEC_FORMATO_GRUPPO_PROPRIETA (ID_FORMATO_GRUPPO_PROPRIETA) ON DELETE CASCADE;

-- changeset root:1751897635013-2836
ALTER TABLE DEC_FORMATO_VALUTAZIONE ADD CONSTRAINT FK_FMT_VTZ_FMT_PROP FOREIGN KEY (ID_FORMATO_PROPRIETA) REFERENCES DEC_FORMATO_PROPRIETA (ID_FORMATO_PROPRIETA) ON DELETE CASCADE;

-- changeset root:1751897635013-2837
ALTER TABLE DEC_FORMATO_VALUTAZIONE ADD CONSTRAINT FK_FMT_VTZ_FMT_STD FOREIGN KEY (ID_FORMATO_FILE_STANDARD) REFERENCES DEC_FORMATO_FILE_STANDARD (ID_FORMATO_FILE_STANDARD) ON DELETE CASCADE;

-- changeset root:1751897635013-2838
ALTER TABLE VRS_FILE_SESSIONE_KO ADD CONSTRAINT FK_ID_DATI_SESSIONE_VERS_KO FOREIGN KEY (ID_DATI_SESSIONE_VERS_KO) REFERENCES VRS_DATI_SESSIONE_VERS_KO (ID_DATI_SESSIONE_VERS_KO) ON DELETE CASCADE;

-- changeset root:1751897635013-2839
ALTER TABLE FAS_FILE_META_VER_AIP_FASC_OBJECT_STORAGE ADD CONSTRAINT FK_ID_DEC_BACKEND FOREIGN KEY (ID_DEC_BACKEND) REFERENCES DEC_BACKEND (ID_DEC_BACKEND);

-- changeset root:1751897635013-2840
ALTER TABLE ELV_FILE_ELENCO_VERS_FASC_OBJECT_STORAGE ADD CONSTRAINT FK_ID_DEC_BACKEND_ELV_FILE_ELENCO_VERS_FAS_OS FOREIGN KEY (ID_DEC_BACKEND) REFERENCES DEC_BACKEND (ID_DEC_BACKEND);

-- changeset root:1751897635013-2841
ALTER TABLE ARO_AIP_RESTITUZIONE_ARCHIVIO ADD CONSTRAINT FK_ID_INDICE_AIP_RA FOREIGN KEY (ID_INDICE_AIP) REFERENCES ARO_INDICE_AIP_UD (ID_INDICE_AIP) ON DELETE CASCADE;

-- changeset root:1751897635013-2842
ALTER TABLE ARO_AIP_RESTITUZIONE_ARCHIVIO ADD CONSTRAINT FK_ID_RICHIESTA_RA FOREIGN KEY (ID_RICHIESTA_RA) REFERENCES ARO_RICHIESTA_RA (ID_RICHIESTA_RA) ON DELETE CASCADE;

-- changeset root:1751897635013-2843
ALTER TABLE FAS_FILE_META_VER_AIP_FASC_OBJECT_STORAGE ADD CONSTRAINT FK_ID_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT);

-- changeset root:1751897635013-2844
ALTER TABLE ELV_FILE_ELENCO_VERS_FASC_OBJECT_STORAGE ADD CONSTRAINT FK_ID_STRUT_ELV_FILE_ELENCO_VERS_FAS_OS FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT);

-- changeset root:1751897635013-2845
ALTER TABLE ARO_RICHIESTA_RA ADD CONSTRAINT FK_ID_STRUT_RA FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT) ON DELETE CASCADE;

-- changeset root:1751897635013-2846
ALTER TABLE ARO_LOG_STATO_CONSERV_UD ADD CONSTRAINT FK_ID_SUB_STRUT_LOG FOREIGN KEY (ID_SUB_STRUT) REFERENCES ORG_SUB_STRUT (ID_SUB_STRUT) ON DELETE CASCADE;

-- changeset root:1751897635013-2847
ALTER TABLE ARO_LOG_STATO_CONSERV_UD ADD CONSTRAINT FK_ID_UNITA_DOC_LOG FOREIGN KEY (ID_UNITA_DOC) REFERENCES ARO_UNITA_DOC (ID_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-2848
ALTER TABLE ARO_RICHIESTA_RA ADD CONSTRAINT FK_ID_USER_IAM FOREIGN KEY (ID_USER_IAM) REFERENCES IAM_USER (ID_USER_IAM);

-- changeset root:1751897635013-2849
ALTER TABLE ARO_UNITA_DOC ADD CONSTRAINT FK_ID_USER_VERS_ID_USER_IAM FOREIGN KEY (ID_USER_VERS) REFERENCES SACER_IAM.USR_USER (ID_USER_IAM);

-- changeset root:1751897635013-2850
ALTER TABLE DEC_IMAGE_TRASFORM ADD CONSTRAINT FK_IMG_TRSF_TRSF_TIPO_RAP FOREIGN KEY (ID_TRASFORM_TIPO_RAPPR) REFERENCES DEC_TRASFORM_TIPO_RAPPR (ID_TRASFORM_TIPO_RAPPR) ON DELETE CASCADE;

-- changeset root:1751897635013-2851
ALTER TABLE IAM_IND_IP_USER ADD CONSTRAINT FK_IND_IP_USR FOREIGN KEY (ID_USER_IAM) REFERENCES IAM_USER (ID_USER_IAM) ON DELETE CASCADE;

-- changeset root:1751897635013-2852
ALTER TABLE ARO_ITEM_RICH_ANNUL_VERS ADD CONSTRAINT FK_ITEM_RICH_ANN_VRS FOREIGN KEY (ID_RICH_ANNUL_VERS) REFERENCES ARO_RICH_ANNUL_VERS (ID_RICH_ANNUL_VERS) ON DELETE CASCADE;

-- changeset root:1751897635013-2853
ALTER TABLE ARO_ITEM_RICH_ANNUL_VERS ADD CONSTRAINT FK_ITEM_RICH_ANN_VRS_FASC FOREIGN KEY (ID_FASCICOLO) REFERENCES FAS_FASCICOLO (ID_FASCICOLO);

-- changeset root:1751897635013-2854
ALTER TABLE ARO_ITEM_RICH_ANNUL_VERS ADD CONSTRAINT FK_ITEM_RICH_ANN_VRS_UD FOREIGN KEY (ID_UNITA_DOC) REFERENCES ARO_UNITA_DOC (ID_UNITA_DOC);

-- changeset root:1751897635013-2855
ALTER TABLE ARO_INDICE_AIP_UD_DA_ELAB ADD CONSTRAINT FK_IX_AIP_UD_DA_ELAB_ELE_VRS FOREIGN KEY (ID_ELENCO_VERS) REFERENCES ELV_ELENCO_VERS (ID_ELENCO_VERS);

-- changeset root:1751897635013-2856
ALTER TABLE ARO_INDICE_AIP_UD_DA_ELAB ADD CONSTRAINT FK_IX_AIP_UD_DA_ELAB_UNI_DOC FOREIGN KEY (ID_UNITA_DOC) REFERENCES ARO_UNITA_DOC (ID_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-2857
ALTER TABLE ARO_INDICE_AIP_UD ADD CONSTRAINT FK_IX_AIP_UD_UNI_DOC FOREIGN KEY (ID_UNITA_DOC) REFERENCES ARO_UNITA_DOC (ID_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-2858
ALTER TABLE SER_IX_VOL_VER_SERIE ADD CONSTRAINT FK_IX_VOL_VER_SER FOREIGN KEY (ID_VOL_VER_SERIE) REFERENCES SER_VOL_VER_SERIE (ID_VOL_VER_SERIE) ON DELETE CASCADE;

-- changeset root:1751897635013-2859
ALTER TABLE TPI_SCHED_JOB ADD CONSTRAINT FK_JOB_SCHED_DT_SCHED FOREIGN KEY (ID_DT_SCHED) REFERENCES TPI_DT_SCHED (ID_DT_SCHED) ON DELETE CASCADE;

-- changeset root:1751897635013-2860
ALTER TABLE MON_KEY_TOTAL_UD_KO ADD CONSTRAINT FK_KEY_TOT_UD_KO_REG FOREIGN KEY (ID_REGISTRO_UNITA_DOC) REFERENCES DEC_REGISTRO_UNITA_DOC (ID_REGISTRO_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-2861
ALTER TABLE MON_KEY_TOTAL_UD_KO ADD CONSTRAINT FK_KEY_TOT_UD_KO_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT) ON DELETE CASCADE;

-- changeset root:1751897635013-2862
ALTER TABLE MON_KEY_TOTAL_UD_KO ADD CONSTRAINT FK_KEY_TOT_UD_KO_TI_DOC_PRINC FOREIGN KEY (ID_TIPO_DOC_PRINC) REFERENCES DEC_TIPO_DOC (ID_TIPO_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-2863
ALTER TABLE MON_KEY_TOTAL_UD_KO ADD CONSTRAINT FK_KEY_TOT_UD_KO_TI_UD FOREIGN KEY (ID_TIPO_UNITA_DOC) REFERENCES DEC_TIPO_UNITA_DOC (ID_TIPO_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-2864
ALTER TABLE MON_KEY_TOTAL_UD ADD CONSTRAINT FK_KEY_TOT_UD_REG FOREIGN KEY (ID_REGISTRO_UNITA_DOC) REFERENCES DEC_REGISTRO_UNITA_DOC (ID_REGISTRO_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-2865
ALTER TABLE MON_KEY_TOTAL_UD ADD CONSTRAINT FK_KEY_TOT_UD_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT) ON DELETE CASCADE;

-- changeset root:1751897635013-2866
ALTER TABLE MON_KEY_TOTAL_UD ADD CONSTRAINT FK_KEY_TOT_UD_SUB_STRUT FOREIGN KEY (ID_SUB_STRUT) REFERENCES ORG_SUB_STRUT (ID_SUB_STRUT) ON DELETE CASCADE;

-- changeset root:1751897635013-2867
ALTER TABLE MON_KEY_TOTAL_UD ADD CONSTRAINT FK_KEY_TOT_UD_TI_DOC_PRINC FOREIGN KEY (ID_TIPO_DOC_PRINC) REFERENCES DEC_TIPO_DOC (ID_TIPO_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-2868
ALTER TABLE MON_KEY_TOTAL_UD ADD CONSTRAINT FK_KEY_TOT_UD_TI_UD FOREIGN KEY (ID_TIPO_UNITA_DOC) REFERENCES DEC_TIPO_UNITA_DOC (ID_TIPO_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-2869
ALTER TABLE SER_LACUNA_CONSIST_VER_SERIE ADD CONSTRAINT FK_LAC_CONS_VER_SER FOREIGN KEY (ID_CONSIST_VER_SERIE) REFERENCES SER_CONSIST_VER_SERIE (ID_CONSIST_VER_SERIE) ON DELETE CASCADE;

-- changeset root:1751897635013-2870
ALTER TABLE FAS_LINK_FASCICOLO ADD CONSTRAINT FK_LINK_FASC_ARRIVO FOREIGN KEY (ID_FASCICOLO_LINK) REFERENCES FAS_FASCICOLO (ID_FASCICOLO);

-- changeset root:1751897635013-2871
ALTER TABLE FAS_LINK_FASCICOLO ADD CONSTRAINT FK_LINK_FASC_PARTENZA FOREIGN KEY (ID_FASCICOLO) REFERENCES FAS_FASCICOLO (ID_FASCICOLO) ON DELETE CASCADE;

-- changeset root:1751897635013-2872
ALTER TABLE DEC_LIVELLO_TITOL ADD CONSTRAINT FK_LIV_TITOL_TITOL FOREIGN KEY (ID_TITOL) REFERENCES DEC_TITOL (ID_TITOL) ON DELETE CASCADE;

-- changeset root:1751897635013-2873
ALTER TABLE SER_LINK_SERIE ADD CONSTRAINT FK_LNK_SER_ARRIVO FOREIGN KEY (ID_SERIE_ARRIVO) REFERENCES SER_SERIE (ID_SERIE) ON DELETE CASCADE;

-- changeset root:1751897635013-2874
ALTER TABLE SER_LINK_SERIE ADD CONSTRAINT FK_LNK_SER_PARTENZA FOREIGN KEY (ID_SERIE_PARTENZA) REFERENCES SER_SERIE (ID_SERIE) ON DELETE CASCADE;

-- changeset root:1751897635013-2875
ALTER TABLE DEC_LINK_TIPO_SERIE ADD CONSTRAINT FK_LNK_TI_SER_ARRIVO FOREIGN KEY (ID_TIPO_SERIE_ARRIVO) REFERENCES DEC_TIPO_SERIE (ID_TIPO_SERIE);

-- changeset root:1751897635013-2876
ALTER TABLE DEC_LINK_TIPO_SERIE ADD CONSTRAINT FK_LNK_TI_SER_PARTENZA FOREIGN KEY (ID_TIPO_SERIE_PARTENZA) REFERENCES DEC_TIPO_SERIE (ID_TIPO_SERIE);

-- changeset root:1751897635013-2877
ALTER TABLE ARO_LINK_UNITA_DOC ADD CONSTRAINT FK_LNK_UNI_DOC_UNI_DOC FOREIGN KEY (ID_UNITA_DOC) REFERENCES ARO_UNITA_DOC (ID_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-2878
ALTER TABLE ARO_LINK_UNITA_DOC ADD CONSTRAINT FK_LNK_UNI_DOC_UNI_DOC_LINK FOREIGN KEY (ID_UNITA_DOC_LINK) REFERENCES ARO_UNITA_DOC (ID_UNITA_DOC);

-- changeset root:1751897635013-2879
ALTER TABLE LOG_LOCK_ELAB ADD CONSTRAINT FK_LOCK_ELAB_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT) ON DELETE CASCADE;

-- changeset root:1751897635013-2880
ALTER TABLE ELV_LOG_ELENCO_VERS ADD CONSTRAINT FK_LOG_ELE_VRS_LOG_JOB FOREIGN KEY (ID_LOG_JOB) REFERENCES LOG_JOB (ID_LOG_JOB);

-- changeset root:1751897635013-2881
ALTER TABLE ELV_LOG_ELENCO_VERS_HISTORY ADD CONSTRAINT FK_LOG_ELE_VRS_LOG_JOB_HIST FOREIGN KEY (ID_LOG_JOB) REFERENCES LOG_JOB_HISTORY (ID_LOG_JOB_HIST);

-- changeset root:1751897635013-2882
ALTER TABLE ELV_LOG_ELENCO_VERS ADD CONSTRAINT FK_LOG_ELE_VRS_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT);

-- changeset root:1751897635013-2883
ALTER TABLE ELV_LOG_ELENCO_VERS_HISTORY ADD CONSTRAINT FK_LOG_ELE_VRS_STRUT_HIST FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT) ENABLE NOVALIDATE;

-- changeset root:1751897635013-2884
ALTER TABLE ELV_LOG_ELENCO_VERS ADD CONSTRAINT FK_LOG_ELE_VRS_USR FOREIGN KEY (ID_USER) REFERENCES IAM_USER (ID_USER_IAM);

-- changeset root:1751897635013-2885
ALTER TABLE ELV_LOG_ELENCO_VERS_HISTORY ADD CONSTRAINT FK_LOG_ELE_VRS_USR_HIST FOREIGN KEY (ID_USER) REFERENCES IAM_USER (ID_USER_IAM) ENABLE NOVALIDATE;

-- changeset root:1751897635013-2886
ALTER TABLE LOG_JOB ADD CONSTRAINT FK_LOG_JOB_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT) ON DELETE CASCADE;

-- changeset root:1751897635013-2887
ALTER TABLE LOG_JOB_HISTORY ADD CONSTRAINT FK_LOG_JOB_STRUT_HIST FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT) ON DELETE CASCADE ENABLE NOVALIDATE;

-- changeset root:1751897635013-2888
ALTER TABLE LOG_OPER ADD CONSTRAINT FK_LOG_OPE_BLK_USR FOREIGN KEY (ID_USER) REFERENCES IAM_USER (ID_USER_IAM);

-- changeset root:1751897635013-2889
ALTER TABLE LOG_OPER ADD CONSTRAINT FK_LOG_OPE_LOG_JOB FOREIGN KEY (ID_LOG_JOB) REFERENCES LOG_JOB_HISTORY (ID_LOG_JOB_HIST) ENABLE NOVALIDATE;

-- changeset root:1751897635013-2890
ALTER TABLE LOG_OPER ADD CONSTRAINT FK_LOG_OPE_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT) ON DELETE CASCADE;

-- changeset root:1751897635013-2891
ALTER TABLE DEC_MODELLO_XSD_FASCICOLO ADD CONSTRAINT FK_MDL_XSD_FASC_AMB FOREIGN KEY (ID_AMBIENTE) REFERENCES ORG_AMBIENTE (ID_AMBIENTE) ON DELETE CASCADE;

-- changeset root:1751897635013-2892
ALTER TABLE DEC_MODELLO_XSD_FASCICOLO ADD CONSTRAINT FK_MDL_XSD_FASC_SIS_MGZ FOREIGN KEY (ID_SISTEMA_MIGRAZ) REFERENCES APL_SISTEMA_MIGRAZ (ID_SISTEMA_MIGRAZ) ON DELETE CASCADE;

-- changeset root:1751897635013-2893
ALTER TABLE DEC_MODELLO_XSD_UD ADD CONSTRAINT FK_MDL_XSD_UD_AMB FOREIGN KEY (ID_AMBIENTE) REFERENCES ORG_AMBIENTE (ID_AMBIENTE);

-- changeset root:1751897635013-2894
ALTER TABLE DEC_MODELLO_XSD_UD ADD CONSTRAINT FK_MDL_XSD_UD_SIS_MGZ FOREIGN KEY (ID_SISTEMA_MIGRAZ) REFERENCES APL_SISTEMA_MIGRAZ (ID_SISTEMA_MIGRAZ);

-- changeset root:1751897635013-2895
ALTER TABLE FAS_META_VER_AIP_FASCICOLO ADD CONSTRAINT FK_META_VER_AIP_FASC_VER_AIP FOREIGN KEY (ID_VER_AIP_FASCICOLO) REFERENCES FAS_VER_AIP_FASCICOLO (ID_VER_AIP_FASCICOLO) ON DELETE CASCADE;

-- changeset root:1751897635013-2896
ALTER TABLE OST_MIGRAZ_FILE_ERR ADD CONSTRAINT FK_MGZ_FILE_ERR_MGZ_FILE FOREIGN KEY (ID_MIGRAZ_FILE) REFERENCES OST_MIGRAZ_FILE (ID_MIGRAZ_FILE) ON DELETE CASCADE;

-- changeset root:1751897635013-2897
ALTER TABLE OST_MIGRAZ_STRUT_MESE ADD CONSTRAINT FK_MGZ_STRUT_MM_SUBPART FOREIGN KEY (ID_MIGRAZ_SUB_PART) REFERENCES OST_MIGRAZ_SUB_PART (ID_MIGRAZ_SUB_PART) ON DELETE CASCADE;

-- changeset root:1751897635013-2898
ALTER TABLE OST_MIGRAZ_SUB_PART ADD CONSTRAINT FK_MGZ_SUBPART_SUB_PART FOREIGN KEY (ID_SUB_PARTITION) REFERENCES ORG_SUB_PARTITION (ID_SUB_PARTITION) ON DELETE CASCADE;

-- changeset root:1751897635013-2899
ALTER TABLE DEC_MODELLO_XSD_ATTRIB_FASC ADD CONSTRAINT FK_MODELLO_XSD_ATTB_FASC FOREIGN KEY (ID_ATTRIB_FASCICOLO) REFERENCES DEC_ATTRIB_FASCICOLO (ID_ATTRIB_FASCICOLO) ON DELETE CASCADE;

-- changeset root:1751897635013-2900
ALTER TABLE DEC_MODELLO_XSD_ATTRIB_FASC ADD CONSTRAINT FK_MODELLO_XSD_ATTB_FASCV1 FOREIGN KEY (ID_MODELLO_XSD_FASCICOLO) REFERENCES DEC_MODELLO_XSD_FASCICOLO (ID_MODELLO_XSD_FASCICOLO) ON DELETE CASCADE;

-- changeset root:1751897635013-2901
ALTER TABLE DEC_MODELLO_CAMPO_INP_UD ADD CONSTRAINT FK_MODL_CPO_INP_UD FOREIGN KEY (ID_MODELLO_TIPO_SERIE) REFERENCES DEC_MODELLO_TIPO_SERIE (ID_MODELLO_TIPO_SERIE) ON DELETE CASCADE;

-- changeset root:1751897635013-2902
ALTER TABLE DEC_MODELLO_CAMPO_OUT_SEL_UD ADD CONSTRAINT FK_MODL_CPO_SEL_UD_OUT FOREIGN KEY (ID_MODELLO_OUT_SEL_UD) REFERENCES DEC_MODELLO_OUT_SEL_UD (ID_MODELLO_OUT_SEL_UD) ON DELETE CASCADE;

-- changeset root:1751897635013-2903
ALTER TABLE DEC_MODELLO_FILTRO_SEL_UDATTB ADD CONSTRAINT FK_MODL_FILT_SEL_UD_ATB FOREIGN KEY (ID_MODELLO_TIPO_SERIE) REFERENCES DEC_MODELLO_TIPO_SERIE (ID_MODELLO_TIPO_SERIE) ON DELETE CASCADE;

-- changeset root:1751897635013-2904
ALTER TABLE DEC_MODELLO_FILTRO_TI_DOC ADD CONSTRAINT FK_MODL_FILT_TI_DOC FOREIGN KEY (ID_MODELLO_TIPO_SERIE) REFERENCES DEC_MODELLO_TIPO_SERIE (ID_MODELLO_TIPO_SERIE) ON DELETE CASCADE;

-- changeset root:1751897635013-2905
ALTER TABLE DEC_MODELLO_OUT_SEL_UD ADD CONSTRAINT FK_MODL_OUT_SEL_UD FOREIGN KEY (ID_MODELLO_TIPO_SERIE) REFERENCES DEC_MODELLO_TIPO_SERIE (ID_MODELLO_TIPO_SERIE) ON DELETE CASCADE;

-- changeset root:1751897635013-2906
ALTER TABLE DEC_MODELLO_TIPO_SERIE ADD CONSTRAINT FK_MODL_TI_SER_AMB FOREIGN KEY (ID_AMBIENTE) REFERENCES ORG_AMBIENTE (ID_AMBIENTE) ON DELETE CASCADE;

-- changeset root:1751897635013-2907
ALTER TABLE DEC_MODELLO_TIPO_SERIE ADD CONSTRAINT FK_MODL_TI_SER_TI_DOC_SPEC FOREIGN KEY (ID_TIPO_DOC_DATI_SPEC) REFERENCES DEC_TIPO_DOC (ID_TIPO_DOC);

-- changeset root:1751897635013-2908
ALTER TABLE DEC_MODELLO_TIPO_SERIE ADD CONSTRAINT FK_MODL_TI_SER_TI_UD_SPEC FOREIGN KEY (ID_TIPO_UNITA_DOC_DATI_SPEC) REFERENCES DEC_TIPO_UNITA_DOC (ID_TIPO_UNITA_DOC) ENABLE NOVALIDATE;

-- changeset root:1751897635013-2909
ALTER TABLE ARO_MARCA_COMP ADD CONSTRAINT FK_MRK_COMP_BUSTA_CRIT FOREIGN KEY (ID_BUSTA_CRITTOG) REFERENCES ARO_BUSTA_CRITTOG (ID_BUSTA_CRITTOG) ON DELETE CASCADE;

-- changeset root:1751897635013-2910
ALTER TABLE ARO_MARCA_COMP ADD CONSTRAINT FK_MRK_COMP_CER_CA FOREIGN KEY (ID_CERTIF_CA) REFERENCES FIR_CERTIF_CA (ID_CERTIF_CA);

-- changeset root:1751897635013-2911
ALTER TABLE ARO_MARCA_COMP ADD CONSTRAINT FK_MRK_COMP_COMP_DOC FOREIGN KEY (ID_COMP_DOC) REFERENCES ARO_COMP_DOC (ID_COMP_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-2912
ALTER TABLE ARO_NOTA_UNITA_DOC ADD CONSTRAINT FK_NOT_IX_AIP_UD FOREIGN KEY (ID_VER_INDICE_AIP) REFERENCES ARO_VER_INDICE_AIP_UD (ID_VER_INDICE_AIP) ON DELETE CASCADE;

-- changeset root:1751897635013-2913
ALTER TABLE DEC_NOTA_MODELLO_TIPO_SERIE ADD CONSTRAINT FK_NOT_MODL_TI_SER FOREIGN KEY (ID_MODELLO_TIPO_SERIE) REFERENCES DEC_MODELLO_TIPO_SERIE (ID_MODELLO_TIPO_SERIE) ON DELETE CASCADE;

-- changeset root:1751897635013-2914
ALTER TABLE DEC_NOTA_MODELLO_TIPO_SERIE ADD CONSTRAINT FK_NOT_MODL_TI_SER_TI_NOT FOREIGN KEY (ID_TIPO_NOTA_SERIE) REFERENCES DEC_TIPO_NOTA_SERIE (ID_TIPO_NOTA_SERIE);

-- changeset root:1751897635013-2915
ALTER TABLE DEC_NOTA_TIPO_SERIE ADD CONSTRAINT FK_NOT_TI_NOT_SER FOREIGN KEY (ID_TIPO_NOTA_SERIE) REFERENCES DEC_TIPO_NOTA_SERIE (ID_TIPO_NOTA_SERIE);

-- changeset root:1751897635013-2916
ALTER TABLE DEC_NOTA_TIPO_SERIE ADD CONSTRAINT FK_NOT_TI_SER FOREIGN KEY (ID_TIPO_SERIE) REFERENCES DEC_TIPO_SERIE (ID_TIPO_SERIE) ON DELETE CASCADE;

-- changeset root:1751897635013-2917
ALTER TABLE DEC_NOTA_TIPO_SERIE ADD CONSTRAINT FK_NOT_TI_SER_USR FOREIGN KEY (ID_USER_IAM) REFERENCES IAM_USER (ID_USER_IAM);

-- changeset root:1751897635013-2918
ALTER TABLE DEC_NOTA_MODELLO_TIPO_SERIE ADD CONSTRAINT FK_NOT_TI_SER_USRV1 FOREIGN KEY (ID_USER_IAM) REFERENCES IAM_USER (ID_USER_IAM);

-- changeset root:1751897635013-2919
ALTER TABLE ARO_NOTA_UNITA_DOC ADD CONSTRAINT FK_NOT_UD FOREIGN KEY (ID_UNITA_DOC) REFERENCES ARO_UNITA_DOC (ID_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-2920
ALTER TABLE ARO_NOTA_UNITA_DOC ADD CONSTRAINT FK_NOT_UD_TI_NOT FOREIGN KEY (ID_TIPO_NOTA_UNITA_DOC) REFERENCES DEC_TIPO_NOTA_UNITA_DOC (ID_TIPO_NOTA_UNITA_DOC);

-- changeset root:1751897635013-2921
ALTER TABLE ARO_NOTA_UNITA_DOC ADD CONSTRAINT FK_NOT_UD_USR FOREIGN KEY (ID_USER_IAM) REFERENCES IAM_USER (ID_USER_IAM);

-- changeset root:1751897635013-2922
ALTER TABLE SER_NOTA_VER_SERIE ADD CONSTRAINT FK_NOT_VER_SER FOREIGN KEY (ID_VER_SERIE) REFERENCES SER_VER_SERIE (ID_VER_SERIE) ON DELETE CASCADE;

-- changeset root:1751897635013-2923
ALTER TABLE SER_NOTA_VER_SERIE ADD CONSTRAINT FK_NOT_VER_SER_TI_NOT FOREIGN KEY (ID_TIPO_NOTA_SERIE) REFERENCES DEC_TIPO_NOTA_SERIE (ID_TIPO_NOTA_SERIE);

-- changeset root:1751897635013-2924
ALTER TABLE SER_NOTA_VER_SERIE ADD CONSTRAINT FK_NOT_VER_SER_USR FOREIGN KEY (ID_USER_IAM) REFERENCES IAM_USER (ID_USER_IAM);

-- changeset root:1751897635013-2925
ALTER TABLE OST_NO_MIGRAZ_FILE ADD CONSTRAINT FK_NO_MGZ_FILE_MGZ_SUBPART FOREIGN KEY (ID_MIGRAZ_SUB_PART) REFERENCES OST_MIGRAZ_SUB_PART (ID_MIGRAZ_SUB_PART) ON DELETE CASCADE;

-- changeset root:1751897635013-2926
ALTER TABLE ORG_OPER_TITOL ADD CONSTRAINT FK_OPER_TITOL_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT) ON DELETE CASCADE;

-- changeset root:1751897635013-2927
ALTER TABLE ORG_OPER_TITOL ADD CONSTRAINT FK_OPER_TITOL_TITOL FOREIGN KEY (ID_TITOL) REFERENCES DEC_TITOL (ID_TITOL) ON DELETE CASCADE;

-- changeset root:1751897635013-2928
ALTER TABLE ORG_OPER_VOCE_TITOL ADD CONSTRAINT FK_OPE_VOCE_OPER_TITOL FOREIGN KEY (ID_OPER_TITOL) REFERENCES ORG_OPER_TITOL (ID_OPER_TITOL) ON DELETE CASCADE;

-- changeset root:1751897635013-2929
ALTER TABLE ORG_OPER_VOCE_TITOL ADD CONSTRAINT FK_OPE_VOCE_VOCE_TITOL FOREIGN KEY (ID_VOCE_TITOL) REFERENCES DEC_VOCE_TITOL (ID_VOCE_TITOL) ON DELETE CASCADE;

-- changeset root:1751897635013-2930
ALTER TABLE DEC_OUT_SEL_UD ADD CONSTRAINT FK_OUT_SEL_UD_TI_SER_UD FOREIGN KEY (ID_TIPO_SERIE_UD) REFERENCES DEC_TIPO_SERIE_UD (ID_TIPO_SERIE_UD) ON DELETE CASCADE;

-- changeset root:1751897635013-2931
ALTER TABLE DEC_PARTE_NUMERO_FASCICOLO ADD CONSTRAINT FK_PARTE_NUM_FASC_AA_TI_FASC FOREIGN KEY (ID_AA_TIPO_FASCICOLO) REFERENCES DEC_AA_TIPO_FASCICOLO (ID_AA_TIPO_FASCICOLO) ON DELETE CASCADE;

-- changeset root:1751897635013-2932
ALTER TABLE DEC_PARTE_NUMERO_REGISTRO ADD CONSTRAINT FK_PARTE_NUM_REG_AA FOREIGN KEY (ID_AA_REGISTRO_UNITA_DOC) REFERENCES DEC_AA_REGISTRO_UNITA_DOC (ID_AA_REGISTRO_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-2933
ALTER TABLE ORG_PARTITION_STRUT ADD CONSTRAINT FK_PART_STRUT_PART FOREIGN KEY (ID_PARTITION) REFERENCES ORG_PARTITION (ID_PARTITION) ON DELETE CASCADE;

-- changeset root:1751897635013-2934
ALTER TABLE ORG_PARTITION_STRUT ADD CONSTRAINT FK_PART_STRUT_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT) ON DELETE CASCADE;

-- changeset root:1751897635013-2935
ALTER TABLE ORG_PARTITION_SUB_STRUT ADD CONSTRAINT FK_PART_SUB_STRUT_PART FOREIGN KEY (ID_PARTITION) REFERENCES ORG_PARTITION (ID_PARTITION) ON DELETE CASCADE;

-- changeset root:1751897635013-2936
ALTER TABLE ORG_PARTITION_SUB_STRUT ADD CONSTRAINT FK_PART_SUB_STRUT_STRUT FOREIGN KEY (ID_SUB_STRUT) REFERENCES ORG_SUB_STRUT (ID_SUB_STRUT) ON DELETE CASCADE;

-- changeset root:1751897635013-2937
ALTER TABLE VRS_PATH_DT_VERS ADD CONSTRAINT FK_PATH_DT_VERS FOREIGN KEY (ID_DT_VERS) REFERENCES VRS_DT_VERS (ID_DT_VERS) ON DELETE CASCADE;

-- changeset root:1751897635013-2938
ALTER TABLE TPI_PATH_ELAB ADD CONSTRAINT FK_PATH_ELB_SCHED_JOB FOREIGN KEY (ID_SCHED_JOB) REFERENCES TPI_SCHED_JOB (ID_SCHED_JOB) ON DELETE CASCADE;

-- changeset root:1751897635013-2939
ALTER TABLE SER_QUERY_CONTENUTO_VER_SERIE ADD CONSTRAINT FK_QRY_CONTEN_VER_SER FOREIGN KEY (ID_CONTENUTO_VER_SERIE) REFERENCES SER_CONTENUTO_VER_SERIE (ID_CONTENUTO_VER_SERIE) ON DELETE CASCADE;

-- changeset root:1751897635013-2940
ALTER TABLE DEC_REGISTRO_UNITA_DOC ADD CONSTRAINT FK_REG_MODL_TI_SER FOREIGN KEY (ID_MODELLO_TIPO_SERIE) REFERENCES DEC_MODELLO_TIPO_SERIE (ID_MODELLO_TIPO_SERIE);

-- changeset root:1751897635013-2941
ALTER TABLE DEC_REGISTRO_UNITA_DOC ADD CONSTRAINT FK_REG_UNITA_DOC_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT) ON DELETE CASCADE;

-- changeset root:1751897635013-2942
ALTER TABLE FIR_REPORT ADD CONSTRAINT FK_REPORT_OBJ_STO_BACKEND FOREIGN KEY (ID_DEC_BACKEND) REFERENCES DEC_BACKEND (ID_DEC_BACKEND) ENABLE NOVALIDATE;

-- changeset root:1751897635013-2943
ALTER TABLE FAS_RESP_FASCICOLO ADD CONSTRAINT FK_RESP_FASC FOREIGN KEY (ID_FASCICOLO) REFERENCES FAS_FASCICOLO (ID_FASCICOLO) ON DELETE CASCADE;

-- changeset root:1751897635013-2944
ALTER TABLE ORG_REGOLA_VAL_SUB_STRUT ADD CONSTRAINT FK_RGL_VAL_SUB_STRUT_TI_DOC FOREIGN KEY (ID_TIPO_DOC) REFERENCES DEC_TIPO_DOC (ID_TIPO_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-2945
ALTER TABLE ORG_REGOLA_VAL_SUB_STRUT ADD CONSTRAINT FK_RGL_VAL_SUB_STRUT_TI_UD FOREIGN KEY (ID_TIPO_UNITA_DOC) REFERENCES DEC_TIPO_UNITA_DOC (ID_TIPO_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-2946
ALTER TABLE ARO_RICH_ANNUL_VERS ADD CONSTRAINT FK_RICH_ANN_VERS_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT) ON DELETE CASCADE;

-- changeset root:1751897635013-2947
ALTER TABLE DEC_SEL_CRITERIO_RAGGR_FASC ADD CONSTRAINT FK_SEL_CRIT_RAG_FASC FOREIGN KEY (ID_CRITERIO_RAGGR_FASC) REFERENCES DEC_CRITERIO_RAGGR_FASC (ID_CRITERIO_RAGGR_FASC) ON DELETE CASCADE;

-- changeset root:1751897635013-2948
ALTER TABLE DEC_SEL_CRITERIO_RAGGR_FASC ADD CONSTRAINT FK_SEL_CRIT_RAG_FASC_MGZ FOREIGN KEY (ID_SISTEMA_MIGRAZ) REFERENCES APL_SISTEMA_MIGRAZ (ID_SISTEMA_MIGRAZ);

-- changeset root:1751897635013-2949
ALTER TABLE DEC_SEL_CRITERIO_RAGGR_FASC ADD CONSTRAINT FK_SEL_CRIT_RAG_FASC_TI_FASC FOREIGN KEY (ID_TIPO_FASCICOLO) REFERENCES DEC_TIPO_FASCICOLO (ID_TIPO_FASCICOLO);

-- changeset root:1751897635013-2950
ALTER TABLE DEC_SEL_CRITERIO_RAGGR_FASC ADD CONSTRAINT FK_SEL_CRIT_RAG_FASC_VOCE_TIT FOREIGN KEY (ID_VOCE_TITOL) REFERENCES DEC_VOCE_TITOL (ID_VOCE_TITOL);

-- changeset root:1751897635013-2951
ALTER TABLE ARO_COMP_DOC ADD CONSTRAINT FK_SERVIZIO_VERIFICA_COMP_DOC FOREIGN KEY (ID_SERVIZIO_VERIFICA_COMP_DOC) REFERENCES DEC_SERVIZIO_VERIFICA_COMP_DOC (ID_SERVIZIO_VERIFICA_COMP_DOC);

-- changeset root:1751897635013-2952
ALTER TABLE SER_SERIE ADD CONSTRAINT FK_SER_PADRE FOREIGN KEY (ID_SERIE_PADRE) REFERENCES SER_SERIE (ID_SERIE);

-- changeset root:1751897635013-2953
ALTER TABLE SER_SERIE ADD CONSTRAINT FK_SER_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT) ON DELETE CASCADE;

-- changeset root:1751897635013-2954
ALTER TABLE SER_SERIE ADD CONSTRAINT FK_SER_TI_SER FOREIGN KEY (ID_TIPO_SERIE) REFERENCES DEC_TIPO_SERIE (ID_TIPO_SERIE);

-- changeset root:1751897635013-2955
ALTER TABLE VRS_DATI_SESSIONE_VERS_KO ADD CONSTRAINT FK_SESSIONE_VERS_KO FOREIGN KEY (ID_SESSIONE_VERS_KO) REFERENCES VRS_SESSIONE_VERS_KO (ID_SESSIONE_VERS_KO) ON DELETE CASCADE;

-- changeset root:1751897635013-2956
ALTER TABLE VRS_SES_FASCICOLO_ERR ADD CONSTRAINT FK_SES_FASC_ERR FOREIGN KEY (ID_ERR_SACER) REFERENCES DEC_ERR_SACER (ID_ERR_SACER);

-- changeset root:1751897635013-2957
ALTER TABLE VRS_XML_SES_FASC_ERR_OBJECT_STORAGE ADD CONSTRAINT FK_SES_FASC_ERR_OBJ_STO_BACKEND_NEW FOREIGN KEY (ID_DEC_BACKEND) REFERENCES DEC_BACKEND (ID_DEC_BACKEND);

-- changeset root:1751897635013-2958
ALTER TABLE VRS_SES_FASCICOLO_ERR ADD CONSTRAINT FK_SES_FASC_ERR_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT);

-- changeset root:1751897635013-2959
ALTER TABLE VRS_SES_FASCICOLO_ERR ADD CONSTRAINT FK_SES_FASC_ERR_TI_FASC FOREIGN KEY (ID_TIPO_FASCICOLO) REFERENCES DEC_TIPO_FASCICOLO (ID_TIPO_FASCICOLO);

-- changeset root:1751897635013-2960
ALTER TABLE VRS_SES_FASCICOLO_KO ADD CONSTRAINT FK_SES_FASC_KO FOREIGN KEY (ID_FASCICOLO_KO) REFERENCES VRS_FASCICOLO_KO (ID_FASCICOLO_KO) ON DELETE SET NULL;

-- changeset root:1751897635013-2961
ALTER TABLE VRS_SES_FASCICOLO_KO ADD CONSTRAINT FK_SES_FASC_KO_ERR_PRINC FOREIGN KEY (ID_ERR_SACER_PRINC) REFERENCES DEC_ERR_SACER (ID_ERR_SACER);

-- changeset root:1751897635013-2962
ALTER TABLE VRS_SES_FASCICOLO_KO ADD CONSTRAINT FK_SES_FASC_KO_FASC FOREIGN KEY (ID_FASCICOLO) REFERENCES FAS_FASCICOLO (ID_FASCICOLO) ON DELETE CASCADE;

-- changeset root:1751897635013-2963
ALTER TABLE VRS_XML_SES_FASC_KO_OBJECT_STORAGE ADD CONSTRAINT FK_SES_FASC_KO_OBJ_STO_BACKEND_NEW FOREIGN KEY (ID_DEC_BACKEND) REFERENCES DEC_BACKEND (ID_DEC_BACKEND);

-- changeset root:1751897635013-2964
ALTER TABLE VRS_SES_FASCICOLO_KO ADD CONSTRAINT FK_SES_FASC_KO_TI_FASC FOREIGN KEY (ID_TIPO_FASCICOLO) REFERENCES DEC_TIPO_FASCICOLO (ID_TIPO_FASCICOLO) ON DELETE CASCADE;

-- changeset root:1751897635013-2965
ALTER TABLE VRS_SES_FASCICOLO_KO ADD CONSTRAINT FK_SES_FASC_KO_USR FOREIGN KEY (ID_USER_IAM) REFERENCES IAM_USER (ID_USER_IAM);

-- changeset root:1751897635013-2966
ALTER TABLE HSM_SESSIONE_FIRMA ADD CONSTRAINT FK_SES_FIR_USR FOREIGN KEY (ID_USER_IAM) REFERENCES IAM_USER (ID_USER_IAM);

-- changeset root:1751897635013-2967
ALTER TABLE VRS_FILE_SES_OBJECT_STORAGE ADD CONSTRAINT FK_SES_OBJ_STO_BACKEND FOREIGN KEY (ID_DEC_BACKEND) REFERENCES DEC_BACKEND (ID_DEC_BACKEND);

-- changeset root:1751897635013-2968
ALTER TABLE VRS_FILE_SES_OBJECT_STORAGE_KO ADD CONSTRAINT FK_SES_OBJ_STO_BACKEND_KO FOREIGN KEY (ID_DEC_BACKEND) REFERENCES DEC_BACKEND (ID_DEC_BACKEND);

-- changeset root:1751897635013-2969
ALTER TABLE VRS_FILE_SES_OBJECT_STORAGE ADD CONSTRAINT FK_SES_OBJ_STO_FILE_SES FOREIGN KEY (ID_FILE_SESSIONE) REFERENCES VRS_FILE_SESSIONE (ID_FILE_SESSIONE);

-- changeset root:1751897635013-2970
ALTER TABLE REC_SESSIONE_RECUP ADD CONSTRAINT FK_SES_REC_COMP_DOC FOREIGN KEY (ID_COMP_DOC) REFERENCES ARO_COMP_DOC (ID_COMP_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-2971
ALTER TABLE REC_SESSIONE_RECUP ADD CONSTRAINT FK_SES_REC_DOC FOREIGN KEY (ID_DOC) REFERENCES ARO_DOC (ID_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-2972
ALTER TABLE REC_SESSIONE_RECUP ADD CONSTRAINT FK_SES_REC_UNI_DOC_REC FOREIGN KEY (ID_UNITA_DOC_RECUP) REFERENCES REC_UNITA_DOC_RECUP (ID_UNITA_DOC_RECUP) ON DELETE CASCADE;

-- changeset root:1751897635013-2973
ALTER TABLE REC_SESSIONE_RECUP ADD CONSTRAINT FK_SES_REC_USR FOREIGN KEY (ID_USER) REFERENCES IAM_USER (ID_USER_IAM);

-- changeset root:1751897635013-2974
ALTER TABLE VRS_SES_UPD_UNITA_DOC_ERR ADD CONSTRAINT FK_SES_UPD_UD_ERR FOREIGN KEY (ID_ERR_SACER_PRINC) REFERENCES DEC_ERR_SACER (ID_ERR_SACER);

-- changeset root:1751897635013-2975
ALTER TABLE VRS_SES_UPD_UNITA_DOC_ERR ADD CONSTRAINT FK_SES_UPD_UD_ERR_CTRL_WS FOREIGN KEY (ID_CONTROLLO_WS_PRINC) REFERENCES DEC_CONTROLLO_WS (ID_CONTROLLO_WS);

-- changeset root:1751897635013-2976
ALTER TABLE VRS_XML_SES_UPD_UD_ERR_OBJECT_STORAGE ADD CONSTRAINT FK_SES_UPD_UD_ERR_OBJ_STO_BACKEND_NEW FOREIGN KEY (ID_DEC_BACKEND) REFERENCES DEC_BACKEND (ID_DEC_BACKEND);

-- changeset root:1751897635013-2977
ALTER TABLE VRS_SES_UPD_UNITA_DOC_ERR ADD CONSTRAINT FK_SES_UPD_UD_ERR_REG FOREIGN KEY (ID_REGISTRO_UNITA_DOC) REFERENCES DEC_REGISTRO_UNITA_DOC (ID_REGISTRO_UNITA_DOC);

-- changeset root:1751897635013-2978
ALTER TABLE VRS_SES_UPD_UNITA_DOC_ERR ADD CONSTRAINT FK_SES_UPD_UD_ERR_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT);

-- changeset root:1751897635013-2979
ALTER TABLE VRS_SES_UPD_UNITA_DOC_ERR ADD CONSTRAINT FK_SES_UPD_UD_ERR_TI_DOC FOREIGN KEY (ID_TIPO_DOC_PRINC) REFERENCES DEC_TIPO_DOC (ID_TIPO_DOC);

-- changeset root:1751897635013-2980
ALTER TABLE VRS_SES_UPD_UNITA_DOC_ERR ADD CONSTRAINT FK_SES_UPD_UD_ERR_TI_UD FOREIGN KEY (ID_TIPO_UNITA_DOC) REFERENCES DEC_TIPO_UNITA_DOC (ID_TIPO_UNITA_DOC);

-- changeset root:1751897635013-2981
ALTER TABLE VRS_SES_UPD_UNITA_DOC_KO ADD CONSTRAINT FK_SES_UPD_UD_KO FOREIGN KEY (ID_UPD_UNITA_DOC_KO) REFERENCES VRS_UPD_UNITA_DOC_KO (ID_UPD_UNITA_DOC_KO) ON DELETE SET NULL;

-- changeset root:1751897635013-2982
ALTER TABLE VRS_SES_UPD_UNITA_DOC_KO ADD CONSTRAINT FK_SES_UPD_UD_KO_CTRL_WS FOREIGN KEY (ID_CONTROLLO_WS_PRINC) REFERENCES DEC_CONTROLLO_WS (ID_CONTROLLO_WS);

-- changeset root:1751897635013-2983
ALTER TABLE VRS_XML_SES_UPD_UD_KO_OBJECT_STORAGE ADD CONSTRAINT FK_SES_UPD_UD_KO_OBJ_STO_BACKEND_NEW FOREIGN KEY (ID_DEC_BACKEND) REFERENCES DEC_BACKEND (ID_DEC_BACKEND);

-- changeset root:1751897635013-2984
ALTER TABLE VRS_SES_UPD_UNITA_DOC_KO ADD CONSTRAINT FK_SES_UPD_UD_KO_TI_DOC_PRINC FOREIGN KEY (ID_TIPO_DOC_PRINC) REFERENCES DEC_TIPO_DOC (ID_TIPO_DOC);

-- changeset root:1751897635013-2985
ALTER TABLE VRS_SES_UPD_UNITA_DOC_KO ADD CONSTRAINT FK_SES_UPD_UD_KO_UPD_UD FOREIGN KEY (ID_UPD_UNITA_DOC) REFERENCES ARO_UPD_UNITA_DOC (ID_UPD_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-2986
ALTER TABLE VRS_SESSIONE_VERS ADD CONSTRAINT FK_SES_VRS_DOC FOREIGN KEY (ID_DOC) REFERENCES ARO_DOC (ID_DOC);

-- changeset root:1751897635013-2987
ALTER TABLE VRS_SESSIONE_VERS_KO ADD CONSTRAINT FK_SES_VRS_DOC_KO FOREIGN KEY (ID_DOC) REFERENCES ARO_DOC (ID_DOC) ENABLE NOVALIDATE;

-- changeset root:1751897635013-2988
ALTER TABLE VRS_SESSIONE_VERS_SOSP ADD CONSTRAINT FK_SES_VRS_SOSP_SES_VRS FOREIGN KEY (ID_SESSIONE_VERS) REFERENCES VRS_SESSIONE_VERS (ID_SESSIONE_VERS) ON DELETE CASCADE;

-- changeset root:1751897635013-2989
ALTER TABLE VRS_SESSIONE_VERS ADD CONSTRAINT FK_SES_VRS_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT);

-- changeset root:1751897635013-2990
ALTER TABLE VRS_SESSIONE_VERS_KO ADD CONSTRAINT FK_SES_VRS_STRUT_KO FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT) ENABLE NOVALIDATE;

-- changeset root:1751897635013-2991
ALTER TABLE VRS_SESSIONE_VERS ADD CONSTRAINT FK_SES_VRS_UNI_DOC FOREIGN KEY (ID_UNITA_DOC) REFERENCES ARO_UNITA_DOC (ID_UNITA_DOC);

-- changeset root:1751897635013-2992
ALTER TABLE VRS_SESSIONE_VERS_KO ADD CONSTRAINT FK_SES_VRS_UNI_DOC_KO FOREIGN KEY (ID_UNITA_DOC) REFERENCES ARO_UNITA_DOC (ID_UNITA_DOC) ENABLE NOVALIDATE;

-- changeset root:1751897635013-2993
ALTER TABLE VRS_SESSIONE_VERS ADD CONSTRAINT FK_SES_VRS_USR FOREIGN KEY (ID_USER) REFERENCES IAM_USER (ID_USER_IAM);

-- changeset root:1751897635013-2994
ALTER TABLE VRS_SESSIONE_VERS_KO ADD CONSTRAINT FK_SES_VRS_USR_KO FOREIGN KEY (ID_USER) REFERENCES IAM_USER (ID_USER_IAM) ENABLE NOVALIDATE;

-- changeset root:1751897635013-2995
ALTER TABLE FAS_SIP_VER_AIP_FASCICOLO ADD CONSTRAINT FK_SIP_VER_AIP_FASC_VERS_RICH FOREIGN KEY (ID_XML_VERS_FASCICOLO_RICH) REFERENCES FAS_XML_VERS_FASCICOLO (ID_XML_VERS_FASCICOLO);

-- changeset root:1751897635013-2996
ALTER TABLE FAS_SIP_VER_AIP_FASCICOLO ADD CONSTRAINT FK_SIP_VER_AIP_FASC_VERS_RISP FOREIGN KEY (ID_XML_VERS_FASCICOLO_RISP) REFERENCES FAS_XML_VERS_FASCICOLO (ID_XML_VERS_FASCICOLO);

-- changeset root:1751897635013-2997
ALTER TABLE FAS_SIP_VER_AIP_FASCICOLO ADD CONSTRAINT FK_SIP_VER_AIP_FASC_VER_AIP FOREIGN KEY (ID_VER_AIP_FASCICOLO) REFERENCES FAS_VER_AIP_FASCICOLO (ID_VER_AIP_FASCICOLO) ON DELETE CASCADE;

-- changeset root:1751897635013-2998
ALTER TABLE FAS_SOG_FASCICOLO ADD CONSTRAINT FK_SOG_FASC FOREIGN KEY (ID_FASCICOLO) REFERENCES FAS_FASCICOLO (ID_FASCICOLO) ON DELETE CASCADE;

-- changeset root:1751897635013-2999
ALTER TABLE FAS_STATO_CONSERV_FASCICOLO ADD CONSTRAINT FK_STATO_CONS_FASC FOREIGN KEY (ID_FASCICOLO) REFERENCES FAS_FASCICOLO (ID_FASCICOLO) ON DELETE CASCADE;

-- changeset root:1751897635013-3000
ALTER TABLE FAS_STATO_CONSERV_FASCICOLO ADD CONSTRAINT FK_STATO_CONS_FASC_USR FOREIGN KEY (ID_USER_IAM) REFERENCES IAM_USER (ID_USER_IAM);

-- changeset root:1751897635013-3001
ALTER TABLE ELV_STATO_ELENCO_VERS_FASC ADD CONSTRAINT FK_STATO_ELE_FASC FOREIGN KEY (ID_ELENCO_VERS_FASC) REFERENCES ELV_ELENCO_VERS_FASC (ID_ELENCO_VERS_FASC) ON DELETE CASCADE;

-- changeset root:1751897635013-3002
ALTER TABLE ELV_STATO_ELENCO_VERS_FASC ADD CONSTRAINT FK_STATO_ELE_FASC_USR FOREIGN KEY (ID_USER_IAM) REFERENCES IAM_USER (ID_USER_IAM);

-- changeset root:1751897635013-3003
ALTER TABLE ELV_STATO_ELENCO_VERS ADD CONSTRAINT FK_STATO_ELE_VRS FOREIGN KEY (ID_ELENCO_VERS) REFERENCES ELV_ELENCO_VERS (ID_ELENCO_VERS) ON DELETE CASCADE;

-- changeset root:1751897635013-3004
ALTER TABLE ELV_STATO_ELENCO_VERS ADD CONSTRAINT FK_STATO_ELE_VRS_TI_EVE FOREIGN KEY (ID_TI_EVE_STATO_ELENCO_VERS) REFERENCES DEC_TI_EVE_STATO_ELENCO_VERS (ID_TI_EVE_STATO_ELENCO_VERS);

-- changeset root:1751897635013-3005
ALTER TABLE ELV_STATO_ELENCO_VERS ADD CONSTRAINT FK_STATO_ELE_VRS_USR FOREIGN KEY (ID_USER_IAM) REFERENCES IAM_USER (ID_USER_IAM);

-- changeset root:1751897635013-3006
ALTER TABLE FAS_STATO_FASCICOLO_ELENCO ADD CONSTRAINT FK_STATO_FASC_ELE_USR FOREIGN KEY (ID_USER_IAM) REFERENCES IAM_USER (ID_USER_IAM);

-- changeset root:1751897635013-3007
ALTER TABLE OST_STATO_MIGRAZ_SUB_PART ADD CONSTRAINT FK_STATO_MGZ_SUBPART FOREIGN KEY (ID_MIGRAZ_SUB_PART) REFERENCES OST_MIGRAZ_SUB_PART (ID_MIGRAZ_SUB_PART) ON DELETE CASCADE;

-- changeset root:1751897635013-3008
ALTER TABLE ARO_STATO_RICH_ANNUL_VERS ADD CONSTRAINT FK_STATO_RICH_ANN_VRS FOREIGN KEY (ID_RICH_ANNUL_VERS) REFERENCES ARO_RICH_ANNUL_VERS (ID_RICH_ANNUL_VERS) ON DELETE CASCADE;

-- changeset root:1751897635013-3009
ALTER TABLE ARO_STATO_RICH_ANNUL_VERS ADD CONSTRAINT FK_STATO_RICH_ANN_VRS_USR FOREIGN KEY (ID_USER_IAM) REFERENCES IAM_USER (ID_USER_IAM);

-- changeset root:1751897635013-3010
ALTER TABLE SER_STATO_SERIE ADD CONSTRAINT FK_STATO_SER FOREIGN KEY (ID_SERIE) REFERENCES SER_SERIE (ID_SERIE) ON DELETE CASCADE;

-- changeset root:1751897635013-3011
ALTER TABLE SER_STATO_SERIE ADD CONSTRAINT FK_STATO_SER_USR FOREIGN KEY (ID_USER_IAM) REFERENCES IAM_USER (ID_USER_IAM);

-- changeset root:1751897635013-3012
ALTER TABLE SER_STATO_VER_SERIE ADD CONSTRAINT FK_STATO_VER_SER FOREIGN KEY (ID_VER_SERIE) REFERENCES SER_VER_SERIE (ID_VER_SERIE) ON DELETE CASCADE;

-- changeset root:1751897635013-3013
ALTER TABLE SER_STATO_VER_SERIE ADD CONSTRAINT FK_STATO_VER_SER_USR FOREIGN KEY (ID_USER_IAM) REFERENCES IAM_USER (ID_USER_IAM);

-- changeset root:1751897635013-3014
ALTER TABLE ORG_STORICO_ENTE_AMBIENTE ADD CONSTRAINT FK_STO_ENTE_AMB_AMB FOREIGN KEY (ID_AMBIENTE) REFERENCES ORG_AMBIENTE (ID_AMBIENTE) ON DELETE CASCADE;

-- changeset root:1751897635013-3015
ALTER TABLE ORG_STORICO_ENTE_AMBIENTE ADD CONSTRAINT FK_STO_ENTE_AMB_ENT FOREIGN KEY (ID_ENTE) REFERENCES ORG_ENTE (ID_ENTE) ON DELETE CASCADE;

-- changeset root:1751897635013-3016
ALTER TABLE TMP_STRUT_CALC_CONSIST ADD CONSTRAINT FK_STRUT_CALC_CONS FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT) ON DELETE CASCADE;

-- changeset root:1751897635013-3017
ALTER TABLE ORG_STRUT ADD CONSTRAINT FK_STRUT_CAT_STRUT FOREIGN KEY (ID_CATEG_STRUT) REFERENCES ORG_CATEG_STRUT (ID_CATEG_STRUT);

-- changeset root:1751897635013-3018
ALTER TABLE ARO_STRUT_DOC ADD CONSTRAINT FK_STRUT_DOC_DOC FOREIGN KEY (ID_DOC) REFERENCES ARO_DOC (ID_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3019
ALTER TABLE ARO_STRUT_DOC ADD CONSTRAINT FK_STRUT_DOC_TIPO FOREIGN KEY (ID_TIPO_STRUT_DOC) REFERENCES DEC_TIPO_STRUT_DOC (ID_TIPO_STRUT_DOC);

-- changeset root:1751897635013-3020
ALTER TABLE ORG_STRUT ADD CONSTRAINT FK_STRUT_ENT FOREIGN KEY (ID_ENTE) REFERENCES ORG_ENTE (ID_ENTE) ON DELETE CASCADE;

-- changeset root:1751897635013-3021
ALTER TABLE ORG_STRUT ADD CONSTRAINT FK_STRUT_ENTE_CONVENZ FOREIGN KEY (ID_ENTE_CONVENZ) REFERENCES SACER_IAM.ORG_ENTE_SIAM (ID_ENTE_SIAM);

-- changeset root:1751897635013-3022
ALTER TABLE ORG_SUB_PARTITION ADD CONSTRAINT FK_SUB_PART_PART FOREIGN KEY (ID_PARTITION) REFERENCES ORG_PARTITION (ID_PARTITION) ON DELETE CASCADE;

-- changeset root:1751897635013-3023
ALTER TABLE ORG_VAL_SUB_PARTITION ADD CONSTRAINT FK_SUB_PART_VAL_SUB_PART FOREIGN KEY (ID_SUB_PARTITION) REFERENCES ORG_SUB_PARTITION (ID_SUB_PARTITION) ON DELETE CASCADE;

-- changeset root:1751897635013-3024
ALTER TABLE TMP_SUB_STRUT_CALC_CONSIST ADD CONSTRAINT FK_SUB_STRUT_CALC_CONS FOREIGN KEY (ID_SUB_STRUT) REFERENCES ORG_SUB_STRUT (ID_SUB_STRUT) ON DELETE CASCADE;

-- changeset root:1751897635013-3025
ALTER TABLE ORG_SUB_STRUT ADD CONSTRAINT FK_SUB_STRUT_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT) ON DELETE CASCADE;

-- changeset root:1751897635013-3026
ALTER TABLE DEC_TIPO_COMP_DOC ADD CONSTRAINT FK_TIPO_COMP_DOC_TIPO_STRUT FOREIGN KEY (ID_TIPO_STRUT_DOC) REFERENCES DEC_TIPO_STRUT_DOC (ID_TIPO_STRUT_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3027
ALTER TABLE DEC_TIPO_DOC_AMMESSO ADD CONSTRAINT FK_TIPO_DOC_AMS_TIPO_DOC FOREIGN KEY (ID_TIPO_DOC) REFERENCES DEC_TIPO_DOC (ID_TIPO_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3028
ALTER TABLE DEC_TIPO_DOC_AMMESSO ADD CONSTRAINT FK_TIPO_DOC_AMS_TIP_STRUT_UD FOREIGN KEY (ID_TIPO_STRUT_UNITA_DOC) REFERENCES DEC_TIPO_STRUT_UNITA_DOC (ID_TIPO_STRUT_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3029
ALTER TABLE DEC_TIPO_DOC ADD CONSTRAINT FK_TIPO_DOC_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT) ON DELETE CASCADE;

-- changeset root:1751897635013-3030
ALTER TABLE DEC_TIPO_RAPPR_AMMESSO ADD CONSTRAINT FK_TIPO_RAP_AMS_TI_COMP FOREIGN KEY (ID_TIPO_COMP_DOC) REFERENCES DEC_TIPO_COMP_DOC (ID_TIPO_COMP_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3031
ALTER TABLE DEC_TIPO_RAPPR_AMMESSO ADD CONSTRAINT FK_TIPO_RAP_AMS_TI_RAP FOREIGN KEY (ID_TIPO_RAPPR_COMP) REFERENCES DEC_TIPO_RAPPR_COMP (ID_TIPO_RAPPR_COMP);

-- changeset root:1751897635013-3032
ALTER TABLE DEC_TIPO_RAPPR_COMP ADD CONSTRAINT FK_TIPO_RAP_COMP_FMT_CONTEN FOREIGN KEY (ID_FORMATO_CONTENUTO) REFERENCES DEC_FORMATO_FILE_DOC (ID_FORMATO_FILE_DOC);

-- changeset root:1751897635013-3033
ALTER TABLE DEC_TIPO_RAPPR_COMP ADD CONSTRAINT FK_TIPO_RAP_COMP_FMT_CONVERT FOREIGN KEY (ID_FORMATO_CONVERTIT) REFERENCES DEC_FORMATO_FILE_DOC (ID_FORMATO_FILE_DOC);

-- changeset root:1751897635013-3034
ALTER TABLE DEC_TIPO_RAPPR_COMP ADD CONSTRAINT FK_TIPO_RAP_COMP_FMT_FIL_STD FOREIGN KEY (ID_FORMATO_OUTPUT_RAPPR) REFERENCES DEC_FORMATO_FILE_STANDARD (ID_FORMATO_FILE_STANDARD);

-- changeset root:1751897635013-3035
ALTER TABLE DEC_TIPO_RAPPR_COMP ADD CONSTRAINT FK_TIPO_RAP_COMP_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT) ON DELETE CASCADE;

-- changeset root:1751897635013-3036
ALTER TABLE DEC_TIPO_STRUT_DOC_AMMESSO ADD CONSTRAINT FK_TIPO_STRUT_DOC_AMS_DOC FOREIGN KEY (ID_TIPO_DOC) REFERENCES DEC_TIPO_DOC (ID_TIPO_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3037
ALTER TABLE DEC_TIPO_STRUT_DOC_AMMESSO ADD CONSTRAINT FK_TIPO_STRUT_DOC_AMS_STRUT FOREIGN KEY (ID_TIPO_STRUT_DOC) REFERENCES DEC_TIPO_STRUT_DOC (ID_TIPO_STRUT_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3038
ALTER TABLE DEC_TIPO_STRUT_DOC ADD CONSTRAINT FK_TIPO_STRUT_DOC_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT) ON DELETE CASCADE;

-- changeset root:1751897635013-3039
ALTER TABLE DEC_TIPO_STRUT_UD_REG ADD CONSTRAINT FK_TIP_STRUT_UD_REG FOREIGN KEY (ID_REGISTRO_UNITA_DOC) REFERENCES DEC_REGISTRO_UNITA_DOC (ID_REGISTRO_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3040
ALTER TABLE DEC_TIPO_STRUT_UD_REG ADD CONSTRAINT FK_TIP_STRUT_UD_REG_TISTRUT FOREIGN KEY (ID_TIPO_STRUT_UNITA_DOC) REFERENCES DEC_TIPO_STRUT_UNITA_DOC (ID_TIPO_STRUT_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3041
ALTER TABLE DEC_TIPO_STRUT_UD_SIS_VERS ADD CONSTRAINT FK_TIP_STRUT_UD_SIS_VERS_SVER FOREIGN KEY (ID_SISTEMA_VERSANTE) REFERENCES SACER_IAM.APL_SISTEMA_VERSANTE (ID_SISTEMA_VERSANTE) ON DELETE CASCADE;

-- changeset root:1751897635013-3042
ALTER TABLE DEC_TIPO_STRUT_UD_SIS_VERS ADD CONSTRAINT FK_TIP_STRUT_UD_SIS_VERS_UD FOREIGN KEY (ID_TIPO_STRUT_UNITA_DOC) REFERENCES DEC_TIPO_STRUT_UNITA_DOC (ID_TIPO_STRUT_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3043
ALTER TABLE DEC_TIPO_STRUT_UNITA_DOC ADD CONSTRAINT FK_TIP_STRUT_UNI_DOC_TIP_UD FOREIGN KEY (ID_TIPO_UNITA_DOC) REFERENCES DEC_TIPO_UNITA_DOC (ID_TIPO_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3044
ALTER TABLE DEC_TIPO_UNITA_DOC_AMMESSO ADD CONSTRAINT FK_TIP_UNI_DOC_AMS_REG_UNI_DOC FOREIGN KEY (ID_REGISTRO_UNITA_DOC) REFERENCES DEC_REGISTRO_UNITA_DOC (ID_REGISTRO_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3045
ALTER TABLE DEC_TIPO_UNITA_DOC_AMMESSO ADD CONSTRAINT FK_TIP_UNI_DOC_AMS_TIP_UNI_DOC FOREIGN KEY (ID_TIPO_UNITA_DOC) REFERENCES DEC_TIPO_UNITA_DOC (ID_TIPO_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3046
ALTER TABLE DEC_TIPO_UNITA_DOC ADD CONSTRAINT FK_TIP_UNI_DOC_ATTIV_TPUD FOREIGN KEY (ID_TIPO_SERV_ATTIV_TIPO_UD) REFERENCES SACER_IAM.ORG_TIPO_SERVIZIO (ID_TIPO_SERVIZIO);

-- changeset root:1751897635013-3047
ALTER TABLE DEC_TIPO_UNITA_DOC ADD CONSTRAINT FK_TIP_UNI_DOC_CAT FOREIGN KEY (ID_CATEG_TIPO_UNITA_DOC) REFERENCES DEC_CATEG_TIPO_UNITA_DOC (ID_CATEG_TIPO_UNITA_DOC);

-- changeset root:1751897635013-3048
ALTER TABLE DEC_TIPO_UNITA_DOC ADD CONSTRAINT FK_TIP_UNI_DOC_CONSERV_TPUD FOREIGN KEY (ID_TIPO_SERV_CONSERV_TIPO_UD) REFERENCES SACER_IAM.ORG_TIPO_SERVIZIO (ID_TIPO_SERVIZIO);

-- changeset root:1751897635013-3049
ALTER TABLE DEC_TIPO_UNITA_DOC ADD CONSTRAINT FK_TIP_UNI_DOC_MODL_TI_SER FOREIGN KEY (ID_MODELLO_TIPO_SERIE) REFERENCES DEC_MODELLO_TIPO_SERIE (ID_MODELLO_TIPO_SERIE);

-- changeset root:1751897635013-3050
ALTER TABLE DEC_TIPO_UNITA_DOC ADD CONSTRAINT FK_TIP_UNI_DOC_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT) ON DELETE CASCADE;

-- changeset root:1751897635013-3051
ALTER TABLE DEC_TIPO_UNITA_DOC ADD CONSTRAINT FK_TIP_UNI_DOC_TI_SERV_ATTIV FOREIGN KEY (ID_TIPO_SERVIZIO_ATTIV) REFERENCES SACER_IAM.ORG_TIPO_SERVIZIO (ID_TIPO_SERVIZIO);

-- changeset root:1751897635013-3052
ALTER TABLE DEC_TITOL ADD CONSTRAINT FK_TITOL_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT) ON DELETE CASCADE;

-- changeset root:1751897635013-3053
ALTER TABLE DEC_TIPO_FASCICOLO ADD CONSTRAINT FK_TI_FASC_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT) ON DELETE CASCADE;

-- changeset root:1751897635013-3054
ALTER TABLE DEC_TIPO_SERIE_CREATA_AUTOM ADD CONSTRAINT FK_TI_SER_AUTOM FOREIGN KEY (ID_TIPO_SERIE) REFERENCES DEC_TIPO_SERIE (ID_TIPO_SERIE) ON DELETE CASCADE;

-- changeset root:1751897635013-3055
ALTER TABLE DEC_TIPO_SERIE ADD CONSTRAINT FK_TI_SER_MODL_TI_SER FOREIGN KEY (ID_MODELLO_TIPO_SERIE) REFERENCES DEC_MODELLO_TIPO_SERIE (ID_MODELLO_TIPO_SERIE);

-- changeset root:1751897635013-3056
ALTER TABLE DEC_TIPO_SERIE ADD CONSTRAINT FK_TI_SER_PADRE FOREIGN KEY (ID_TIPO_SERIE_PADRE) REFERENCES DEC_TIPO_SERIE (ID_TIPO_SERIE);

-- changeset root:1751897635013-3057
ALTER TABLE DEC_TIPO_SERIE ADD CONSTRAINT FK_TI_SER_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT) ON DELETE CASCADE;

-- changeset root:1751897635013-3058
ALTER TABLE DEC_TIPO_SERIE_UD ADD CONSTRAINT FK_TI_SER_UD_REG FOREIGN KEY (ID_REGISTRO_UNITA_DOC) REFERENCES DEC_REGISTRO_UNITA_DOC (ID_REGISTRO_UNITA_DOC);

-- changeset root:1751897635013-3059
ALTER TABLE DEC_TIPO_SERIE_UD ADD CONSTRAINT FK_TI_SER_UD_TI_SER FOREIGN KEY (ID_TIPO_SERIE) REFERENCES DEC_TIPO_SERIE (ID_TIPO_SERIE) ON DELETE CASCADE;

-- changeset root:1751897635013-3060
ALTER TABLE DEC_TIPO_SERIE_UD ADD CONSTRAINT FK_TI_SER_UD_TI_UNI_DOC FOREIGN KEY (ID_TIPO_UNITA_DOC) REFERENCES DEC_TIPO_UNITA_DOC (ID_TIPO_UNITA_DOC);

-- changeset root:1751897635013-3061
ALTER TABLE MON_TIPO_UNITA_DOC_USER_VERS ADD CONSTRAINT FK_TI_UD_USR_VERS_TI_UD FOREIGN KEY (ID_TIPO_UNITA_DOC) REFERENCES DEC_TIPO_UNITA_DOC (ID_TIPO_UNITA_DOC);

-- changeset root:1751897635013-3062
ALTER TABLE MON_TIPO_UNITA_DOC_USER_VERS ADD CONSTRAINT FK_TI_UD_USR_VERS_USR FOREIGN KEY (ID_USER_IAM) REFERENCES IAM_USER (ID_USER_IAM);

-- changeset root:1751897635013-3063
ALTER TABLE DEC_TRASFORM_TIPO_RAPPR ADD CONSTRAINT FK_TRSF_TIPO_RAP_TIPO_RAP_COMP FOREIGN KEY (ID_TIPO_RAPPR_COMP) REFERENCES DEC_TIPO_RAPPR_COMP (ID_TIPO_RAPPR_COMP) ON DELETE CASCADE;

-- changeset root:1751897635013-3064
ALTER TABLE FAS_UD_AIP_FASCICOLO_DA_ELAB ADD CONSTRAINT FK_UD_AIP_FASC_DAELAB_AIP_FASC FOREIGN KEY (ID_AIP_FASCICOLO_DA_ELAB) REFERENCES FAS_AIP_FASCICOLO_DA_ELAB (ID_AIP_FASCICOLO_DA_ELAB) ON DELETE CASCADE;

-- changeset root:1751897635013-3065
ALTER TABLE FAS_UD_AIP_FASCICOLO_DA_ELAB ADD CONSTRAINT FK_UD_AIP_FASC_DAELAB_VER_IX FOREIGN KEY (ID_VER_INDICE_AIP) REFERENCES ARO_VER_INDICE_AIP_UD (ID_VER_INDICE_AIP);

-- changeset root:1751897635013-3066
ALTER TABLE TMP_ARO_UD_ANNUL_DA_ELAB ADD CONSTRAINT FK_UD_ANNUL_DA_ELAB_UNI_DOC FOREIGN KEY (ID_UNITA_DOC) REFERENCES ARO_UNITA_DOC (ID_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3067
ALTER TABLE ARO_UD_APPART_VER_SERIE ADD CONSTRAINT FK_UD_APP_VER_SER_CONTEN FOREIGN KEY (ID_CONTENUTO_VER_SERIE) REFERENCES SER_CONTENUTO_VER_SERIE (ID_CONTENUTO_VER_SERIE) ON DELETE CASCADE;

-- changeset root:1751897635013-3068
ALTER TABLE ARO_UD_APPART_VER_SERIE ADD CONSTRAINT FK_UD_APP_VER_SER_UNI_DOC FOREIGN KEY (ID_UNITA_DOC) REFERENCES ARO_UNITA_DOC (ID_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3069
ALTER TABLE ARO_UD_APPART_VER_SERIE ADD CONSTRAINT FK_UD_APP_VER_SER_VOL FOREIGN KEY (ID_VOL_VER_SERIE) REFERENCES SER_VOL_VER_SERIE (ID_VOL_VER_SERIE) ON DELETE SET NULL;

-- changeset root:1751897635013-3070
ALTER TABLE SER_UD_ERR_FILE_INPUT ADD CONSTRAINT FK_UD_ERR_FILE_INP_ERR FOREIGN KEY (ID_ERR_FILE_INPUT) REFERENCES SER_ERR_FILE_INPUT (ID_ERR_FILE_INPUT) ON DELETE CASCADE;

-- changeset root:1751897635013-3071
ALTER TABLE SER_UD_ERR_FILE_INPUT ADD CONSTRAINT FK_UD_ERR_FILE_INP_UNI_DOC FOREIGN KEY (ID_UNITA_DOC) REFERENCES ARO_UNITA_DOC (ID_UNITA_DOC);

-- changeset root:1751897635013-3072
ALTER TABLE FAS_UNITA_DOC_FASCICOLO ADD CONSTRAINT FK_UD_FASC FOREIGN KEY (ID_FASCICOLO) REFERENCES FAS_FASCICOLO (ID_FASCICOLO) ON DELETE CASCADE;

-- changeset root:1751897635013-3073
ALTER TABLE FAS_UNITA_DOC_FASCICOLO ADD CONSTRAINT FK_UD_FASC_UNI_DOC FOREIGN KEY (ID_UNITA_DOC) REFERENCES ARO_UNITA_DOC (ID_UNITA_DOC);

-- changeset root:1751897635013-3074
ALTER TABLE SER_UD_NON_VERS_ERR ADD CONSTRAINT FK_UD_NOVERS_ERR FOREIGN KEY (ID_ERR_CONTENUTO_VER_SERIE) REFERENCES SER_ERR_CONTENUTO_VER_SERIE (ID_ERR_CONTENUTO_VER_SERIE) ON DELETE CASCADE;

-- changeset root:1751897635013-3075
ALTER TABLE SER_UD_NON_VERS_ERR ADD CONSTRAINT FK_UD_NOVERS_ERR_UD FOREIGN KEY (ID_UNITA_DOC_NON_VERS) REFERENCES VRS_UNITA_DOC_NON_VERS (ID_UNITA_DOC_NON_VERS) ON DELETE CASCADE;

-- changeset root:1751897635013-3076
ALTER TABLE VRS_UNITA_DOC_NON_VERS ADD CONSTRAINT FK_UD_NOVERS_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT) ON DELETE CASCADE;

-- changeset root:1751897635013-3077
ALTER TABLE ELV_UD_VERS_DA_ELAB_ELENCO ADD CONSTRAINT FK_UD_VERS_DAELB_ELE_UNI_DOC FOREIGN KEY (ID_UNITA_DOC) REFERENCES ARO_UNITA_DOC (ID_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3078
ALTER TABLE TMP_ARO_UNITA_DOC_ANNUL ADD CONSTRAINT FK_UNI_DOC_ANNUL_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT) ON DELETE CASCADE;

-- changeset root:1751897635013-3079
ALTER TABLE ARO_UNITA_DOC ADD CONSTRAINT FK_UNI_DOC_ELE_VRS FOREIGN KEY (ID_ELENCO_VERS) REFERENCES ELV_ELENCO_VERS (ID_ELENCO_VERS) ON DELETE SET NULL;

-- changeset root:1751897635013-3080
ALTER TABLE REC_UNITA_DOC_RECUP ADD CONSTRAINT FK_UNI_DOC_REC_UNI_DOC FOREIGN KEY (ID_UNITA_DOC) REFERENCES ARO_UNITA_DOC (ID_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3081
ALTER TABLE ARO_UNITA_DOC ADD CONSTRAINT FK_UNI_DOC_REG_UNI_DOC FOREIGN KEY (ID_REGISTRO_UNITA_DOC) REFERENCES DEC_REGISTRO_UNITA_DOC (ID_REGISTRO_UNITA_DOC);

-- changeset root:1751897635013-3082
ALTER TABLE ARO_UNITA_DOC ADD CONSTRAINT FK_UNI_DOC_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT);

-- changeset root:1751897635013-3083
ALTER TABLE ARO_UNITA_DOC ADD CONSTRAINT FK_UNI_DOC_SUB_STRUT FOREIGN KEY (ID_SUB_STRUT) REFERENCES ORG_SUB_STRUT (ID_SUB_STRUT) ON DELETE CASCADE;

-- changeset root:1751897635013-3084
ALTER TABLE ARO_UNITA_DOC ADD CONSTRAINT FK_UNI_DOC_TIP_UNI_DOC FOREIGN KEY (ID_TIPO_UNITA_DOC) REFERENCES DEC_TIPO_UNITA_DOC (ID_TIPO_UNITA_DOC);

-- changeset root:1751897635013-3085
ALTER TABLE ARO_UNITA_DOC ADD CONSTRAINT FK_UNI_DOC_USR FOREIGN KEY (ID_USER_VERS) REFERENCES IAM_USER (ID_USER_IAM);

-- changeset root:1751897635013-3086
ALTER TABLE FAS_UNI_ORG_RESP_FASCICOLO ADD CONSTRAINT FK_UNI_ORG_RESP_FASC FOREIGN KEY (ID_FASCICOLO) REFERENCES FAS_FASCICOLO (ID_FASCICOLO) ON DELETE CASCADE;

-- changeset root:1751897635013-3087
ALTER TABLE ARO_UPD_ARCHIV_SEC ADD CONSTRAINT FK_UPD_ARC_SEC_UPD_UD FOREIGN KEY (ID_UPD_UNITA_DOC) REFERENCES ARO_UPD_UNITA_DOC (ID_UPD_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3088
ALTER TABLE ARO_UPD_COMP_UNITA_DOC ADD CONSTRAINT FK_UPD_COMP_UD_COMP FOREIGN KEY (ID_COMP_DOC) REFERENCES ARO_COMP_DOC (ID_COMP_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3089
ALTER TABLE ARO_UPD_COMP_UNITA_DOC ADD CONSTRAINT FK_UPD_COMP_UPD_DOC_UD FOREIGN KEY (ID_UPD_DOC_UNITA_DOC) REFERENCES ARO_UPD_DOC_UNITA_DOC (ID_UPD_DOC_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3090
ALTER TABLE ARO_UPD_DATI_SPEC_UD_OBJECT_STORAGE ADD CONSTRAINT FK_UPD_DATI_SPEC_DOC_OS_UPD FOREIGN KEY (ID_UPD_DOC_UNITA_DOC) REFERENCES ARO_UPD_DOC_UNITA_DOC (ID_UPD_DOC_UNITA_DOC);

-- changeset root:1751897635013-3091
ALTER TABLE ARO_UPD_DATI_SPEC_UD_OBJECT_STORAGE ADD CONSTRAINT FK_UPD_DATI_SPEC_UD_OS_BACKEND FOREIGN KEY (ID_DEC_BACKEND) REFERENCES DEC_BACKEND (ID_DEC_BACKEND);

-- changeset root:1751897635013-3092
ALTER TABLE ARO_UPD_DATI_SPEC_UD_OBJECT_STORAGE ADD CONSTRAINT FK_UPD_DATI_SPEC_UD_OS_UPD FOREIGN KEY (ID_UPD_UNITA_DOC) REFERENCES ARO_UPD_UNITA_DOC (ID_UPD_UNITA_DOC);

-- changeset root:1751897635013-3093
ALTER TABLE ARO_UPD_DATI_SPEC_UNITA_DOC ADD CONSTRAINT FK_UPD_DATI_SPEC_UPD_COMP_UD FOREIGN KEY (ID_UPD_COMP_UNITA_DOC) REFERENCES ARO_UPD_COMP_UNITA_DOC (ID_UPD_COMP_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3094
ALTER TABLE ARO_UPD_DATI_SPEC_UNITA_DOC ADD CONSTRAINT FK_UPD_DATI_SPEC_UPD_DOC_UD FOREIGN KEY (ID_UPD_DOC_UNITA_DOC) REFERENCES ARO_UPD_DOC_UNITA_DOC (ID_UPD_DOC_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3095
ALTER TABLE ARO_UPD_DATI_SPEC_UNITA_DOC ADD CONSTRAINT FK_UPD_DATI_SPEC_UPD_UD FOREIGN KEY (ID_UPD_UNITA_DOC) REFERENCES ARO_UPD_UNITA_DOC (ID_UPD_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3096
ALTER TABLE ARO_UPD_DATI_SPEC_UNITA_DOC ADD CONSTRAINT FK_UPD_DATI_SPEC_XSD FOREIGN KEY (ID_XSD_DATI_SPEC) REFERENCES DEC_XSD_DATI_SPEC (ID_XSD_DATI_SPEC);

-- changeset root:1751897635013-3097
ALTER TABLE ARO_UPD_DOC_UNITA_DOC ADD CONSTRAINT FK_UPD_DOC_UD_DOC FOREIGN KEY (ID_DOC) REFERENCES ARO_DOC (ID_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3098
ALTER TABLE ARO_UPD_DOC_UNITA_DOC ADD CONSTRAINT FK_UPD_DOC_UD_UPD_UD FOREIGN KEY (ID_UPD_UNITA_DOC) REFERENCES ARO_UPD_UNITA_DOC (ID_UPD_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3099
ALTER TABLE ARO_UPD_LINK_UNITA_DOC ADD CONSTRAINT FK_UPD_LNK_UD_UPD_UD FOREIGN KEY (ID_UPD_UNITA_DOC) REFERENCES ARO_UPD_UNITA_DOC (ID_UPD_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3100
ALTER TABLE ELV_UPD_UD_DA_ELAB_ELENCO ADD CONSTRAINT FK_UPD_UD_DAELB_ELE_UPD_UD FOREIGN KEY (ID_UPD_UNITA_DOC) REFERENCES ARO_UPD_UNITA_DOC (ID_UPD_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3101
ALTER TABLE ARO_UPD_UNITA_DOC ADD CONSTRAINT FK_UPD_UD_ELE_VRS FOREIGN KEY (ID_ELENCO_VERS) REFERENCES ELV_ELENCO_VERS (ID_ELENCO_VERS) ON DELETE SET NULL;

-- changeset root:1751897635013-3102
ALTER TABLE ARO_UPD_UD_INDICE_AIP_DA_ELAB ADD CONSTRAINT FK_UPD_UD_IX_AIP_DA_ELAB_IX FOREIGN KEY (ID_INDICE_AIP_DA_ELAB) REFERENCES ARO_INDICE_AIP_UD_DA_ELAB (ID_INDICE_AIP_DA_ELAB) ON DELETE CASCADE;

-- changeset root:1751897635013-3103
ALTER TABLE ARO_UPD_UD_INDICE_AIP_DA_ELAB ADD CONSTRAINT FK_UPD_UD_IX_AIP_DA_ELAB_UPD FOREIGN KEY (ID_UPD_UNITA_DOC) REFERENCES ARO_UPD_UNITA_DOC (ID_UPD_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3104
ALTER TABLE VRS_UPD_UNITA_DOC_KO ADD CONSTRAINT FK_UPD_UD_KO_CTRL_WS FOREIGN KEY (ID_CONTROLLO_WS_PRINC) REFERENCES DEC_CONTROLLO_WS (ID_CONTROLLO_WS);

-- changeset root:1751897635013-3105
ALTER TABLE VRS_UPD_UNITA_DOC_KO ADD CONSTRAINT FK_UPD_UD_KO_TI_DOC_PRINC_LAST FOREIGN KEY (ID_TIPO_DOC_PRINC_LAST) REFERENCES DEC_TIPO_DOC (ID_TIPO_DOC);

-- changeset root:1751897635013-3106
ALTER TABLE ARO_UPD_UNITA_DOC ADD CONSTRAINT FK_UPD_UD_USR FOREIGN KEY (ID_USER_IAM_VERS) REFERENCES IAM_USER (ID_USER_IAM);

-- changeset root:1751897635013-3107
ALTER TABLE ARO_UPD_UD_VER_INDICE_AIP_UD ADD CONSTRAINT FK_UPD_UD_VER_IX_AIP_UD_UPD FOREIGN KEY (ID_UPD_UNITA_DOC) REFERENCES ARO_UPD_UNITA_DOC (ID_UPD_UNITA_DOC);

-- changeset root:1751897635013-3108
ALTER TABLE ARO_UPD_UD_VER_INDICE_AIP_UD ADD CONSTRAINT FK_UPD_UD_VER_IX_AIP_UD_VER FOREIGN KEY (ID_VER_INDICE_AIP) REFERENCES ARO_VER_INDICE_AIP_UD (ID_VER_INDICE_AIP) ON DELETE CASCADE;

-- changeset root:1751897635013-3109
ALTER TABLE ARO_UPD_UNITA_DOC ADD CONSTRAINT FK_UPD_UNITA_DOC FOREIGN KEY (ID_UNITA_DOC) REFERENCES ARO_UNITA_DOC (ID_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3110
ALTER TABLE FIR_URL_DISTRIB_CRL ADD CONSTRAINT FK_URL_DISTR_CRL_CER_CA FOREIGN KEY (ID_CERTIF_CA) REFERENCES FIR_CERTIF_CA (ID_CERTIF_CA) ON DELETE CASCADE;

-- changeset root:1751897635013-3111
ALTER TABLE FIR_URL_DISTRIB_OCSP ADD CONSTRAINT FK_URL_DISTR_OCSP_CER_CA FOREIGN KEY (ID_CERTIF_CA) REFERENCES FIR_CERTIF_CA (ID_CERTIF_CA) ON DELETE CASCADE;

-- changeset root:1751897635013-3112
ALTER TABLE ELV_URN_ELENCO_VERS ADD CONSTRAINT FK_URN_ELE_VRS FOREIGN KEY (ID_ELENCO_VERS) REFERENCES ELV_ELENCO_VERS (ID_ELENCO_VERS) ON DELETE CASCADE;

-- changeset root:1751897635013-3113
ALTER TABLE ELV_URN_FILE_ELENCO_VERS ADD CONSTRAINT FK_URN_FILE_ELE_VRS_NEW FOREIGN KEY (ID_FILE_ELENCO_VERS) REFERENCES ELV_FILE_ELENCO_VERS (ID_FILE_ELENCO_VERS) ON DELETE CASCADE;

-- changeset root:1751897635013-3114
ALTER TABLE SER_URN_FILE_VER_SERIE ADD CONSTRAINT FK_URN_FILE_VER_SER FOREIGN KEY (ID_FILE_VER_SERIE) REFERENCES SER_FILE_VER_SERIE (ID_FILE_VER_SERIE) ON DELETE CASCADE;

-- changeset root:1751897635013-3115
ALTER TABLE SER_URN_IX_VOL_VER_SERIE ADD CONSTRAINT FK_URN_IX_VOL_SER FOREIGN KEY (ID_IX_VOL_VER_SERIE) REFERENCES SER_IX_VOL_VER_SERIE (ID_IX_VOL_VER_SERIE) ON DELETE CASCADE;

-- changeset root:1751897635013-3116
ALTER TABLE FIR_URN_REPORT ADD CONSTRAINT FK_URN_REPORT FOREIGN KEY (ID_REPORT) REFERENCES FIR_REPORT (ID_FIR_REPORT) ON DELETE CASCADE;

-- changeset root:1751897635013-3117
ALTER TABLE ARO_URN_VER_INDICE_AIP_UD ADD CONSTRAINT FK_URN_VER_IX_AIP_UD FOREIGN KEY (ID_VER_INDICE_AIP) REFERENCES ARO_VER_INDICE_AIP_UD (ID_VER_INDICE_AIP) ON DELETE CASCADE;

-- changeset root:1751897635013-3118
ALTER TABLE VRS_URN_XML_SESSIONE_VERS ADD CONSTRAINT FK_URN_XML_SES_VRS FOREIGN KEY (ID_XML_DATI_SESSIONE_VERS) REFERENCES VRS_XML_DATI_SESSIONE_VERS (ID_XML_DATI_SESSIONE_VERS) ON DELETE CASCADE;

-- changeset root:1751897635013-3119
ALTER TABLE VRS_URN_XML_SESSIONE_VERS_KO ADD CONSTRAINT FK_URN_XML_SES_VRS_KO FOREIGN KEY (ID_XML_DATI_SESSIONE_VERS_KO) REFERENCES VRS_XML_DATI_SESSIONE_VERS_KO (ID_XML_DATI_SESSIONE_VERS_KO) ON DELETE CASCADE;

-- changeset root:1751897635013-3120
ALTER TABLE DEC_USO_FORMATO_FILE_STANDARD ADD CONSTRAINT FK_USO_FMT_FIL_AMS_FMT_FILE FOREIGN KEY (ID_FORMATO_FILE_DOC) REFERENCES DEC_FORMATO_FILE_DOC (ID_FORMATO_FILE_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3121
ALTER TABLE DEC_USO_FORMATO_FILE_STANDARD ADD CONSTRAINT FK_USO_FMT_FIL_AMS_FMT_FIL_STD FOREIGN KEY (ID_FORMATO_FILE_STANDARD) REFERENCES DEC_FORMATO_FILE_STANDARD (ID_FORMATO_FILE_STANDARD);

-- changeset root:1751897635013-3122
ALTER TABLE DEC_USO_MODELLO_XSD_COMP_DOC ADD CONSTRAINT FK_USO_MDL_XSD_COMPDOC_MDL_XSD_COMPDOC FOREIGN KEY (ID_MODELLO_XSD_UD) REFERENCES DEC_MODELLO_XSD_UD (ID_MODELLO_XSD_UD);

-- changeset root:1751897635013-3123
ALTER TABLE DEC_USO_MODELLO_XSD_COMP_DOC ADD CONSTRAINT FK_USO_MDL_XSD_COMPDOC_TIPO_COMP_DOC FOREIGN KEY (ID_TIPO_COMP_DOC) REFERENCES DEC_TIPO_COMP_DOC (ID_TIPO_COMP_DOC);

-- changeset root:1751897635013-3124
ALTER TABLE DEC_USO_MODELLO_XSD_DOC ADD CONSTRAINT FK_USO_MDL_XSD_DOC_MDL_XSD_UDV FOREIGN KEY (ID_MODELLO_XSD_UD) REFERENCES DEC_MODELLO_XSD_UD (ID_MODELLO_XSD_UD);

-- changeset root:1751897635013-3125
ALTER TABLE DEC_USO_MODELLO_XSD_DOC ADD CONSTRAINT FK_USO_MDL_XSD_DOC_TIPO_DOC FOREIGN KEY (ID_TIPO_DOC) REFERENCES DEC_TIPO_DOC (ID_TIPO_DOC);

-- changeset root:1751897635013-3126
ALTER TABLE DEC_USO_MODELLO_XSD_FASC ADD CONSTRAINT FK_USO_MDL_XSD_FAS FOREIGN KEY (ID_MODELLO_XSD_FASCICOLO) REFERENCES DEC_MODELLO_XSD_FASCICOLO (ID_MODELLO_XSD_FASCICOLO);

-- changeset root:1751897635013-3127
ALTER TABLE DEC_USO_MODELLO_XSD_FASC ADD CONSTRAINT FK_USO_MDL_XSD_FAS_AA_TI_FASC FOREIGN KEY (ID_AA_TIPO_FASCICOLO) REFERENCES DEC_AA_TIPO_FASCICOLO (ID_AA_TIPO_FASCICOLO) ON DELETE CASCADE;

-- changeset root:1751897635013-3128
ALTER TABLE DEC_USO_MODELLO_XSD_UNI_DOC ADD CONSTRAINT FK_USO_MDL_XSD_UNIDOC_MDL_XSD_UD FOREIGN KEY (ID_MODELLO_XSD_UD) REFERENCES DEC_MODELLO_XSD_UD (ID_MODELLO_XSD_UD);

-- changeset root:1751897635013-3129
ALTER TABLE DEC_USO_MODELLO_XSD_UNI_DOC ADD CONSTRAINT FK_USO_MDL_XSD_UNIDOC_TIP_UNI_DOC FOREIGN KEY (ID_TIPO_UNITA_DOC) REFERENCES DEC_TIPO_UNITA_DOC (ID_TIPO_UNITA_DOC);

-- changeset root:1751897635013-3130
ALTER TABLE DEC_USO_MODELLO_TIPO_SERIE ADD CONSTRAINT FK_USO_MODL_TI_SER FOREIGN KEY (ID_MODELLO_TIPO_SERIE) REFERENCES DEC_MODELLO_TIPO_SERIE (ID_MODELLO_TIPO_SERIE) ON DELETE CASCADE;

-- changeset root:1751897635013-3131
ALTER TABLE DEC_USO_MODELLO_TIPO_SERIE ADD CONSTRAINT FK_USO_MODL_TI_SER_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT) ON DELETE CASCADE;

-- changeset root:1751897635013-3132
ALTER TABLE ORG_USO_SISTEMA_MIGRAZ ADD CONSTRAINT FK_USO_SIS_MGZ_SIS_MGZ FOREIGN KEY (ID_SISTEMA_MIGRAZ) REFERENCES APL_SISTEMA_MIGRAZ (ID_SISTEMA_MIGRAZ);

-- changeset root:1751897635013-3133
ALTER TABLE ORG_USO_SISTEMA_MIGRAZ ADD CONSTRAINT FK_USO_SIS_MGZ_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT) ON DELETE CASCADE;

-- changeset root:1751897635013-3134
ALTER TABLE ARO_USO_XSD_DATI_SPEC ADD CONSTRAINT FK_USO_XSD_DATI_SPEC_COMP_DOC FOREIGN KEY (ID_COMP_DOC) REFERENCES ARO_COMP_DOC (ID_COMP_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3135
ALTER TABLE ARO_USO_XSD_DATI_SPEC ADD CONSTRAINT FK_USO_XSD_DATI_SPEC_DOC FOREIGN KEY (ID_DOC) REFERENCES ARO_DOC (ID_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3136
ALTER TABLE ARO_USO_XSD_DATI_SPEC ADD CONSTRAINT FK_USO_XSD_DATI_SPEC_UNI_DOC FOREIGN KEY (ID_UNITA_DOC) REFERENCES ARO_UNITA_DOC (ID_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3137
ALTER TABLE ARO_USO_XSD_DATI_SPEC ADD CONSTRAINT FK_USO_XSD_DATI_SPEC_XSD FOREIGN KEY (ID_XSD_DATI_SPEC) REFERENCES DEC_XSD_DATI_SPEC (ID_XSD_DATI_SPEC);

-- changeset root:1751897635013-3138
ALTER TABLE APL_VALORE_PARAM_APPLIC ADD CONSTRAINT FK_VAL_PAR_APL FOREIGN KEY (ID_PARAM_APPLIC) REFERENCES APL_PARAM_APPLIC (ID_PARAM_APPLIC);

-- changeset root:1751897635013-3139
ALTER TABLE APL_VALORE_PARAM_APPLIC ADD CONSTRAINT FK_VAL_PAR_APL_AA_TI_FASC FOREIGN KEY (ID_AA_TIPO_FASCICOLO) REFERENCES DEC_AA_TIPO_FASCICOLO (ID_AA_TIPO_FASCICOLO) ON DELETE CASCADE;

-- changeset root:1751897635013-3140
ALTER TABLE APL_VALORE_PARAM_APPLIC ADD CONSTRAINT FK_VAL_PAR_APL_AMB FOREIGN KEY (ID_AMBIENTE) REFERENCES ORG_AMBIENTE (ID_AMBIENTE) ON DELETE CASCADE;

-- changeset root:1751897635013-3141
ALTER TABLE APL_VAL_PARAM_APPLIC_MULTI ADD CONSTRAINT FK_VAL_PAR_APL_MULTI_AMB FOREIGN KEY (ID_AMBIENTE) REFERENCES ORG_AMBIENTE (ID_AMBIENTE) ON DELETE CASCADE;

-- changeset root:1751897635013-3142
ALTER TABLE APL_VAL_PARAM_APPLIC_MULTI ADD CONSTRAINT FK_VAL_PAR_APL_MULTI_PAR FOREIGN KEY (ID_PARAM_APPLIC) REFERENCES APL_PARAM_APPLIC (ID_PARAM_APPLIC) ON DELETE CASCADE;

-- changeset root:1751897635013-3143
ALTER TABLE APL_VALORE_PARAM_APPLIC ADD CONSTRAINT FK_VAL_PAR_APL_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT) ON DELETE CASCADE;

-- changeset root:1751897635013-3144
ALTER TABLE APL_VALORE_PARAM_APPLIC ADD CONSTRAINT FK_VAL_PAR_APL_TIP_UNI_DOC FOREIGN KEY (ID_TIPO_UNITA_DOC) REFERENCES DEC_TIPO_UNITA_DOC (ID_TIPO_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3145
ALTER TABLE ORG_VAL_SUB_PARTITION ADD CONSTRAINT FK_VAL_SUB_PART_PART FOREIGN KEY (ID_PARTITION) REFERENCES ORG_PARTITION (ID_PARTITION) ON DELETE CASCADE;

-- changeset root:1751897635013-3146
ALTER TABLE DEC_VAL_VOCE_TITOL ADD CONSTRAINT FK_VAL_VOCE_TITOL_VOCE_TITOL FOREIGN KEY (ID_VOCE_TITOL) REFERENCES DEC_VOCE_TITOL (ID_VOCE_TITOL) ON DELETE CASCADE;

-- changeset root:1751897635013-3147
ALTER TABLE ARO_VERS_INI_ARCHIV_SEC ADD CONSTRAINT FK_VERS_INI_ARC_SEC_VERS_UD FOREIGN KEY (ID_VERS_INI_UNITA_DOC) REFERENCES ARO_VERS_INI_UNITA_DOC (ID_VERS_INI_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3148
ALTER TABLE ARO_VERS_INI_COMP ADD CONSTRAINT FK_VERS_INI_COMP FOREIGN KEY (ID_COMP_DOC) REFERENCES ARO_COMP_DOC (ID_COMP_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3149
ALTER TABLE ARO_VERS_INI_COMP ADD CONSTRAINT FK_VERS_INI_COMP_VERS_DOC FOREIGN KEY (ID_VERS_INI_DOC) REFERENCES ARO_VERS_INI_DOC (ID_VERS_INI_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3150
ALTER TABLE ARO_VERS_INI_DATI_SPEC_OBJECT_STORAGE ADD CONSTRAINT FK_VERS_INI_DATI_SPEC_OS_BACKEND FOREIGN KEY (ID_DEC_BACKEND) REFERENCES DEC_BACKEND (ID_DEC_BACKEND);

-- changeset root:1751897635013-3151
ALTER TABLE ARO_VERS_INI_DOC ADD CONSTRAINT FK_VERS_INI_DOC FOREIGN KEY (ID_DOC) REFERENCES ARO_DOC (ID_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3152
ALTER TABLE ARO_VERS_INI_DOC ADD CONSTRAINT FK_VERS_INI_DOC_VERS_UD FOREIGN KEY (ID_VERS_INI_UNITA_DOC) REFERENCES ARO_VERS_INI_UNITA_DOC (ID_VERS_INI_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3153
ALTER TABLE ARO_VERS_INI_LINK_UNITA_DOC ADD CONSTRAINT FK_VERS_INI_LNK_UD_VERS_UD FOREIGN KEY (ID_VERS_INI_UNITA_DOC) REFERENCES ARO_VERS_INI_UNITA_DOC (ID_VERS_INI_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3154
ALTER TABLE ARO_VERS_INI_UNITA_DOC ADD CONSTRAINT FK_VERS_INI_UD_UNI_DOC FOREIGN KEY (ID_UNITA_DOC) REFERENCES ARO_UNITA_DOC (ID_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3155
ALTER TABLE FAS_VER_AIP_FASCICOLO ADD CONSTRAINT FK_VER_AIP_FASC_ENTE_CONSERV FOREIGN KEY (ID_ENTE_CONSERV) REFERENCES SACER_IAM.ORG_ENTE_SIAM (ID_ENTE_SIAM);

-- changeset root:1751897635013-3156
ALTER TABLE FAS_FILE_META_VER_AIP_FASC_OBJECT_STORAGE ADD CONSTRAINT FK_VER_AIP_FASC_FAS_VER_AIP_FASC_OBJ_STO FOREIGN KEY (ID_VER_AIP_FASCICOLO) REFERENCES FAS_VER_AIP_FASCICOLO (ID_VER_AIP_FASCICOLO) ON DELETE CASCADE;

-- changeset root:1751897635013-3157
ALTER TABLE ARO_VERIF_FIRMA_DT_VERS ADD CONSTRAINT FK_VER_FIR_DTVERS_FIR_COMP FOREIGN KEY (ID_FIRMA_COMP) REFERENCES ARO_FIRMA_COMP (ID_FIRMA_COMP) ON DELETE CASCADE;

-- changeset root:1751897635013-3158
ALTER TABLE VOL_VERIF_FIRMA_VOLUME ADD CONSTRAINT FK_VER_FIR_VOL_APP_FIR_VOL FOREIGN KEY (ID_APPART_FIRMA_VOLUME) REFERENCES VOL_APPART_FIRMA_VOLUME (ID_APPART_FIRMA_VOLUME) ON DELETE CASCADE;

-- changeset root:1751897635013-3159
ALTER TABLE SER_VER_SERIE_OBJECT_STORAGE ADD CONSTRAINT FK_VER_IX_AIP_SERIE_OBJ_STO_BACKEND_NEW FOREIGN KEY (ID_DEC_BACKEND) REFERENCES DEC_BACKEND (ID_DEC_BACKEND) ENABLE NOVALIDATE;

-- changeset root:1751897635013-3160
ALTER TABLE SER_VER_SERIE_OBJECT_STORAGE ADD CONSTRAINT FK_VER_IX_AIP_SER_VER_SERIE_OBJ_STO FOREIGN KEY (ID_VER_SERIE) REFERENCES SER_VER_SERIE (ID_VER_SERIE) ON DELETE CASCADE ENABLE NOVALIDATE;

-- changeset root:1751897635013-3161
ALTER TABLE ARO_VER_INDICE_AIP_UD ADD CONSTRAINT FK_VER_IX_AIP_UD FOREIGN KEY (ID_INDICE_AIP) REFERENCES ARO_INDICE_AIP_UD (ID_INDICE_AIP) ON DELETE CASCADE;

-- changeset root:1751897635013-3162
ALTER TABLE ARO_VER_INDICE_AIP_UD_OBJECT_STORAGE ADD CONSTRAINT FK_VER_IX_AIP_UD_ARO_VER_IX_AIP_UD_OBJ_STO FOREIGN KEY (ID_VER_INDICE_AIP) REFERENCES ARO_VER_INDICE_AIP_UD (ID_VER_INDICE_AIP) ON DELETE CASCADE;

-- changeset root:1751897635013-3163
ALTER TABLE ARO_VER_INDICE_AIP_UD ADD CONSTRAINT FK_VER_IX_AIP_UD_ELE_VRS FOREIGN KEY (ID_ELENCO_VERS) REFERENCES ELV_ELENCO_VERS (ID_ELENCO_VERS) ENABLE NOVALIDATE;

-- changeset root:1751897635013-3164
ALTER TABLE ARO_VER_INDICE_AIP_UD ADD CONSTRAINT FK_VER_IX_AIP_UD_ENTE_CONSERV FOREIGN KEY (ID_ENTE_CONSERV) REFERENCES SACER_IAM.ORG_ENTE_SIAM (ID_ENTE_SIAM);

-- changeset root:1751897635013-3165
ALTER TABLE ARO_VER_INDICE_AIP_UD_OBJECT_STORAGE ADD CONSTRAINT FK_VER_IX_AIP_UD_OBJ_STO_BACKEND_NEW FOREIGN KEY (ID_DEC_BACKEND) REFERENCES DEC_BACKEND (ID_DEC_BACKEND) ENABLE NOVALIDATE;

-- changeset root:1751897635013-3166
ALTER TABLE SER_VER_SERIE ADD CONSTRAINT FK_VER_SER FOREIGN KEY (ID_SERIE) REFERENCES SER_SERIE (ID_SERIE) ON DELETE CASCADE;

-- changeset root:1751897635013-3167
ALTER TABLE SER_VER_SERIE_DA_ELAB ADD CONSTRAINT FK_VER_SER_DAELB FOREIGN KEY (ID_VER_SERIE) REFERENCES SER_VER_SERIE (ID_VER_SERIE) ON DELETE CASCADE;

-- changeset root:1751897635013-3168
ALTER TABLE SER_VER_SERIE ADD CONSTRAINT FK_VER_SER_PADRE FOREIGN KEY (ID_VER_SERIE_PADRE) REFERENCES SER_VER_SERIE (ID_VER_SERIE);

-- changeset root:1751897635013-3169
ALTER TABLE HSM_VER_SERIE_SESSIONE_FIRMA ADD CONSTRAINT FK_VER_SER_SES_FIR FOREIGN KEY (ID_SESSIONE_FIRMA) REFERENCES HSM_SESSIONE_FIRMA (ID_SESSIONE_FIRMA) ON DELETE CASCADE;

-- changeset root:1751897635013-3170
ALTER TABLE HSM_VER_SERIE_SESSIONE_FIRMA ADD CONSTRAINT FK_VER_SER_SES_FIR_VER_SER FOREIGN KEY (ID_VER_SERIE) REFERENCES SER_VER_SERIE (ID_VER_SERIE);

-- changeset root:1751897635013-3171
ALTER TABLE ARO_VALORE_ATTRIB_DATI_SPEC ADD CONSTRAINT FK_VL_ATTB_DATI_SPEC_ATTB FOREIGN KEY (ID_ATTRIB_DATI_SPEC) REFERENCES DEC_ATTRIB_DATI_SPEC (ID_ATTRIB_DATI_SPEC);

-- changeset root:1751897635013-3172
ALTER TABLE FAS_VALORE_ATTRIB_FASCICOLO ADD CONSTRAINT FK_VL_ATTB_FASC_ATTB FOREIGN KEY (ID_ATTRIB_FASCICOLO) REFERENCES DEC_ATTRIB_FASCICOLO (ID_ATTRIB_FASCICOLO);

-- changeset root:1751897635013-3173
ALTER TABLE FAS_VALORE_ATTRIB_FASCICOLO ADD CONSTRAINT FK_VL_ATTB_FASC_ID FOREIGN KEY (ID_FASCICOLO) REFERENCES FAS_FASCICOLO (ID_FASCICOLO);

-- changeset root:1751897635013-3174
ALTER TABLE ARO_VALORE_ATTRIB_DATI_SPEC ADD CONSTRAINT FK_VL_DATI_SPEC_USO_XSD FOREIGN KEY (ID_USO_XSD_DATI_SPEC) REFERENCES ARO_USO_XSD_DATI_SPEC (ID_USO_XSD_DATI_SPEC) ON DELETE CASCADE;

-- changeset root:1751897635013-3175
ALTER TABLE FAS_VALORE_ATTRIB_FASCICOLO ADD CONSTRAINT FK_VL_FASC_USO_MODELLO_XSD FOREIGN KEY (ID_USO_MODELLO_XSD_FASC) REFERENCES DEC_USO_MODELLO_XSD_FASC (ID_USO_MODELLO_XSD_FASC) ON DELETE CASCADE;

-- changeset root:1751897635013-3176
ALTER TABLE FAS_VOCE_CLASSIF ADD CONSTRAINT FK_VOCE_CLA_FASC FOREIGN KEY (ID_FASCICOLO) REFERENCES FAS_FASCICOLO (ID_FASCICOLO) ON DELETE CASCADE;

-- changeset root:1751897635013-3177
ALTER TABLE DEC_VOCE_TITOL ADD CONSTRAINT FK_VOCE_TITOL_LIV_TITOL FOREIGN KEY (ID_LIVELLO_TITOL) REFERENCES DEC_LIVELLO_TITOL (ID_LIVELLO_TITOL) ON DELETE CASCADE;

-- changeset root:1751897635013-3178
ALTER TABLE DEC_VOCE_TITOL ADD CONSTRAINT FK_VOCE_TITOL_TITOL FOREIGN KEY (ID_TITOL) REFERENCES DEC_TITOL (ID_TITOL) ON DELETE CASCADE;

-- changeset root:1751897635013-3179
ALTER TABLE DEC_VOCE_TITOL ADD CONSTRAINT FK_VOCE_TITOL_VOCE_TITOL FOREIGN KEY (ID_VOCE_TITOL_PADRE) REFERENCES DEC_VOCE_TITOL (ID_VOCE_TITOL) ON DELETE CASCADE;

-- changeset root:1751897635013-3180
ALTER TABLE VOL_VOLUME_CONSERV ADD CONSTRAINT FK_VOL_CONS_CRI_RAG FOREIGN KEY (ID_CRITERIO_RAGGR) REFERENCES DEC_CRITERIO_RAGGR (ID_CRITERIO_RAGGR);

-- changeset root:1751897635013-3181
ALTER TABLE VOL_VOLUME_CONSERV ADD CONSTRAINT FK_VOL_CONS_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT) ON DELETE CASCADE;

-- changeset root:1751897635013-3182
ALTER TABLE VOL_VOLUME_CONSERV ADD CONSTRAINT FK_VOL_CONS_USR_CREA FOREIGN KEY (ID_USER_CREAZIONE) REFERENCES IAM_USER (ID_USER_IAM);

-- changeset root:1751897635013-3183
ALTER TABLE VOL_VOLUME_CONSERV ADD CONSTRAINT FK_VOL_CONS_USR_FIRMA FOREIGN KEY (ID_USER_FIRMA_MARCA) REFERENCES IAM_USER (ID_USER_IAM);

-- changeset root:1751897635013-3184
ALTER TABLE SER_VOL_VER_SERIE ADD CONSTRAINT FK_VOL_VER_SER FOREIGN KEY (ID_VER_SERIE) REFERENCES SER_VER_SERIE (ID_VER_SERIE) ON DELETE CASCADE;

-- changeset root:1751897635013-3185
ALTER TABLE VOL_VOLUME_VERS_UD_ANNUL ADD CONSTRAINT FK_VOL_VRS_UD_ANN_VOL FOREIGN KEY (ID_VOLUME_CONSERV) REFERENCES VOL_VOLUME_CONSERV (ID_VOLUME_CONSERV) ON DELETE CASCADE;

-- changeset root:1751897635013-3186
ALTER TABLE VRS_ERR_SESSIONE_VERS_KO ADD CONSTRAINT FK_VRS_ERR_SESSIONE_VERS_KO FOREIGN KEY (ID_DATI_SESSIONE_VERS_KO) REFERENCES VRS_DATI_SESSIONE_VERS_KO (ID_DATI_SESSIONE_VERS_KO) ON DELETE CASCADE;

-- changeset root:1751897635013-3187
ALTER TABLE VRS_XML_DATI_SESSIONE_VERS_KO ADD CONSTRAINT FK_VRS_XML_DATI_SESSIONE_VERS FOREIGN KEY (ID_DATI_SESSIONE_VERS_KO) REFERENCES VRS_DATI_SESSIONE_VERS_KO (ID_DATI_SESSIONE_VERS_KO) ON DELETE CASCADE;

-- changeset root:1751897635013-3188
ALTER TABLE VRS_XML_MODELLO_SESSIONE_VERS ADD CONSTRAINT FK_VRS_XML_DAT_SES_VRS FOREIGN KEY (ID_DATI_SESSIONE_VERS) REFERENCES VRS_DATI_SESSIONE_VERS (ID_DATI_SESSIONE_VERS) ON DELETE CASCADE;

-- changeset root:1751897635013-3189
ALTER TABLE DEC_WARN_AA_REGISTRO_UD ADD CONSTRAINT FK_WARN_AA_REG FOREIGN KEY (ID_AA_REGISTRO_UNITA_DOC) REFERENCES DEC_AA_REGISTRO_UNITA_DOC (ID_AA_REGISTRO_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3190
ALTER TABLE DEC_WARN_AA_TIPO_FASCICOLO ADD CONSTRAINT FK_WARN_AA_TI_FASC FOREIGN KEY (ID_AA_TIPO_FASCICOLO) REFERENCES DEC_AA_TIPO_FASCICOLO (ID_AA_TIPO_FASCICOLO) ON DELETE CASCADE;

-- changeset root:1751897635013-3191
ALTER TABLE FAS_WARN_FASCICOLO ADD CONSTRAINT FK_WARN_FASC FOREIGN KEY (ID_FASCICOLO) REFERENCES FAS_FASCICOLO (ID_FASCICOLO) ON DELETE CASCADE;

-- changeset root:1751897635013-3192
ALTER TABLE FAS_WARN_FASCICOLO ADD CONSTRAINT FK_WARN_FASC_ERR_SACER FOREIGN KEY (ID_ERR_SACER) REFERENCES DEC_ERR_SACER (ID_ERR_SACER);

-- changeset root:1751897635013-3193
ALTER TABLE ARO_WARN_UPD_UNITA_DOC ADD CONSTRAINT FK_WARN_UPD_UD FOREIGN KEY (ID_UPD_UNITA_DOC) REFERENCES ARO_UPD_UNITA_DOC (ID_UPD_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3194
ALTER TABLE ARO_WARN_UPD_UNITA_DOC ADD CONSTRAINT FK_WARN_UPD_UD_CTRL_WS FOREIGN KEY (ID_CONTROLLO_WS) REFERENCES DEC_CONTROLLO_WS (ID_CONTROLLO_WS);

-- changeset root:1751897635013-3195
ALTER TABLE ARO_WARN_UPD_UNITA_DOC ADD CONSTRAINT FK_WARN_UPD_UD_ERR_SACER FOREIGN KEY (ID_ERR_SACER) REFERENCES DEC_ERR_SACER (ID_ERR_SACER);

-- changeset root:1751897635013-3196
ALTER TABLE VRS_XML_DATI_SESSIONE_VERS ADD CONSTRAINT FK_XML_DAT_SES_VRS FOREIGN KEY (ID_DATI_SESSIONE_VERS) REFERENCES VRS_DATI_SESSIONE_VERS (ID_DATI_SESSIONE_VERS) ON DELETE CASCADE;

-- changeset root:1751897635013-3197
ALTER TABLE ARO_XML_DOC_OBJECT_STORAGE ADD CONSTRAINT FK_XML_DOC_OS_BACKEND FOREIGN KEY (ID_DEC_BACKEND) REFERENCES DEC_BACKEND (ID_DEC_BACKEND);

-- changeset root:1751897635013-3198
ALTER TABLE ARO_XML_DOC_OBJECT_STORAGE ADD CONSTRAINT FK_XML_DOC_OS_DOC FOREIGN KEY (ID_DOC) REFERENCES ARO_DOC (ID_DOC);

-- changeset root:1751897635013-3199
ALTER TABLE FAS_XML_VERS_FASCICOLO ADD CONSTRAINT FK_XML_FASC FOREIGN KEY (ID_FASCICOLO) REFERENCES FAS_FASCICOLO (ID_FASCICOLO) ON DELETE CASCADE;

-- changeset root:1751897635013-3200
ALTER TABLE FAS_XML_FASC_OBJECT_STORAGE ADD CONSTRAINT FK_XML_FASC_OS_BACKEND FOREIGN KEY (ID_DEC_BACKEND) REFERENCES DEC_BACKEND (ID_DEC_BACKEND);

-- changeset root:1751897635013-3201
ALTER TABLE FAS_XML_FASC_OBJECT_STORAGE ADD CONSTRAINT FK_XML_FASC_OS_FASC FOREIGN KEY (ID_FASCICOLO) REFERENCES FAS_FASCICOLO (ID_FASCICOLO);

-- changeset root:1751897635013-3202
ALTER TABLE VRS_XML_MODELLO_SESSIONE_VERS ADD CONSTRAINT FK_XML_MOD_SES_VRS_USO_MDL_XSD_COMP FOREIGN KEY (ID_USO_MODELLO_XSD_COMP_DOC) REFERENCES DEC_USO_MODELLO_XSD_COMP_DOC (ID_USO_MODELLO_XSD_COMP_DOC);

-- changeset root:1751897635013-3203
ALTER TABLE VRS_XML_MODELLO_SESSIONE_VERS ADD CONSTRAINT FK_XML_MOD_SES_VRS_USO_MDL_XSD_DOC FOREIGN KEY (ID_USO_MODELLO_XSD_DOC) REFERENCES DEC_USO_MODELLO_XSD_DOC (ID_USO_MODELLO_XSD_DOC);

-- changeset root:1751897635013-3204
ALTER TABLE VRS_XML_MODELLO_SESSIONE_VERS ADD CONSTRAINT FK_XML_MOD_SES_VRS_USO_MDL_XSD_UNIDOC FOREIGN KEY (ID_USO_MODELLO_XSD_UNI_DOC) REFERENCES DEC_USO_MODELLO_XSD_UNI_DOC (ID_USO_MODELLO_XSD_UNI_DOC);

-- changeset root:1751897635013-3205
ALTER TABLE ARO_XML_RICH_ANNUL_VERS ADD CONSTRAINT FK_XML_RICH_ANN_VRS FOREIGN KEY (ID_RICH_ANNUL_VERS) REFERENCES ARO_RICH_ANNUL_VERS (ID_RICH_ANNUL_VERS) ON DELETE CASCADE;

-- changeset root:1751897635013-3206
ALTER TABLE VRS_XML_SES_FASCICOLO_ERR ADD CONSTRAINT FK_XML_SES_FASC_ERR FOREIGN KEY (ID_SES_FASCICOLO_ERR) REFERENCES VRS_SES_FASCICOLO_ERR (ID_SES_FASCICOLO_ERR) ON DELETE CASCADE;

-- changeset root:1751897635013-3207
ALTER TABLE VRS_XML_SES_FASCICOLO_KO ADD CONSTRAINT FK_XML_SES_FASC_KO_NP FOREIGN KEY (ID_SES_FASCICOLO_KO) REFERENCES VRS_SES_FASCICOLO_KO (ID_SES_FASCICOLO_KO) ON DELETE CASCADE;

-- changeset root:1751897635013-3208
ALTER TABLE VRS_XML_SES_FASC_ERR_OBJECT_STORAGE ADD CONSTRAINT FK_XML_SES_FASC_VRS_XML_SES_FASC_ERR_OBJ_STO FOREIGN KEY (ID_SES_FASCICOLO_ERR) REFERENCES VRS_SES_FASCICOLO_ERR (ID_SES_FASCICOLO_ERR) ON DELETE CASCADE;

-- changeset root:1751897635013-3209
ALTER TABLE VRS_XML_SES_FASC_KO_OBJECT_STORAGE ADD CONSTRAINT FK_XML_SES_FASC_VRS_XML_SES_FASC_KO_OBJ_STO FOREIGN KEY (ID_SES_FASCICOLO_KO) REFERENCES VRS_SES_FASCICOLO_KO (ID_SES_FASCICOLO_KO) ON DELETE CASCADE;

-- changeset root:1751897635013-3210
ALTER TABLE VRS_XML_SES_UPD_UNITA_DOC_ERR ADD CONSTRAINT FK_XML_SES_UPD_UD_ERR FOREIGN KEY (ID_SES_UPD_UD_ERR) REFERENCES VRS_SES_UPD_UNITA_DOC_ERR (ID_SES_UPD_UNITA_DOC_ERR) ON DELETE CASCADE;

-- changeset root:1751897635013-3211
ALTER TABLE VRS_XML_SES_UPD_UNITA_DOC_KO ADD CONSTRAINT FK_XML_SES_UPD_UD_KO FOREIGN KEY (ID_SES_UPD_UD_KO) REFERENCES VRS_SES_UPD_UNITA_DOC_KO (ID_SES_UPD_UNITA_DOC_KO) ON DELETE CASCADE;

-- changeset root:1751897635013-3212
ALTER TABLE VRS_XML_SES_UPD_UD_ERR_OBJECT_STORAGE ADD CONSTRAINT FK_XML_SES_UPD_UD_VRS_XML_SES_UPD_UD_ERR_OBJ_STO FOREIGN KEY (ID_SES_UPD_UNITA_DOC_ERR) REFERENCES VRS_SES_UPD_UNITA_DOC_ERR (ID_SES_UPD_UNITA_DOC_ERR) ON DELETE CASCADE;

-- changeset root:1751897635013-3213
ALTER TABLE VRS_XML_SES_UPD_UD_KO_OBJECT_STORAGE ADD CONSTRAINT FK_XML_SES_UPD_UD_VRS_XML_SES_UPD_UD_KO_OBJ_STO FOREIGN KEY (ID_SES_UPD_UNITA_DOC_KO) REFERENCES VRS_SES_UPD_UNITA_DOC_KO (ID_SES_UPD_UNITA_DOC_KO) ON DELETE CASCADE;

-- changeset root:1751897635013-3214
ALTER TABLE FAS_XML_FASCICOLO ADD CONSTRAINT FK_XML_SPEC_FASC FOREIGN KEY (ID_FASCICOLO) REFERENCES FAS_FASCICOLO (ID_FASCICOLO) ON DELETE CASCADE;

-- changeset root:1751897635013-3215
ALTER TABLE FAS_XML_FASCICOLO ADD CONSTRAINT FK_XML_SPEC_FASC_XSD FOREIGN KEY (ID_MODELLO_XSD_FASCICOLO) REFERENCES DEC_MODELLO_XSD_FASCICOLO (ID_MODELLO_XSD_FASCICOLO);

-- changeset root:1751897635013-3216
ALTER TABLE ARO_XML_UNITA_DOC_OBJECT_STORAGE ADD CONSTRAINT FK_XML_UD_OS_BACKEND FOREIGN KEY (ID_DEC_BACKEND) REFERENCES DEC_BACKEND (ID_DEC_BACKEND);

-- changeset root:1751897635013-3217
ALTER TABLE ARO_XML_UNITA_DOC_OBJECT_STORAGE ADD CONSTRAINT FK_XML_UD_OS_UD FOREIGN KEY (ID_UNITA_DOC) REFERENCES ARO_UNITA_DOC (ID_UNITA_DOC);

-- changeset root:1751897635013-3218
ALTER TABLE ARO_XML_UPD_UNITA_DOC ADD CONSTRAINT FK_XML_UPD_UD FOREIGN KEY (ID_UPD_UNITA_DOC) REFERENCES ARO_UPD_UNITA_DOC (ID_UPD_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3219
ALTER TABLE ARO_XML_UPD_UD_OBJECT_STORAGE ADD CONSTRAINT FK_XML_UPD_UD_OS_BACKEND FOREIGN KEY (ID_DEC_BACKEND) REFERENCES DEC_BACKEND (ID_DEC_BACKEND);

-- changeset root:1751897635013-3220
ALTER TABLE ARO_XML_UPD_UD_OBJECT_STORAGE ADD CONSTRAINT FK_XML_UPD_UD_OS_UPD FOREIGN KEY (ID_UPD_UNITA_DOC) REFERENCES ARO_UPD_UNITA_DOC (ID_UPD_UNITA_DOC);

-- changeset root:1751897635013-3221
ALTER TABLE FAS_XML_VERS_FASC_OBJECT_STORAGE ADD CONSTRAINT FK_XML_VERS_FASC_OS_BACKEND FOREIGN KEY (ID_DEC_BACKEND) REFERENCES DEC_BACKEND (ID_DEC_BACKEND);

-- changeset root:1751897635013-3222
ALTER TABLE FAS_XML_VERS_FASC_OBJECT_STORAGE ADD CONSTRAINT FK_XML_VERS_FASC_OS_FASC FOREIGN KEY (ID_FASCICOLO) REFERENCES FAS_FASCICOLO (ID_FASCICOLO);

-- changeset root:1751897635013-3223
ALTER TABLE DEC_XSD_ATTRIB_DATI_SPEC ADD CONSTRAINT FK_XSD_ATTB_DATI_SPEC FOREIGN KEY (ID_ATTRIB_DATI_SPEC) REFERENCES DEC_ATTRIB_DATI_SPEC (ID_ATTRIB_DATI_SPEC) ON DELETE CASCADE;

-- changeset root:1751897635013-3224
ALTER TABLE DEC_XSD_ATTRIB_DATI_SPEC ADD CONSTRAINT FK_XSD_ATTB_DATI_SPECV1 FOREIGN KEY (ID_XSD_DATI_SPEC) REFERENCES DEC_XSD_DATI_SPEC (ID_XSD_DATI_SPEC) ON DELETE CASCADE;

-- changeset root:1751897635013-3225
ALTER TABLE DEC_XSD_DATI_SPEC ADD CONSTRAINT FK_XSD_DATI_SPEC_STRUT FOREIGN KEY (ID_STRUT) REFERENCES ORG_STRUT (ID_STRUT) ON DELETE CASCADE;

-- changeset root:1751897635013-3226
ALTER TABLE DEC_XSD_DATI_SPEC ADD CONSTRAINT FK_XSD_DATI_SPEC_TIPO_COMP_DOC FOREIGN KEY (ID_TIPO_COMP_DOC) REFERENCES DEC_TIPO_COMP_DOC (ID_TIPO_COMP_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3227
ALTER TABLE DEC_XSD_DATI_SPEC ADD CONSTRAINT FK_XSD_DATI_SPEC_TIPO_DOC FOREIGN KEY (ID_TIPO_DOC) REFERENCES DEC_TIPO_DOC (ID_TIPO_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3228
ALTER TABLE DEC_XSD_DATI_SPEC ADD CONSTRAINT FK_XSD_DATI_SPEC_TIP_UNI_DOC FOREIGN KEY (ID_TIPO_UNITA_DOC) REFERENCES DEC_TIPO_UNITA_DOC (ID_TIPO_UNITA_DOC) ON DELETE CASCADE;

-- changeset root:1751897635013-3229
ALTER TABLE FAS_XSD_META_VER_AIP_FASC ADD CONSTRAINT FK_XSD_META_VER_AIP_FASC_MDL FOREIGN KEY (ID_MODELLO_XSD_FASCICOLO) REFERENCES DEC_MODELLO_XSD_FASCICOLO (ID_MODELLO_XSD_FASCICOLO);

-- changeset root:1751897635013-3230
ALTER TABLE FAS_XSD_META_VER_AIP_FASC ADD CONSTRAINT FK_XSD_META_VER_AIP_FASC_META FOREIGN KEY (ID_META_VER_AIP_FASCICOLO) REFERENCES FAS_META_VER_AIP_FASCICOLO (ID_META_VER_AIP_FASCICOLO) ON DELETE CASCADE;

